<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel="apple-touch-icon" sizes="57x57" href="/bootstrap/images/apple-icon-57x57.png">
        <link rel="apple-touch-icon" sizes="60x60" href="/bootstrap/images/apple-icon-60x60.png">
        <link rel="apple-touch-icon" sizes="72x72" href="/bootstrap/images/apple-icon-72x72.png">
        <link rel="apple-touch-icon" sizes="76x76" href="/bootstrap/images/apple-icon-76x76.png">
        <link rel="apple-touch-icon" sizes="114x114" href="/bootstrap/images/apple-icon-114x114.png">
        <link rel="apple-touch-icon" sizes="120x120" href="/bootstrap/images/apple-icon-120x120.png">
        <link rel="apple-touch-icon" sizes="144x144" href="/bootstrap/images/apple-icon-144x144.png">
        <link rel="apple-touch-icon" sizes="152x152" href="/bootstrap/images/apple-icon-152x152.png">
        <link rel="apple-touch-icon" sizes="180x180" href="/bootstrap/images/apple-icon-180x180.png">
        <link rel="icon" type="image/png" sizes="192x192"  href="/bootstrap/images/android-icon-192x192.png">
        <link rel="icon" type="image/png" sizes="32x32" href="/bootstrap/images/favicon-32x32.png">
        <link rel="icon" type="image/png" sizes="96x96" href="/bootstrap/images/favicon-96x96.png">
        <link rel="icon" type="image/png" sizes="16x16" href="/bootstrap/images/favicon-16x16.png">
        <link rel="manifest" href="/bootstrap/images/manifest.json">
        <meta name="msapplication-TileColor" content="#ffffff">
        <meta name="msapplication-TileImage" content="/bootstrap/images/ms-icon-144x144.png">
        <meta name="theme-color" content="#ffffff">
        <title>Ray's Dev Box</title>
        <script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
        <script type="text/javascript" src='//maps.google.com/maps/api/js?sensor=false&libraries=places&key=AIzaSyC1JStq4qg-S61Y1bAXLzAWlq3ToUIscZk'></script>
        <script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.11.4/jquery-ui.min.js" type="text/javascript"></script>
        <script src="./bootstrap/js/jquery.cookie.js" type="text/javascript"></script>
        <script src="./bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
        <script src="./bootstrap/js/bootstrap-dialog.min.js" type="text/javascript"></script>
        <script src="./bootstrap/js/hashids.min.js" type="text/javascript"></script>
        <script src="./bootstrap/js/bootstrap-datepicker.js" type="text/javascript"></script>
        <script src="./bootstrap/js/color.js" type="text/javascript"></script>
        <script src="./bootstrap/js/changepass_v12.js" type="text/javascript"></script>
        <script src="./bootstrap/js/bootstrap-clockpicker.js" type="text/javascript"></script>
        <script src="./bootstrap/js/jquery-clockpicker.js" type="text/javasccript"></script>
        <script src="./bootstrap/js/moment.min.js" type="text/javascript"></script>
        <script src="./bootstrap/js/bootstrap-switch.js" type="text/javascript"></script>
        <!-- script src="./bootstrap/js/errortracker_v1.js" type="text/javascript"></script -->
        <script src="./bootstrap/js/chart.js" type="text/javascript"></script>
        <script src="./bootstrap/js/randomColor.js" type="text/javascript"></script>
        <script src="./bootstrap/js/spectrum.js" type="text/javascript"></script>
        <script src="./bootstrap/js/jquery.locationpicker.min.js" type="text/javascript"></script>
        <script src="/bootstrap/js/fullcalendar.min.js" type="text/javascript"></script>
        <script type="text/javascript" src="/bootstrap/js/maplabel.js"></script>
        <script type="text/javascript" src="/bootstrap/js/infobox.js"></script>
        <script src="/bootstrap/js/hashids.min.js" type="text/javascript"></script>
        <script src="/bootstrap/js/jquery.tablesorter.combined.min.js"></script>
        <!-- https://github.com/googlemaps/v3-utility-library -->
        <script charset="utf-8" type="text/javascript" src="/bootstrap/js/hacks.js"></script>
        <link href="//fonts.googleapis.com/css?family=Ubuntu" rel="stylesheet" type="text/css" />
        <link rel="stylesheet" href="./bootstrap/css/bootstrap.min.css" />
        <link rel="stylesheet" href="./bootstrap/css/bootstrap-theme.min.css" />
        <link rel="stylesheet" href="./bootstrap/css/bootstrap-dialog.min.css" />
        <link rel="stylesheet" href="./bootstrap/css/datepicker.css" />
        <link rel="stylesheet" href="./bootstrap/css/changepass_v12.css" />
        <link rel="stylesheet" href="./bootstrap/css/bootstrap-clockpicker.css" />
        <link rel="stylesheet" href="./bootstrap/css/jquery-clockpicker.css" />
        <link rel="stylesheet" href="./bootstrap/css/bootstrap-switch.css" />
        <link rel="stylesheet" href="//ajax.googleapis.com/ajax/libs/jqueryui/1.11.4/themes/smoothness/jquery-ui.css" />
        <link rel="stylesheet" href="./bootstrap/css/symbola.css" />
        <link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css" />
        <link rel="stylesheet" href="./bootstrap/css/spectrum.css" />
        <link rel="stylesheet" href="/bootstrap/css/fullcalendar.min.css" />
        <style type="text/css">
            /* This stylesheet generated by Transfonter (http://transfonter.org) on June 14, 2016 12:23 AM */
-
            @font-face
            {
                font-family: 'latoblack';
                src: url(data:application/font-woff2;charset=utf-8;base64,) format('woff2'),
                    url(data:application/font-woff;charset=utf-8;base64,) format('woff'),
                    url('https://storage.googleapis.com/devnpfieldapp.appspot.com/WebFonts/lato-black-webfont.ttf') format('truetype'),
                    url('https://storage.googleapis.com/devnpfieldapp.appspot.com/WebFonts/lato-black-webfont.svg#latoblack') format('svg');
                font-weight: normal;
                font-style: normal;

            }




            @font-face
            {
                font-family: 'latobold';
                src: url(data:application/font-woff2;charset=utf-8;base64,) format('woff2'),
                    url(data:application/font-woff;charset=utf-8;base64,) format('woff'),
                    url('https://storage.googleapis.com/devnpfieldapp.appspot.com/WebFonts/lato-bold-webfont.ttf') format('truetype'),
                    url('https://storage.googleapis.com/devnpfieldapp.appspot.com/WebFonts/lato-bold-webfont.svg#latobold') format('svg');
                font-weight: normal;
                font-style: normal;

            }








            @font-face
            {
                font-family: 'Maven Pro';
                src: url('https://storage.googleapis.com/devnpfieldapp.appspot.com/WebFonts/hinted-MavenProBold.eot');
                font-weight: bold;
                font-style: normal;
            }
            @font-face
            {
                font-family: 'Maven Pro';
                src: url(data:application/font-woff2;charset=utf-8;base64,) format('woff2'),
                    url(data:application/font-woff;charset=utf-8;base64,) format('woff'),
                    url('https://storage.googleapis.com/devnpfieldapp.appspot.com/WebFonts/hinted-MavenProBold.ttf') format('truetype'),
                    url('https://storage.googleapis.com/devnpfieldapp.appspot.com/WebFonts/hinted-MavenProBold.svg#MavenProBold') format('svg');
                font-weight: bold;
                font-style: normal;
            }

            @font-face
            {
                font-family: 'Inconsolata';
                src: url('https://storage.googleapis.com/devnpfieldapp.appspot.com/WebFonts/Inconsolata-Bold.eot');
                font-weight: bold;
                font-style: normal;
            }
            @font-face
            {
                font-family: 'Inconsolata';
                src: url(data:application/font-woff2;charset=utf-8;base64,) format('woff2'),
                    url(data:application/font-woff;charset=utf-8;base64,) format('woff'),
                    url('https://storage.googleapis.com/devnpfieldapp.appspot.com/WebFonts/Inconsolata-Bold.ttf') format('truetype'),
                    url('https://storage.googleapis.com/devnpfieldapp.appspot.com/WebFonts/Inconsolata-Bold.svg#Inconsolata-Bold') format('svg');
                font-weight: bold;
                font-style: normal;
            }

            @font-face
            {
                font-family: 'Poiret One';
                src: url('https://storage.googleapis.com/devnpfieldapp.appspot.com/WebFonts/hinted-PoiretOne-Regular.eot');
                font-weight: normal;
                font-style: normal;
            }
            @font-face
            {
                font-family: 'Poiret One';
                src: url(data:application/font-woff2;charset=utf-8;base64,) format('woff2'),
                    url(data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAEVQABEAAAAAgHwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABHREVGAAABgAAAABYAAAAWABMAzUdQT1MAAAGYAAAFPwAACMKE1NqgR1NVQgAABtgAAAAMAAAADAAVAApPUy8yAAAG5AAAAFMAAABgiTxnzGNtYXAAAAc4AAAAlAAAAMRsvW/RY3Z0IAAAPvAAAAAxAAAARBMOAKhmcGdtAAA/JAAABagAAAuX2xTb8Gdhc3AAAD7oAAAACAAAAAgAAAAQZ2x5ZgAAB8wAADDdAABgTjhQhrpoZWFkAAA4rAAAADYAAAA2AhIErGhoZWEAADjkAAAAIAAAACQHxQQvaG10eAAAOQQAAAH7AAADNIeKJGJsb2NhAAA7AAAAAZwAAAGcsWzLYW1heHAAADycAAAAIAAAACAB4wwHbmFtZQAAPLwAAADGAAABZhukM/Bwb3N0AAA9hAAAAWEAAAHRKF7phXByZXAAAETMAAAAhAAAAJVuqkP0AAEAAAAMAAAAAAAAAAIAAQADAMwAAQAAeNp9le1PHFUUxs/swi5WrKFSpWmrmDSISmwkzVoKNk1sUFfSakNfpFDf4ifJhhA0MLxm2ZDNRN6WiiRsKS0t2axAhwVnTbNBa0gzWQkxrR/mo5/6b1x/M2xTEq25eWZ27j33nOc55567oonIHnlDjov/dGNTs5R/1dPZLuXtX3RFpFyKWBWlxLXSvvm6MyIl7i8PReLz3iVgybP8RDulXdHatWntO62PZzKwod3UTO2Rr9RX62sPVvoy/mp/rf94sKXoRHFlcKik8/EoflD8t/d+FKjcmQlEeXYHkoGVwC+BjScjWLlrtBTGLk9PGd07A84VEmSIlDI02c9w5yrELwflZXRUyWtoep2xR95kPCtH5W1sj0lInidPDbJPTjJekkY5w76P5Zy8Ks1yXo7IRbnE/hZpk2rplSGpkVGZlFqZkhl5R2ZlXt6VBVmU92RZVuV9WZOsNMGmSlVJL+gD/WAADIIh4Jeg+ktK1Z/yofoWri8qUw6pX+F+SC1KQParn6RCbcoBFZeD7hrxDqukt77J8wBzfqnj90l1V2bAc1KG7QugSllSDxrUBqv34WDBwYKDBQcLDhYcLHbdl2fY1cGuDnalsExhmcIyhWUKyxSWKc9qE6vfscpjlccqj1UeqzxWeazysleq0VMD/2PqAQy2ib4tUeZG+R4D42ACTIIpcFU5sNiWMrLRQjYu4CGBhwQeEqjL4GUEHSN4MvCUwFMCTwk8JfCUwFMCTwm8GHIYlq2wbIVllN2ONBI7rGxp5t3LXB/oBwNgEAyBWdaS4BqYA9fBPFhg3y1wGyyCZeZWwB1gglWwBnxE3SLqFlWpow6n+E7JPrXOXEpeUd9LJajiu5rVGnDUy5AJu4x8oJY4AUuwXJKP1D1pUjflDPvOqmE5h89mbM5zLi6w76Kal0v8/pSMtai0XGaulbq08b7C92es9RKnD/SDATAIhkAUm1FijoFxMAEmwRSYJUYSXANz4DqYBwtwugVug0WwzNwKuANMsArWwDqxfwYWyII6MvAWGVgkAzVk4Esy8DkZCKHeQrmFch3lEZRHUN6FcjpGdaP4Hop1FGdRHEFxFsXDBbVZlA6jNIvSUZSGUBpCaQilIZSGUBpCpYVKC5UWKi1UWqi0UKmjUkeljkodlToqdVR2obILlV2o7EKljkodlToqdVTqqNT/pbIGlY2ozKDyNCo7UBlBZRiFORQaKIuhxoB9BtYZGIdhHIZxGMZhGIdhHIZxDsY5GOdgnINxDsY5GBswNmBswNiAsQFjA8YxGMdgHINxDMYGjA0YGzA2YGzA2IBxBsYZGGdgnOG+KKOD3S4+y2nQeP5Bz4bpXPe72esBB+95vOfxnsd7/qnnvgKNDlV0qKKDF6fgxaFyjnc2Z3knget1DlwH814EhwgOERwiOERwiOAQwSGCQwSHCA63YJkagG8f2c2R3btehDb1kPu8TM2wMu3FdmfdLkwyk/R0PXT/D1Q1N8oRum6dc7dOVdYlBOo48SfQVa8mvbvzMntaQZS1UTAGxsEEmART4Cr2P4Bp8CNw79u9RBwhYszr7Tr6o573kzv3v/vw8Z3r1uG3/71NG7CKcr7cuyVKBhJkIMGO+K575AaqbOpgUocectFDHdJ00xbd1EM3ZamHWeimnkI3zXAebVQvk8kZzuUy3ZSFRRwWcVjEYRGHRRwW8cK9YZMVm6zYZMUmKzZZsamvSX1N6mtSX5P6mtTXpL5p6pumvmnqm6a+JvU1qa9JfU3qa1Jfk/Npcz5tzqfN+bS9yu2cy+1/AOpO4DAAAAEAAAAKAAoACgAAeNpjYGJcxTiBgZWBgWkPUxcDA0MPhGa8y2DE8AsoygADCxiY9AMYGLxg/ILKomIGBwbe3yzMh/4bMDAwH2K4ABSeDpJjPMT0DkgpMDABABd+EOoAeNpjYGBgYmBgYAZiESDJCKZZGDYAaQ0GBSCLA8jiZahjWMmwkWEHw26G/4yGjMFMx5huMd1REFGQUpBTUFKwUljz/z8DA1ilAsNChtUMW4Aq9wNVBkFVCitIKMgAVVqCVTL///7/6f/D/w/9P/B/3//d/7v+Z/398ffp3ycP1j1Y/WDVg+UPJj5QALuFKAAASRY1QXjazXwLeFTVtf/e+5w5Zx55zHuSzPNkkpmEJCRkMpkQSBgeIZCER3iHoBDCUwExoKCAWEGrQLUV39aqtT7QW+ujQr169VNrW19FUW/7t7fX3tbW+r8+6gNbtTn5r7XPOclMMoC93//e7/KZRMicvddee63f+q211z6EkflDX5Br2YdEIDKpSJcTShihbCshxN5JGBN6RSoIAaFLFEVZlJ0Ou0nyVbkSjqjUUO9erSjOaezDwQvPbW2F52ayHeQVYRwfa1w6ziihlCyGH4T2mARRgL/PEUVCcCTJBB8THJLkqXIlE54EfM1U2hS241H4A2MVEsK+w94nfhIm7ekZImPEXpgvmCRiWl2QxySbhclmSe4TKKX2Tis1mx3mrkAgEA6EQ0F/SXGRz+txu5wO/Y/dIQWrXEoqISfwyxPFLyHq4l/JRCqqwC8KydB5ynmPw9eVN8x4693dkd3/vDu8684fTf+EumY8PoP+5e/wJ3xzWH2XFuNX+OabbyawjOjQMfproZaUkkpSS5rSydrxsfLSULAg32qRxXyB+CgTWAd+dACUS7cRQWC9oN1i1qVEUFiPCHpwxhoaU6AHr88znsYdIYZLkGRPNAl/TYaoz+GLxR2ttIFIbq/PcfuS1VPCCxOOORXx6rSjaufScOu5oZItU26o6ehYp6pzprXSn8+9YrHc1CS11EXqJPX3Ds84d0P78n15LZNYU01Dsp3RG+eXRdQdeeffQo/MXtcSpE5CTMQ9dJLdwb4gFuIA/UdJnCxOL0DLECjrJ2YzWIYkmXqJyVTUaaNgGL1Elv2dxGJxdMLSSK8VtjxAutxORuKx8jIlEgwU+Zx+t99emGeDnbcwS57krjJFS2HJ9V631BgrhTXVN9Lhf2HaPzSUJ2iUDlnTZ6+6atXKKfPOmT//nHnqZOvUs1ZetfLswk3z52+aQz3xwdfKbav3r1q1f/Wvu7vPnT+fdmt/o5Xwt3mb+gdhXRT26RN2hP2NjCNt6Wk2K2NUoAIrp6IgdEiUySYmiEzoQ6vtBQco6oS1wopE0dILayu2dFXGwZRcLiXqLrKCPaVgv8bTJAiMO4YCT6KeqCZ4C40mFU/UEU0W4KKi/fPK65ZfOb5g2tLZs+sLzMsv3390/0HacDDk3dux8foP519R5OyonLKsIalUz149O3D5Y/suW/F2IKA2XDp5wfUgeyfbSTZx3wql/YQ7FkG/YhS9ihDuTYLuTZ0K2/nII/h7snjoCG0Q6omNSI/aRFpXVR+zN6Y8kgdMyPPKzh0bnlqz/EMqvL+47MFPd77RHcdniofuJ18IVSQPnsnDZ5xeuyQnwfJi8WTq8u07N/SuWdMrsl+/q371/pLY/Df/8q/zQ4zw+aL0JPWy94iPJNP1YMCiwCQKrltgs1okgbEOE6UiRUvqQ1PpQaARuhxut8Ntl6QSgBZPyofO6ZPjYPlyPAXuGU/5ri1u88xcurTNOx3+p215b7u7nb0H32eWTPe09Syf6ZleMtPdrslQSAbpTFYDa65MxwijbACM2rQNoAJ+uxgRg/SIoDYyR8MGPi9MgzjkiXqitx46pBw4oNB94YMHw1fo6xp6hmwgKWImxWmvCZGtw7ATsHSHg0neKl+ytKHe4y6k08JtQnhKU2tYtrTDsxV0H11Jvw9bVJT2EC4EPttDuAh2fJQqSYWuVF+gKZhVm+8LPp+A86EEvbDTNEC7MrbaCxAcbZMBe2HPAC83A14KxJW2a+hNqYN26cODF7GZ6Cbs/UE3fJRUDH0q1IGP24iL4z44Qy88UaQ5MGgHRuxixOkoyAeHtTGbSXdYe2MEYKmAOmMRye6NNNJHC2/9j3do+p11D3/+mvqbV1+l5a/l/5lO/OM7d6x95Fzmff119f+cOKHvCyH3gIwmEk4HuPUSBG+wBeZguDDYJYdDBHkhviQTjssvvJEdD6K8lIRA6Dnsr7q0FNZJBYxSHEe51GIPeKpD7HJ4nE6nSSquAnMtlTxRxBOPWzYpHqW8kVXvf+s74R+cvOFh9S/0qcG36FkP0N+tveG2rXvvv2fg7vPuV367Sdvv0NDnLAL6iZJUukFxMDDaDgIhTBDpVsLtdwvMqYMgiGBYgtMZcLmcaFHlbqk01kITHoSDZEOslqZaASxAJjnaSgHj5BBlkRvfuDG8758vn97ocpYEe/euhEnPu21zMjXtk42Hr+732Hv37l0x5UKfucA9tbRl+VlT52xed7hZOR9XDuhM6G8Az8ywi9XpSqvA6CxJBHsH9VDSZ4LI7RC6LBZCLDaLDT5mdjgdMsRvNDYHmnrcQWm/+iDdtnSpor7dy24b3K/07maWwb+iDmpAByuAGwTIzPR0gUomUIFkghgMmhdEiOhb4EMmiZr6QRy5x0xl2Y5wyfckwHc0QALOaKkzGnVYJH8V9ShCK00gvoMlxRMh+P/GhlgUVeJiFnWfP7qlZcc991648jZvuOjKhRuvu25j65ayaJR9GFSHauru/c+7d66Yv+H6129saaBzuQ6Uoc9YD8iYTzwkka6z4QYBxgDJEIi4BuSwo21w2y6mXZS4XfZCq8UkknyaL4FJ40bAPjVMoQm5lTIMObBDdMaWe+/7z7vX/ib2M8fc3113/NrDL9/Aqu7/890/eHf7V3/Id6kXX3/9iZtuhuWjMwncptFPwQ56Mp3PYReQLikQwxQ3/Ui9pJxuU9vQB9lxwj05BDHJD3voIUFSjtyhQGAmBopmxCQyU79EdemLULPcysAxvd6yaCTsDXqDnpIi3FEKRCFEPbiU5HBU8sa0GBojxrIerY51b7z+xA1rMRp9o/eV2bP7OzrUz/cdveyyx/azvsqZbveBBRuuu369EY+WTYZoBP8NHt237+j+ywnXOfguW8S+HNE5+AU4B2idiaSfjAjM/Xqszsv1IF9IoykEEj32TzjvntE6f+7Ie3ff/SeucnqFpnKYfzFg4010usEzCQNLh13o5zApajCZg2ciXDL4Wjx9+nQATZoHwEm08Z4ht/Dx8khVusKC7g1sDUYClOk3yBo3aLMxoAkJGwwmGJi/uC2GqE9Nra3qkzr0Y9wmf6T7IQBJEEsh9NVVuco9+dRT3kknqh/TQvXn9MmjsdvvqHgc5Kinc+hG+j5fV2k6jJEC/ZhA2BQWoxg9aGsYtOyiVMRjhgddeSPGDR47XgnfHtTwK3NeWAXMa/KYkjUU5/05zPsxGzgWfLzijtth3pqhL9gE2E8XRO1Z6TYzNYno3lshdAItkrYi2IJK+g0DLEL+J/dawN8DcpcbXMDtc0OshwGAHDncTiugr0vDOM5fE5r5yaiwGunQ24fb2/ojBWv27Hv2IvG5Njp03qFrn1k2Q7r72f2PX3LR2sEv+caIpB5iVCv7ivNQBbj1qvRZEQ8zW2iHjcqSRZItW4loNplF01ZYp8UsWYCdEpNgBkDKjmdWLZ45gZBWxMuiTsWphALFPjTM0YQU45tdMqKbYBC4hkaALV9y2JOeLrz1D3+i0975/TOvYXyjsRMXRSJbWlcfOrS6dUtEXbfryM6L7tuV/38xEKrPv8eKMA6+8QbdrrZubGw9+OzB1saN6ou7dh3ZvYfbIMQ3wSYQXAdHEgFjHO3D5MkBgjswLhZVWWhUUIQoFRR6Hd0RvVo971CYbnuC7hTIIKEh9ffsCfVSjiudYARrdVwMktp0tcyREbQqMBFcxWTiW8mTPK4pgCtXqau0MqKxsHqee4QAV6qoy6HBtODRfnZGpi6boMxZd+2GSMS8ZM/upWZzTduM8ezD7imxeXmuS57+Fn1J7b70ob1Ufn/2yhlEiyUn2SVskHjJhPR4j9tmBWKIKDeGdgSQdrgcBXkWmXiZV6cdHNASwLMxWNi9iXqgsPQntvWPrP/THeeuOnvz4RMnDm8+u9e26dG1t/+xqTyNyk6XN2n+jbr4D9CFDAykPF2KGe3YxZvN5kJzYTQa0RLcejACWHkUl26PdUbu++UrRyIVZvO1TzzBPvyt+tK/sVcH571I/S9zXyN0GYyv800ynEXosUAUTT2gcIepK4NvYnKAITjhUTpp/vvPP/+++imGuQ3BoaA+5hIY00Ki6UjOMZHq4GhIdYzRHNFOavu/zz2n4EjnBNXfZ+m+hExKN9kLYbBiMAITZqQQvEVi6jMwjgcZrhGNaZaQkmi0vB5IA9CppOIAleTYiiRdS4uXbcnejQXLaCiofpzK3JFxv9exibBruL6UdAgiJ6Mm1od7j1xQD5yGnihQQYcCXwmHwrYoyqCqKIyxDwed3Nw/VOdoeDcfvp/P6xi5+C8WLObDg/AYxuyhj+mV8NlCzposDOGeG0VPllEUcxUUkkJ4mhsFUFJ0h9J4Ehmd48G3dqyyzp8+5aE17LXg4N82Xzmxsm3HWfSj4TVWwBxW5LpmyCwZoR1UXyOPi8BSOYzD6DQBjk1h8yK0pUI9Qn9UrW4FYdUPqEt9U22hd6or9THpIhiT82ccBWTVWbSDZvFn8FiP4tj0Z/WvsOTaIDzDnx/6ROgy7NRqggUzXDhpB1/EwagGNvBZG7E53HzRIJXDgt9ARKFLUb+n3hGqo910AeqS/Xywir05OBH+v4v9WJ/jJPs28GYewWQBa0CQW5NZkL20Z2yLS09LHDg0ZduCg78Oor4GZXbv4Br2xeByHpc+FSbq+B9Plxksu0hjdBjo+RYhhsNnZBfGZFEH8CpKjATFrgH1bYV0s4HVY3CZ40SHjpk4H3rdqLBn1wmNS3G6ItzrOJNFFbk4MFbRDmXDtTf2mhXFvGjP3gVm9uE1zx5SP6I1u++/hK/nM1jP32H0CHqizy0JogbKQKpFiLcmk+6FyPrICqpFLZczGPB6nBFXxFPvNsieLxofdsaIl9an4gkfTy9w0cLEhW3d1a0rz+cuCYtXL167/IdVt6TnagrY2XNXqru1lbvmO4NfpB64KXHTguu4Jgy8vAj0kAfsFviQFRIKHjkoE2lG5NDtOKo4QR9G1EB90Cik7oZKOqv6Dt+wRKas6g+RiLN796UL8kEtz1yt/uXDDzXFcLupGPqEvgh7XYH5XUXc7RLRYTCU9cJuF2U6ZY17PA+GBOJwkLp9IRG+Q0KBNTIsvDSMF+Ebhyi6et7qtpmhzs6W+DdW7mkrWXvDloa5K+Y2LJ+2opE9WNeSNE1p8FZNSM2vs67cur5xYvuq+VL9wmRzfVeNPLNjRkKTDRPQb/H4AXiFEVnoQbgwbBmTHyIDYHF/QRAG0kC/9YDyQ0DhwVoAB833mBXGcJCytKIVLbk9D2faWCwEJuJgDiPTTgLm8dwRf0q0zrpir7Ll+5uVvQWX9jH/4J8Wbz1vCSsZfHf1NzimfcRUjg2Af8Aa2znWIHNARzMhwiToVerBMrqILog42NDgbHaMP/ep8GeOhcF0CVZpZFGQSTs4rsCfdzldXNkwAnUJCT9NCC74X4GepR4rp5UHby07eE3gu1fTWr/66O357KvBbtpGz1GP0dnqjeox9sigiW4xdHicY08sHYVJqMjBJwfw8OwdFCm4ojYa5XPSu+58pfyJJ8Mv3R279juAi0fVFfQb6l56F+1Uf0UrjfH/BuObcR2It1ihYZqeNQrl5LmYEnVoq6DFyjtlrx8PvU2r6bNqH71dbSVaHYVez/camAKMgZwbJBwOD5qYI/td7lF47YZeq36TdqhH6W71sWAQA0Itt51ZQz8kvxDq9Oo6OBBmKn0ZBTyi1+9GhnTxSJ7wbFx56aWC6+/HgsK+ICFnrPG4EjRaHGPjY1qJB+stMPd3+NzIS/RsAiTAdAIXpOcTWZP7eOUlmtzad9lljcLs4N/3aHMXsgCdxO4Ffgo+AOMwHs0Y2YYo4OS5PqQaTi36ADjJ0dTDByo3bR53iN17cNOmg4Zu55CwLr/OZUChmvyVQDDoHPVl2hDm8znIT9l++KwjXYAPD8ADG42V+qKFlYfGsf3bOG5Hh07SQfoK2LCPNKdTBUhuMOoIgqvTwFQ/N4NsegOg6sD4Ho3yqgg9FdcfjAS2ppHZpy/wGcwebKZ168RpQORnNJ0/TOQZmQzxz8v9KVMWbbNMJj63n8O7I7tSMkqWBPh8RqXEE9NlmRzxb2vtP3iwf/JAiGmSgD+sS6EgU1ObD+lyYP3wU/ocfQnYP/Btt8ssZ/Ft/6gyn6Mwzwrg42Ee00hdHovavJoNSI5022tZdeDQy7PCKxsW7tq1sGFleGb+1U8fnJMY37jr/l2NtQ1zhvdizPolDS7/y3vhyNiL0MBkVEDrNr+6bueRXbvuuwipyObUVFDBtBS9ZfB78G97dvMa52f0ZfoyKQB0aEonXc78PMjfke2ZjKqKPwuFC4EbF7oL3RyJC1iBlKEM6uVaYJLbR2M0aFn5rUO/7FB/NnXnynD707uSNNqad81TBxeoLzakxifm0id33TGZKo3cdybD9z+znZCLAYsxAfIRinUS7UAFubdDQP/JJ/kOh8shISf0lEoenh5EHQ2N7zZ3HzoUWcN2Bua3qF8E/oke71ip6bqOqrA+PKNpSTf77cwkWcxMO2siLszSxV7Qsh81z+No8XAc9QEHc0fLy6N2GQtzGGHQ0JK8JNdCM3QvGqr/98ilGyZuCpWc17xsq387T3Wnnu9X14IZwj6AQ2zYfkXDuPF16R3rp2sGOfHnu8A0duk6oK+yDzQmB+oWef18pFzoBzrBwcDlKtVymgRyfpTAAwGVl3JXRCL1uxZti6w+sIF9oF6yevtC9UsqzVy7rk3L81DPF7K1WXUhYHD9yBRdehjIdf4I48ca6t0bI/nN9Bl1Cn1mSyNsHBv6aqiZHIXxLLA1dekaIkgUYFOEndOGY70mAD8P67JaCbHmW/M5D7W4wIK9VXLSiNxY9TBNWhBZO7H5Z7CD9G1V6VjJTuIcml7OBUy3IuPkeQI14AJnGZsrpBIy51eTI49U/hJY1TsR9r7a/N0fq5988AGON/RX8i7nsFhjN8rrRnUavnMBEaVTHoNivNu+JtLtCqzsYHMHH2mZb9gsexAwNUTGp6tCxVhU7gB7ckEkxOFk2Cx/pwmlRTbvcOEfh1kKVJHGjB3L+JnwYEHIR/ctvnhFpOvchZGuTfMjEfe8xXOd9HDzsk71X+m45jnzk+obtLpxHv/57JRQ9aRaQobtB+TJth/XGezHM9p+ErsWDUT6Dmykz/au08ynbR2Yj4ZbQzD+qFzDP5JrBMbkGl79rLJquIb5wwOHnj94ZZ/lBOAyuIUNEOHg01fT9O4996Eb8PjQxLxjYpXmrsPxYTgy8EjhEcbio4/rczg+ONip48Mv2IEtenxQX6KLjJITX3PT14mbBkyjyXtITqx2/ANxc/BC2jQ6cGr7Ox1k4RgJOI3NAhiuuKNx7PIbqaPDxX2BZNgVMH3fOd2QX3SdXUUf1oxneml1pILbTgT2Nkl/CbYMsTAYKCzguQVivjGwDooBPCHwlzjteVYSoiGMhS7Y2JDg0dERQ2HDeIEHx9j3SipqpqRreqZUtNljixraa9JTaiYuj0ToI6X146IVrRWTFkaDdYvS8xpj5cn2CdHKOpClfuhL8lu2A9bZ3fmQdf6ytB87Agb06i4sF+KDlm6CLftP/Vtw5p50fnbU0D0aDzHBq38LXn3gQLcX/Jq+cTSgquDZOP9J+jP6rOFHkNR1oOO4uHIzKcmwH2EFJill5iP0nkxHUlvRlaikfsldiZ8ff0phA7CTIO0wgSfxZMQFHFzP+m004aLHgr/99+hT8PwEely9QHvuJDsMzxXiGXchT4gEZjaSERdPRnQYdGG+C1DocyWEuFysPL60L9K9MLR6ybHgm+vWw6A7jr368KMnHqcH1Ibf/AbG9sAEt8HYNsRFGJfXPhAaXUb2ARjLMx0/Rfbq4uP/+bHy798ZeXhH+Zo1EepQPzp5khb8+KabuB4ncj0GSH26tpCaiFnmgVekuitz0woMm5YHDNdVVhY1ilo8YU3p0Xa0dncv3zSFBXrrOzZNuHjhhZG1B9bCirp6di+sr5t4bmfX6gsWjKhb59ULQJasnMV1+pwlijnLPPVFSv5IQ+pQIEDvCajLNawtHXqMfCBMgLVJjxbb8OwAa8FeyLJ5a0oL9gG04g8gRAX03mhkeixS09w8blxzc00kxm69M97uqV58pCLtDHkW1R6pnp2X11l9Z223N2RP63UssonnMdrZtr2TUSOTNs62kQB3Knoqw/PUx8jbIJM/Qyavr4Bi6i8nMetP6ZIBhdnTXFHRPLlm1rRwNK6MnwQSVXXl5c2uPjJ+iTsUX3hkSZV7VvzOirQ95O1GeWgzfZHeDq4E+JAP+pORmUkUNhDP4SBhwlMgkG0p0SrHApnn8GgVeSqVxqIoQareW5+iL1Z0fzM2oSI+oXZfVyXdMH6WOC1RLc6ayvEWI+u17ORIr5WAGdlWnor1Er2cxzlKRq8VhjFkJ/sUJTGNHajhZyMM7G8t/ZI1AKbFyAVpS3ERoJoJgqIGKmW868FKYc+3mSkCuMA5kIVi9UbSyuz+U3zMn/2xnjRsQXmZEoa5Qp5St+J0KTbgjKYkh/xJFNsmeLIAkYCnCgXwfx4hqjXE0JB4ziUXbzaVmra2hfuSJlPjqnCkLymWms5et+5s063XHvyXqzZt6kjUNKjrG2oaorFrWfvO+3doe65CLvE5rLA7PTcSZsRGO9yAh7OJyCQmSlstlJhhuwjtA40AVkj9xGaz9hKrldcITUBTeNm9rDTkL/K5nIrC68p52AuG5Bq3LIHOB9soRxtTSWwCwSUZuY/n4RdfwJ0sm9Rc8c24MqGirL5zxYo13ZYZE4tmls3qpk2BY7OmrpotTj/LfCzwfu+O+qhf2dDNY+tnQgX7AiJrmExMN/qwgQ3jJiRakFwINoHZbQBraGBZVU2txOUq8XPrcjVGfCmf7LXLPjkuReJyPBWzp+IpUStt2m/fTKu29XiXrluzuGjhBeqJc5YULV67ZnEx/Ux945fHafDX7Ka+9ctLll6g/tv5C4sXrlmzpHjJJlq9Y2GJ55fqiV8cp9UGfmDO5kVJC6hJoh1marJQUTCJfVbKi7gC6ZOpJBklB2yuc+jddXYb6LMcUhWuPvjSCiz8cIPed0A5dOjQrtejrx8PH7/4wIEHH3ww2B+md/KKy8pwP9oyws4evQcRWSsAaQ/R62vDNQL90BPdIQlfe6Lwh/qP0QDR/eFvdCf7lIwnjWR6Om21MMKipQFBlBg2LYgmScR2EewfHD4c5NmHsILwBseGRF1trEyJuNxOJDUufoquBXqwA3dIDFOvz6ufiZVqVCDZUEtj8Vij3qtWv2hydU17X2V8acJrK7YEaGCmq2RRS/X42eeUxxrijX0lC73WNzd0zN3QQXdMXir665dMiyYn15UXFec75EJaWOEv37hM8tcvm1qemlIbS9UXVCWKb529oX32elxjIRtPHmZrsvsrl/L+yl69v3JejvwG8496+CpsnpBi4xvhD/wqNfSpMN2orZO56c5YeUkxPAaky0Qk2QSuJKMFyOLos1Szlitjc19UCWFjX9wdHzlHteY8Rz1FSeGnY05R1bsKz7pqVJVhdLF+GdDqrLID9p4SJz1OHyYSoLj5sTwzZGZ1VVOoR/Z54vqPmW/95Cdv/Qi//eWZqrt+UPPTEu0Hjy/15Em6gU6Exc/sfKgAINQH5AAGXj+6X8uf9uJv2LbRv+hJ2zKPYMqTeDxPZ6vv0cYnzw4jx62nJXQjzHGmPjB+nk9LwngGnrlPiPVnpZf7qWxGmi7KsDt4apBHLWYTnn3bqCya5b7ch9/hMB5/h2Ph8tKIM+QMBQM+T+YBeH7OjSvHUiSmGXjiYBwA59q3ueH+lqWtE7ZXbpk5c3x7+/gxu9Z9K3126fnz8753K837ePbK2XqfAmukdrbgtDoBSKH2559njbqvu9ky8oB+ToOMRxCxH2zlsFuzLkZG1sVZ/JhO0z4xVFU9pbraGawMhSqDbFlNS3V1S82qULgiHOL2dB/dw3sIC7GT0egilIlJ3ipgCyMxYWuGLEnyYiLLUg84jTTH6DbGRDizo9AH23pC6yp8QG/yw9bCxWG9tnq6WqccvbXyoF7rxHOEJvo74Hou0pCe4Mzn52tM45y8pgiiYckHM0eTyWNCSoVdGZCg80NcX8aZAlbYMHfsVIBgRiL+szYs90OyqBFLIJitS6sb66vUPxnz6nXNWDpqMBfTCHNB3uvhMB1VOMc1RR1aSqhoJyK0MOxuWbSklaaWh6/+Bbtm6UVLg39fL9zM+ZeJXMX7b4ze1qVGxyMgWgYpRCTrbMUWG72+3UT2ghW4yNzOhzzgsyX84XWEmrAlSVxjHGt7GJCdYl2zY3+nJVIu4lTKFZ5I+TilQcILub3WvRItLLZGaqqVaNQXCvk6FzVXh8CCioPjgrpNAv7cNow/VhnyC+CoPo+cTNVS/iP+3FuAPT/Cb/ThZ0p+WvODu6q0H/h8augLNknvwdnb+ZAPVlMNQVjAGLwVe0FA12uG2274eZhzuCOMk7lawiQqMbr1tI9lpo/eU7TulKNdNKR4M7rezpxi7tIGNmlM785n2a07TNJ6qgS9n+Uh3s+ST7o6H/LDigLE6CzS21tAHG+n3uOCOwQUFrxMMA2M6n/pSVscnG6gZWU0wSR80VGNMOr7lYfGZXbDsAu2/Y/JI4CzjpLnSvDdMeKMksdOznosn4oSsncUKwQmKgmSOCIXUq8Mwfzwd1EaQEsWx4pWaLVa7VY75rMOhzlbQO1kZpSMR/ZXnnvOuCtGidnbu21Yzju4nEXkVi29KAVjIiazDFTKLFmZKJjF/lFi+DsfyoNPVhKLbJItpq3kjA98nVF7etI+m5Vf7bAXFuTnWYtsRbhKW1ZvlFAaQzoPNJ7z+1Gr3RjsnxwJx5ssoeWpcLg2a9XuFE3OT07gPSWivvZv6zbjQMSFqGuRzQI4mGm0bAUFVmuBo8BhL8RSMFc+OtOIWETnYaMt9iTwsiwpwpyjGfM/y+d3QebblE4SCP0aKTMsVr+JMWwdedaSYq8HhHDl8esvlmzVjL1ykS3NT7LjYqZc9ONRMRLPI2/hMcFJpqZbHQjXHVYzA4jVTjawK9iidQVjfzYoD7uW7HZI+Z12J5YQ9YBp483BUf3gU3FEQdhiSDxu0fqiXgDhtj+JPU3nBlU1aHT+0IvUbyKopyA2XckGgcfuT1tcTouZn3VpplpDIJEBmzKPprHGEVSgE8N3L+jRI4ERnu7zgTGf70k74N/jJKaUl7ogIYEdD0BiPJ7aRzerwfJGRxR65/VvZnWvnWvODDFTze/SREYvWywj4jA8PKarAT+Qn5yjwcY4YCPAQsjW4XYxBI2cfWj+dBz5ygAWhQZO27EGrDaL1GS0reEx7GKjdW08nsfq7WvCQ9q57P8KGeURGR9HHjVKRuz5GeAyOsmuxwqpZDZQuBpA1gxINCIrGIb5lMJWwm8l8wA8RKQzievIy8tz5mkADUJbRwutofSw3Ddr+JwhuobNmn6/zfXrIjPSU81Uslmsggx66z+tCHZ7Xp7dZQeAyCvMK9TFyAMnzBTDyBuH5WjABNIQYjkHKa5D7EV4HnSIeelUTXlFRIAcSUDdMW9nRq+CH1g+ExhGLWEg4997jhoZPvbqCWBayxWlgxvVoJNv1n/HPGgeMM80bhjGPEO/gs8P8XmsZOFjMrY96TZRArAmEpEh9UWqkDWhD/6NiQM8O8yaMp0viqJVtMJ+2yVjZm2PYXLF2F0+P+4s8gPAVvIE7C2u1YZncCJeUON1a97obgxuNoui2Wa2WS16zdCs389k+u7BDFP5vsHwGXtWqPfE2oBvJtJ1IgWmyCSB9eEtDqPdTZKM7lgwWF+eT3G4gN9H8CqH0SGL7SIuHbgzOmUnT64w79490i1LNwaxOyaoHuU9s9hzf5LdArxCJl7yvXShRAnj3YIMm3baNewOyZAYCJIJFiyJZsaIxDKXrlOMciIDQ5MxET7dh880GlALj8XM74wCsbBZzV6L12W3ZHQpjqIVbI/WtPhYNp/I7GFkf8/gE3rNBewK81YP6ddMKgocFHgmWDA3qOxqoKT1OPrTEZ2KEqCiOT/Sk3ZCAgbSD59Qyrm7IZEyl4ztiFTT4Gtjcnb28rb/NXLLueV+GXz3a8hdRLY/5sng2OXIscEQCKRLPARlSycbCyg1G1SbiAO5P9STLnLCIpxFziKfV6uo8IVYci9Ep+C51vKABgW5lmPggramO/iaIuSY5iiVmczZBghl5lW7TFmt+oI0n6nLQctP/9w/MAd4UsgFCgmHggE/v4eNvavDasnLrZZRnD2Xev4z29PGqulcw930uhngp2azxVgTBvpplS2CiYim0ZKbNcm9XtxIb7G3uMjn9Dg9GZtpyyn1MKXPJW4HwO5YGS80MBjrHgHaygr43VxgzXVVrngKy/0+OS7HH+z39q8u6l/tXX12Eb0e/+Lr7/P2ne3TsMS4G+MlYVJBpqQnl0VDQTewfTOeAvHqOdJto6ufH+7qnbvFpKvIFy/3hYvCzpizXsZTLK2vHezS6O5PJeQQpaX8njCNuRpicYpFW6EV1rh9ZUV5Y9u8P91x0ZqKeGrGHPXiwyfaW+kDZ/+trUVddNamwyfojlvfm944q+l7Pbf/sa1xduq7tOD16xZ+J8Fa0+rNC65JDP50yhvG3atPmBt8FHdpheaaYUAWKpqohiwZvbKSVsj0Q96uoQo1DYz9dU/axTiijHTUyjk7apFk0ObhrtonAADHdNYKT237XyCnnClnLQDe15GziGzOQjwFEQ/AjOqIlyGRbAgcGkY7Kg6M/UBPuhhryAbSjQhuyS24DnUjsndrAJdLfA5wgi7/t3WvTadbDK8FTfdnSKSfQqDHsiyPHRHKllMogxdlSPUIOOpYkTbojsrvZjEGOjWTPDLnmNFcrGm1ePhSsCB4OzMbjv14i0sE8om6zPxFzzEH9nNhb8VwNzISURrVO5JDsMMjXclY+dV68jewD/h97Yb0BEKBzYh481Yk+NYCjclI2o3fvDxC8lx5zsJ87KeOKg6z1lHq0fvzPcXUuMhl6Tt80wqLZdGlly5iH1x4zbPfupktV1dc/E+XaDXfz5mbPQdxBrJ7G+T0Viox1mHGQEAwEBg9pLzV0JHZRgPiREjE5XJAUuxCvkj4fWetTd+rXw1Ian1CvD+rkboXNq26/EBfbd34CQsvvmhRd820acumRRay5xZcXCte8fRV7tLii+7dGZzeM21azeALLNW8AO0F7zbJbD/vYfLj7UWjo0pLHZk8YD5jHzC+gSOjp8lyml5gzHmZnKOvaS+gR66eYDpfi9v/w3IiXcopJ7WhcZ1K0Gw5Q2RRutsPWXCBdl3MamS4TBqwnEHaoiIIrqEioABYjhqW2XY63WpwkVPs9zTgOIXgOnZosm/nssfI20d1FWscKWGjEMetFsiMreZ8JjGr1J93hkXobKmZ2CyyxSZvJf/4CP+leYFBRYqLsOsiWqogiyopihXHMtRYcBo1lo9KU3JawbhsKpVLrx9l1UI13a7R7TdMlqQX6uqFkJFnsQkyk+R+6xkWFgigXWgv6SnyF/mzbCP/NItq1FE752quBPzOtYIv9TqqJvsNXHa8R3zDiGUUo2UQiw1s2iLhu234u2ycndYz7usEoM5mi2zuH376TM/0pAMlsHq8gAyrV0qUjLXnnWbtqTE125xa+E125TaXQl7OKuByXKoYOil8g77C9VKLuzq+JhL2l3icsmjFWhjI7+q0WZjZLPTicZ/WhdmJBxKkl1kZP0oaN46RcbXjanFpQe1edYENo7DCFONeNb7NJXN1Wv+q0VZfpq+1jLfXsxOFreeES0buU5eEt0zbZHTbDzr0iw+1uxpptNU2I7V1+Er1eanpRgv+jXzJe3bd3mL04dcMNdFX6EtkHOIvvxOBYRlfSkNECGqSKPcb73Txay+/0lrm9RK7dpo6jlQq5aUN0TIPhjVfUm8SyeprQC49ptz70cLzsvsa1lvyhMyC77SCKx/N7Gug5VlnjMj5P6P/CtiM9xmK8J0cGTcaRpimPOpugzRytwGTscz7DeZT3W+IIzWO57jj8DyEuVz3HN7Y9j8sn5xbvokQ3b6WfH6yID2vCBjxsIysw5JBfs2jpNQZsMeDcnr8HoAunzdTVuspZdVZcC5xe7WwlltiLeXn70FAudfoeg1gVM7QLBBkm2zVCLJllNQ6Sy4u1uQuDhRDLPEUeYqyZc87hexg2zpZziX8kwC7uSS/RCPODKIlIU/xvgZZ66nn9VgqDGReyCBElkzi8Ds18DIGWt+2CBZ/tesYz+m5zX91PMhlYTws8maNN4SvYPkrH8+KPR5aoVcyiriUgSmMujhiFa0Ws95aJRuja/u7LRLROYo+h1ajd8LTP9Z7tmw4i0iZ2SQL/GKKlDE+FnIJGSnl6rNYMi6o4E5si2A1V5tjM1c09g58ylzsh/wNMpAb5PP3lwy/Ac9upbNItlloRQB8hUw0gb1K+OKYKjoMzQ1xbFdI+lIeoOw+rxGHmOuqswpXffNgf3og+Orjhw8fu//yCVPCLeoM7RYWretaee3VTx+cMdly28KuYGtLsHNWuMkTV6aqb2o3srQ+LULfAo6G1aufPKZd5NCLWEAviQTqhYgq25iJWUz9ua94DBexrMBHrdJW8nWf+wfmAApW5HJml7B4S3xezqslrmzStW6kQf7L0Uwr8+IJDY6QLI2/WsAetZoVdh2NKZ76R4qnPCUYUzkdeycFK77Hsu+lqL8C38q+nEL/tu2/UQYsYYyS4TZwx1wijJKhCCt3WhkjVyXWP1KJBVlOWYbNIZHmtaOEekpz4TFyab6sybX969de/SN10cA/Unsd9dw/MMfXqL3m0EW28Y7SySXZBjxKNzcOG7Co62fNmWqu/pGaa+CMNdex0ho119E2/R+Ai6OE+75Ra8X34QzRy1iNjsMT05AXyJTHTGw6ZNjLxwSBLeW0TwJSKMzLebSGDZr46lPEY3oZ9vI90dbWRveF72pt/QtvfuKcGiLJK4D9xWAnoAWg+z67VZb10qxrpDQ7TKf12iyQ6ZISt6sEGK+r2F3sLHMmzFif9Q4XaGNGeRa04XPFnI0NccGboA8t+uaqwhlJV7my5NDq9knu+L8s3DXr84aSnTM/r59Mr5v1wtXlJdXtxw/G/I49D6VpZ6m6atfDU9SjinZnmb4K/ubQ3uel3QoiJsnEXx81kPt+EF75AzjUb4+OviGE/PGhERBUv9LLI5lXhegv9Lj+/39+XjLNmP8ivegxevrMuYuwiu6hJu3dBFjlMskDEkXkyy2B04lY43RzOSy55dC5X4Yot4xUMkZJo/M9QZdpje5F09JTNI2AkVjNFkECzfTnlgh9KdOTUDCb/hKdbMGGq6AZkn2lp9FZYg3oHGPy0ESupwBYdGt6UsaNp5EmjdPcfcLdwttP2J9x2ttP+s6NvQGlb2HOW1DckhjvUS1nF2TcZ+QOx9s+9TTcP5yfF5/ubmXm3XsH0YGnM6Kcx6+et2xR6C1Ieo7s/IXQor6T5MlnUn2NDur3nQVdX2u4vsrInHRHhsYy2zROozNFCQaVMqUsWhqMBCNuTYF5I7e1cyswY2fHKlHf4txK1LYatIWt2RvpM9r9LJbFrUdeMwvMZ2NE46H8/gV8e0O/98/r09rldkybePJs7zRDtiLw5mR8c5Xd7bT7HL4o3sgB5wEbHe47wRb0hII2i91T7A3efPKr7/72d3dSRX3b7b7u5VfYa7wJ5W3a9KvBWvbj59W3XuBnoycFBz3O79zEsWYdj3qBsNmwYY+7j0l7i6r2AgbSK5qZ/r4xrLKVFHvwKAbpvY/5LBkpUeNInQJBWDIiUSpWKuOrRWk13ln4SVvbkk0d6s/TmCGtLVyQTg9okemT1hsntVowNDU1L1BfSGCu1NSsx6iPGxtmLC8N8fqEkzloM/iYpL3fSb+hSNgA3lDcmOMNG0f11pH9BnbgHRF8x+oNPAbP1upbrtEN8k6tHdp4ofPIzTb+sXk96cIz98+vGNU/T7JKS9jTHqVrgCsVkMv0e674kkZsvcYjCyIu5Z3ITGLwt3k6MyolJgH7UHjb6yk+edpxgP24KMHuDUhsRYGRAlqAZ2qjD5eto1o2ogaJ0e5orPsadzTW4YtK+B0NWCs88/bXeOZttY6+qj+zhqXIc0I1pC72dD4k8mQWOp2Domt5ovgOT490ZVlD1ST2wwsvrJ2eH/VrZ8bFrInsFMaNPNc+8lwy4eGXIRfx545t25bxnHtoItkGWJTjOZ/x3Dx8btaGDdpjDGWkU7iMDrzJay+UJZHM4sZYxF8rNCypL0vk3VlyT82Qn4H8KfIZlz9jzPbMMQ1p4sb/vDoy5tHt27Ux9Z967/1QE/mIhE49pm/MmC8Njzl7/XptSP0n6GoLjPYKnQPudor7CBCCOQg24qs/peiWlSXej86u9Rbzu61OWs7vAejv+9QvH3Vm3DvS3lfkJB/qn9Pez6ldEnBn3g/gZ3CfslvYFwBTc9Od+LYkyNWZhO/uE4EHiCbtbeVY5+GtDPrVX97xT2S5WO4Ck/FifobnopBBiCRAAxb+4lufjO/kVGQFiCR8D1GtTxXhlx4/py9v8e9+ptAnbWoHuOQVNvWg8swfzu5dj297Zl80hybdsz3oS0SC225Nlzfh+57J/wOnLUeqAAAAAAEAAAABAEL8V4h0Xw889QALA+gAAAAAy23BqwAAAADThP7o/6//MARRA8IAAAAIAAIAAAAAAAB42mNgZGBgPvTfgIGBpfn/+v/rWAIZgCIo4CwAm6wG+3jabZI/aFNRFMa/c94kBJ+NqfJAS22WiGYJxVCbOdg8Ii6BIOJUiiL4dygITmqlCK6Wuig4qYt/iiKIiuBWHaoWtJNuhVrtohAh/t7NoqGBL985595z3jnfufZJ4WdN/gowvh3H/qojtl11v63YOir6ExX8mYp6qpS7LTusxMZUtJZiXYevqZSxzyiJ2tg/FfslDXlTQ7aqAZ9V2ae1x3dSZ4z4tHZpTS2tU2uOmrdUyZj8cnRWlWgveZfxn5O3lfNz4Az+Av5npXpNf0vUqhE/oTS6ydkXeEplm1EjMDHbUMnucK/FWV6FqKuCfcPPwfeVaFmHsp7h2BpgCnuJ3pkN1GwlcNHWmemPan4Q31XTI7DR7dgVuEN8FeTASC8v5Bwjv61htKjYb7CmxB+g20MNBv8UtmkkaGr0NMhc6O67VfEBek2ptSP0dtTuqaJXiqOLqtJ/3ebJR7PgM5teMs8b1UPv+9BilNgHcIOZsnnPq5ppuhn8MX29o85VdtFDI2N91LYeustwwh5iZ1/ZN/ths+jL3vykWv9hmD3O0w974i2UN0N0lx39wI7I/wd6qy09dN/DeR9XlXp1P8DdPtgi9ferFHbQjyZnubCzCf+FZqP021BeC2hzAcyh5Xfe8YomQaJFtGxrEiQ2gT2u07z1FBT8hdK/JKiPCwAAAAAAAAAAAAAAAAAAAAAmAEwAogEKAXYB1AHwAgoCKAJqApQCsgLMAuQC/AM2A1QDjAPeBA4EYASgBMAFGgVaBYIFsAXGBewGAgZOBsQG7Ac0B3IHogfMB/IIOghkCHoIrAjWCPYJKAlOCYYJtgoKCkQKkgq0CuQLAAs0C2QLiAuwC9YL7gwUDDYMTAxiDKgM7A0oDW4Nsg3eDjQOZg6ODsAO6A8MD1QPhA+4D/4QRBByELgQ+BEqEUYRdBGcEeISChI6ElQSghK2EtwTThOsFAIUQhRkFNYU/BVkFYQVthXQFkAWWhaMFsIW2BcUF0IXXhekF8QYLBh0GLwZEBmOGc4aHhpiGtwbLhuAG94cIhxWHIoczBz8HTwdth4SHm4e2B9sH74f3CBAIJQg6CFIIZIh1CIOImAitCMII2YkFCRyJQAldiXWJiYmdibSJy4nVid+J7An4ig4KMYpCClKKZYqJip0KqorAitCK4AryiwULGYsrC0KLSQtZi3GLeguLC6ILqIuvC7YLvQvDi84L2Ivii+oL7wv0DAnAAEAAADNADwABwAAAAAAAgAiADIAdwAAAHULlwAAAAB42m2OvQ7BcBTFfyhi6eQBxMSgPicSg4iJVAwGExHaJtKKlkfzLB7H+dd/IXJzc88599wPoMqOEgWnRoE6WFzEFfvgElOaFjtS9xaXmZFZXJHjabHLiBdrEiJunORp4BMLbZQBdy4c1JmLxfKkrMRTwlxNeDDWxL95ow/o0Vf862+VN22K1Iul9vHkNv6JWKY468ZdNdG1SB4z29JF4xzS/tr62dn5+TrM91z1S1eRcpQWiWfCXn77oppIDdT3WbB8AywcM7EAAHjabdDXb40BAEDx33d7q2Zr71Gj9rj2rKq2WlxFqb13jZZy7RmbECLh1XohUbOIBA+IvWJLeLbT/4CbPjvJeT7JEVLJ33K9/I/ncQOhIBQkSBCWqIokVVVTXQ011ZIsRW111FVPfQ001EhjTTTVTHMttNRKqtbaaKudNO110FEnnXXRVTfd9RDRM97vrY+++ulvgIEGGWyIdENlGCbTcFmy5RghV56RRhktaox8Y40zXoEJJio0yWRTTDXNdDPMNMtsc8x1xi673XbcN3scdtA5Z4OwAz7b6ZhDTtjnnq/OO+2Cxx4qM898Ryzw1EKPPPHSs/iTF75b5I1XXrtosQpHvffWO0v89Nt+SxVZZoXlip1UYpWVSq0Ws8Za6/yw3kYbbLLFZjedss1W2+3wyx+3fHDJZR998ckVV113w33XlHtgrzvuBonh/MJoNJRVkBQrLopEMrPDObHSkn+lDlycAAAAAAEAAf//AA942mNgwAEUgFCGQYbpHQMD00rGQwwM/y2ZD/03YPrz/zOQf/b/VwifQYJBAgAiWA+8AAAAeNqtVmlz01YUlbwkTkKWkoUWdXnixWlqP5mUQjBgQpAsu+AuztZKUFopdtJ9gZYZfoN/zZVpZ+g3flrPfbJNIEk7w5RhfM+7Onp3vwoZSpCxF/ihEK1nxsxWi8Z27gV02aLVMDoUvb2AMsX474JRMDoduW/ZNhkhGZ6s9w3T8CLXIVORiA4dyijRFfS8TbmVe/1Vc9LzO/72/cCWttULBLXbgU2boSWoyqgahiJJSXGXVqEanASt8fM1Zj5vBwJO9GJBk+0ggkbws0lG64zWIysKw9AisxyGkox2cBCGDmWVwD25YgyH8l47oLx0aUy6cD8kM3IopyT8Et0kv+8KfpIa51/KRH6HsiUbek/0RA93J2v5IsLaCqK2FW+HgQzxdHMnwCOLgxpYdiivaNwr941MmpoxHKUrkWLpxpTZPySzA/uULzk0rgQ7OeV1nuWMfcE30GYUMiWqaycLqj8+ZXi+W7JHyZ5QLyd/Mr3FLMMFDxFHwu/JmAuhM2VYnE0SFpwceknZoozrqYmpU16nZbxlWC9CO/rSGaUD6k9NZv3AtqQdlmyHplWSyfjUjesOzSgQhaAz3l1+HUC6IU3zaRunaZwcmsU1czolAhnowC7NeJHoRYJmkDSH5lRrN0hy3Xq4TNMH8olDb6jWVtDaSZWWDf281p9ViTHr7QXJ7KxHZuzSbJmbFK3rJmf4Zxo/ZC6hEtliO0g4eYjW7aG8bLZkS7w2xFb6nF9B77MmRCRN+N+E9uVSnVLAxDDmJbLlkbHRN01T12peGYmR8XcDmpWu8GkKTTkp0W+uiGD+r7k505gxXLcXJWfHyvS4bF1AmhYQ23zZoUWVmCyXkGeW51SSZfmmSnIs31JJnuV5lYyxtFQyzvJtlRRYvqOSCZYfKFEh84FDJQ0eOlTW4JFD7yqDpsuv4eN78PFd3C3gI0sbPrK8AB9ZSvjIchk+sizCR5Yr8JHl+/CR5Sp8ZKmUqOlWcxTMzkXCQ30iT5cD46O43yqKnDI5mKSLaOKmOKUSMq5KXmP/ykArObQ2Ko+5RBdLSd5c9AOsIQ7ww6OZOf74khJXtL8fgWf6x41gwk40znpj6U+D/9U3ZDW5ZC4iosuIHw6f7C8aO646dEVVztUcWv8vKpqwA/pVlMRYKoqKaPLwIpV3er2mbGLaA6x1rEVM9LppLi7AfhVbZgkDgv+aQhNe+aBXkULUerjr2ovHopLeQTncCZagiOd9cyt4mhFZYT3NrGTPhy7vwAK2qdRs2cD0ea+OUsR7KF32GS/qSsp6cRePM15sAUe8g159J4ZLWMyygRpKWGggLghtBfedYESm2y6HAUfu82io/LFbcSNHVNRO4LedbrkXtlDy65wDAU1+ZZADWUNqbmg1FTA8QjRkk41xtWo6ZRzAIKPGblARNXwb2eOBUrAvw5SPFXG6c/TrmxbqpA4eVEZyG98ceOANSxPx5/nVEIel3FBSVDhrDSzmWlhJKuYCBvDWSN0+qt58mX0i57aiavnES11F18o9GOZmgbfHOShLhSqgeqMOG2aXm0ui1SsYkvS6OpYGdvhrtGLz/+o+dp/3S01ihRyptx0OfPQ5GcP4Gxy/LQcJGMQxCrmJkBfT4cTXHXM4X6HLmMWPT9Hfwc41F+bpCvBdRVchWpw1H3kVDXzKhnn6RHE7UgvwU9XHngH4DMBk8Lnqm1rTBtCaLeb4ANvMYbDDHAa7zGGwx5zbAF8wh8GXzGEQMIdByBwP4B5zGNxnDoOvmMPgAXMaAF8zh8E3zGEQMYdBzBwXYJ85DDrMYdBlDoMDRddHaT7kA20AfavRLaDvdD/hsInD94pujNg/8EGzf9SI2T9pxNSfFdVG1F/4oKm/asTU3zRi6kNFN0fUR3zQ1N81YuofGjH1sXo6kcsM/3hyy1Q4oOxy+8nwm+L8A0V2TWZ42mPw3sFwIihiIyNjX+QGxp0cDBwMyQUbGdicNjNIMzFogVhbFRn5OJg4IGwlBgk2MJvDaTdHA/MBBiYGTiCPy2k3AwODA4THzOCyUYWxIzBig0NHBJinBuLt4mhgYGRx6EgOAQtGAgHQOAEOJh6tHYz/Wzew9G5kAqplTXEBAKkuJjM=) format('woff'),
                    url('https://storage.googleapis.com/devnpfieldapp.appspot.com/WebFonts/hinted-PoiretOne-Regular.ttf') format('truetype'),
                    url('https://storage.googleapis.com/devnpfieldapp.appspot.com/WebFonts/hinted-PoiretOne-Regular.svg#PoiretOne-Regular') format('svg');
                font-weight: normal;
                font-style: normal;
            }

            @font-face
            {
                font-family: 'Yellowtail';
                src: url('https://storage.googleapis.com/devnpfieldapp.appspot.com/WebFonts/hinted-Yellowtail.eot');
                font-weight: normal;
                font-style: normal;
            }
            @font-face
            {
                font-family: 'Yellowtail';
                src: url(data:application/font-woff2;charset=utf-8;base64,) format('woff2'),
                    url(data:application/font-woff;charset=utf-8;base64,) format('woff'),
                    url('https://storage.googleapis.com/devnpfieldapp.appspot.com/WebFonts/hinted-Yellowtail.ttf') format('truetype'),
                    url('https://storage.googleapis.com/devnpfieldapp.appspot.com/WebFonts/hinted-Yellowtail.svg#Yellowtail') format('svg');
                font-weight: normal;
                font-style: normal;
            }

            @font-face
            {
                font-family: 'Bitter';
                src: url('https://storage.googleapis.com/devnpfieldapp.appspot.com/WebFonts/hinted-Bitter-Regular.eot');
                font-weight: normal;
                font-style: normal;
            }
            @font-face
            {
                font-family: 'Bitter';
                src: url(data:application/font-woff2;charset=utf-8;base64,) format('woff2'),
                    url(data:application/font-woff;charset=utf-8;base64,) format('woff'),
                    url('https://storage.googleapis.com/devnpfieldapp.appspot.com/WebFonts/hinted-Bitter-Regular.ttf') format('truetype'),
                    url('https://storage.googleapis.com/devnpfieldapp.appspot.com/WebFonts/hinted-Bitter-Regular.svg#Bitter-Regular') format('svg');
                font-weight: normal;
                font-style: normal;
            }

            @font-face
            {
                font-family: 'Roboto Condensed';
                src: url('https://storage.googleapis.com/devnpfieldapp.appspot.com/WebFonts/hinted-RobotoCondensed-Regular.eot');
                font-weight: normal;
                font-style: normal;
            }
            @font-face
            {
                font-family: 'Roboto Condensed';
                src: url(data:application/font-woff2;charset=utf-8;base64,) format('woff2'),
                    url(data:application/font-woff;charset=utf-8;base64,) format('woff'),
                    url('https://storage.googleapis.com/devnpfieldapp.appspot.com/WebFonts/hinted-RobotoCondensed-Regular.ttf') format('truetype'),
                    url('https://storage.googleapis.com/devnpfieldapp.appspot.com/WebFonts/hinted-RobotoCondensed-Regular.svg#RobotoCondensed-Regular') format('svg');
                font-weight: normal;
                font-style: normal;
            }

            @font-face
            {
                font-family: 'Roboto';
                src: url('https://storage.googleapis.com/devnpfieldapp.appspot.com/WebFonts/hinted-Roboto-Regular.eot');
                font-weight: normal;
                font-style: normal;
            }
            @font-face
            {
                font-family: 'Roboto';
                src: url(data:application/font-woff2;charset=utf-8;base64,) format('woff2'),
                    url(data:application/font-woff;charset=utf-8;base64,) format('woff'),
                    url('https://storage.googleapis.com/devnpfieldapp.appspot.com/WebFonts/hinted-Roboto-Regular.ttf') format('truetype'),
                    url('https://storage.googleapis.com/devnpfieldapp.appspot.com/WebFonts/hinted-Roboto-Regular.svg#Roboto-Regular') format('svg');
                font-weight: normal;
                font-style: normal;
            }

            @font-face
            {
                font-family: 'EB Garamond';
                src: url('https://storage.googleapis.com/devnpfieldapp.appspot.com/WebFonts/hinted-EBGaramond.eot');
                font-weight: normal;
                font-style: normal;
            }
            @font-face
            {
                font-family: 'EB Garamond';
                src: url(data:application/font-woff2;charset=utf-8;base64,) format('woff2'),
                    url(data:application/font-woff;charset=utf-8;base64,) format('woff'),
                    url('https://storage.googleapis.com/devnpfieldapp.appspot.com/WebFonts/hinted-EBGaramond.ttf') format('truetype'),
                    url('https://storage.googleapis.com/devnpfieldapp.appspot.com/WebFonts/hinted-EBGaramond.svg#EBGaramond') format('svg');
                font-weight: normal;
                font-style: normal;
            }

            @font-face
            {
                font-family: 'times_new_romanregular';
                src: url('/bootstrap/fonts/times-webfont.eot');
                src: url('/bootstrap/fonts/times-webfont.eot?#iefix') format('embedded-opentype'),
                    url('/bootstrap/fonts/times-webfont.woff2') format('woff2'),
                    url('/bootstrap/fonts/times-webfont.woff') format('woff'),
                    url('/bootstrap/fonts/times-webfont.ttf') format('truetype'),
                    url('/bootstrap/fonts/times-webfont.svg#times_new_romanregular') format('svg');
                font-weight: normal;
                font-style: normal;
            }
            @font-face
            {
                font-family: 'droid_sansbold';
                src: url('/bootstrap/fonts/droidsans-bold-webfont.eot');
                src: url('/bootstrap/fonts/droidsans-bold-webfont.eot?#iefix') format('embedded-opentype'),
                    url('/bootstrap/fonts/droidsans-bold-webfont.woff2') format('woff2'),
                    url('/bootstrap/fonts/droidsans-bold-webfont.woff') format('woff'),
                    url('/bootstrap/fonts/droidsans-bold-webfont.ttf') format('truetype'),
                    url('/bootstrap/fonts/droidsans-bold-webfont.svg#droid_sansbold') format('svg');
                font-weight: normal;
                font-style: normal;
            }
            @font-face
            {
                font-family: 'latolight';
                src: url('/bootstrap/fonts/lato-light-webfont.eot');
                src: url('/bootstrap/fonts/lato-light-webfont.eot?#iefix') format('embedded-opentype'),
                    url('/bootstrap/fonts/lato-light-webfont.woff2') format('woff2'),
                    url('/bootstrap/fonts/lato-light-webfont.woff') format('woff'),
                    url('/bootstrap/fonts/lato-light-webfont.ttf') format('truetype'),
                    url('/bootstrap/fonts/lato-light-webfont.svg#latolight') format('svg');
                font-weight: normal;
                font-style: normal;
            }
            @font-face
            {
                font-family: 'latomedium';
                src: url('/bootstrap/fonts/lato-medium-webfont.eot');
                src: url('/bootstrap/fonts/lato-medium-webfont.eot?#iefix') format('embedded-opentype'),
                    url('/bootstrap/fonts/lato-medium-webfont.woff2') format('woff2'),
                    url('/bootstrap/fonts/lato-medium-webfont.woff') format('woff'),
                    url('/bootstrap/fonts/lato-medium-webfont.ttf') format('truetype'),
                    url('/bootstrap/fonts/lato-medium-webfont.svg#latomedium') format('svg');
                font-weight: normal;
                font-style: normal;
            }
            @font-face
            {
                font-family: 'latoregular';
                src: url('/bootstrap/fonts/lato-regular-webfont.eot');
                src: url('/bootstrap/fonts/lato-regular-webfont.eot?#iefix') format('embedded-opentype'),
                    url('/bootstrap/fonts/lato-regular-webfont.woff2') format('woff2'),
                    url('/bootstrap/fonts/lato-regular-webfont.woff') format('woff'),
                    url('/bootstrap/fonts/lato-regular-webfont.ttf') format('truetype'),
                    url('/bootstrap/fonts/lato-regular-webfont.svg#latoregular') format('svg');
                font-weight: normal;
                font-style: normal;
            }
            body
            {
                font-family: "Ubuntu", Arial, Helvetica, sans-serif;
                color: #ffffff;
                background: #353030;
            }
            .upcoming_appointment_day
            {
                background: #867F7F;
                text-shadow: 0px 0px 0.1em #000;
                text-align: center;
            }
            @media(max-width:767px)
            {
                body > .container > .row > .col-xs-12 > h2
                {
                    margin-top: 0em;
                    text-align: center;
                }
                .upcoming_inner
                {
                    text-align: center;
                }
                .col-xs-0
                {
                    display: none;
                }
                .col-sm-1, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-10, .col-sm-11, .col-sm-12, .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12, .col-lg-1, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-10, .col-lg-11, .col-lg-12
                {
                    display: block;
                }
            }



            @media(min-width:768px)
            {
                body > .container > .row > .col-xs-12 > h2
                {
                    margin-top: 0em;
                    text-align: center;
                }
                .upcoming_inner
                {
                    text-align: center;
                }
                .col-sm-0
                {
                    display: none;
                }
                .col-xs-1, .col-xs-2, .col-xs-3, .col-xs-4, .col-xs-5, .col-xs-6, .col-xs-7, .col-xs-8, .col-xs-9, .col-xs-10, .col-xs-11, .col-xs-12, .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12, .col-lg-1, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-10, .col-lg-11, .col-lg-12
                {
                    display: block;
                }
            }
            @media(min-width:992px)
            {
                body > .container > .row > .col-xs-12 > h2
                {
                    margin-top: 1.75em;
                    text-align: right;
                }
                .upcoming_inner
                {
                    text-align: left;
                }
                .col-md-0
                {
                    display: none;
                }
                .col-xs-1, .col-xs-2, .col-xs-3, .col-xs-4, .col-xs-5, .col-xs-6, .col-xs-7, .col-xs-8, .col-xs-9, .col-xs-10, .col-xs-11, .col-xs-12, .col-sm-1, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-10, .col-sm-11, .col-sm-12, .col-lg-1, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-10, .col-lg-11, .col-lg-12
                {
                    display: block;
                }
            }
            @media(min-width:1200px)
            {
                body > .container > .row > .col-xs-12 > h2
                {
                    margin-top: 1.75em;
                    text-align: right;
                }
                .upcoming_inner
                {
                    text-align: left;
                }
                #dropdownMenuAdditionalActions
                {
                    width: 16em;
                }
                #mainbtns .open>.dropdown-menu
                {
                    width: 24em;
                }
                .col-lg-0
                {
                    display: none;
                }
                .col-xs-1, .col-xs-2, .col-xs-3, .col-xs-4, .col-xs-5, .col-xs-6, .col-xs-7, .col-xs-8, .col-xs-9, .col-xs-10, .col-xs-11, .col-xs-12, .col-sm-1, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-10, .col-sm-11, .col-sm-12, .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12
                {
                    display: block;
                }
            }
            .modal-header
            {
                background-color: #D19F28 !important;
                text-align: center;
                text-shadow: 0px 0px 0.05em #000000;
            }
            .open li a
            {
                text-shadow: 0px 0px 0px #000;
            }
            .modal-body
            {
                background: #353030;
            }
            .bootstrap-dialog-message
            {
                color: #C6C2C2;
                text-shadow: 0px 0px 0.05em #000000;
            }
            input[type=text], input[type='text'], input[type="text"], input[type=email], input[type='email'], input[type="email"], #email_list, #cpf_email, #cpf_pass, #settings_edit_ta, #mosaic_pass, #sales_rabbit_pass
            {
                background-color: #575757;
                border: 0;
                color: #D8D1D1;
                text-indent: 0.5em;
            }
            #cpf_pass, #cpf_email, #mosaic_email, #mosaic_pass, #sales_rabbit_email, #sales_rabbit_pass
            {
                width: 100%;
                display: block;
                text-indent: 0.5em;
            }
            .dropdown > button, .open > button
            {
                background: #1F6FBD !important;
                color: #ffffff !important;
                text-shadow: 0px 0px 0.05em #000 !important;
            }
            .dropdown > button:hover, .open > button:hover
            {
                /*background: #1F6FBD !important;*/
                background-color: #1F6FBD !important;
                color: #ffffff !important;
                text-shadow: 0px 0px 0.05em #000 !important;
            }
            .dropdown > button:focus, .open > button:focus
            {
                /*background: #1F6FBD !important;*/
                background-color: #1F6FBD !important;
                color: #ffffff !important;
                text-shadow: 0px 0px 0.05em #000 !important;
            }
            .glyphicon-camera
            {
                color: #FB8A0B;
                font-size: 5em;
                cursor: pointer;
            }
            ::-webkit-input-placeholder
            {
                color: #000000;
            }
            :-moz-placeholder
            {
                color: #000000;
                opacity:  1;
            }
            ::-moz-placeholder
            {
                color: #000000;
                opacity:  1;
            }
            :-ms-input-placeholder
            {
                color: #909;
            }
            #apps_script_settings
            {
                cursor: pointer;
            }
            #apps_script_settings .img-responsive
            {
                  width: 1em;
                  display: inline-block;
                  margin-right: 0.8em;
            }
            #signout
            {
                text-align: right;
                line-height: 2em;
            }
            input[disabled]
            {
                background: #AAAAAA !important;
                color: #000000 !important;
                border: 1px solid #ff0000;
            }
            #lead_id
            {
                font-family: monospace, "MonoSpace";
            }
            .datepicker
            {
                color: #000000;
            }
            #cust_dob, #cust_signature_date, #cust_appointment_date
            {
                text-indent: 1em;
            }
            #app_area
            {
                opacity: 1.0;
                margin-top: -2em;
                padding-bottom: 1em;
                min-height: 1000px;
                padding-top: 1em;
            }
            .new_office_txt
            {
                width: 70%;
                margin-right: 1em;
                text-indent: 0.5em;
            }
            .textaligncenter
            {

            }
            #mainbtns .btn
            {
                margin-right: 0.25em;
                font-size: 0.9em;
            }
            .modal-footer
            {
                background: #353030;
                border-top: 1px solid #353030;
            }
            .exception_selection_cb
            {
                position: relative;
                left: 0.5em;
            }
            .inner_card_cancel
            {
                float: right;
                position: relative;
                top: -2em;
                font-weight: normal;
                color: #fff;
                font-size: 0.8em;
                background: rgb(211, 82, 82);
                padding-left: 0.5em;
                padding-right: 0.5em;
                padding-top: 0.25em;
                padding-bottom: 0.25em;
                border-radius: 0.4em;
                text-shadow: 0px 0px 0.05em #000;
                -webkit-user-select: none;
                cursor: pointer;
            }
            #ex_next_btn2
            {
                margin-top: 3em;
            }
            .qual_search_results
            {
                margin-top: 3em;
            }
            .packet_list_item
            {
                cursor: pointer;
                border-bottom: 1px solid rgba(255, 255, 255, 0.2);
                border-top: 1px solid rgba(255, 255, 255, 0.2);
                margin-top: 0.5em;
            }
            .expense_list_item
            {
                cursor: pointer;
                border-bottom: 1px solid rgba(255, 255, 255, 0.2);
                border-top: 1px solid rgba(255, 255, 255, 0.2);
                margin-top: 0.5em;
            }
            /*.packet_list_pending .packet_list_item:hover
            {
                color: #353030;
                background: #fff;
            }*/
            .dropdownAccRejPp
            {
                padding-top: 2em;
            }
            .row
            {
                padding: 0.2em;
            }
            #reject_marker
            {
                display: none;
            }
            .reject_reason
            {
                margin-left: 1em;
                color: #353030;
                overflow: hidden;
                width: 300px;
                height: auto;
            }
            .reject_entry
            {
                margin-left: 1em;
                margin-top: 2em;
            }
            .reject_entry .bootstrap-switch
            {
                vertical-align: top;
                line-height: 1em;
            }
            .pp_key
            {
                font-weight: bold;
            }
            .pp_value
            {
                padding: 0 1em;
                box-shadow: 0px 0px 1px #000;
                background: #434544;
                padding-top: 0.25em;
                padding-bottom: 0.25em;
            }
            .show-packet-btns .btn
            {
                margin-left: 1em;
                margin-top: 2em;
            }
            .testing_span
            {
                float: right;
                color: #E8FF3D;
                line-height: 2em;
                cursor: pointer;
            }
            #appt_date, #cancellation_date
            {
                text-indent: 1em;
            }
            #exception_date, #exception_date_testing
            {
                text-indent: 1em;
            }
            .upcoming_anchor
            {
                color: #33B7B7;
                font-size: 2em;
            }
            .upcoming_anchor:hover
            {
                color: #33B7B7 !important;
                text-decoration: none !important;
            }
            .no_appointments
            {
                color: #FF5454;
                font-size: 0.8em;
                text-align: center;
            }
            .upcoming_appointment_item
            {
                color: #F0BC1A;
                cursor: pointer;
                text-align: center;
            }
            .upcoming_card_label
            {
                color: #000000;
                font-family: Arial, Helvetica, sans-serif;
                font-weight: bold;
            }
            .upcoming_card_value
            {
                color: #000000;
                position: relative;
                display: block;
                top: -0.75em;
                margin-bottom: 0px;
            }
            .upcoming_appt_card
            {
                display: block;
                position: relative;
                z-index: 25;
                padding: 4%;
                background-color: #867F7F;
                box-shadow: inset 0 0 0.5em #000000;
                -moz-box-shadow:    inset 0 0 0.5em #000000;
                -webkit-box-shadow: inset 0 0 0.5em #000000;
                opacity: 0.0;

            }
            #mainbtns .dropdown
            {
                float: left;
            }
            #mainbtns .glyphicon-search
            {

            }
            #qual_search_note
            {
                  font-style: italic;
                  color: #54C5FF;
            }
            #project_management .symbola, #project_management_v2 .symbola
            {
                line-height: 0em;
                font-size: 1.4em;
            }
            #dropdownMenuAdditionalActions
            {
                  width: 5em;
                  border-radius: 4px;
                  border-top-left-radius: 0px;
                  border-bottom-left-radius: 0px;
                  background-image: -webkit-linear-gradient(top,#f0ad4e 0,#eb9316 100%) !important;
                  background-image: -o-linear-gradient(top,#f0ad4e 0,#eb9316 100%) !important;
                  background-image: -webkit-gradient(linear,left top,left bottom,from(#f0ad4e),to(#eb9316)) !important;
                  background-image: linear-gradient(to bottom,#f0ad4e 0,#eb9316 100%) !important;
                  background: -webkit-linear-gradient(top,#f0ad4e 0,#eb9316 100%) !important;
                  background: -o-linear-gradient(top,#f0ad4e 0,#eb9316 100%) !important;
                  background: -webkit-gradient(linear,left top,left bottom,from(#f0ad4e),to(#eb9316)) !important;
                  background: linear-gradient(to bottom,#f0ad4e 0,#eb9316 100%) !important;
                  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fff0ad4e', endColorstr='#ffeb9316', GradientType=0) !important;
                  filter: progid:DXImageTransform.Microsoft.gradient(enabled=false) !important;
                  background-repeat: repeat-x;
                  border-color: #e38d13;
                  text-shadow: 0px 0px 0px #000000  !important;
                  float: left;
                  left: -0.1em;
            }
            #qual_first, #qual_last, #qual_postal
            {
                text-indent: 0.5em;
            }
            .script_label .img-responsive
            {
                  display: inline-block;
                  height: 1.5em;
                  margin-right: 0.5em;
            }
            .script_label
            {
                font-size: 1.5em;
            }
            .script_description
            {
                  width: 92.5%;
                  left: 7.5%;
                  position: relative;
                  font-style: italic;
                  color: #D5CDCD;
            }
            .script_url
            {
                  width: 92.5%;
                  left: 7.5%;
                  position: relative;
                  font-family: monospace;
                  color: #229B7F;
            }
            .script_changer
            {
                text-align: right;
                color: #DB7777;
                cursor: pointer;
            }
            .clist_title
            {
                font-size: 2em;
                text-align: left !important;
            }
            .no_surveys, .no_questions
            {
                margin-left: auto;
                margin-right: auto;
                position: relative;
                display: block;
                width: 25%;
                min-width: 200px;
                text-shadow: 0px 0px 0.1em #000;
                -webkit-user-select: none;
            }
            #checklist_button_menu_main, #checklist_button_menu_add
            {
                background: rgba(69, 68, 68, 0.5);
                padding-top: 0.5em;
                padding-bottom: 0.5em;
                padding-left: 1em;
                padding-right: 1em;
                box-shadow: inset 0px 0px 0.5px 0.5px rgba(0, 0, 0, 1);
            }
            #checklist_button_menu_add
            {
                display: none;
                opacity: 0.0;
            }
            .checklist_inner_view_main
            {
                min-height: 150px;
            }
            .optional_time_span
            {
                  padding: 0.2em;
                  padding-left: 0.5em;
                  padding-right: 0.5em;
                  text-shadow: 0px 0px 0.1em #000;
                  cursor: pointer;
                  -webkit-user-select: none;
                  float: right;
                  margin-left: 0.5em;
                  position: relative;
                  top: -43.5em;
            }
            #show_add_st_dt, #show_add_et_dt
            {
                opacity: 0.0;
                float: right;
            }
            .picker_for_show_add_st
            {
                margin-top: -9.75em;
                margin-left: 30em;
            }
            .picker_for_show_add_et
            {
                margin-top: -9.75em;
                margin-left: 23em;
            }
            .picker_for_show_add_st:before, .picker_for_show_add_et:before, .picker_for_show_add_st:after, .picker_for_show_add_et:after
            {
                display: none;
            }
            .checklist_inner_view_add .glyphicon-time
            {
                float: right;
                top: -28.5em;
                left: 14.5em;
            }
            .start-clock
            {
                right: 6.5em;
                display: block;
                width: 7.2em;
                text-align: right;
                position: relative;
                z-index: 5;
                left: 8.1em !important;
            }
            .end-clock, .start-clock
            {
                cursor: pointer;
            }
            .end-clock, .start-clock, .optional_time_span, #cancel_time_config
            {
                display: none;
            }
            #enable_time_config
            {
                float: right;
                z-index: 100;
                position: relative;
            }
            #enable_time_config_cb, #cancel_time_config_cb
            {
                position: relative;
                top: 0.2em;
            }
            #cancel_time_config
            {
                clear: both;
                float: right;
                color: #F35D5D;
                top: -28em;
                position: relative;
            }
            .create_clist_triggers
            {
                width: 50%;
                float: left;
                min-height: 400px;
                max-height: 450px;
                overflow: hidden;
            }
            .create_clist_triggers_list
            {
                margin-top: 1.5em;
                margin-left: -3em;
                text-indent: 0.3em;
            }
            .filter_li_item
            {
                list-style-type: none;
            }
            .filter_li_item input
            {
                position: relative;
                margin-left: 0.5em;
                top: 0.25em;
            }
            .end-time, .start-time
            {
                float: right;
                clear: both;
                opacity: 0.0;
                top: -27em;
                position: relative;
            }
            .popover_for_end-time
            {
                margin-left: -1.8em;
                margin-top: -1.5em !important;
            }
            .popover_for_start-time
            {
                margin-top: -3em !important;
                margin-left: -9em;
            }
            .popover_for_start-time > .arrow, .popover_for_end-time > .arrow
            {
                display: none;
            }
            .inner_buttons_add
            {
                position: relative;
                top: -4em;
                clear: both;
            }
            .inner_buttons_add button
            {
                width: 90%;
                display: block;
                margin-left: auto;
                margin-right: auto;
            }
            #button66, #button666
            {
                width: 80%;
                display: block;
                position: relative;
                margin-top: 3em;
                margin-bottom: 2em;
            }
            .edit_checklist_name
            {
                font-size: 2.0em;
                background: #5A5A5A;
                text-indent: 0.4em;
                padding-bottom: 0.1em;
                padding-top: 0.1em;
                border-radius: 0.15em;
            }
            .edit_checklist_actions_btns
            {
                top: -4em;
                border-radius: 0.15em;
                position: relative;
                float: right;
                background: #389BA4;
                padding-left: 0.75em;
                padding-right: 0.75em;
                min-height: 1.5em;
                min-width: 7.5em;

            }
            .manageclistrow > hr
            {
                clear: both;
            }
            .edit_checklist_actions_btns .glyphicon
            {
                cursor: pointer;
                text-shadow: 0px 0px 0.1em #000;
                padding-right: 0.5em;
            }
            .edit_checklist_actions_btns .glyphicon:hover
            {
                text-shadow: 0px 0px 0.4em #000;
                -webkit-transition: all 0.5s ease-out;  /* Android 2.1+, Chrome 1-25, iOS 3.2-6.1, Safari 3.2-6  */
                transition: all 0.5s ease-out;  /* Chrome 26, Firefox 16+, iOS 7+, IE 10+, Opera, Safari 6.1+  */
            }
            .edit_active_filters_ul
            {
                list-style-type: none;
                width: 40%;
            }
            .edit_potential_filters  ul
            {
                list-style-type: none;
                width: 40%;
            }
            .edit_filters_potential ul
            {
                list-style-type: none;
            }
            .edit_active_filters_ul li
            {
            }
            #plus_new_q
            {
                width: 97%;
                margin-left: auto;
                margin-right: auto;
                display: block;
            }
            .questioneditor_inner_view_main
            {
                  margin-top: 3em;
            }
            .question_row
            {
                left: 1em;
                position: relative;
                width: 98%;
                background: #645D5D;
                border-radius: 0.5em;
                padding-top: 0.5em;
                margin-bottom: 1.25em;
                box-shadow: 0px 0px 0.25em #000;
                -webkit-transition: all 0.5s ease-out;  /* Android 2.1+, Chrome 1-25, iOS 3.2-6.1, Safari 3.2-6  */
                transition: all 0.5s ease-out;  /* Chrome 26, Firefox 16+, iOS 7+, IE 10+, Opera, Safari 6.1+  */
            }
            .question_row:hover
            {
                box-shadow: 0px 0px 0.5em #000;
            }
            .question_type_dropdown
            {
                top: -0.25em;
            }
            #checklist_builder
            {
            }
            .q_icon_wrapper
            {
                top: -0.5em;
                border-radius: 0.15em;
                position: relative;
                float: right;
                background: #389BA4;
                padding-left: 0.75em;
                padding-right: 0.75em;
                min-height: 1.5em;
                min-width: 7.5em;
            }
            .q_icon_wrapper .glyphicon
            {
                cursor: pointer;
                text-shadow: 0px 0px 0.1em #000;
                padding-right: 0.5em;
            }
            .q_icon_wrapper .glyphicon:hover
            {
                -webkit-transition: all 0.5s ease-out;  /* Android 2.1+, Chrome 1-25, iOS 3.2-6.1, Safari 3.2-6  */
                transition: all 0.5s ease-out;  /* Chrome 26, Firefox 16+, iOS 7+, IE 10+, Opera, Safari 6.1+  */
            }

            /* the back button */
            .add_new_question .btn-danger
            {
                top: 3em;
                position: relative;
            }
            .temp_popup_msg, .temp_set_choices, .open_ended_dep_vals, .temp_set_dependency_values
            {
                display: block;
                width: 80%;
                margin-top: 1em;
                background-color: #575757;
                border: 0;
                color: #D8D1D1;
                padding-left: 0.5em;
                min-height: 10em;
            }
            #checkbox_value_selector
            {
                margin-top: 1em;
            }
            .branched_beneath
            {
                width: 92.5%;
                left: 7.5%;
            }
            .branched_by_entity
            {
                background: #D0810E;
            }
            .dependency_popup
            {
                background: #0E0E0E;
                width: 12em;
                padding: 1em;
                margin-left: 7.75em;
                margin-top: 1.5em;
            }
            .clist_labels_row
            {
                background: #267257;
                padding-top: 0.25em;
                padding-bottom: 0.5em;
                text-shadow: 0px 0px 0.1em #000;
            }
            .add_fund_continue_btn
            {
                margin-top: 1em;
            }
            #temp_add_new_fund_name, #temp_add_new_fund_group, #temp_add_new_payscale
            {
                text-indent: 0.5em;
            }
            .temp_list_of_funds_ul
            {
                border: 1px solid rgba(28, 195, 222, 0.5);
                padding-top: 1em;
                padding-bottom: 1em;
                list-style-type: circle;
                width: 75%;
            }
            .managefundingsourcesrow li .glyphicon-pencil
            {
                float: right;
                margin-right: 1em;
                cursor: pointer;
            }
            .temp_list_of_funds_ul li
            {
                -webkit-user-select: none;
                cursor: default;
                margin-bottom: 0.25em;
                border-bottom: 1px solid #000;
            }
            .fund_group_div
            {
                width: 75%;
                border: 1px solid rgba(129, 219, 42, 0.6);
                padding-top: 1em;
                padding-bottom: 1em;
                list-style-type: circle;
                margin-top: 4em;
            }
            .fund_group_div h5 .fund_group_label
            {
                background: #649720;
                padding-left: 0.5em;
                padding-right: 0.5em;
                padding-top: 0.25em;
                padding-bottom: 0.25em;
                top: -1.75em;
                display: inline-block;
                position: relative;
                min-width: 25%;
                border-radius: 0px 0px 0.5em 0px;
                text-align: center;
                text-shadow: 0px 0px 0.1em #636363;
                cursor: default;
            }
            .fund_group_div ul
            {
                list-style-type: circle;
            }
            .fund_group_up_down_btns
            {
                margin-top: -2em;
                position: relative;
                top: 3em;
                float: right;
            }
            .fund_group_up_down_btns .btn
            {
                background: #649720;
                margin-left: 0.5em;
            }
            .fund_group_ul li
            {
                background: transparent;
                background: rgba(0, 0, 0, 0.0);
                cursor: default;
                text-indent: 0.5em;
                margin-right: 2.5%;
                margin-bottom: 0.5em;
                text-shadow: 0px 0px 0.0em #000000;
                -webkit-transition: all 0.1s ease-out;  /* Android 2.1+, Chrome 1-25, iOS 3.2-6.1, Safari 3.2-6  */
                transition: all 0.1s ease-out;  /* Chrome 26, Firefox 16+, iOS 7+, IE 10+, Opera, Safari 6.1+  */
            }
            .fund_group_ul .pending_selected
            {
                background: #106A95;
                text-shadow: 0px 0px 0.1em #000000;
                -webkit-transition: all 0.1s ease-out;  /* Android 2.1+, Chrome 1-25, iOS 3.2-6.1, Safari 3.2-6  */
                transition: all 0.1s ease-out;  /* Chrome 26, Firefox 16+, iOS 7+, IE 10+, Opera, Safari 6.1+  */
            }
            .curr_funding_group_header
            {
                top: 1.5em;
                position: relative;
            }
            .fund_group_div > h5 > .glyphicon
            {
                float: right;
                left: -100.25%;
                position: relative;
                margin-top: -1.9em;
                cursor: pointer;
                background: #649720;
                padding-right: 0.5em;
                padding-left: 0.5em;
                padding-top: 0.25em;
                padding-bottom: 0.5em;
                text-shadow: 0px 0px 0.1em #000;
            }
            .fund_group_div > h5 > .glyphicon-trash
            {
                top: 1.9em;
            }
            .pending_changes_bubble
            {
                cursor: pointer;
                position: fixed;
                width: 14em;
                height: 1.5em;
                top: 3em;
                right: 2em;
                text-align: center;
                font-size: 1.5em;
                padding-left: 1em;
                padding-right: 1em;
                background: #1490A4;
                box-shadow: inset 0px 0px 0.25em #000000;
                text-shadow: 0px 0px 0.1em #000;
                -webkit-user-select: none;
                opacity: 0.0;
                -webkit-transition: all 0.5s ease-out;  /* Android 2.1+, Chrome 1-25, iOS 3.2-6.1, Safari 3.2-6  */
                transition: all 0.5s ease-out;  /* Chrome 26, Firefox 16+, iOS 7+, IE 10+, Opera, Safari 6.1+  */
            }
            #payscale_editor .glyphicon-align-left
            {
                -ms-transform: rotate(-90deg);
                -webkit-transform: rotate(-90deg);
                transform: rotate(-90deg);
                left: -0.5em;
                top: -0.25em;
            }
            #dropdownMenuSelSetting
            {
                margin-left: 0.5em;
            }
            .settings_ddown
            {
                left: 18em;
                top: -2.45em;
            }
            #settings_edit_ta
            {
                margin-top: -355px;
                display: none;
            }
            .settings_save_btn
            {
                margin-top: 0.5em;
            }
            .scale_row
            {
                background: #4A504B;
                text-shadow: 0px 0px 0.1em #000;
                padding-top: 0.75em;
                box-shadow: inset 0px 0px 0.25em #000;
                margin-left: 0.25em;
                margin-top: 0.5em;
            }
            .scale_row .glyphicon-user, .scale_row .glyphicon-edit
            {
                float: right;
                cursor: pointer;
                margin-right: 0.75em;
            }

            .scale_row > .payscale_title
            {
                float: left;
                cursor: pointer;
            }
            #ps_filter_lname, #ps_filter_fname
            {
                margin-right: 1em;
            }
            #ps_filter_fname, #ps_filter_lname, #ps_filter_rid
            {
                text-indent: 0.5em;
            }
            .manage_users_right_aligned_col, .configure_scale_values_right_aligned_col
            {
                border: 1px solid rgba(255, 255, 255, 0.15);
                padding-top: 1em;
                padding-bottom: 1em;
                border-radius: 0.25em;
            }
            .payscale_user_div
            {
                border: 1px solid rgba(51, 140, 206, 0.17);
                padding-left: 0.5em;
                padding-right: 0.5em;
                padding-top: 0.25em;
                margin-top: 0.5em;
                -webkit-user-select: none;
                cursor: default;
            }
            .payscale_user_div input
            {
                float: right;
            }
            .inner_users_div
            {
                width: 97.5%;
                left: 2.5%;
                position: relative;
                margin-top: 2em;
            }
            .manage_users_row
            {
                margin-top: -3px;
            }
            .manage_users_row .glyphicon-resize-vertical
            {
                float: right;
                margin-right: 1%;
                color: #1DABCC;
            }
            .audit_link
            {
                float: right;
                font-size: 0.75em;
                color: #E0EC0E;
                position: relative;
                left: 0.75em;
            }
            .scale_config_mini_header
            {
                font-size: 1.2em;
            }
            .header_tr_payscale
            {
                color: #11CFAB;
            }
            .payscale_config_tbl
            {
                border-spacing: 3em;
                border-collapse: inherit;
                -webkit-user-select: none;
                cursor: default;
            }
            .cell_cursor
            {
                cursor: cell;
            }
            .scale_row .glyphicon-pencil
            {
                float: left;
                position: relative;
                margin-left: -1.5em;
                left: -1.5em;
                color: #D7C50E;
            }
            #app_area > .col-xs-10 > h2 > .glyphicon-floppy-save
            {
                margin-right: 0.25em;
                top: 0.2em;
            }
            .admin_pp_labels_div_pending
            {
                top: 0.5em;
                position: relative;
            }
            .pp_rep_id_hint
            {
                font-size: 0.8em;
                margin-left: 0.5em;
            }
            .admin_pp_labels_div_pending .label
            {
                text-shadow: 0px 0px 0.075em #000000;
                -webkit-user-select: none;
                cursor: default;
            }
            .admin_pp_labels_div_pending .label-success
            {
                background-color: #555356;
                background: #555356;
            }
            .admin_pp_labels_div_pending .lbltwo
            {
                margin-left: 14.5em;
            }
            .admin_pp_labels_div_pending .lblthree
            {
                margin-left: 16em;
            }
            .admin_pp_labels_div_pending .lblfour
            {
                margin-left: 14.25em;
            }
            .packet_list_date1, .packet_list_date2
            {
                font-size: 0.85em;
                line-height: 1.6em;
                color: #6ABCA5;
                left: 0em;
                cursor: default;
                -webkit-user-select: none;
            }
            .packet_list
            {
                margin-top: 1em;
            }
            .expense_list
            {
                margin-top: 1em;
            }
            #system_size
            {
                display: none;
                margin-top: 1em;
                text-indent: 0.5em;
            }
            .admin_pp_labels_div_pending .lblfive
            {
                float: right;
            }
            .admin_pp_labels_div_pending .lblsix
            {
                float: right;
            }
            .sys_size
            {
                float: right;
                color: #DEE411;
            }
            .defaultcursor
            {
                cursor: default;
            }
            .reject_reason
            {
                background: #585555;
                padding: 1.5%;
                border: 0px solid #000;
                color: #ffffff;
            }
            .admin_pp_labels_div_pending .glyphicon-time
            {
                top: 0.2em;
            }
            .rejection_history_row > .col-xs-9
            {
                background: #454242;
                box-shadow: inset 0px 0px 0.25em #000;
                border-top: 2px solid rgba(0, 0, 0, 0.5);
                padding-top: 1em;
                padding-bottom: 1em;
            }
            .rej_history_header
            {
                text-align: center;
                background: #1B8ECA;
                padding-top: 0.2em;
                padding-bottom: 0.2em;
                text-shadow: 0px 0px 0.1em #000000;
                position: relative;
                top: 0.42em;
                z-index: 55;
                width: 75%;
                left: 25%;
            }
            .hist_lbl
            {
                color: #C2C7C1;
            }
            .hist_ul li
            {
                list-style-type: circle;
            }
            .rej_history_close
            {
                float: right;
                margin-bottom: 1em;
                margin-top: 1em;
            }
            .packet_list_item .glyphicon-asterisk
            {
                font-size: 0.8em;
                margin-right: 0.5em;
                color: #FFE742;
                top: -0.05em;
            }
            .packet_list_item .glyphicon-time
            {
                cursor: pointer;
            }
            .ps_alert_glyph
            {
                padding-left: 0.5em;
            }
            .ps_alert_name,
            .ps_alert_rep
            {
                font-size: 1.4em;
                text-decoration: underline;
            }
            .amnt_cnt
            {
                display: inline-block;
                width: 200px;
                vertical-align: middle;
                padding-bottom: 2em;
            }
            .rep_lst
            {
                margin-left: 15px;
            }
            .rep_dropdown
            {
                padding-top: 2em;
                margin-bottom: 2em;
            }
            #amnt_in
            {
                width: 140px;
            }
            .ledger_desc
            {
                background-color: #575757;
                border: 0px solid #000;
                padding: 0.5em;
            }
            .ledger_dropdown
            {
                width: 140px;
            }
            #edit_funding_sources > a > span
            {
                line-height: 0em;
                font-size: 1.25em;
                padding-right: 0.5em;
            }
            #edit_funding_sources img
            {
                max-width: 1em;
                max-height: 1em;
                float: left;
                margin-right: 0.75em;
                position: relative;
                top: 0.2em;
            }
            .taxable_cnt
            {
                float: right;
                position: relative;
                margin-right: 2em;
            }
            .taxable_cnt .glyphicon-question-sign
            {
                width: 3em;
            }
            .add_ledger_user_search_lbl
            {
                margin-left: 1.2em;
                margin-top: 3em;
            }
            #add_ledger_fname, #add_ledger_lname, #add_ledger_rid
            {
                text-indent: 0.5em;
                margin-right: 1.2em;
            }
            #add_ledger_fname
            {
                margin-left: 1.2em;
            }
            .ledger_submit
            {
                margin-top: 3em;
            }
            .reimbursement_title
            {
                margin-left: 0.5em;
            }
            .listed_users_div
            {
                width: 60%;
                margin-top: 2em;
                margin-left: 1em;
                border: 1px solid rgba(66, 167, 27, 0.2);
                padding: 0.5em;
            }
            .listed_users_div > div
            {
                margin-bottom: 1em;
                cursor: pointer;
                -webkit-user-select: none;
                background: rgba(0, 0, 0, 0.15);
                padding-top: 0.25em;
                padding-bottom: 0.25em;
                padding-left: 0.5em;
            }
            .listed_users_div > .user_chosen_add_ledger
            {
                cursor: default;
                -webkit-user-select: none;
                background: #0D7361;
                box-shadow: inset 0px 0px 0.1em #000000;
            }
            .listed_users_div .user_rid
            {
                margin-left: 1em;
                font-size: 0.8em;
                position: relative;
                top: -0.1em;
            }
            .listed_users_div .glyphicon-user
            {
                margin-right: 0.5em;
            }
            .listed_users_div .glyphicon-remove-sign
            {
                float: right;
                margin-right: 0.5em
            }
            .listed_users_div .glyphicon-ok
            {
                margin-right: 3em;
            }
            .taxable_date
            {
                float: right;
                width: 14em;
            }
            .taxable_date .eightpoint5, .dt_4 > input
            {
                text-indent: 0.5em;
            }
            .add_ledger_date_lbl
            {
                font-size: 0.8em;
                top: -5.5em;
                position: relative;
                left: 4em;
            }
            #add_ledger_taxable_cb
            {
                position: relative;
                z-index: 25;
            }
            .officerow .glyphicon-pencil
            {
                margin-right: 1em;
                color: #E8FF3D;
                cursor: pointer;
            }
            .add_trans_label
            {
                background-color: #5cb85c;
                font-size: 1.25em;
                text-shadow: 0px 0px 0.05em #000;
                cursor: pointer;
                -webkit-user-select: none;
                box-shadow: inset 0em 0em 0.35em #000000;
            }
            .trans_check_preview
            {
                font-size: 1.25em;
                text-shadow: 0px 0px 0.05em #000;
                cursor: pointer;
                -webkit-user-select: none;
                box-shadow: inset 0em 0em 0.25em #000000;
                margin-left: 1em;
                padding-top: 0.3em;
                padding-bottom: 0.3em;
            }
            .trans_expense_approve
            {
                font-size: 1.25em;
                text-shadow: 0px 0px 0.05em #000;
                cursor: pointer;
                -webkit-user-select: none;
                box-shadow: inset 0em 0em 0.25em #000000;
                margin-left: 1em;
                padding-top: 0.3em;
                padding-bottom: 0.3em;
            }
            .trans_check_preview .glyphicon-file
            {
                -ms-transform: rotate(-90deg) scaleY(-1);
                -webkit-transform: rotate(-90deg) scaleY(-1);
                transform: rotate(-90deg) scaley(-1);
                margin-right: 0.25em;
            }
            .trans_expense_approve .glyphicon-briefcase
            {
                margin-right: 0.25em;
            }
            .trans_check_preview .glyphicon-usd
            {
                font-size: 0.4em;
                left: -2.7em;
                top: -0.35em;
                color: #69C018;
                text-shadow: 0px 0px 0px #000000;
            }
            .trans_check_preview .glyphicon-plus
            {
                font-size: 0.8em;
                top: -0.05em;
            }
            .trans_expense_approve .glyphicon-usd
            {
                font-size: 0.7em;
                left: -1.6em;
                top: -0.05em;
                color: #69C018;
                text-shadow: 0px 0px 0px #000000;
            }
            .label-expenses
            {
                background-color: #277786;
            }
            .expense_labels > .col-xs-2 > .label-warning, .expense_labels > .col-xs-3 > .label-warning
            {
                background-color: #277786;
            }
            .paycheck_user
            {
                border-bottom: 1px solid rgba(255, 255, 255, 0.2);
                background: rgba(255, 255, 255, 0.0);
                cursor: pointer;
                -webkit-transition: all 0.5s ease-out;  /* Android 2.1+, Chrome 1-25, iOS 3.2-6.1, Safari 3.2-6  */
                transition: all 0.5s ease-out;  /* Chrome 26, Firefox 16+, iOS 7+, IE 10+, Opera, Safari 6.1+  */
            }
            .paycheck_user:hover
            {
                background: rgba(19, 75, 48, 1.0);
            }
            .active_paycheck_user
            {
                background: rgba(19, 75, 48, 1.0);
            }
            #paycheck_admin_fname, #paycheck_admin_lname, #paycheck_admin_rid_box
            {
                margin-right: 1em;
                padding: 0.5em;
                float: left;
                margin-bottom: 0.2em;
            }
            .paycheck_user_name .glyphicon-user
            {
                margin-right: 0.5em;
            }
            .ddspecial
            {
                float: left;
            }
            #check_no
            {
                text-indent: 0.5em;
                float: right;
            }
            .paycheck_actual_details
            {
                display: none;
            }
            .paycheck_rep_details button
            {
                    background: #0A62D0;
                    color: #ffffff;
                    text-shadow: 0px 0px 0.1em #000;
            }
            .line_item
            {
                margin-bottom: 0.5em;
                border-bottom: 1px solid rgba(255, 255, 255, 0.1);
            }
            .line_item, .desc_tbl
            {
                width: 100%;
            }
            .line_item td, .desc_tbl td
            {
                width: 33.33%;
            }
            .desc_tbl
            {
                background: rgba(19, 75, 48, 1.0);
                padding-left: 1%;
                text-indent: 1em;
                position: relative;
                left: -1em;
                margin-bottom:
                font-weight: bold;
            }
            .paycheck_details_row
            {
                width: 97.5%;
                left: 5.75%;
                position: relative;
                border: 1px solid rgba(19, 75, 48, 1.0);
                background: rgba(0, 0, 0, 0.2);
            }
            #set_check_no_button
            {
                float: right;
                clear: both;
                margin-bottom: 2em;
                margin-top: 1em;
                background: #0A62D0;
                color: #ffffff;
                text-shadow: 0px 0px 0.1em #000;
            }
            #mark_paid_button
            {
                float: right;
                clear: both;
                margin-bottom: 1em;
                background: #0A62D0;
                color: #ffffff;
                text-shadow: 0px 0px 0.1em #000;
            }
            .admin_paycheck_back_btn1 .btn
            {
                width: 10em;
                float: right;
                top: 2em;
                display: block;
                position: relative;
                left: -7%;
            }
            .change_check_no
            {
                float: right;
                font-size: 0.8em;
                position: relative;
                top: 0.5em;
                left: -1em;
                color: #DDE415;
                cursor: pointer;
                -webkit-user-select: none;
            }
            .payment_status_lbl
            {
                text-shadow: 0px 0px 0.05em #000;
                position: relative;
                left: -2em;
                border-radius: 0em;
                box-shadow: inset 0px 0px 0.1em #000;
                top: -0.5em;
            }
            .check_no_hint
            {
                float: right;
                font-size: 0.8em;
                position: relative;
                top: 0.4em;
                right: 1em;
            }
            .ball-check-no-set
            {
                display: block;
                position: relative;
                float: right;
                width: 1em;
                height: 1em;
                border-radius: 0.5em;
                background: #D8E00C;
                top: 0.2em;
                box-shadow: 0px 0px 0.2em #000;
            }
            .ball-paid
            {
                display: block;
                position: relative;
                float: right;
                width: 1em;
                height: 1em;
                border-radius: 0.5em;
                background: #0CCF3F;
                top: 0.2em;
                box-shadow: 0px 0px 0.2em #000;
            }
            .utility_provider_div
            {
                display: none;
                position: relative;
                top: -28em;
            }
            .proposal_formulas_div
            {
                display: none;
                position: relative;
                top: -28em;
            }
            .utility_provider_div > input
            {
                text-indent: 0.5em;
            }
            .glyphicon-nothing > img
            {
                width: 1.25em;
                display: inline-block;
                top: -0.35em;
                position: relative;
                margin-right: 0.95em;
                height: 1.2em;
                margin-left: -0.1em;
            }
            .third_party_label
            {
                text-align: center;
                background: #136E7D;
                text-shadow: 0px 0px 0.1em #000;
                color: #FFFFFF;
                clear: both;
            }
            #update_cpf_btn, #update_mosaic_btn, #update_sales_rabbit_btn
            {
                float: right;
                margin-bottom: 1em;
                margin-top: 1em;
            }
            .manage_surveyors_access_glyph
            {
                color: #5BC0DE;
                margin-right: 0.5em;
                cursor: pointer;
                text-shadow: 0px 0px 0.1em #000;
            }
            .surveyor_perms_container
            {
                background: #211F1F;
                width: 80%;
                margin-left: 2em;
                margin-top: 0.5em;
                padding-bottom: 1em;
            }
            .surveyor_perms_container > span
            {
                text-align: center;
                width: 100%;
                display: inline-block;
                background: #09543B;
                margin-top: 0.5em;
                text-shadow: 0px 0px 0.25em #000;
            }
            .surveyor_perm_item
            {
                margin-top: 0.5em;
                margin-bottom: 0.5em;
                margin-left: 0.5em;
            }
            .surveyor_perm_item input
            {
                margin-right: 0.5em;
            }
            .outer_labels_cust_prog_div button
            {
                width: 6.25%;
                margin-left: 0.25em;
                font-size: 0.8em;
            }
            .step_superfluous
            {
                font-size: 0.75em;
            }
            .cust_prog_main_lbl
            {
                font-size: 1.5em;
                margin-top: 0.5em;
                margin-bottom: 0.5em;
                background: #3D4B67;
                width: 90.75%;
                text-indent: 0.5em;
                text-shadow: 0px 0px 0.1em #000;
                padding-bottom: 0.2em;
            }
            .cust_prog_cust_name
            {
                width: 86.7%;
                border-bottom: 1px solid rgb(54, 77, 109);
                padding-bottom: 0.75em;
                border-top: 1px solid rgb(54, 77, 109);
                padding-top: 0.25em;
                padding-left: 0.25em;
                text-shadow: 0px 0px 0.1em #000;
                -webkit-user-select: none;
                cursor: pointer;
            }
            .cust_prog_cust_name_actual
            {
                background: #436988;
                padding-left: 0.5em;
                padding-right: 0.5em;
                padding-top: 0.25em;
                padding-bottom: 0.25em;
                margin-top: 0.25em;
                display: inline-block;
            }
            .customer_progress_outer .cust_prog_days_since, .customer_progress_outer .permit_rej_cnt
            {
                display: inline-block;
                min-width: 10px;
                padding: 3px 7px;
                font-size: 12px;
                font-weight: 700;
                line-height: 1;
                color: #fff;
                text-align: center;
                white-space: nowrap;
                vertical-align: baseline;
                background-color: #777;
                border-radius: 10px;
                height: 2.25em;
                border-radius: 0em;
                top: -0.1em;
                position: relative;
                line-height: 1.75em;
                text-shadow: 0px 0px 0.1em #000000;
            }
            .customer_progress_outer .cust_prog_days_since
            {
                float: left;
                top: 0.3em;
            }
            .in_the_red
            {
                background: #D04B4B !important;
            }
            .in_the_yellow
            {
                background: #CEC01B !important;
                color: #403D3D !important;
                text-shadow: 0px 0px 0px #000 !important;
            }
            .in_the_green
            {
                background: #059454 !important;
            }
            .seventy_five_percent
            {
                width: 75%;
            }
            .sixty_percent
            {
                width: 60%;
            }
            .forty_five_percent
            {
                width: 45%;
            }
            .progression_arrow
            {
                font-size: 3em;
                line-height: 0em;
                position: relative;
                display: inline-block;
                background-color: #108444;
                padding-bottom: 0.3em;
                float: right;
            }
            .progression_arrow:hover, .progression_arrow:active, .progression_arrow:focus
            {
                background-color: #108444 !important;
            }
            .prompt_for_progression
            {
                background: rgba(31, 29, 29, 0.9);
                padding-top: 0.5em;
                margin-top: 0.25em;
                padding-left: 1em;
            }
            .progression_arrow:active, .progression_arrow:focus
            {
                outline: none !important;
            }
            .prompt_for_progression .btn-success
            {
                margin-bottom: 1em;
            }
            .prompt_for_progression .btn-danger
            {
                margin-bottom: 1em;
                margin-left: 0.75em;
            }
            .prompt_for_progression .btn-primary
            {
                margin-bottom: 1em;
                margin-left: 0.75em;
            }
            .outer_labels_cust_prog_div > .btn:hover, .outer_labels_cust_prog_div > .btn:active, .outer_labels_cust_prog_div > .btn:focus
            {
                color: #fff !important;
            }
            #search_cust_first, #search_cust_last, #search_cust_postal
            {
                display: block;
                margin-bottom: 0.5em;
                text-indent: 0.5em;
            }
            .customer_progress_outer .glyphicon-exclamation-sign
            {
                float: right;
                top: 0.75em;
                color: #E0EC3F;
            }
            .admin_pp_approval_date_lbl
            {
                margin-top: 1em;
                display: none;
            }
            #pp_approval_date_from_admin
            {
                text-indent: 0.5em;
                display: none;
            }
            #dropdownMenuCityRejectApprovePermit, #dropdownMenuDelegateConstructionOrPanelUpgrade, #dropdownMenuPanelWorkRequiredOrNot, #dropdownMenuCPRejectOrApprove
            {
                margin-bottom: 1em;
            }
            .panel_cp_util_provider, .cust_prog_cust_name .date-scheduled
            {
                background: #3A3831;
                display: inline-block;
                padding-left: 0.5em;
                padding-right: 0.5em;
                padding-bottom: 0.25em;
                padding-top: 0.25em;
                text-shadow: 0px 0px 0.1em #000;
            }
            .cust_prog_cust_name .glyphicon-info-sign
            {
                float: right;
                top: 0.5em;
                display: none;
            }
            .prompt_for_progression .glyphicon-time
            {
                font-size: 1.5em;
                float: right;
                margin-right: 0.75em;
            }
            .prompt_for_progression .rejection_history_row
            {
                display: none;
                position: relative;
                margin-left: auto;
                margin-right: auto;
                left: -25%;
            }
            .prompt_for_progression .rej_history_header
            {
                display: none;
            }
            .cp_rejection_reason
            {
                background-color: #575757;
                border: 0px solid #000;
                padding: 0.5em;
                width: 30em;
                height: 5em;
                margin-bottom: 1em;
            }
            .prompt_for_progression .glyphicon-remove
            {
                color: #D9534F;
                text-shadow: 0px 0px 0.2em #000;
                top: -0.75em;
                left: 0.25em;
            }
            #cp_system_size
            {
                text-indent: 0.5em;
                display: block;
                margin-bottom: 1em;
            }
            .expense_list
            {
                display: inline-table;
                width: 100%;
            }
            .expense_labels
            {
                display: inline-table;
                width: 100%;
                margin-bottom: 15px;
                font-size: 1.2em;
                text-shadow: 0px 0px 0.1em #000;
            }
            .expense_row
            {
                display: inline-table;
                width: 100%;
                font-size: .95em;
                line-height: 2.35em;
                margin-top: 1.15em;
            }
            .approve_request
            {
                margin-right: 10px;
            }
            .deny_request
            {
                margin-right: 10px;
            }
            .view_request
            {
                margin-right: 10px;
            }
            .dropdown.dropdownActionSel
            {
                display: inline-block;
            }
            #customer_notes span
            {
                -moz-transform: scaleX(-1);
                -o-transform: scaleX(-1);
                -webkit-transform: scaleX(-1);
                transform: scaleX(-1);
                filter: FlipH;
                -ms-filter: "FlipH";
                font-size: 1.5em;
                margin-left: -0.5em;
                left: -0.6em;
                line-height: 0em;
                top: 0.1em;
            }
            #cust_notes_sbox, #cust_proposal_sbox
            {
                width: 25em;
                margin-left: 2em;
                margin-right: auto;
                display: block;
                height: 2em;
                text-indent: 0.5em;
            }
            .search_customer_notes_outer > h3, .search_proposal_outer > h3
            {
                margin-left: 1.25em;
            }
            .customer_search_results_notation
            {
                text-align: left;
                color: #05BF7E;
                font-size: 1.5em;
                margin-top: 2em;
                margin-bottom: 1em;
                border-bottom: 1px solid rgba(5, 191, 126, 0.3);
            }
            .customer_search_results_notation .glyphicon-search
            {
                margin-right: 0.25em;
            }
            .cust_notes_search_result, .cust_proposal_search_result
            {
                border: 1px solid rgba(15,195,226,0.25);
                padding-top: 0.5em;
                padding-bottom: 0.5em;
                cursor: pointer;
                text-shadow: 0px 0px 0em #000;
                -webkit-transition: all 0.5s ease-out;  /* Android 2.1+, Chrome 1-25, iOS 3.2-6.1, Safari 3.2-6  */
                transition: all 0.5s ease-out;  /* Chrome 26, Firefox 16+, iOS 7+, IE 10+, Opera, Safari 6.1+  */
            }
            .cust_notes_search_result:hover, .cust_proposal_search_result:hover, .activenote
            {
                border: 0px solid rgba(15, 195, 226, 0.25);
                background: rgba(15, 195, 226, 0.25);
                text-shadow: 0px 0px 0.1em #000;
            }
            .new_note_actual_content
            {
                width: 50%;
                border: 1px solid rgba(232, 168, 16, 0.3);
                padding: 1em;
                background: rgba(29, 26, 26, 0.5);
                margin-top: 1em;
            }
            .new_note_actual_content textarea
            {
                width: 100%;
                background: #575757;
                border: 0px;
                padding: 0.5em;
                height: 10em;
            }
            .camera-note-div
            {
                text-align: right;
            }
            .new_note_actual_content .btn-primary
            {
                top: -4.5em;
                position: relative;
            }
            .cust_note_details
            {
                background: rgba(0, 0, 0, 0.45);
                padding-left: 1em;
            }
            .note_author_timestamp
            {
                background: #265B47;
                left: -1em;
                position: relative;
                margin-top: 0.5em;
                text-indent: 1.25em;
            }
            .note_text_content
            {
                    background: rgba(232,234,154,1.0);
                    color: #000;
                    padding-left: 1em;
                    width: 75%;
                    padding-top: 0.5em;
                    padding-bottom: 0.75em;
                    min-height: 5em;
                    border-radius: 0.25em;
                    font-style: italic;
                    text-shadow: 0px 0px 0px #000000;
            }
            .cust_prog_cust_name .note_detail_content
            {
                background: rgba(138,70,70,0.0);
            }
            .note_detail_content > a > img
            {
                display: block;
                position: relative;
                width: 25%;
                box-shadow: 0px 0px 0.5em #000;
                margin-bottom: 2em;
            }
            .plus_new_note_div > .btn
            {
                margin-bottom: 1em;
            }
            .note_detail_content
            {
                background: rgba(138,70,70,0.2);
                padding: 1em;
            }
            .directory_user_div
            {
                margin-bottom: 1.5em;
                margin-left: 1.75em;
                border: 1px solid rgba(255, 255, 255, 0.25);
                padding: 0.5em;
            }
            .directory_emp_email
            {
                margin-left: 2em;
            }
            .ed_input_filters_div
            {
                margin-left: 1.75em;
                margin-top: 0.5em;
                margin-bottom: 3em;
            }
            .ed_input_filters_div input
            {
                text-indent: 0.5em;
            }
            .ed_input_filters_div .ed_fname_input
            {
                margin-right: 1em;
            }
            .note_ico, .hold_from_cust_progress, .save_me_ico
            {
                float: left;
                line-height: 2em;
                width: 2em;
                background: #252323;
                height: 2em;
                text-indent: 0.5em;
                top: 0.22em;
                box-shadow: inset 0px 0px 0.25em #000000;
            }
            .cust_prog_cust_name .fa-life-ring
            {
                top: -0.12em;
                position: relative;
                left: -0.45em;
            }
            .cust_prog_cust_name .cust_note_details, .cust
            {
                background: rgba(31, 29, 29, 0.9);
                margin-left: 0.1%;
                width: 99.9%;
            }
            /*.cust_prog_cust_name .glyphicon-ban-circle
            {
                float: left;
                cursor: pointer;
                padding: 0.3em;
                background: #534E54;
                font-size: 1.25em;
                text-shadow: 0px 0px 0.1em #000;
                top: 0.2em;
                line-height: 1em;
                box-shadow: inset 0px 0px 2px #000;
            }*/
            .archiving_reason, .saveme_reason
            {
                width: 80%;
                height: 4em;
                padding: 0.25em;
                background-color: #575757;
            }
            .archived_cust_row, .held_cust_row
            {
                width: 90.75%;
                border: 1px solid rgba(14, 232, 172, 0.28);
                left: 1em;
                position: relative;
                padding-top: 0.5em;
                padding-bottom: 0.5em;
                margin-bottom: 0.25em;
            }
            .archived_cust_row .glyphicon-repeat, .archived_cust_row .glyphicon-question-sign, .held_cust_row .glyphicon-thumbs-up, .held_cust_row .glyphicon-question-sign
            {
                float: right;
                cursor: pointer;
                margin-right: 0.5em;
                left: 0.5em;
                background: rgb(33, 125, 140);
                padding: 0.5em;
                border-radius: 0.25em;
                text-shadow: 0px 0px 0.1em #000000;
            }
            .archived_cust_search_filters input, .held_cust_search_filters input
            {
                margin-right: 1em;
                margin-bottom: 1em;
                text-indent: 0.25em;
                background-color: #575757;
                border: 0;
                color: #D8D1D1;
            }
            .archive_hint, .held_hint
            {
                position: relative;
                left: -0.25em;
                background: rgba(4, 132, 97, 0.28);
                width: 101%;
                margin-top: 1em;
                margin-bottom: 0.5em;
                padding-top: 0.5em;
                box-shadow: inset 0px 0px 5px #000000;
            }
            .hold_line_item input
            {
                margin-bottom: 1em;
                width: 25em;
                text-indent: 0.25em;
            }
            .hold_line_item span
            {
                color: #EF5959;
                margin-left: 1.25em;
            }
            .hold_cp_btn
            {
                background: #252525;
                height: 3em;
                box-shadow: inset 0px 0px 0.25em #000000;
                line-height: 0.75em;
                overflow: hidden;
            }
            .hold_cp_btn span
            {
                font-family: Symbola, "Symbola", Arial, Helvetica, sans-serif;
                top: 1.2em;
                font-size: 2.5em;
                position: relative;
            }
            .holds_ul
            {
                list-style-type: none;
            }
            .holds_ul > li > p
            {
                width: 80%;
                float: left;
                clear: both;
            }
            .holds_ul .glyphicon-remove
            {
                float: right;
                color: #DC6767;
                box-shadow: 0px 0px 0.1em #000;
                background: #393939;
                text-shadow: 0px 0px 0.1em #000;
                cursor: pointer;
            }
            .badgee
            {
                position: absolute;
                font-size: 0.6em;
                width: 3.5em;
                text-align: center;
                background: #E24646;
                line-height: 1.5em;
                border-radius: 0.5em;
                color: #fff;
                text-shadow: 0px 0px 0.05em #000;
                left: 11em;
                top: 20em;
                visibility: hidden;
            }
            #inbox .glyphicon-refresh
            {
                float: right;
                top: 0.2em;
                visibility: hidden;
            }
            .clist_title .glyphicon-envelope
            {
                color: #1590AF;
                top: 0.15em;
                left: 0.5em;
            }
            .inboxrow .glyphicon-pencil
            {
                font-size: 1.5em;
                float: right;
                top: -3.25em;
                background-color: #EFA946;
                width: 2em;
                text-align: center;
                padding-top: 0.25em;
                padding-bottom: 0.25em;
                border-radius: 0.15em;
                border: 1px inset #000;
                text-shadow: 0px 0px 0.05em #000;
                cursor: pointer;
            }
            .compose_row
            {
                clear: both;
                display: none;
                margin-top: -3em;
                overflow: hidden;
            }
            .inbox_inner_row
            {
                overflow: hidden;
                padding-top: 0em;
                padding-bottom: 0em;
                left: 1.5%;
                position: relative;
                background: #211E1E;
            }
            .hinted_users
            {
                border-top: 1px solid rgba(0, 0, 0, 0.4);
                border-left: 1px solid rgba(0, 0, 0, 0.4);
                border-right: 1px solid rgba(0, 0, 0, 0.4);
                display: none;
                padding: 1em;
                background: #2A3C48;
                top: 5.5em;
                position: absolute;
                box-shadow: inset 0px 0px 0.25em #000;
                position: absolute;
                z-index: 2;
            }
            .hinted_user
            {
                vertical-align: middle;
                display: table-cell;
                float: left;
                clear: both;
                cursor: pointer;
                -webkit-user-select: none;
                text-shadow: 0px 0px 0.1em #000;
                border: 1px solid rgba(0, 0, 0, 0.25);
            }
            .hinted_user img
            {
                width: 20%;
                float: left;
                margin-right: 1em;
                box-shadow: 0px 0px 0.25em #000;
            }
            .hinted_user p
            {
                position: relative;
                top: 0.75em;
            }
            .to_box
            {
                border: 1px solid rgba(0, 0, 0, 0.4);
                padding-top: 0.25em;
                padding-bottom: 0.25em;
                text-indent: 0.5em;
                clear: both;
                margin-top: -1em;
            }
            .compose_row textarea
            {
                width: 100%;
                background: #272525;
                border: 0px;
                padding: 0.5em;
                height: 10em;
                position: relative;
                top: -0.5em;
                z-index: 1;
            }
            .recipients_div
            {
                min-height: 40px;
                margin-bottom: 1em;
            }
            .recipients_div img
            {
                float: left;
                width: 40px;
                margin-right: 5px;
                box-shadow: 0px 0px 0.1em #000;
                position: relative;
                z-index: 54;
            }
            .hinted_users .glyphicon-remove
            {
                float: right;
                position: relative;
                overflow: visible;
                top: -1.4em;
                left: 1.4em;
                color: #CE3F3F;
                border: 1px solid rgba(0, 0, 0, 0.25);
                background: #2A3C48;
            }
            .remove_recipients
            {
                height: 0.8em;
            }
            .remove_recipients .glyphicon-remove
            {
                color: #CE3F3F;
                font-size: 0.8em;
                text-shadow: 0px 0px 0.1em #000;
                top: -5.25em;
                width: 45px;
                z-index: 55;
                cursor: pointer;
                margin-left: 0.2;
                left: -0.1em;
            }
            .compose_row .btn-success, .compose_row .btn-danger
            {
                float: right;
            }
            .compose_row .btn-danger
            {
                left: -0.25em;
                position: relative;
            }
            .msg_file_list, .inline_msg_file_list
            {
                clear: both;
                margin-top: 2em;
            }
            .thread_synopsis
            {
                font-style: italic;
            }
            .msg_icons
            {
                float: right;
            }
            .inbox_thread_item
            {
                margin-top: 0.5em;
                margin-bottom: 0.5em;
                cursor: pointer;
                padding-top: 0.75em;
                background: #313131;
                -webkit-transition: all 0.5s ease-out;  /* Android 2.1+, Chrome 1-25, iOS 3.2-6.1, Safari 3.2-6  */
                transition: all 0.5s ease-out;  /* Chrome 26, Firefox 16+, iOS 7+, IE 10+, Opera, Safari 6.1+  */
            }
            .unread_thread_item
            {
                background: #074C47;
            }
            .inbox_thread_item:hover
            {
                background: #1590AF;
            }
            .inbox_profile_thumb
            {
                position: relative;
                top: -0.35em;
            }
            .msg_attachment .glyphicon-paperclip, .msg_attachment a
            {
                cursor: pointer !important;
            }
            .msg_content hr
            {
                margin-top: 0px;
                margin-bottom: 0px;
                border-top: 1px solid rgba(21,144,175,0.25);
            }
            .inline_content_box
            {
                width: 100%;
                background: #272525;
                border: 0px;
                padding: 0.5em;
                height: 10em;
                position: relative;
                z-index: 1;
            }
            .msg_content .btn
            {
                font-size: 0.75em;
            }
            .msg_content .btn-success, .msg_content .btn-danger
            {
                float: right;
                margin-left: 0.5em;
            }
            .msg_row pre
            {
                word-break: break-all;
                background-color: #DEE09E;
                border: 0px solid #ccc;
                border-radius: 0px;
                overflow: hidden;
                white-space: normal;
                overflow: auto;
            }
            .hinted_users .glyphicon-remove
            {
                cursor: pointer;
            }
            #assume_symbola
            {
                font-family: 'Symbola', Symbola, Arial, Helvetica, sans-serif;
                font-size: 1.75em;
                margin-left: -0.1em;
                line-height: 0em;
                left: -0.05em;
                position: relative;
            }
            .override_row input
            {
                color: #D0C9C9;
                background: #252424;
                border: 1px solid rgba(0, 0, 0, 0.2);
                text-indent: 0.25em;
                width: 4em;
                margin-left: 0.25em;
            }
            .override_titlerow
            {
                background: #256586;
                text-shadow: 0px 0px 0.1em #000;
            }
            .override_row
            {
                border: 1px solid rgba(14, 14, 14, 0.5);
            }
            .override_row .alternate_ml
            {
                margin-left: 1em;
            }
            .override_row .standard_ml
            {
                margin-left: 1.5em;
            }
            .override_row .glyphicon-info-sign
            {
                margin-left: 0.5em;
            }
            .override_row .glyphicon
            {
                cursor: pointer;
                color: #0BBD8F;
            }
            .temp_span_override
            {
                display: block;
                margin-top: -1.5em;
            }
            .override_row .change_usr_box
            {
                border: 1px solid rgba(0, 0, 0, 0.5);
                text-indent: 0.5em;
                margin-top: 1em;
            }
            .override_row .btn-danger
            {
                display: block;
                margin-top: 0.5em;
            }
            #leaderboard .glyphicon
            {
                font-size: 1.2em;
                margin-left: -0.3em;
                left: 0.3em;
                top: -0.05em;
            }
            .lb_trophy
            {
                font-family: "Symbola", 'Symbola', Symbola, Arial, Helvetica, sans-serif;
            }
            .lb_dds .dropdown
            {
                display: inline-block;
                margin-right: 0.5em;
            }
            .lb_main_div
            {
                border: 1px solid rgba(30, 31, 31, 0.4);
                background: rgba(0, 0, 0, 0.1);
                margin-top: 2em;
            }
            .lb_plain_list
            {
                margin-top: 2em;
                margin-bottom: 0.5em;
            }
            .lb_plain_list > .row
            {
                background: rgba(9,67,74,0.4);
                margin-bottom: 0.25em;
                margin-top: 0.25em;
                box-shadow: inset 0px 0px 0.5em rgba(0,0,0,0.5);
            }
            .pl_ico
            {
                font-family: 'Symbola', Symbola, Arial, Helvetica, sans-serif;
                font-size: 1.5em;
                color: #EC961C;
            }
            .pl_cnt
            {
                font-family: Monospace, monospace, Arial, Helvetica, sans-serif;
                margin-right: 0.5em;
                background: rgba(51,49,49,0.5);
                padding: 0.5em;
                border: 1px solid rgba(0, 0, 0, 0.2);
            }
            .pl_name
            {

            }
            .mgr_override_annotation
            {
                color: #B9EA43;
                text-decoration: underline;
            }
            #dropdownMenuAddMgr
            {
                margin-top: 2em;
                margin-bottom: 2em;
            }
            .override_mgr_name
            {
                float: left;
                width: 300px;
                text-indent: 0.5em;
                margin-top: 1em;
                background: #5D5B5B;
            }
            .override_mgr_amt
            {
                float: left;
                width: 100px;
                text-indent: 0.5em;
                margin-top: 1em;
                background: #575757;
                position: relative;
                left: 3px;
            }
            .dropdown_div_mgr
            {
                clear: both;
            }
            .current_mgr_override_item
            {
                clear: both;
            }
            .current_mgr_override_item .glyphicon-remove
            {
                float: right;
                top: -1.25em;
                left: -0.5em;
            }
            .current_mgr_override_items
            {
                border: 1px solid rgba(183, 119, 24, 0.27);
                width: 405px;
            }
            .dropdown_div_mgr .dropdown-menu
            {
                margin-top: -2em;
            }
            .btn-prev-override
            {
                float: right;
                top: -4.45em;
                position: relative;
                right: 43em;
            }
            .override_subtotal_lbl
            {
                text-indent: 0.5em;
                margin-top: 0.5em;
                color: #20D26F;
            }
            .add_anybody
            {
                position: relative;
                left: 12.5em;
                background: rgba(0, 0, 0, 0.25);
                display: inline-block;
                padding-right: 1em;
                color: #B9EA43;
            }
            .override_mgr_amt > span
            {
                cursor: cell;
            }
            .proposal_result_div
            {
                border: 1px solid #2B545C;
                background: rgba(0, 0, 0, 0.5);
                /**/
                padding-top: 0.5em;
                padding-bottom: 0.5em;
                width: 80%;
                margin-left: auto;
                margin-right: auto;
            }
            .proposal_result_div .txtinput
            {
                text-indent: 0.5em;
                margin-bottom: 2em;
            }
            .proposal_dolla
            {
                background: #205622;
                padding: 0.25em;
                margin-right: 0.5em;
            }
            .proposal_name
            {
                text-indent: 0.6em;
            }
            .type_multiple_choice .btn
            {
                margin-bottom: 2em;
            }
            .proposal_result_div .fileinput
            {
                margin-bottom: 2em;
            }
            .excludable_cb
            {
                margin-left: 1em !important;
            }
            .exclude_notation
            {
                margin-top: -1em;
            }
            .proposal_result_div ul
            {
                margin-top: -1em;
            }
            .proposal_result_div .btn-success
            {
                margin-left: 1em;
            }
            .proposal_result_div a
            {
                margin-bottom: 1em;
                display: inline-block;
            }
            .missing_packet_dropdown
            {
                margin-left: 2em;
            }
            .mp_header
            {
                margin-left: 1.5em;
            }
            .missing_packet_name
            {
                border: 1px solid rgba(11, 177, 185, 0.5);
                margin-bottom: 0.5em;
                padding: 0.25em;
                min-height: 2.75em;
                text-indent: 0.5em;
                cursor: pointer;
            }
            .missing_packet_main_div
            {
                margin-top: 1em;
            }
            .packet_info > b, .packet_info > span
            {
                float: left;
            }
            .packet_info > b
            {
                clear: both;
                margin-bottom: 1em;
            }
            .missing_packet_name .glyphicon-paste, .missing_packet_name .glyphicon-info-sign
            {
                float: right;
                margin-right: 0.5em;
                font-size: 1.5em;
            }
            .packet_info
            {
                background: rgba(0, 0, 0, 0.3);
                margin-top: -0.4em;
                padding: 1em;
                min-height: 18em;
            }
            .packet_info > hr
            {
                position: relative;
                top: 5em;
                left: -2.5em;
            }
            .packet_info > i
            {
                float: right;
                top: -14.5em;
                position: relative;
                background: rgba(255, 255, 255, 0.1);
                padding: 0.25em;
                border-radius: 0.5em;
                background: #BB4E4E;
                text-shadow: 0px 0px 0.25em #000;
                cursor: pointer;
            }
            .sdate_asc, .sdate_desc
            {
                font-size: 1.5em;
                float: right;
                color: #1F6FBD;
                cursor: pointer;
            }
            .missing_packet_name .glyphicon-paste
            {
                color: #EFAB49;
            }
            .missing_packet_name .glyphicon-info-sign
            {
                color: #1390C7;
            }
            #contest_create_name
            {
                text-indent: 0.5em;
            }
            #contest_st_div select, #contest_et_div select
            {
                background: #575757;
                border: 0px solid #000000;
                padding: 0.25em;
                margin-right: 0.4em;
            }
            .contest_div
            {
                padding: 1em;
                text-shadow: 0px 0px 0.1em #000;
                background: #0F615D;
                box-shadow: inset 0px 0px 1em rgba(0, 0, 0, 0.25);
                margin-bottom: 3em;
            }
            .contest_div .glyphicon-pencil
            {
                float: right;
                color: #F5F118;
                font-size: 1.5em;
                text-shadow: 0px 0px 0.12em #000;
                cursor: pointer;
            }
            .contest_div textarea
            {
                width: 80%;
                margin-left: 10%;
                min-height: 8em;
                padding: 0.5em;
                background: #1A524F;
                border: 0px solid #000;
            }
            .contest_div button
            {
                margin-top: 2em;
                margin-right: 1em;
            }
            .contest_div .btn-success
            {
                background: rgba(0, 0, 0, 0.4);
            }
            h2 .fa-diamond
            {
                color: #008DCB;
            }
            .customer_progress_outer_v2 .outer_labels_cust_prog_div button
            {
                width: 11.1%;
            }
            .scheduler_row .dropdown-toggle
            {
                margin-bottom: 2em;
            }
            .svy_lbl
            {
                color: #5CB85C;
                border: 1px solid rgba(115, 115, 111, 0.55);
                font-size: 0.8em;
            }
            .svy_data
            {
                background: rgba(0, 0, 0, 0.2);
                box-shadow: inset 0px 0px 2px #000;
                padding-top: 0.5em;
                padding-bottom: 0.5em;
            }
            .no_svys
            {
                text-indent: 0.6em;
                background: rgba(0, 0, 0, 0.3);
                margin-top: 1.5em;
            }
            .svy_name, .svy_city, .svy_ltime
            {
                line-height: 2.4em;
                font-size: 0.8em;
            }
            .svy_schedule_btn .data_slot
            {
                font-size: 0.8em;
            }
            #svy_leaddate_desc, #svy_leaddate_asc
            {
                color: #1F6FBD;
                cursor: pointer;
            }
            #svy_leaddate_asc
            {
                margin-left: 1em;
            }
            .svy_name
            {
                clear: both;
            }
            .scheduler_row .glyphicon-calendar
            {
                font-size: 1.8em;
                line-height: 0.5em;
                top: 0.2em;
                color: #5bc0de;
            }
            @media(max-width: 640px)
            {
                .svy_data
                {
                    min-height: 6em;
                }
                .svy_lbl
                {
                    min-height: 2.9em;
                }
                .svy_dt
                {
                    height: 4.75em !important;
                    min-height: 4.75em !important;
                }
            }
            .svy_map
            {
                height: 100%;
            }
            .svy_booking_lbl
            {
                background: #1F6FBD;
                color: #fff;
                text-indent: 0.25em;
                text-shadow: 0px 0px 0em #000;
            }
            .svy_booking_info
            {
                text-indent: 0.25em;
            }
            #svy_sched_form label
            {
                text-align: left;
            }
            #dt_333
            {
                margin-top: 1em;
            }
            #dt_333 #cust_appointment_date
            {
                text-indent: 0.5em;
            }
            .svy_sub_btn
            {
                margin-top: 1em;
                margin-bottom: 1em;
            }
            .data_slot
            {
                margin-left: 0.75em;
            }
            .scheduler_back_btn
            {
                margin-top: 2em;
            }
            .symbola
            {
                font-family: "Symbola", Symbola;
            }
            .scheduler_row > .dropdown > .dropdown-menu
            {
                margin-top: -2em;
            }
            .recent_customer_name, .svy_customer_name, .panel_customer_name, .panelwork_customer_name, .team_customer_name
            {
                width: 80%;
                float: left;
                clear: both;
            }
            .fund_checkbox
            {
                width: 20%;
                float: left;
            }
            .recent_customer, .svy_customer_div, .panel_customer_name, .panelwork_customer_name, .pdesign_customer_div, .team_customer_div
            {
                background: #136055;
                min-height: 2.5em;
                text-indent: 1em;
                padding-top: 0.5em;
                padding-bottom: 0.5em;
                text-shadow: 0px 0px 0.1em #000;
                margin-bottom: 0.5em;
                box-shadow: inset 0px 0px 0.5em rgba(0, 0, 0, 0.25);
                cursor: pointer;
            }
            .panel_customer_div, .panel_customer_name, .pdesign_customer_div
            {
                background: #186286;
            }
            .team_customer_div, .team_customer_name
            {
                background: #63444F;
            }
            .panelwork_customer_div, .panelwork_customer_name
            {
                background: #8C4631;
            }
            .pdesign_customer_div, .pdesign_customer_name
            {
                background: #336539;
                clear: both;
            }
            .recent_customer_details
            {
                display: block;
                position: relative;
                z-index: 25;
                padding: 4%;
                background-color: rgb(243, 238, 238);
                box-shadow: inset 0 0 0.5em #000000;
                -moz-box-shadow: inset 0 0 0.5em #000000;
                -webkit-box-shadow: inset 0 0 0.5em #000000;
            }
            .recent_customer_details .close
            {
                top: -1em;
                position: relative;
            }
            .recent_card_label
            {
                color: #000000;
                font-family: Arial, Helvetica, sans-serif;
                font-weight: bold;
            }
            .recent_card_value
            {
                color: #000000;
                position: relative;
                display: block;
                top: -0.75em;
                margin-bottom: 0px;
            }
            .swap_match
            {
                cursor: pointer;
                list-style-type: none;
                margin-bottom: 0.5em;
                border: 1px solid rgba(0, 0, 0, 0.2);
                background: rgba(0, 0, 0, 0.2);
                padding: 0.25em;
                margin-left: -3em;
                text-indent: 0.5em;
            }
            .usage_reconfig
            {
                float: right;
                clear: both;top: -7em;
                position: relative;
                background-color: #1F6FBD !important;
                color: #fff;
                text-shadow: 0px 0px 0.1em #000;
                box-shadow: 0px 0px 0.1em #000;
                border: 0px solid #000;
            }
            .usage_reconfig .symbola
            {
                font-size: 1.5em;
                margin-right: 0.25em;
            }
            .usage_hr
            {
                clear: both;
                color: rgb(0, 0, 0);
                border: 1px solid rgba(0, 0, 0, 0.3);
            }
            .recent_customer_details form
            {
                background: #3B79B8;
                padding-top: 1em;
                padding-bottom: 1em;
                box-shadow: inset 0px 0px 1em rgba(0, 0, 0, 0.5);
                margin-top: -1.5em;
            }
            #reconfigure_total_months
            {
                background: #575757;
                color: #fff;
                margin-left: 1.25em;
            }
            .recent_customer_details form input
            {
                text-indent: 0.5em;
            }
            .recent_customer_details form .control-label
            {
                top: -0.5em;
            }
            .reconfigure_usage_save
            {
                margin-top: -3.5em;
                float: right;
                margin-right: 1em;
                background-color: #f0ad4e;
                color: #fff;
                text-shadow: 0px 0px 0.05em #000;
                border: 0px solid #000;
                box-shadow: 0px 0px 0.1em #000;
            }
            #reconfigure_total_kwhs
            {
                margin-left: 1.25em;
            }
            .reconfigure_dolla
            {
                color: #30FF26;
                font-size: 1.5em;
                line-height: 0em;
                padding-right: 0.25em;
                top: 0.1em;
                position: relative;
            }
            .proposal_sub_btn
            {
                margin-top: 3em;
            }
            #view_field_form
            {
                display: none;
            }
            .proposal_arithmetic_table table
            {
                border: 1px solid rgba(255, 255, 255, 0.1);
                width: 100%;
            }
            .proposal_arithmetic_table th
            {
                background: #767070;
                text-shadow: 0px 0px 0.1em #000;
                text-indent: 1em;
                box-shadow: 0px 0px 0.25em rgba(0, 0, 0, 0.5);
            }
            .proposal_arithmetic_table td
            {
                padding: 0.5em;
                box-shadow: inset 0px 0px 0.25em rgba(0, 0, 0, 0.25);
            }
            .p_arithmetic_percentage
            {
                background: #1E6495;
            }
            .p_arithmetic_work
            {
                background: #9F6B20;
            }
            .p_arithmetic_money
            {
                background: #177C6A;
            }
            .proposal_info_card
            {
                background: #F0E9E9;
                width: 90%;
                margin-left: 5%;
                color: #4D3737;
                padding-top: 1em;
                padding-bottom: 1em;
                margin-bottom: 3em;
            }
            .proposal_info_card_label
            {
                font-weight: bold;
                background: #03A9F4;
                color: #fff;
                text-indent: 0.5em;
            }
            #new_cp_date
            {
                text-indent: 0.5em;
            }
            .proposal_arithmetic_table
            {
                margin-bottom: 3em;
            }
            #new_proposal_formula
            {
                text-indent: 0.5em;
            }
            .formulas_ul li
            {
                list-style-type: none;
                border: 1px solid rgba(255, 255, 255, 0.1);
                padding: 0.25em;
            }
            .formulas_ul li .glyphicon-pencil
            {
                float: right;
                color: #BDB31F;
                cursor: pointer;
            }
            .formulas_ul li .glyphicon-remove
            {
                float: right;
                color: #d9534f;
                margin-right: 0.75em;
                cursor: pointer;
            }
            .formulas_ul li .glyphicon-text-width
            {
                float: right;
                margin-right: 0.75em;
                top: 0.15em;
                color: #5bc0de;
                cursor: pointer;
            }
            .formulas_ul li .glyphicon-eye-open, .formulas_ul li .glyphicon-eye-close
            {
                float: right;
                margin-right: 0.75em;
                top: 0.15em;
                color: #A5B5A9;
                cursor: pointer;
            }
            .formulas_ul li .glyphicon-check
            {
                float: right;
                margin-right: 0.75em;
                top: 0.15em;
                color: #23BB49;
                cursor: pointer;
            }
            .formulas_ul
            {
                margin-bottom: 2em;
            }
            .formula_def, .formula_synopsis
            {
                background: #575757;
                border: 0px;
                padding: 0.5em;
                width: 100%;
            }
            .formula_synopsis
            {
                margin-bottom: 2.5em;
                font-size: 0.9em;
            }
            .calc_container .badge
            {
                min-width: 2.8em;
                max-width: 2.8em;
                margin-right: 1em;
                margin-top: 0.5em;
                font-size: 1.5em;
                line-height: 2em;
            }
            .formula_back
            {
                font-size: 5em;
                float: right;
                top: -1.1em;
                position: relative;
                width: 2em;
                line-height: 1em;
            }
            .hide_me_hack
            {
                display: none !important;
                visibility: hidden !important;
                opacity: 0.0 !important;
            }
            .formula_lock_ico
            {
                float: right;
                cursor: pointer;
                color: #DDE30E;
                font-size: 1.25em;
                margin-right: 0.5em;
                top: -0.05em;
            }
            .prop_del
            {
                float: right;
                margin-right: 1em;
                color: #d9534f;
                background: rgba(39, 37, 37, 0.5);
                padding: 0.25em;
                border-radius: 0.25em;
                text-shadow: 0px 0px 0.1em #000;
            }
            .proposal_remove_reason
            {
                width: 90%;
                background: #272525;
                border: 0px;
                padding: 0.5em;
                height: 5em;
            }
            .formulas_testing_input input
            {
                display: block;
                margin-bottom: 1em;
                text-indent: 0.5em;
                width: 75%;
            }
            .formulas_testing_input select
            {
                background: #575757;
                border: 0px solid #000000;
                padding: 0.25em;
                margin-right: 0.4em;
                display: block;
                margin-bottom: 1em;
            }
            .lookup_dropdown
            {
                margin-left: 1em;
                margin-top: 2.5em;
            }
            #new_item
            {
                text-indent: 0.5em;
            }
            .sys_option_lineitem
            {
                border: 1px solid rgb(30, 123, 120);
                padding: 0.25em;
            }
            .sys_option_lineitem .glyphicon-edit
            {
                color: #f0ad4e;
                margin-right: 0.5em;
            }
            .sys_option_lineitem .glyphicon-remove
            {
                color: #d9534f;
                margin-left: 0.5em;
                margin-right: 0.5em;
            }
            .sys_option_wrapper .btn-success
            {
                margin-top: 2em;
            }
            .sys_option_lineitem .glyphicon
            {
                cursor: pointer;
            }
            .sys_option_lineitem .line_item_name
            {
                background: rgba(0, 0, 0, 0.075);
                width: 60%;
                display: inline-block;
                position: relative;
                left: 1%;
                text-indent: 0.5em;
                padding-top: 0.25em;
                padding-bottom: 0.25em;
            }
            .system_option_save
            {
                font-size: 2em;
                float: right;
                margin-left: 100%;
                position: relative;
                top: -1.5em;
                right: 1em;
            }
            .old_proposal_customer_search
            {
                font-size: 0.6em;
                width: 25em;
                margin-left: 1em;
                text-indent: 0.5em;
                position: relative;
                top: -0.2em;
            }
            .prop_no_results_search
            {
                font-size: 0.5em;
                margin-left: 2em;
                color: #0DD8F1;
                display: none;
            }
            .directory_emp_name .symbola
            {
                font-size: 2.5em;
                background-color: #353030;
                color: #ccc;
                line-height: 0em;
                /* box-shadow: 0px 0px 0.1em #000; */
                float: right;
                /* clear: both; */
                margin-left: 0.5em;
                margin-bottom: 0.5em;
                display: block;
                /* float: left; */
                padding: 0.5em;
                text-shadow: 0px 0px 0.1em #000;
                cursor: pointer;
            }
            .directory_emp_name .glyphicon-remove
            {
                float: right;
                font-size: 2em;
                color: #a94442;
                text-shadow: 0px 0px 0.1em #000;
                cursor: pointer;
                top: 0.15em;
            }
            .managefundingsourcesrow li input
            {
                float: right;
                margin-right: 1em;
            }
            .ca_annotation, .ut_annotation, .tx_annotation, .co_annotation, .active_annotation
            {
                font-size: 0.6em;
                background: #167A98;
                text-shadow: 0px 0px 0.1em #000;
                padding-left: 0.25em;
                padding-right: 0.25em;
                margin-right: 0.75em;
            }
            .ca_annotation
            {
                margin-left: 14.5em;
            }
            .co_annotation
            {
                position: relative;
                left: -0.6em;
            }
            .active_annotation
            {
                float: right;
                margin-right: 27%;
                position: relative;
                top: 3.5em;
            }
            .flushcache
            {
                font-size: 1.5em;
                line-height: 0em;
                float: right;
                position: relative;
                top: 0.65em;
            }
            .panel_sub_btn
            {
                margin-top: 1em;
                margin-bottom: 0.5em;
            }
            .cp_shared_link
            {
                margin-bottom: -2em;
                padding-bottom: 2em;
            }
            .cp_shared_link a
            {
                margin-left: 1em;
            }
            .deal_details, .panel_details, .merged_details, .pdesign_details
            {
                clear: both;
                background: rgba(0,0,0,0.7);
                padding-top: 1em;
                padding-bottom: 1em;
            }
            .deal_details td, .panel_details td, .merged_details td
            {
                padding-bottom: 1em;
                padding-right: 2em;
                vertical-align: top;
            }
            .deal_questions, .panel_questions
            {
                width: 90%;
                margin-left: 5%;
                background: rgba(53, 48, 48, 0.5);
                padding: 1em;
            }
            .deal_questions .btn-danger
            {
                float: right;
            }
            .svy_cancel_reason
            {
                background: #353030;
                width: 80%;
                border: 1px solid rgba(0, 0, 0, 0.5);
                height: 5em;
            }
            #new_layout, #p_work_required, #p_work_type, #roof_work
            {
                background: #353030;
                border: 1px solid rgba(0, 0, 0, 0.5);
            }
            #p_work_required, #p_work_type
            {
                margin-left: 1em;
            }
            #new_layout_link
            {
                text-indent: 0.5em;
                width: 80%;
            }
            .fund_checkbox .glyphicon-pencil
            {
                color: #E6E31C;
                text-shadow: 0px 0px 0.25em #000;
                float: right;
                margin-right: 1em;
            }
            .edit_cust
            {
                width: 80%;
                text-indent: 0.5em;
            }
            .p_assess_ico
            {
                font-size: 1.5em;
                line-height: 0em;
            }
            .panel_details table, .merged_details table
            {
                margin-left: 1em;
            }
            .panel_details select, .merged_details select, #hoa_yn, #installdate_yn
            {
                background: #575757;
                border: 0px solid #000000;
            }
            .panel_details textarea, .merged_details textarea
            {
                background: #1E272C;
                border: 1px solid rgba(0, 0, 0, 0.5);
                width: 80%;
                height: 5em;
            }
            .panel_wrench_btn
            {
                background: #545454;
                border: 1px inset rgba(0, 0, 0, 0.5);
                border-radius: 0.5em;
                margin-bottom: 1em;
                display: block;
                text-shadow: 0px 0px 0.1em #000;
                padding-right: 1em;
            }
            .panel_wrench_btn .symbola
            {
                margin-right: 0.5em;
                font-size: 1.5em;
                line-height: 1.25em;
            }
            .panelwork_back
            {
                clear: both;
                margin-top: 5em;
                text-align: left;
                margin-left: 10%;
            }
            .new_pp_name
            {
                box-shadow: 0px 0px 0.1em #000;
                background: #4E3B52;
                text-shadow: 0px 0px 0.1em #000;
                margin-bottom: 1em;
            }
            .new_pp_headers
            {
                clear: both;
                margin-top: 4em;
            }
            .new_pp_headers span
            {
                background: rgba(0, 0, 0, 0.2);
                padding: 0.25em;
                padding-left: 0.5em;
                padding-right: 0.5em;
                margin-right: 1em;
                display: inline-block;
                position: relative;
                width: 20%;
                margin-right: 4%;
            }
            .new_pp
            {
                clear: both;
                margin-top: 1em;
                padding-bottom: 1em;
                min-height: 4em;
                border-bottom: 1px solid rgba(255, 255, 255, 0.25);
                border: 1px dotted rgba(0, 0, 0, 0.5);
                padding: 1em;
                background: rgba(0, 0, 0, 0.1);
            }
            .new_pp > span
            {
                width: 20%;
                margin-right: 4%;
                display: block;
                float: left;
                padding-left: 0.5em;
            }
            .new_pp > .new_pp_rep
            {

            }
            .new_pp_dd
            {
                clear: both;
            }
            .new_pp_dd2
            {
                float: left;
                width: 50%;
                top: -2.5em;
                left: 7em;
            }
            .new_pp_rej_reason_div
            {
                margin-bottom: 1em;
            }
            .new_pp_rej_reason_div textarea
            {
                background: #736B6B;
                border: 0px;
                width: 80%;
                min-height: 4em;
                padding: 0.5em;
            }
            .new_pp_rej_reason_div .glyphicon-remove
            {
                top: -3.2em;
                left: 0.25em;
                color: #D9534F;
            }
            #sys_size, #dt909 input
            {
                text-indent: 0.5em;
            }
            .new_pp_dd .glyphicon-exclamation-sign
            {
                float: right;
                font-size: 1.8em;
                cursor: pointer;
            }
            .roofing_details, .electrical_details
            {
                background: rgba(0, 0, 0, 0.2);
                padding: 2em;
                padding-top: 0.5em;
                padding-bottom: 0.5em;
                margin-top: 1em;
                margin-bottom: 2em;
            }
            .roofing_details h4, .electrical_details h4
            {
                text-align: left;
                float: left;
                width: 100%;
            }
            .roofing_details hr, .electrical_details hr
            {
                clear: both;
            }
            .new_pp_dd .glyphicon-time
            {
                color: #D1ED0E;
                font-size: 2em;
                line-height: 0em;
                top: 0.5em;
                float: right;
                cursor: pointer;
                margin-right: 2.5em;
            }
            .new_pp_dd .rejection_history_row
            {
                position: relative;
                background: rgba(0, 0, 0, 0.1);
                box-shadow: inset 0px 0px 5px rgba(0, 0, 0, 0.5);
                padding-right: 1em;
                margin-top: 1em;
                clear: both;
            }
            .pp_checkoff_description, .pp_checkoff_subdescription
            {
                margin-left: 1em;
                position: relative;
                top: -0.1em;
            }
            .pp_checklist
            {
                background: rgba(0, 0, 0, 0.2);
                padding-top: 1em;
                padding-bottom: 1em;
            }
            .pp_checkoff_dt
            {
                background: #07657A;
                text-shadow: 0px 0px 0.1em #000;
                padding: 0.25em;
                padding-left: 0.5em;
                padding-right: 0.5em;
                border-radius: 0.25em;
                float: right;
                margin-right: 40em;
                font-size: 0.8em;
            }
            .team_customer_div .pp_checkoff_dt
            {
                margin-right: 10em;
            }
            .glyphicon-sayve-me
            {
                float: right;
                font-size: 2em;
                top: -0.15em;
                right: 4em;
                color: #C45252;
                cursor: pointer;
            }
            .new_pp .rejection_history_row
            {
                left: -25%;
                position: relative;
            }
            .solar_ready_complete1, .solar_ready_complete2, .cb_assessment_complete, .cb_survey_complete
            {
                float: right;
                background: #0A656E;
                text-shadow: 0px 0px 0.1em #000;
            }
            .solar_ready_complete1
            {
                display: none;
            }
            .cb_verify_submitted
            {
                display: none;
                position: relative;
                left: 7%;
                float: right;
            }
            .cb_assessment_complete
            {
                position: relative;
                left: 23%;
            }
            .solar_ready_complete1
            {
                left: -2%;
                position: relative;
            }
            .new_docs_link
            {
                float: right;
                font-size: 0.75em;
                color: #C8CB18;
            }
            #permit_design .symbola, #permit_design_v2 .symbola
            {
                font-size: 2em;
                line-height: 0em;
                margin-left: -0.25em;
            }            
            #solar_ready .symbola
            {
                font-size: 1.5em;
                line-height: 0em;
            }
            .jurisdiction_item .dropdown
            {
                top: -2.5em;
            }
            .jurisdiction_item .open, .jurisdiction_item .dropdown .btn
            {
                float: right;
            }
            .jurisdiction_item .dropdown .btn
            {
                min-width: 11.5em;
            }
            .jurisdiction_item
            {
                border: 1px solid rgb(64, 77, 71);
                padding: 1em;
                background: rgba(0, 0, 0, 0.1);
            }
            .jurisdiction_item .glyphicon-pencil
            {
                color: #C6B00F;
                margin-right: 1em;
                cursor: pointer;
            }
            .pdesign_sel
            {
                background: #353030;
                margin-left: 1em;
                border: 1px solid rgba(0, 0, 0, 0.5);
            }
            .stamp_questions
            {
                background: rgba(0, 0, 0, 0.2);
                padding: 0.5em;
            }
            .stamp_questions input
            {
                float: right;
            }
            .permit_checklist
            {
                padding-left: 0.5em;
                padding-right: 0.5em;
            }
            .permit_checklist input
            {
                float: right;
            }
            .indehnted .pp_checklist_nayme
            {
                margin-left: 3em;
            }
            .permit_checklist .pp_checklist_dayte
            {
                float: right;
                margin-right: 2em;
                padding-right: 1em;
                background: rgb(159, 101, 13);
                box-shadow: inset 0px 0px 0.25em #000;
                text-shadow: 0px 0px 0.1em #000
            }
            .pdesign_labels span
            {
                float: right;
                background: rgba(0, 0, 0, 0.5);
                padding-left: 0.5em;
                padding-right: 0.5em;
                margin-left: 1.5em;
                top: 0.1em;
                position: relative;
            }
            .pdesign_lbl_value
            {
                float: right;
                min-width: 120px;
                text-align: center;
            }
            .ran_conduit, #p_work_done, #p_work_type_orig, #combiner_box_yn, .installed_disconnect_box, .installed_combiner_box
            {
                margin-left: 1em !important;
            }
            #p_work_done, #p_work_type_orig, #combiner_box_yn
            {
                background: #353030;
                border: 1px solid rgba(0, 0, 0, 0.5);
            }
            .line_item_watts
            {
                float: right;
                margin-right: 1em;
                position: relative;
                top: 0.1em;
            }
            .line_item_watts .symbola
            {
                color: #FFF912;
                margin-right: 0.5em;
                font-size: 1.5em;
                line-height: 0em;
                top: 0.1em;
                position: relative;
            }
            .fee_schedule_table
            {
                background: rgba(0, 0, 0, 0.3);
                min-width: 75%;
                margin-top: 1.5em;
            }
            .fee_schedule_table td
            {
                padding: 1em;
                border: 1px solid rgba(255, 255, 255, 0.1);
            }
            .fee_schedule_table .item_name
            {
                cursor: cell;
            }
            .fee_schedule_table tr:nth-child(1) td
            {
                background: #125964;
                text-shadow: 0px 0px 0.1em #000;
            }
            .svc_dollar
            {
                color: #0CBD54;
                margin-right: 0.25em;
            }
            .svc_price_actual
            {
                cursor: cell;
            }
            .new_pm_btn
            {
                margin-left: 1.5em;
            }
            #docs_composer .symbola
            {
                font-size: 1.25em;
                line-height: 0em;
                margin-right: 0.5em;
            }
            #doc_upload_ol .glyphicon
            {
                float: right;
            }
            #doc_upload_ol .glyphicon-remove
            {
                color: #d9534f;
            }
            #doc_upload_ol .glyphicon-check
            {
                color: #55BD5E;
            }
            .bundle_item
            {
                background: #125457;
                padding-top: 1em;
                padding-bottom: 1em;
                text-indent: 1em;
                text-shadow: 0px 0px 0.1em #000;
                cursor: pointer;
            }
            .composed_doc_item
            {
                font-size: 1.5em;
                background: rgba(0, 0, 0, 0.25);
                text-indent: 0.5em;
                margin-top: 0.5em;
            }
            .composed_doc_item .composed_doc_cnt
            {
                float: right;
                margin-right: 0.5em;
            }
            .composed_doc_item .symbola
            {
                margin-right: 0.5em;
            }
            .project_managers_tbl
            {
                border: 1px solid rgba(255, 255, 255, 0.1);
                width: 100%;
                margin-top: 2em;
            }
            .project_managers_tbl td
            {
                padding: 0.5em;
            }
            .project_managers_tbl tr:nth-child(1) td
            {
                background: #125964;
                text-shadow: 0px 0px 0.1em #000;
            }
            .project_managers_tbl .glyphicon-remove
            {
                cursor: pointer;
                color: #d9534f;
            }
            .estimated_kwh_production
            {
                background: #427A58;
                text-indent: 0.5em;
                display: inline-block;
                clear: both;
                float: left;
                text-shadow: 0px 0px 0.1em #000;
                padding-right: 0.5em;
            }
            .newpp_system_size
            {
                clear: both;
                background: rgba(0, 0, 0, 0.3);
                text-indent: 0.5em;
                display: inline-block;
                float: left;
                padding-right: 1em;
            }
            .newpp_system_size .symbola
            {
                color: #D3EB13;
            }
            .pp_noc
            {
                float: left;
                clear: both;
                display: inline-block;
                background: #0E6C71;
                text-shadow: 0px 0px 0.1em #000;
                text-indent: 0.5em;
                padding-right: 0.5em;
            }
            #team_btn .symbola
            {
                font-size: 1.5em;
                line-height: 0em;
            }
            .deal_details .update_date_btn
            {
                margin-left: 1em;
                margin-top: 0.25em;
                font-size: 0.8em;
            }
            #dtinstalldate .datepicker-days
            {
                background: #fff;
                text-shadow: 0px 0px 0px #000;
            }
            #incomplete_proposals_view .symbola
            {
                font-size: 1.25em;
                margin-right: 0.25em;
                line-height: 0em;
                top: -0.05em;
            }
            .incomplete_proposal_result
            {
                margin-bottom: 0.5em;
                padding: 0.5em;
                background: rgba(0, 0, 0, 0.2);
                cursor: pointer;
            }
            .bootstrap-dialog-message #pm_name, .bootstrap-dialog-message #pm_phone, .bootstrap-dialog-message #pm_email
            {
                margin-bottom: 1em;
            }
            .docs_composer_back_1
            {
                margin-left: 1em;
            }
            .composed_doc_item
            {
                cursor: pointer;
            }
            .docs_thumbnail
            {
                width: 80%;
                position: relative;
                left: 50%;
                margin-bottom: 2em;
                box-shadow: 0px 0px 0.5em #000;
                border: 5px inset #000;
                cursor: pointer;
            }
            .doc_template_img
            {
                margin-top: 2em;
                position: relative;
                max-width: 612px;
                min-width: 612px;
                max-height: 792px;
                min-height: 792px;

            }
            .templated_text
            {
                z-index: 99;
                position: absolute;
                overflow: hidden;
                cursor: pointer;
                box-shadow: inset 0px 0px 0.5em 0em #075CAE;
                line-height: 1em;
            }
            #template_controls
            {
                position: fixed;
                top: 20%;
                left: 20px;
                background: rgba(0, 0, 0, 0.5);
                padding: 2em;
                width: 20em;
            }
            .click_helper_overlay
            {
                display: block;
                position: absolute;
                top: 0em;
                text-indent: 32em;
                background: rgba(0, 0, 0, 0.6);
                width: 100%;
                height: 10000px;
                z-index: 200;
            }
            .click_helper_overlay p
            {
                font-size: 2em;
                line-height: 23em;
            }
            .z_index_300
            {
                z-index: 300;
            }
            .composed_doc_item .glyphicon-pencil
            {
                float: right;
                line-height: 0em;
                top: 0.75em;
                color: #C9B80D;
                cursor: pointer;
            }
            .composed_doc_item .glyphicon-cog
            {
                float: right;
                top: 0.25em;
                color: #8F879A;
                cursor: pointer;
            }
            .composed_doc_item .glyphicon-remove
            {
                float: right;
                top: 0.25em;
                color: #EC6767;
                cursor: pointer;
            }
            #template_controls select
            {
                background: #575757;
                border: 0px solid #000000;
                padding: 0.25em;
            }
            .shiftdown, .shiftup
            {
                float: right;
                font-size: 1.5em;
                line-height: 0em;
                top: 0.4em;
                position: relative;
                color: #5bc0de;
                font-weight: bold;
                cursor: pointer;
                margin-right: 1em;
            }
            .shiftup
            {
                margin-right: 1.5em;
            }
            #doc_description, #doc_formula
            {
                background: #1E272C;
                border: 1px solid rgba(0, 0, 0, 0.5);
                width: 80%;
                height: 5em;
                padding: 0.5em;
                margin-bottom: 1em;
            }
            .pp_el_notes
            {
                float: right;
                font-size: 2em;
                margin-left: -0.5em;
                left: 0.75em;
                top: -0.05em;
                color: #77B536;
                cursor: pointer;
            }
            .cust_proposal_search_result .glyphicon-pencil
            {
                float: left;
                margin-right: 0.5em;
                top: 0.2em;
                color: #FFE616;
            }
            .interval_span
            {
                float: right;
                font-size: 2em;
                color: #D3EF0E;
            }
            .temp_list_of_funds_ul .glyphicon-cog
            {
                cursor: pointer;
                color: #35BDE6;
                float: right;
                position: relative;
                width: 0em;
                overflow: visible;
                left: -4em;
                top: 0.25em;
            }
            .tx_annotation
            {
                position: relative;
                left: -0.25em;
            }
            .match_msg_good, .match_msg_great
            {
                display: block;
                position: relative;
                width: 80%;
                margin-top: 1em;
                background: #231E1E;
                border: 0px solid #000;
                padding: 0.5em;
            }
            .inner_card_update
            {
                float: left;
                position: relative;
                /* top: -2em; */
                font-weight: normal;
                color: #fff;
                font-size: 0.8em;
                background: #f0ad4e;
                padding-left: 0.5em;
                padding-right: 0.5em;
                padding-top: 0.25em;
                padding-bottom: 0.25em;
                border-radius: 0.4em;
                text-shadow: 0px 0px 0.05em #000;
                -webkit-user-select: none;
                cursor: pointer;
                display: inline-block;
                clear: both;
                margin-top: 1em;
            }
            .new_pp_top_btns button
            {
                height: 2em;
                line-height: 0em;
                text-shadow: 0px 0px 0.1em #000;
                float: right;
                margin-left: 2em;
            }
            .dropdown > .rejection_mode_hack_back_btn
            {
                background: #d9534f !important;
                margin-bottom: 1em;
            }
            .temp_new_pp_hidden
            {
                display: none;
            }
            .new_save_me_customer
            {
                background: rgba(247, 111, 111, 0.35);
                margin-bottom: 0.25em;
                padding: 0.5em;
                text-shadow: 0px 0px 0.1em #000;
            }
            .new_save_me_customer .glyphicon
            {
                font-size: 1.25em;
                margin-right: 0.5em;
                cursor: pointer;
                color: #212020;
                line-height: 0em;
                top: 0.2em;
                text-shadow: 0px 0px 0.05em rgba(255, 255, 255, 0.5);
            }
            .rej_mode_hack_archive
            {
                float: right;
                top: 0.75em;
                right: -2em;
                font-size: 1.25em;
            }
            .pp_checklist li
            {
                margin-bottom: 0.5em;
            }
            .html5 select
            {
                background: #565353;
                border: 0px solid #000;
            }
            .html5 textarea
            {
                width: 70%;
                padding: 0.5em;
                background: #4C4949;
                border: 0px solid #000;
            }
            #electrician_designation
            {
                background: rgb(89, 84, 84);
                border: 0px solid #000;
            }
            .new_filtered_note
            {
                background: rgba(255, 255, 255, 0.1);
                color: #fff;
                width: 80%;
                border: 0px solid #000;
                padding: 0.5em;
            }
            #pwork_btn .symbola
            {
                font-size: 1.5em;
                line-height: 0em;
            }
            .electrician_name
            {
                background: #795548;
                text-shadow: 0px 0px 0.1em #000;
                padding: 1em;
                box-shadow: inset 0px 0px 0px 0.25em rgba(0, 0, 0, 0.5);
            }
            .e_phone, .e_email
            {
                float: right;
                background: rgba(0, 0, 0, 0.25);
                padding: 0.25em;
                top: -0.25em;
                position: relative;
                border-radius: 0.5em;
                display: inline-block;
            }
            .e_customer > span
            {
                cursor: pointer;
                padding-left: 0.5em;
                padding-right: 1em;
                display: inline-block;
            }

            .e_customer > span:hover
            {
                background: rgba(255, 255, 255, 0.25);
            }
            .e_email
            {
                margin-right: 1em;
            }
            .e_customer
            {
                width: 98%;
                left: 2%;
                margin-left: 0.75em;
                background: rgba(0, 0, 0, 0.6);
                position: relative;
                margin-top: 0.5em;
                padding: 0.25em;
                padding-left: 1em;
                clear: both;
            }
            .qqq_table td
            {
                vertical-align: text-top;
                padding-bottom: 0.5em;
                padding-right: 2em;
                padding-top: 1em;
            }
            .qqq_checkoff input
            {
                position: absolute;
                top: 0;
                left: 0;
            }
            .echeck_dt
            {
                float: right;
                margin-right: 27em;
                background: rgba(255, 255, 255, 0.3);
                padding-left: 0.5em;
                padding-right: 0.5em;
                text-shadow: 0px 0px 0.1em #000;
                border-radius: 0.2em;
                position: relative;
                top: -2.25em;
            }
            .qqq_checkoff > div > p
            {
                position: relative;
                left: 2em;
            }
            .new_pwork_cust_details
            {
                width: 95%;
                left: 5%;
                position: relative;
                background: rgba(255, 255, 255, 0.05);
                padding-left: 1em;
                margin-top: 1em;
                box-shadow: inset 0px 0px 1em rgba(0, 0, 0, 0.5);
            }
            .qqq_checkoff
            {
                background: rgba(0, 0, 0, 0.2);
                padding-top: 1em;
                padding-bottom: 1em;
                padding-left: 1em;
                box-shadow: inset 0px 0px 0.5em rgba(0, 0, 0, 0.25);
            }
            .doc_page_remove
            {
                width: 100%;
                left: 125%;
                top: -2.25em;
                color: #d9534f;
                cursor: pointer;
                z-index: 500;
            }
            .document_copy_button
            {
                float: right;
                top: -2.25em;
                position: relative;
            }
            #copy_bundle_selection, #copy_document_selection, #copy_page_index_selection
            {
                background: #5D5A5A;
                color: #fff;
                border: 0px solid #000;
            }
            .pin_input
            {
                text-align: center;
            }
            .pin_input input
            {
                display: inline-block !important;
                color: #fff !important;
                width: 1.5em;
                font-size: 3em;
                margin-right: 0.5em;
                background: rgba(255, 255, 255, 0.1) !important;
                border: 0px solid #fff !important;
                text-indent: 0.5em !important;
            }
            .directory_emp_reset
            {
                color: #EADF34;
                font-size: 0.8em;
                margin-right: 3em;
                cursor: pointer;
            }
            .slide_set .glyphicon-cog, .slide_set .glyphicon-pencil, .slide_set .symbola, .slide_set .glyphicon-duplicate
            {
            	float: right;
            	margin-right: 0.5em;
			    cursor: pointer;
            }
            .slide_set .glyphicon-duplicate
            {
                color: #009688;
            }
            .slide_set .glyphicon-pencil
            {
            	color: #f0ad4e;
            }
            .slide_set .glyphicon-cog
            {
            	color: #5bc0de;
            }
            .slide_set .glyphicon-remove
            {
              float: right;
              color: #F44336;
              cursor: pointer;
            }
            .slide_set_name
            {
            	font-size: 1.5em;
            }
            .slide_set
            {
            	border-bottom: 3px solid rgba(22,141,92,0.5);
    			margin-bottom: 1.5em;
            }
            .slide_set .symbola-tv
            {
            	color: #0dbd26;
        			font-size: 1.25em;
        			position: relative;
    			    top: 0.45em;
        			background: #fff;
        			line-height: 0em;
            }
            .slide_selector
            {
            	width: 8%;
    			float: left;
    			border: 1px solid rgba(0, 0, 0, 0.5);
    			padding-top: 1em;
    			padding-bottom: 1em;
                position: relative;
                top: 1em;
                margin-top: -5em;
            }
            .slide_selector > div
            {
            	width: 80%;
    			margin-left: auto;
    			margin-right: auto;
    			background: #000;
    			text-align: center;
    			padding-top: 0.25em;
    			padding-bottom: 0.25em;
    			font-size: 2em;
    			box-shadow: 0px 0px 0.1em rgba(255, 255, 255, 0.25);
    			cursor: pointer;
                margin-bottom: 0.5em;
            }
            #slide_view
            {
                width: 700px;
                float: left;
                margin-left: 30px;
                box-shadow: 0px 0px 0.1em rgba(0, 0, 0, 1.0);
                position: relative;
                height: 700px;
                margin-top: -4em;
            }
            .slide_view_item
            {
                position: absolute;
            }
            .slide_selector > p
            {
                text-align: center;
                font-size: 0.8em;
            }
            .slide_selector > .label-success
            {
                background-color: #5cb85c;
                margin-left: auto;
                margin-right: auto;
                display: block;
                width: 80%;
                margin-top: 1em;
                text-shadow: 0px 0px 0.1em #000;
                cursor: pointer;
            }
            .slide_selector > .active_slide
            {
                box-shadow: 0px 0px 0.1em #FF9800 !important;
            }
            .slide_selector > div > .glyphicon-remove
            {
                font-size: 0.4em;
                position: relative;
                top: -1em;
                float: left;
                width: 0em;
                left: -0.5em;
                color: #F44336;
            }
            .slide_selector > div > .glyphicon-cog
            {
                font-size: 0.4em;
                position: relative;
                top: -1em;
                float: right;
                width: 0em;
                left: -0.5em;
                color: #00BCD4;
            }
            .active_slide > .glyphicon-remove
            {
                display: none;
            }
            .sv_choice .glyphicon-remove
            {
                height: 0;
                width: 0;
                line-height: 0;
                color: #F44336;
                float: right;
                right: 1.25em;
                top: 0.75em;
                cursor: pointer;
            }
            .bold_font_weight
            {
                font-weight: bold;
            }
            .normal_font_weight
            {
                font-weight: normal;
            }
            #slide_item_edit_controls
            {
                margin-top: -5em;
                width: 300px;
                float: right;
                background: rgba(0, 0, 0, 0.25);
                padding: 1em;
            }
            #slide_item_edit_controls select
            {
                background: #484545;
                border: 0px solid #000;
                padding: 0.25em;
            }
            #slide_item_edit_controls h5
            {
                text-align: center;
                background: #00BCD4;
                text-shadow: 0px 0px 0.1em #000;
                padding-top: 0.25em;
                padding-bottom: 0.25em;
                margin-bottom: 2em;
            }
            .add_slide_item_btn
            {
                float: right;
                top: 1.5em;
                position: relative;
                right: 24.5em;
                z-index: 25;
            }
            #slide_component_type
            {
                background: #5b5858;
                border: 0px solid #000;
            }
            .edit_itemx, .edit_itemy, .edit_itemz, .edit_itemw, .edit_itemh
            {
                font-size: 0.7em;
                display: inline-block;
                float: left;
                width: 5em;
                top: -2em;
                position: relative;
                left: 0.25em;
            }
            #slide_item_font_weight
            {
                clear: both;
                float: left;
            }
            #slide_item_edit_font_size
            {
                width: 3em;
                float: left;
                margin-left: 1em;
            }
            .fs_label
            {
                text-shadow: 0px 0px 0.1em #000;
                position: relative;
                left: -6em;
                top: -0.5em;
            }
            #slide_item_edit_font_family
            {
                clear: both;
                float: left;
                margin-top: 1em;
            }
            #edit_slide_item_color
            {
                float: right;
                clear: both;
                top: -8em;
                position: relative;
                max-width: 6em;
            }
            .ud_customer_email
            {
                margin-left: 0.5em;
            }
            .slides_maker_back_btn
            {
                float: right;
                clear: both;
                top: -5em;
                position: relative;
                right: 7em;
            }
            #change_slide_view_bg_color
            {
                float: right;
                clear: both;
                top: -7em;
                position: relative;
                right: 15em;
            }
            .label-change-slide-background-color
            {
                float: right;
                clear: both;
                top: -14em;
                position: relative;
                right: 20em;
                text-shadow: 0px 0px 0.1em #000;
            }
            #change_slide_view_txt_color
            {
                float: right;
                clear: both;
                top: -9.75em;
                position: relative;
                right: 30em;
            }
            .label-change-slide-default-text-color
            {
                float: right;
                clear: both;
                position: relative;
                top: -17.75em;
                right: 40em;
                text-shadow: 0px 0px 0.1em #000;
            }
            .presentation_move_down, .presentation_move_up
            {
                clear: both;
                float: right;
                cursor: pointer;
                padding: 0.75em;
                font-weight: bold;
                font-size: 1.25em;
                line-height: 0em;
                position: relative;
                top: 1.25em;
                margin-top: -2em;
            }
            .both_movements .presentation_move_down, .both_movements .presentation_move_up
            {
                clear: both;
                float: right;
                cursor: pointer;
                padding: 0.75em;
                font-weight: bold;
                font-size: 1.25em;
                line-height: 0em;
                position: relative;
                top: -0.75em;
                height: 0px;
                max-height: 0px;
                margin-top: -1.5em;
                top: 1.5em;
            }
            .both_movements .presentation_move_up
            {
                top: -0.25em;
            }
            .slide_view_item
            {
                line-height: 0em;
                padding: 0em;
                margin: 0em;
                border-style: solid;
                border-width: 0px;
                border-color: rgba(0,0,0,1.0);
                border-radius: 0px 0px 0px 0px;
            }
            .edit_controls_rectangle .fs_label, .edit_controls_rectangle #slide_item_font_weight, .edit_controls_rectangle #slide_item_edit_font_size, .edit_controls_rectangle #slide_item_edit_font_family, .edit_controls_rectangle #edit_slide_item_color
            {
                display: none;
            }
            #slide_edit_background_clr
            {
                margin-left: 2em;
            }
            .label-shape-border-thickness
            {
                display: block;
                width: 10em;
                margin-top: 1em;
            }
            #edit_item_border_width
            {
                display: block;
                margin-top: 0.5em;
                width: 3em;
            }
            .label-border-radius
            {
                float: right;
                position: relative;
                top: -4.25em;
                right: 6.25em;
            }
            #edit_item_border_radius
            {
                width: 3em;
                float: right;
                top: -1.5em;
                position: relative;
                right: 1.5em;
            }
            .label-border-color
            {
                margin-top: 1em;
                display: block;
                width: 8em;
            }
            #slide_edit_border_clr
            {
                margin-top: 0.5em;
            }
			.new_assessment_details_label
			{
				float: right;
    			position: relative;
			    left: 18em;
    			top: 0.25em;
    			text-shadow: 0px 0px 0.1em #000;
    			cursor: pointer;
			}
            .email_template_item
            {
                margin-top: 1em;
                padding: 0.25em;
                background: rgb(28, 97, 113);
                text-shadow: 0px 0px 0.1em #000;
            }
            .et_rename
            {
                font-size: 0.75em;
                color: #eadd17;
                float: right;
                cursor: pointer;
                position: relative;
                line-height: 0;
                top: 0.7em;
            }
            .et_pencil
            {
                float: right;
                color: #eca10e;
                margin-left: 0.5em;
                cursor: pointer;
            }
            .email_body
            {
                background: rgba(255, 255, 255, 0.05);
                padding-top: 1em;
                padding-bottom: 1em;
                padding-left: 1em;
                padding-right: 1em;
                min-height: 15em;
            }
            .email_body textarea
            {
                min-height: 15em;
                width: 90%;
                margin-left: auto;
                margin-right: auto;
                display: block;
                margin-top: 1em;
                background: rgba(0, 0, 0, 0.2);
                padding: 0.5em;
                border: 0px solid #000;
                box-shadow: 0px 0px 0.1em rgba(255, 255, 255, 0.5);
            }
            #exp_dd
            {
                float: right;
                top: -2.5em;
                visibility: hidden;
            }
            .et_active
            {
                float: right;
                margin-left: 0.5em !important;
                position: relative;
                top: -0.15em;
            }
            .et_lbl
            {
                text-shadow: 0px 0px 0.1em #000;
                float: right;
                margin-left: 100%;
                top: -1em;
                position: relative;
                right: -6.25em;
            }
            .slide_browse_thumb
            {
                width: 15%;
                margin-left: 2%;
                margin-right: 2%;
                float: left;
                margin-bottom: 2em;
            }
            .slide_image_selected_in_browsing
            {
                box-shadow: 0px 0px 1em #fff;
            }
            .edit_controls_image #slide_item_font_weight, .edit_controls_image .fs_label, .edit_controls_image #slide_item_edit_font_size, .edit_controls_image #slide_item_edit_font_family, .edit_controls_image #edit_slide_item_color
            {
                display: none;
            }
            #slide_item_edit_click_functionality
            {
                display: block;
                margin-top: 1em;
            }
            .edit_controls_rectangle .label-click-handler
            {
                display: block;
                position: relative;
                margin-top: 1em;
                width: 11em;
            }
            .slide_preview_search_result
            {
                background: #046767;
                text-indent: 0.5em;
                margin-bottom: 0.5em;
                cursor: pointer;
            }
            .slide_set .glyphicon-play-circle
            {
                float: right;
                color: #cee815;
                cursor: pointer;
                right: 2.25em;
                top: 0.1em;
            }
            .directory_emp_address
            {
                font-size: 0.8em;
                position: relative;
                background: rgba(46, 184, 228, 0.05);
                padding: 0.5em;
                margin-top: 0.5em;
            }
            /*.edit_controls_user_input .fs_label, .edit_controls_user_input #slide_item_font_weight, .edit_controls_user_input #slide_item_edit_font_size, .edit_controls_user_input #slide_item_edit_font_family
            {
            	display: none;
            }*/
            .edit_controls_user_input #slide_edit_border_clr
            {
                margin-top: 0.5em;
                top: -1.75em;
                position: relative;
                left: 1.25em;
            }
            .edit_controls_user_input .pres-width-label
            {
                float: left;
                clear: both;
                top: -0.5em;
                position: relative;
            }
            /*.edit_controls_user_input .pres-height-label, .edit_controls_user_input #edit_pres_item_height
            {
                display: none;
            }*/
            .edit_controls_user_input #edit_slide_item_color
            {
                margin-top: 1em;
                clear: both;
                top: -5em;
                position: relative;
            }
            .edit_controls_user_input .label-click-handler, .edit_controls_user_input #slide_item_edit_click_functionality
            {
                display: none;
            }
            .user_input_placeholder
            {
                position: relative;
                top: 0.75em;
                color: #000;
                left: 0.5em;
            }
            .ta_xfn, .ta_yfn, .ta_xlbls, .ta_ylbls
            {
                background: #575757;
                border: 0px solid #000;
                padding: 0.5em;
                width: 80%;
            }
            .custhasnotes
            {
                box-shadow: inset 0px 0px 2em #e6b016;
            }
            .pm_group
            {
                background: #0c8e9e;
                text-shadow: 0px 0px 0.1em #000;
                padding: 0.25em;
                margin-bottom: 0.75em;
                min-height: 2em;
            }
            .pm_group > span
            {
                display: inline-block;
                position: relative;
                float: left;
                cursor: pointer;
            }
            .pm_group .pm_name_item
            {
                width: 40%;
            }
            .pm_group .pm_tally
            {
                width: 50%;
                left: 2%;
            }
            .pm_customers_wrapper > p
            {
                background: #AB6805;
                text-shadow: 0px 0px 0.05em #000;
                text-indent: 0.5em;
                width: 90%;
                left: 10%;
                position: relative;
                cursor: pointer;
            }
            .pm_customer_details_info
            {
                background: #ab6805;
                box-shadow: inset 0px 0px 0.5em #000;
                padding: 0.5em;
                width: 85%;
                left: 15%;
                position: relative;
                text-shadow: 0px 0px 0.1em #000;
                margin-bottom: 2em;
            }
            .pm_lbl_td
            {
                font-weight: bold;
                background: rgba(0, 0, 0, 0.2);
                padding: 0.25em;
                border: 1px solid rgba(255, 255, 255, 0.1);
            }
            .pm_value_td
            {
                background: rgba(0, 0, 0, 0.2);
                padding: 0.25em;
                border: 1px solid rgba(255, 255, 255, 0.1);
            }
            .pm_detail_group
            {
                float: left;
                width: 45%;
            }
            .pm_detail_group_odd
            {
                margin-left: 5%;
            }
            .pm_hr
            {
                display: block;
                position: relative;
                width: 100%;
                margin-top: 1em;
                top: 1em;
            }
            .pm_multiple_choice_select, .missing_docs_sel
            {
                background: rgba(0, 0, 0, 0.2);
                padding-left: 0.5em;
                padding-right: 0.5em;
            }
            .pm_multiple_choice_select > option
            {
                background: #6e4203;
            }
            .pm_detail_cust_name
            {
                width: 40%;
                float: left;
            }
            .pm_detail_pm_name
            {
                width: 40%;
                float: left;
                margin-left: 5%;
            }
            .pm_close_btn
            {
                background: rgba(0, 0, 0, 0.7);
                padding-left: 0.5em;
                padding-right: 0.5em;
                border-radius: 0.25em;
                cursor: pointer;
                float: right;
            }
            .pm_notes_ul
            {
                background: rgba(255, 255, 255, 0.1);
                padding-top: 0.5em;
                padding-bottom: 0.5em;
                width: 45%;
                display: block;
                margin-left: 2%;
            }
            .pm_checkoff_ul
            {
                width: 45%;
                float: left;
                margin-left: 2%;
                list-style-type: none;
                padding-left: 0em;
            }
            .pm_checkoff_ul li
            {
                list-style-type: none;
            }
            .pm_checkoff_item_name
            {
                display: inline-block;
                font-size: 0.85em;
                margin-left: 0.5em;
            }
            .pm_checkoff_datespan
            {
                float: right;
                font-size: 0.9em;
                background: rgba(0, 0, 0, 0.2);
                padding-left: 0.5em;
                padding-right: 0.5em;
                cursor: cell;
            }
            #pm_panel_work_reqd, #pm_assign_electrician, #pm_panel_work_reqd option, #pm_assign_electrician option, #permit_status_pm, #permit_status_pm option, #pm_reassignment_sel, #pm_reassignment_sel option, #pm_panel_work_reqd_extra, #shading_issues, #roof_condition
            {
                background: #585656;
            }
            #permit_status_pm
            {
            	margin-bottom: 1em;
            }
            #pm_panel_notes, .roofing_notes
            {
                background: #585656;
                width: 100%;
                min-height: 6em;
                margin-top: 1em;
                margin-bottom: 1em;
                padding: 0.25em;
            }
            #bbb
            {
                margin-left: 3.1em;
                margin-bottom: 0.75em;
            }
            #sss
            {
                margin-left: 3.15em;
                margin-top: 0.75em;
            }
            .pm_update_assessment
            {
            	float: right;
    			position: relative;
    			top: -3em;
    			box-shadow: 0px 0px 0.1em #000;
    			text-shadow: 0px 0px 0.1em #000;
            }
            .update_permit_pm
            {
            	float: right;
    			position: relative;
    			top: -4em;
    			box-shadow: 0px 0px 0.1em #000;
    			text-shadow: 0px 0px 0.1em #000;
            }
            .pm_add_note_btn
            {
            	box-shadow: 0px 0px 0.1em #000;
    			text-shadow: 0px 0px 0.1em #000;
            }
            .pm_extra_todo
            {
            	float: right;
    			position: relative;
    			top: -2em;
    			box-shadow: 0px 0px 0.1em #000;
    			text-shadow: 0px 0px 0.1em #000;
            }
            .pm_permit_history_item
            {
            	width: 95%;
    			margin-left: 5%;
    			background: rgba(0, 0, 0, 0.1);
    			text-indent: 0.5em;
    			margin-bottom: 0.25em;
                clear: both;
    		}
    		.pm_permit_history_item .glyphicon-remove
    		{
    			float: right;
    			color: #F44336;
    			text-shadow: 0px 0px 0.1em #000;
    			cursor: pointer;
    		}
            .proposal_last_four
            {
                float: right;
                background: rgb(6, 116, 130);
                padding-left: 0.5em;
                padding-right: 0.5em;
                text-shadow: 0px 0px 0.1em #000;
            }
            .pm_elec_details_descrip
            {
                padding: 0.5em;
                width: 94%;
                margin-left: 5%;
                background: rgba(0, 0, 0, 0.1);
            }
            .pm_save_me
            {
            	cursor: pointer;
            	background: rgba(0, 0, 0, 0.7);
				padding-left: 0.25em;
				padding-right: 0.25em;
				padding-top: 0.25em;
				padding-bottom: 0.25em;
				position: relative;
				/* border-radius: 0.1em; */
				float: right;
				right: 4em;
				line-height: 0em;
            }
            .pm_customer_details_info .glyphicon-refresh
            {
            	float: left;
				left: -1.5em;
				background: rgba(0, 0, 0, 0.8);
				padding-top: 0.15em;
				padding-bottom: 0.15em;
				padding-left: 0.25em;
				padding-right: 0.25em;
				cursor: pointer;
            }
            .pm_customer_details_info .glyphicon-pencil
            {
                float: left;
                left: -1em;
                background: rgba(0, 0, 0, 0.8);
                padding-top: 0.15em;
                padding-bottom: 0.15em;
                padding-left: 0.25em;
                padding-right: 0.25em;
                cursor: pointer;
                margin-right: 1em;
            }
            .user_office_reassignment
            {
                float: right;
                font-size: 1.5em;
                top: 0.3em;
                margin-right: 1em;
                color: #50d411;
                cursor: pointer;
            }
            #office_reassignment, #office_reassignment option
            {
                background: #353434;
                color: #fff;
            }
            .emp_user_office
            {
                background: #0fa3ab;
                padding: 0.25em;
                margin-right: 1em;
                text-shadow: 0px 0px 0.1em #000;
                padding-left: 0.5em;
                padding-right: 0.5em;
            }
            .pm_search
            {
                width: 73.75%;
                margin-bottom: 1em;
                box-shadow: inset 0px 0px 0.25em #000;
                height: 2em;
            }
            .pm_search_results
            {
                width: 70%;
                position: relative;
                background: rgba(255, 255, 255, 0.1);
                padding: 0.5em;
                border: 2px solid rgb(40, 134, 108);
                margin-bottom: 1.5em;
            }
            .pm_search_close
            {
                float: right;
                background: #000;
                padding-left: 0.5em;
                padding-right: 0.5em;
                border-radius: 0.25em;
                color: red;
                cursor: pointer;
            }
            .pm_search_results > p
            {
                cursor: pointer;
                background: rgba(0, 0, 0, 0.3);
                padding: 0.25em;
                text-indent: 0.5em;
                width: 80%;
            }
            .payroll_group_item
            {
                background: #0097d5;
                padding: 0.25em;
                margin-bottom: 1em;
            }
            .payroll_group_item > span
            {
                font-size: 1.25em;
                text-shadow: 0px 0px 0.1em #000;
                cursor: pointer;
            }
            .payroll_group_item_lbl
            {
                width: 35%;
                display: inline-block;
            }
            .payroll_group_item_hyphen
            {
                margin-right: 0.5em;
            }
            .payroll_group_item_tally
            {
                margin-right: 0.25em;
            }
            .payroll_item_details
            {
                background: #f19f2c;
                text-shadow: 0px 0px 0.1em #000;
                margin-bottom: 0.5em;
                cursor: pointer;
                left: 5%;
                position: relative;
                width: 95%;
            }
            .wc_complete_name
            {
                display: inline-block;
                width: 40%;
                text-indent: 0.5em;
            }
            .wc_complete_hyphen
            {
                margin-right: 0.5em;
            }
            .wc_complete_details_div
            {
                padding-left: 0.5em;
                width: 95%;
                position: relative;
                left: 5%;
                background: #f19f2c;
                top: -0.5em;
                border-top: 1px solid #fff;
                text-shadow: 0px 0px 0.1em #000;
            }
            .wc_complete_top_ul
            {
                float: left;
                width: 50%;
                margin-top: 0.5em;
                list-style-type: none;
                font-size: 0.9em;
                margin-left: 0em;
                padding-left: 0em;
            }
            .wc_complete_top_ul a
            {
                text-shadow: 0px 0px 0px #000;
            }
            .wc_complete_close
            {
                float: right;
                padding-left: 0.5em;
                padding-right: 0.5em;
                position: relative;
                cursor: pointer;
                background: rgba(0, 0, 0, 0.5);
                border-radius: 0.25em;
                margin-right: 0.5em;
                top: 0.25em;
            }
            .wc_complete_top_ul_item_label
            {
                background: rgba(0, 0, 0, 0.1);
                padding-left: 0.5em;
                padding-right: 0.5em;
                margin-right: 0.25em;
            }
            .wc_complete_plus_trans_btn
            {
                float: right;
                margin-right: 0.5em;
                top: -0.5em;
                position: relative;
            }
            .wc_complete_trans_table_A, .wc_complete_trans_table_B, .pending_transactions_pending_table
            {
                border-collapse: inherit;
                max-width: 70%;
                padding-bottom: 1em;
            }
            .wc_complete_trans_table_A td, .wc_complete_trans_table_B td, .pending_transactions_pending_table td
            {
                padding: 0.5em;
                background: rgba(0, 0, 0, 0.15);
                border: 2px solid #f19f2c;
            }
            .transaction_user_match
            {
                margin-top: 2em;
            }
            .hidden_identifier_for_transaction_match
            {
                background: #5a5959;
                text-shadow: 0px 0px 0.1em #000;
                font-size: 1.25em;
                margin-top: 0.5em;
                text-indent: 0.5em;
            }
            .wc_transaction_type_sel
            {
                background: rgba(0, 0, 0, 0.2);
                padding-left: 0.5em;
                padding-right: 0.5em;
            }
            .wc_transaction_type_sel > option
            {
                background: #6e4203;
            }
            .wc_transaction_add_description
            {
                display: block;
                background: #575757;
                padding: 0.5em;
                width: 80%;
                margin-top: 1em;
            }
            .wc_complete_trans_table_A .glyphicon-remove, .wc_complete_trans_table_B .glyphicon-remove
            {
                top: -1.25em;
                left: 0.4em;
                color: #e96b43;
                cursor: pointer;
                font-size: 1.25em;
            }
            .wc_complete_finalize_payout_btn
            {
                float: right;
                clear: both;
                margin-right: 0.5em;
                top: 1em;
                position: relative;
            }
            .wc_finalizing_table
            {
                border-collapse: inherit;
                max-width: 70%;
                padding-bottom: 1em;
            }
            .wc_finalizing_table td
            {
                border: 1px solid rgba(255, 255, 255, 0.3);
                padding: 0.5em;
                background: rgba(255, 255, 255, 0.05)
            }
            .wc_finalizing_table td input
            {
                width: 7em;
                font-size: 0.8em;
                margin-left: auto;
                margin-right: auto;
                display: block;
                position: relative;
                top: 0.5em;
                cursor: pointer;
            }
            .unassigned_elec_set_btn
            {
                box-shadow: 0px 0px 0.1em #000;
                text-shadow: 0px 0px 0.1em #000;
                margin-top: 1em;
            }
            .pwork_completed_highlight
            {
                background: #bfa10c !important;
            }
            .directory_update_details
            {
                float: right;
                font-size: 1.5em;
                top: 0.3em;
                margin-right: 1em;
                color: #d4c811;
                cursor: pointer;
            }
            .wc_complete_hyphen2
            {
                margin-right: 0.5em;
            }
            .wc_complete_advancement
            {
                margin-right: 1em;
            }
            .payroll_details_div a
            {
                text-shadow: 0px 0px 0px #000;
            }
            .payout_total, .advance_total, .reimbursement_total_payout_details_for_rep
            {
                float: right;
                background: rgba(0, 0, 0, 0.4);
                padding-left: 0.5em;
                padding-right: 0.5em;
                position: relative;
                top: -3em;
                margin-right: 3em;
            }
            .payout_total, .reimbursement_total_payout_details_for_rep
            {
                clear: both;
            }
            .payroll_details_div table
            {
                width: 70%;

            }
            .payroll_details_div table td
            {
                border: 1px solid rgba(0, 0, 0, 0.5);
                background: rgb(53, 48, 48);
                padding: 0.25em;
            }
            .payroll_details_div table th
            {
                background: #177692;
                text-align: center;
                padding: 0.25em;
                border-left: 1px solid #000
            }
            .payroll_details_div .glyphicon-arrow-right
            {
                color: #ebfd13;
                font-size: 1.5em;
                margin-left: auto;
                margin-right: auto;
                display: block;
                width: 30%;
                text-shadow: 0px 0px 0.1em #000;
                cursor: pointer;
            }
            .drop_trans
            {
                color: #F44336;
                font-size: 1.5em;
                margin-left: 0.4em;
                margin-right: auto;
                display: block;
                text-shadow: 0px 0px 0.1em #000;
                cursor: pointer;
            }
            .time_machine_parent
            {
                height: 0px;
                overflow: visible;
                padding-bottom: 3em;
            }
            .payroll_time_machine
            {
                margin-top: 0.5em;
            }
            .payroll_main_btn
            {
                font-size: 0.8em;
                background: #f19f2c;
                text-shadow: 0px 0px 0.1em #000;
                float: right;
                position: relative;
                box-shadow: 0px 0px 0.05em #000;
            }
            .rad_group span
            {
                margin-right: 2em;
            }
            .rad_group input
            {
                margin-right: 0.5em;
            }
            .payroll_details_div .wc_complete_close
            {
                clear: both !important;
                position: absolute;
                right: -0.5%;
                top: -1.5em;
            }
            .advancement_editor_tbl
            {
                width: 100%;
                background: rgba(255, 255, 255, 0.2);
            }
            .advancement_editor_tbl td, .advancement_editor_tbl th
            {
                border-top: 1px solid rgba(0, 0, 0, 0.5);
                padding: 0.3em;
                border-bottom: 1px solid rgba(0, 0, 0, 0.5);
                border-right: 1px solid rgba(0, 0, 0, 0.5);
            }
            .add_to_advance_editor_btn
            {
                float: right;
                background: #009688;
                text-shadow: 0px 0px 0.1em #000;
                box-shadow: 0px 0px 0.05em #000;
                margin-top: 0.5em;
                margin-bottom: 0.5em;
            }
            .editor_outstanding_total
            {
                background: #ff5722;
                text-shadow: 0px 0px 0.1em #000;
                text-align: right;
                padding-right: 1em;
            }
            .positive_advance, .negative_advance
            {
                text-shadow: 0px 0px 0.1em #000;
            }
            .positive_advance
            {
                background: #FF5722;
            }
            .negative_advance
            {
                background: #4CAF50;
            }
            .advance_additional_item input
            {
                background: rgba(0, 0, 0, 0.5);
                width: 100%;
            }
            .advance_additional_item select
            {
                background: #2f2d2d;
                width: 80%;
                margin-left: 10%;
            }
            .advance_additional_item textarea
            {
                background: #adaaaa;
            }
            .rep_specific_advances_editor
            {
                margin-top: 1em;
                background: #177692;
                text-shadow: 0px 0px 0.1em #000;
                font-size: 0.9em;
                box-shadow: 0px 0px 0.1em #000;
            }
            .specific_add_transaction
            {
                margin-top: 1em;
                margin-bottom: 1em;
                background: #177692;
                text-shadow: 0px 0px 0.1em #000;
                font-size: 0.9em;
                box-shadow: 0px 0px 0.1em #000;
            }
            .wc_complete_paid_status
            {
                margin-left: 5em;
                background: #0097d5;
                padding-left: 1em;
                padding-right: 1em;
                font-size: 1.2em;
                line-height: 0em;
                position: relative;
                top: 0.05em;
                text-shadow: 0px 0px 0.1em #000;
                box-shadow: inset 0px 0px 5px;
                display: none;
            }
            .finalize_pment_btn
            {
                background: #177692;
                box-shadow: 0px 0px 0.1em #000;
                text-shadow: 0px 0px 0.1em #000;
                float: right;
                clear: both;
                position: relative;
                top: 2em;
                margin-right: 3em;
            }
            .wc_complete_date_display3
            {
                float: right;
                margin-right: 1em;
            }
            .drop_payscale
            {
                position: absolute;
                left: 102%;
                top: 0%;
                color: #F44336;
                cursor: pointer;
            }
            .new_markets_ul
            {
                border: 1px solid rgb(10, 125, 83);
                padding-top: 1em;
                padding-bottom: 1em;
                background: rgba(255, 255, 255, 0.1);
                list-style-type: none;
                margin-top: 2em;
            }
            .market_li
            {
                margin-bottom: 1em;
                background: rgba(0, 0, 0, 0.1);
                padding-left: 1em;
                width: 90%;
                padding-top: 0.5em;
                padding-bottom: 0.5em;
                list-style-type: none;
            }
            .new_markets_ul .glyphicon-pencil
            {
                float: right;
                color: #f7e90f;
                margin-right: 1em;
                cursor: pointer;
            }
            .new_markets_ul .glyphicon-remove
            {
                float: right;
                color: #F44336;
                margin-right: 0.75em;
                cursor: pointer;
            }
            .new_markets_ul .glyphicon-plus
            {
                float: right;
                color: #4CAF50;
                margin-right: 0.75em;
                cursor: pointer;
            }
            .new_markets_ul .glyphicon-random
            {
                float: right;
                color: #1bd0fd;
                margin-right: 0.75em;
                cursor: pointer;
            }
            .new_markets_ul .glyphicon-file
            {
                float: right;
                color: #FFF;
                margin-right: 0.75em;
                cursor: pointer;
            }
            .label-new-market
            {
                background: #009688;
                text-shadow: 0px 0px 0.1em #000;
                font-size: 1.25em;
                float: right;
                position: relative;
                top: -0.5em;
                margin-bottom: 0.5em;
                cursor: pointer;
            }
            #office_v2_reassignment_sel, #office_v2_reassignment_sel option
            {
                background: #5f5b5b;
                border: 1px solid #fff;
                color: #fff;
            }
            .reconfigure_usage_table
            {
                margin-left: 1em;                
            }
            .reconfigure_usage_table td
            {
                padding-right: 1em;
                padding-bottom: 0.5em;
                padding-top: 0.25em;
            }
            .reconfigure_usage_table th
            {
                background: rgba(0, 0, 0, 0.5);
            }
            .office_li .glyphicon-user
            {
                float: right;
                margin-right: 0.5em;
                color: #d6a50f;
                cursor: pointer;
            }
            .offices_market_user_div
            {
                clear: both;
                width: 94%;
                margin-left: 3%;
                background: rgba(0, 0, 0, 0.25);
                padding: 0.25em;
                text-indent: 0.5em;
                border: 1px solid rgba(0, 0, 0, 1.0);
                margin-bottom: 0.25em;
            }
            .offices_market_user_div .u_name
            {
                margin-right: 1em;
            }
            .offices_market_user_div .u_rid
            {
                background: #28b8bf;
                text-shadow: 0px 0px 0.1em #000;
                padding: 0.25em;
                border-radius: 0.25em;
                box-shadow: 0px 0px 0.1em #000;
            }
            .offices_market_user_div select, .offices_market_user_div option
            {
                background: #494444;                
                border: 0px solid #000;
                color: #fff;
            }
            .offices_market_user_div select
            {
                float: right;
            }
            .pricing_dataset_table, .funds_helper_info
            {
                font-size: 1.25em;
            }
            .pricing_dataset_table th, .funds_helper_info th
            {
                background: #2196F3;
                text-shadow: 0px 0px 0.1em #000;
                padding: 0.25em;
                text-align: center;
            }
            .pricing_dataset_table td:first-child
            {
                background: #2196f3;
                text-align: center;
                text-shadow: 0px 0px 0.1em #000;
                cursor: auto;
            }
            .funds_helper_info td:first-child
            {
                background: #2196f3;
                text-align: center;
                text-shadow: 0px 0px 0.1em #000;
            }
            .pricing_dataset_table td
            {
                border: 2px solid rgba(0, 0, 0, 0.05);
                background: rgba(255, 255, 255, 0.2);
                padding: 0.25em;
                text-align: center;
                cursor: cell;
            }
            .funds_helper_info td
            {
                border: 2px solid rgba(0, 0, 0, 0.05);
                background: rgba(255, 255, 255, 0.2);
                padding: 0.25em;
                text-align: center;
            }
            .funds_helper_info
            {
                margin-top: 1.5em;
            }
            .displayed_cb
            {
                float: right;
                top: 0.2em;
                position: relative;
                left: -12em;
            }
            .proposal_reconfigure_usage
            {
                float: left;
                top: 0.15em;
                margin-right: 1em;
                color: #ffa516;
                cursor: pointer;
                font-size: 1.25em;
                margin-left: 0.5em;
            }
            .dlg_usage_tbl td, .dlg_usage_tbl th
            {
                padding: 0.5em;
            }
            .dlg_usage_tbl td:first-child
            {
                background: #16654b;
            }
            .dlg_usage_tbl th
            {
                background: #16654b;
                text-shadow: 0px 0px 0.1em #000;
            }
            .contractor_file
            {
                font-size: 0.75em;
                margin-top: 1em;
                margin-left: auto;
                margin-right: auto;
                margin-bottom: 2em;
            }
            .contractor_thumb
            {
                max-width: 200px;
                margin-left: auto;
                margin-right: auto;
                min-width: 200px;
                max-height: 200px;
                min-height: 200px;
            }
            .office_deactivation_cb
            {
                float: right;
                position: relative;
                left: 13em;
            }
            .office_geo_glyph
            {
                color: #f11796;
                float: right;
                position: relative;
                left: -0.5em;
                cursor: pointer;
            }
            .office_li .label-primary
            {
                float: right;
                text-shadow: 0px 0px 0.1em #000;
                cursor: pointer;
            }
            .office_li > .glyphicon-usd
            {
                float: right;
                padding-right: 0.5em;
                color: #4caf50;
                cursor: pointer;
            }
            .office_market_override_tbl
            {
                background: rgba(0, 0, 0, 0.5);
                max-width: 105%;
                position: relative;
                left: -7%;
            }
            .office_market_override_tbl th
            {
                text-align: center;
                background: #2196F3;
                text-shadow: 0px 0px 0.15em #000;
                box-shadow: inset 0px 0px 0.25em #000;
                padding-left: 1em;
                padding-right: 1em;
            }
            .office_market_override_tbl td
            {
                text-align: center;
                background: rgba(255, 255, 255, 0.3);
                padding: 0.3em;
            }
            .office_market_override_tr td
            {
                border: 1px solid rgba(255, 255, 255, 0.2);
            }
            .override_x_span
            {
                color: #5cb85c;
                font-size: 1.5em;
            }
            .office_market_override_tr .label-success
            {
                text-shadow: 0px 0px 0.1em #000;
                cursor: pointer;
            }
            .wc_complete_modify_closer
            {
                float: right;
                clear: both;
                margin-right: 0.5em;
                top: 2em;
                position: relative;
            }
            .n_override_table
            {
                width: 80%;
                background: #044e47;
            }
            .n_override_table th
            {
                padding: 0.5em;
                background: rgba(0, 0, 0, 0.4);
            }
            .n_override_table td
            {
                padding: 0.4em;
                border: 2px solid rgba(0, 0, 0, 0.2);
            }
            .new_override_editor_amt
            {
                cursor: cell;
            }
            .offices_market_user_div .glyphicon-ban-circle
            {
                position: relative;
                float: left;
                margin-left: -1.5em;
                left: 36em;
                cursor: pointer;
                color: #FF5722;
            }
            .overrides_last_tr td
            {
                background: rgb(78, 77, 77);
                border: 1px solid rgba(255, 255, 255, 0.2);
            }
            .overrides_other_account_tr td
            {
                background: #06587d;
                border: 1px solid rgba(255, 255, 255, 0.2);
            }
            .override_amt_td
            {
                cursor: cell;
            }
            .overrides_last_tr .glyphicon-remove, .rem_yielder
            {
                float: none !important;
                background: rgba(255, 255, 255, 0.1);
                text-shadow: 0px 0px 0.1em #000;
                padding: 0.5em;
                border-radius: 1em;
                box-shadow: inset 0px 0px 0.25em rgba(255, 255, 255, 0.2);
                left: 0.25em;
                top: -0.05em;
            }
            .office_market_override_enabled_td, .remove_yielder_td
            {
                background: #4e4d4d !important;
            }
            .office_market_override_tr .label-danger
            {
                text-shadow: 0px 0px 0.1em #000;
                cursor: pointer;
            }
            .add-foreign-recipient-btn
            {
                position: absolute;
                left: 100.5%;
                font-size: 0.8em;
                background: #2196f3;
                border-radius: 0em;
                line-height: 0.6em;
                box-shadow: inset 0px 0px 0.25em #000;
                text-shadow: 0px 0px 0.1em #000;
                cursor: pointer;
            }
            .wc_complete_remove_state_x
            {
                float: left;
                background: rgba(0, 0, 0, 0.5);
                padding: 0.25em;
                line-height: 1em;
                margin-left: 0.5em;
            }
            .double_payment_warning
            {
                background: #F44336;
                padding: 1em;
                margin-bottom: 1em;
            }
            .double_payment_warning > span
            {
                color: #FFEB3B;
            }
            .double_payment_warning > p
            {
                float: right;
                width: 95%;
            }
            .payroll_search
            {
                left: -7%;
                position: relative;
                width: 60%;
                margin-bottom: 2em;
            }
            .payroll_search_dd
            {
                float: right;
                margin-right: 15%;
                position: relative;
                top: -0.4em;
            }
            .payroll_search_result
            {
                width: 90%;
                border: 1px solid #05525a;
            }
            .payroll_search_result th
            {
                background: #1f6fbd;
                text-shadow: 0px 0px 0.1em #000;
                padding: 0.5em;
            }
            .payroll_search_result td
            {
                padding: 0.5em;
                border: 1px solid rgba(0, 0, 0, 0.5);
                background: rgba(255, 255, 255, 0.1);
            }
            .payroll_search_result_back
            {
                clear: both;
                display: block;
                position: relative;
                top: -0.5em;
            }
            #data_binding_sel_presentation
            {
                margin-top: 2em;
            }
            .data-bound-label
            {
                float: left;
                position: relative;
                clear: both;                
                top: 2em;
            }
            .data-format-label
            {
                margin-bottom: 0.5em;
                display: inline-block;
            }
            .wc_finalizing_table .glyphicon-remove
            {
                color: #F44336;
                cursor: pointer;
            }
            .x_axis_fill_color_lbl, .x_axis_label_color_lbl, .y_axis_fill_color_lbl, .y_axis_label_color_lbl
            {
                background: #3F51B5;
                padding: 0.25em;
                margin-right: 1em;
            }
            #x_axis_fill_color, #y_axis_fill_color
            {
                margin-right: 5em;
                margin-bottom: 1em;
            }
            .signing_link_gen
            {
                float: right;
                position: relative;
                top: 0em;
                box-shadow: 0px 0px 0.1em #000;
                text-shadow: 0px 0px 0.1em #000;
                clear: both;
                margin-top: -1.5em;
            }
            .pm_modify_svcs
            {
                box-shadow: 0px 0px 0.1em #000;
                text-shadow: 0px 0px 0.1em #000;
            }
            .rep_fee_schedule
            {
                width: 80%;
                margin-left: 10%;
                background: rgba(0, 0, 0, 0.1);
            }
            .rep_fee_schedule td
            {
                padding: 0.4em;
                border: 1px solid rgba(0, 0, 0, 0.1);
                text-align: center;
            }
            .label-mod-closer
            {
                float: right;
                margin-left: 0.5em;
                box-shadow: 0px 0px 0.1em #000;
                text-shadow: 0px 0px 0.1em #000;
                cursor: pointer;
            }
            .customer_office_reassignment_p
            {
                border: 1px solid rgba(46,201,239,0.2);
                background: #403f3f;
                padding: 0.25em;
                cursor: pointer;
            }
            .customer_office_reassignment_p .rdetails
            {
                display: inline-block;
                float: right;
                margin-right: 1em;
                background: rgba(0, 0, 0, 0.1);
            }
            .reassign_office_customer_opt
            {
                border: 1px solid rgba(0, 0, 0, 0.25);
                padding: 0.5em;
                margin-bottom: 1em;
                background: #2196F3;
                min-height: 4em;
            }
            .reassign_office_customer_opt span
            {
                font-size: 1.5em;
                float: right;
                margin-right: 0.5em;
                color: #FF9800;
                background: rgba(0, 0, 0, 0.2);
                border-radius: 1em;
                padding: 0.5em;
                position: relative;
                top: -0.25em;
                font-weight: bold;
                cursor: pointer;
            }
            .swap_slide_pos
            {
                position: relative;
                top: -2.5em;
                left: 9em;
                text-shadow: 0px 0px 0.1em #000;
            }
            .swap_slide_sel
            {
                background: rgba(0, 0, 0, 0.3);
            }
            .slide_cpy_mode_sel
            {
                background: rgba(0, 0, 0, 0.3);
                display: block;
                width: 12em;
                margin-bottom: 0.5em;
            }
            .slide_cpy_target_sel
            {
                background: rgba(0, 0, 0, 0.3);
                display: block;
                margin-top: 0.5em;
            }
            #preview_presentation_entity_type
            {
                background: rgba(0, 0, 0, 0.2);
            }
            #applicable_offices_ul li
            {
				float: left;
				width: 50%;
			}
			#applicable_offices_ul input
			{
				margin-right: 0.5em;
				position: relative;
				top: -0.05em;
			}
			.lb_thumb_img
			{
				max-width: 40px;
			    margin-right: 1em;
			}
			.lb_tally_total
			{
				position: relative;
				display: block;
				font-size: 1.5em;
				top: 1em;
				background: #307984;
				text-indent: 3.75em;
				text-shadow: 0px 0px 0.1em #000;
			}
			#slide_edit_user_input_val
			{
				float: left;
				clear: both;
				margin-top: 1em;
			}
			.label-user-input-default-text
			{
				float: left;
				clear: both;
				position: relative;
				top: 2em;
			}
			.lfn_pencil
			{
				color: #FFEB3B;
				float: right;
				margin-right: 50%;
				cursor: pointer;
			}
			.web_assets_tbl
			{
				width: 50%;
    			border: 1px solid #466371;
    			margin-bottom: 1em;
			}
			.web_assets_tbl th, .web_assets_tbl td
			{
				padding: 0.5em;
				text-align: left;
			}
			.web_assets_tbl .glyphicon-remove
			{
				cursor: pointer;
				color: #FF5722;
			}
			#additional_pm_checkoffs_editor > ul > li > p
            {
                width: 85%;
                display: inline-block;
            }
            #additional_pm_checkoffs_editor > ul > li > .glyphicon-cog
            {
                color: #00BCD4;
                font-size: 1.25em;
                line-height: 0em;
                cursor: pointer;
                margin-right: 0.75em;
            }
            #additional_pm_checkoffs_editor > ul > li > .glyphicon-pencil
            {
                color: #FFC107;
                font-size: 1.25em;
                line-height: 0em;
                cursor: pointer;
                margin-right: 0.75em;
            }
            #additional_pm_checkoffs_editor > ul > li > .glyphicon-remove
            {
                color: #F44336;
                font-size: 1.25em;
                line-height: 0em;
                cursor: pointer;
                margin-right: 0.75em;
            }            
            #additional_pm_checkoffs_editor > ul > li
            {
                border-bottom: 1px solid #fff;
                margin-bottom: 1em;
            }
            .pm_add_checkoff_item_btn
            {
                float: right;
                margin-right: 18%;
            }
            #spruce_hack_btn
            {
                margin-top: 1.5em;
            }
            .tallied_payouts, .tallied_reimbursements
            {
                font-size: 0.9em;
                text-shadow: 0px 0px 0.1em #000;
            }
            .wc_complete_hyphen3
            {
                margin-left: 1em;
                margin-right: 0.5em;
            }
            .rep_address_payout_details
            {
                background: #fff;
                width: 40%;
                padding: 1em;
                margin-bottom: -5em;
                text-shadow: 0px 0px 0px #000;
                color: #333333;
                box-shadow: inset 0px 0px 1px 1px #555;
            }
            .reimbursement_approve_deny_amt > span
            {
                color: #201916;
                text-shadow: 0px 0px 0px #000;
                margin-left: 1em;
                cursor: pointer;
            }
            .export_whitelist_ta
            {
                display: block;
                width: 40%;
                background: #726f6f;
                border: 0px solid #000;
                padding: 0.5em;                
                min-height: 10em;
                margin-bottom: 1em;
            }
            .edit_bonus_thresholds_table
            {
                width: 95%;
                border: 1px solid #125045;
            }
            .edit_bonus_thresholds_table th
            {
                background: #009688;
                padding: 0.25em;
            }
            .edit_bonus_thresholds_table td
            {
                border: 1px solid #009688;
                padding: 0.5em;
            }
            .edit_bonus_thresholds_table .glyphicon-remove
            {
                color: #F44336;
                float: right;
                cursor: pointer;
            }
            .rep_future_projections_btn
            {
                float: right;
                margin-right: 12em;
                margin-top: -0.5em;
                position: relative;
                top: 0em;
                left: -0.5em;
                margin-bottom: 0.5em;
            }
            .payroll_search
            {
                position: relative;
                left: 1em;
            }
            .projected_transactions_table
            {
                width: 70%;
                margin-bottom: 1em;
            }
            .projected_transactions_table th
            {
                background: #095272;
            }
            .projected_transactions_table td
            {
                background: rgba(255, 255, 255, 0.3);
                border: 1px solid #000;
                padding: 0.5em;                
            }
            .proposal_credit_check
            {
                float: right;
                background: rgb(6, 116, 130);
                padding-left: 0.5em;
                padding-right: 0.5em;
                text-shadow: 0px 0px 0.1em #000;
                margin-right: 1em;
            }
            .admin_reimbursement_sel
            {
                background: #575757;
                border: 0px solid #000;
                text-indent: 0.5em;
            }
            #approval_amount_div
            {
                color: #000;
                width: 25%;
            }
            #approval_amount_div .label-primary
            {
                display: block;
                width: 5em;
                margin-top: 0.5em;
                cursor: pointer;
            }
            #archived_customers_search_results_div
            {
                background: rgba(0, 0, 0, 0.2);
                padding: 1em;
            }
            .archived_customers_search_result
            {
                background: #325465;
                text-indent: 0.5em;
                margin-bottom: 0.75em;
                cursor: pointer;
                text-shadow: 0px 0px 0.1em #000;
            }
            .archived_customer_details_div
            {
                width: 90%;
                position: relative;
                left: 10%;
                background: #484644;
                padding: 0.5em;
                top: -0.75em;
            }
            .archived_customer_details_address
            {
                float: left;
            }
            .archived_customer_details_contact
            {
                float: left;
                margin-left: 3em;
            }
            .proposal_fund_dd
            {
                float: right;
                position: relative;
            }
            .proposal_fund_dd button
            {
                font-size: 0.8em;
            }
            .plan_set_order_details
            {
                background: rgba(0, 0, 0, 0.7);
                padding: 1em;
            }
            .plan_set_order_details select, .plan_set_order_details option
            {
                background: #000;
            }            
            .plan_set_order_details textarea
            {
                background: #353030;
                color: #fff;
                padding: 0.5em;
                width: 50%;
                border: 0px solid #000;
            }
            .plan_set_order_details p
            {
                background: #056f65;
                padding: 0.25em;
                margin-top: 1em;
                border: 1px solid #000;
            }
            .plan_set_order_details .missing_value
            {
                background: red !important;
            }
            #plan_set_details_save_btn
            {
                margin-top: 1.5em;
                width: 25%;
            }
            .pdesign_details .plan_set_question p
            {
                background: #238064;
                margin-top: 1em;
            }
            .pdesign_details .plan_set_question select, .pdesign_details .plan_set_question option
            {
                margin-left: 1em;
                background: #15231f;
                border: 1px solid #fff;
            }
            .pdesign_details .plan_set_question textarea
            {
                width: 25%;
                margin-left: 1em;
                background: #353030;
                border: 0px solid #000;
                padding: 0.5em;                
            }
            .pdesign_details .plan_set_question input[type=text], .pdesign_details .plan_set_question input[type='text'], .pdesign_details .plan_set_question input[type="text"]
            {
                margin-left: 1em;
            }
            .pdesign_details .plan_set_question .plan_set_image
            {
                width: 75%;
            }
            .pdesign_customer_name > span:first-child
            {
                width: 80%;
                padding-top: 0.25em;
                padding-bottom: 0.25em;
                display: inline-block;
            }
            #permit_design_update_jurisdiction
            {
                background: #15231f;
                border: 1px solid #fff;
            }
            .delete_customer_note
            {
                background: #e85151;
                padding-left: 0.5em;
                padding-right: 0.5em;
                text-shadow: 0px 0px 0.1em #000;
                cursor: pointer;
            }
            .provision_user_account_div
            {
                background: #0f544e;
                padding: 0.5em;
                text-shadow: 0px 0px 0.1em #000;
                cursor: pointer;
                margin-bottom: 1em;
            }
            .allowed_functions_div
            {
                display: none;
                width: 95%;
                background: #102c42;
                margin-left: 5%;
                padding-top: 1em;
                padding-bottom: 1em;
            }
            .allowed_functions_div li
            {
                float: left;
                width: 50%;
                margin-bottom: 0.25em;
            }
            .allowed_functions_div input
            {
                margin-right: 0.5em;
            }
            #provision_new_account_btn
            {
                float: right;
            }
            #provision_admin_office
            {
                border: 0px solid #000;
                background: #575757;
            }
            .red_border
            {
                border: 1px solid red !important;
            }
            .admin_accounts_sort_arrow_down, .admin_accounts_sort_arrow_up
            {
                font-size: 2.5em;
                line-height: 0em;
                position: relative;
                top: 0.1em;
                float: right;
                cursor: pointer;
            }
            .admin_accounts_sort_arrow_up
            {
                margin-right: 0.5em;
            }
            .phone_symbola
            {
                font-size: 1.25em;
                line-height: 0em;
                position: relative;
                left: 0.2em;
                top: -0.05em;
            }
            #bulk_sms_recipient_option
            {
                background: #1b1919;
                border: 0px solid #000;
                padding: 0.25em;
                margin-bottom: 1em;
            }
            .bulk_sms_message_body
            {
                width: 80%;
                min-height: 5em;
                background: #272525;
                border: 0px solid #000;
                padding: 0.5em;
            }
            #send_sms_one_time
            {
                float: right;
            }
            #create_scheduled_sms_btn
            {
                float: right;
                margin-right: 1em;
            }
            #bulk_sms_time_option, #bulk_sms_weekday_option, #bulk_sms_scheduling_enabled
            {
                display: block;
                margin-bottom: 1em;
                background: #1b1919;
                border: 0px solid #000;
                padding: 0.25em;
            }
            #bulk_sms_name
            {
                display: block;
                margin-bottom: 1em;
            }
            .scheduled_sms
            {
                background: rgba(0, 0, 0, 0.2);
                padding: 0.5em;
                border: 1px solid #11423d;
                margin-bottom: 0.25em;
            }
            .scheduled_sms > input
            {
                float: right;
            }
            .scheduled_sms > .glyphicon-pencil
            {
                color: #FF9800;
                float: right;
                margin-right: 0.75em;
                position: relative;
                top: 0.2em;
                cursor: pointer;
            }
            .scheduled_sms > .glyphicon-send
            {
                color: #009688;
                float: right;
                margin-right: 0.75em;
                position: relative;
                top: 0.2em;
                cursor: pointer;
            }
            .scheduled_sms > .glyphicon-duplicate
            {
                float: right;
                margin-right: 0.75em;
                position: relative;
                top: 0.2em;
                color: #0abfe1;
                cursor: pointer;
            }
            .sms_scheduled_time
            {
                background: rgba(255, 255, 255, 0.1);
                padding-left: 0.5em;
                padding-right: 0.5em;
                margin-left: 1em;
            }
            .scheduled_sms_down, .scheduled_sms_up
            {
                font-size: 2em;
                line-height: 0em;
                color: #FFEB3B;
                cursor: pointer;
                float: right;
                margin-right: 0.5em;
                position: relative;
                top: 0.2em;
            }
            .scheduled_sms_down
            {
                margin-right: 1em;
            }
            .scheduled_sms > .glyphicon.glyphicon-remove
            {
                color: #F44336;
                float: right;
                text-shadow: 0px 0px 0em #000;
                margin-right: 0.75em;
                position: relative;
                top: 0.1em;
                cursor: pointer;
            }
            .fund_tier_table
            {
                display: none;
                border: 1px solid #fff;
            }
            .fund_tier_enabled_sel
            {
                background: #151313;
                border: 0px solid #000;
            }
            .fund_tier_table th
            {
                background: #055049;
                padding: 0.25em;
                border: 1px solid #000;
            }
            .fund_tier_table td
            {
                padding: 0.25em;
                border: 1px solid #000;
            }
            .fund_tier_table input
            {
                width: 10em;
            }
            .funding_tier_dd_proposal
            {
                float: right;
                clear: both;
                margin-top: 0.5em;
            }
            .funding_tier_dd_proposal button
            {
                font-size: 0.8em;
            }
            .plan_set_order_info_highlight
            {
                background: #aa6805;
                text-indent: 0.5em;
                margin-bottom: 1em;
            }
            #standard_checkoff_items_div ul
            {
                float: left;
                width: 49%;
            }
            #standard_checkoff_items_div li
            {
                font-size: 0.8em;
                background: #116a6b;
                padding: 0.25em;
                margin-bottom: 0.25em;
                border: 1px solid #000;
                text-shadow: 0px 0px 0.1em #000;
            }
            .standard_checkoff_down, .standard_checkoff_up, .standard_checkoff_left, .standard_checkoff_right, .standard_checkoff_pencil, .standard_checkoff_remove {                
                font-size: 1.5em;
                line-height: 0em;
                color: #FFEB3B;
                margin-right: 0.5em;
                float: right;
                cursor: pointer;
                position: relative;
                top: 0.25em;
            }
            .standard_checkoff_up
            {
                left: -6em;
            }
            .standard_checkoff_down
            {
                left: -5em;
            }
            .standard_checkoff_left
            {
                left: -4em;
            }
            .standard_checkoff_right
            {
                left: -3em;
            }
            .standard_checkoff_pencil
            {
                left: -2em;
                color: #FFC107;
                font-size: 1.25em;
                top: 0.5em;
            }
            .standard_checkoff_remove
            {
                left: 0em;
                color: #F44336; 
                top: 0.5em;
            }
            .standard_checkoff_items_right .standard_checkoff_left
            {
                left: -3.5em;
            }
            .new_survey_question_div > p
            {
                background: #03A9F4;
            }
            .new_survey_question_div input[type=text], .new_survey_question_div input[type='text'], .new_survey_question_div input[type="text"]
            {
                margin-left: 1em;
                margin-bottom: 1em;
            }
            .new_survey_question_div .date > input
            {
                margin-left: -0.1em;
                margin-bottom: -1em;
            }
            .new_survey_question_div textarea
            {
                border: 1px solid #fff;
                margin-bottom: 1em;
                padding: 0.5em;
            }
            .new_survey_question_div .geolocation
            {
                margin-bottom: 1em;
            }
            .new_survey_question_div select
            {
                margin-bottom: 1em;
                margin-left: 0.75em;
            }
            .new_survey_question_div .btn-success
            {
                margin-top: 1em;
                margin-bottom: 1em;
            }
            .new_survey_question_div ul
            {
                margin-left: -2.75em;
                list-style-type: none;
            }
            .new_survey_question_div ul li input
            {
                position: absolute;
                left: 17em;
            }
            .new_survey_question_div .btn-primary
            {
                margin-bottom: 1em;
                display: block;
            }
            .new_survey_question_div .glyphicon-remove
            {
                color: #F44336;
                margin-top: 0.5em;
                font-size: 1.5em;
            }
            .protected_password
            {
                border: 1px solid #000;
                background: rgba(0, 0, 0, 0.2);
                padding: 0.5em;
            }
            .protected_password input
            {
                float: right;
            }
            .checklist_fund_ta
            {
                display: block;
                width: 90%;
                margin-top: 1em;
                background: rgba(0, 0, 0, 0.2);
                padding: 0.5em;
                border: 1px solid #000;
                min-height: 10em;
            }
            .line_item_points
            {
                float: right;
                margin-right: 3em;
                cursor: cell;
                background: #03A9F4;
                padding-left: 0.5em;
                padding-right: 0.5em;
                text-shadow: 0px 0px 0.1em #000
            }
            .points_indicator
            {
                float: right;
                margin-right: 5em;
            }
            .svc_item_points
            {
                cursor: cell;
            }
            .fee_schedule_table .arrow
            {
                float: right;
                font-size: 1.5em;
                color: #4CAF50;
                cursor: pointer;
                margin-left: 1em;
            }
            .point_cost_dolla
            {
                color: #4CAF50;
                font-size: 2em;
                padding-right: 0.25em;
                position: relative;
                top: 0.15em;
            }
            .service_point_fee_save
            {
                margin-left: 0.5em;
                text-shadow: 0px 0px 0.1em #000;
                position: relative;
                top: -0.1em;
                cursor: pointer;
            }
            .fund_up_arrow, .fund_down_arrow
            {
                float: right;
                position: relative;
                left: -3em;
                font-size: 1.5em;
                line-height: 0em;
                cursor: pointer;
                color: yellow;
                top: 0.25em;
            }
            .fund_down_arrow
            {
                left: -4em;
            }
            .market_rp
            {
                float: right;
                margin-right: 1em;
                text-shadow: 0px 0px 0.1em #000;
                cursor: pointer;
            }
            .archived_customer_details_restore
            {
                float: left;
                margin-left: 3em;
            }
            .archived_customer_details_restore .label
            {
                cursor: pointer;
                text-shadow: 0px 0px 0.1em #000;
            }
            #breadcrumb_select_market, #breadcrumb_select_office, #breadcrumb_select_rep, #breadcrumb_select_hour
            {
                background: #363030;
                border: 1px solid #000;
                margin-right: 1em;
                margin-bottom: 1em;
            }
            .custom_options_tbl td, .custom_options_tbl th
            {
                border: 1px solid #03A9F4;
                padding: 0.5em;
            }
            .custom_options_tbl th
            {
                background: #06524b;
            }
            .custom_options_tbl input
            {
                text-indent: 0.5em;
            }
            .custom_option_dollar
            {
                color: #4CAF50;
                font-size: 1.5em;
                line-height: 0em;
                display: inline-block;
                margin-right: 0.5em;
            }
            .custom_options_tbl .glyphicon-remove
            {
                color: #E91E63;
                display: inline-block;
                margin-left: auto;
                margin-right: auto;
                font-size: 1.5em;
                margin-left: 1em;
                cursor: pointer;
            }
            .tax_bracket_matrix td
            {
                border: 1px solid #000;
                width: 25%;
                padding: 0.5em;
                background: rgba(255, 255, 255, 0.1);
                cursor: cell;
            }
            .tax_bracket_matrix tr:first-child td
            {
                cursor: default;
                background: #03A9F4;
                text-shadow: 0px 0px 0.1em #000;
            }
            .tax_bracket_matrix .glyphicon-remove
            {
                cursor: pointer;
                color: #F44336;
            }
            .media_tbl th
            {
                background: #009688;
            }            
            .media_tbl td, .media_tbl th {
                padding: 0.5em;
                border: 1px solid #000;
            }
            .media_tbl .glyphicon-remove
            {
                cursor: pointer;
                color: #F44336;
                font-size: 2em;
            }
            .media_tbl .glyphicon-pencil
            {
                font-size: 2em;
                position: relative;
                color: #FFC107;
                cursor: pointer;
                margin-left: 1em;
                margin-right: 1em;
            }
            .arrow_up_media, .arrow_down_media, .quiz_up_arrow, .quiz_down_arrow, .power_up_up_arrow, .power_up_down_arrow
            {
                font-size: 2em;
                margin-left: 0.5em;
                color: #21cce2;
                cursor: pointer;
            }
            .media_tbl .label-primary
            {
                cursor: pointer;
            }
            .quiz_question
            {
                background: #545151;
                padding: 0.5em;
                margin-top: 1em;
                margin-bottom: 1em;
            }
            .quiz_question .glyphicon
            {
                cursor: pointer;
            }
            .quiz_question > p
            {
                background: #03A9F4;
                text-shadow: 0px 0px 0.1em #000;
                text-indent: 0.5em;
                margin-left: -1em;
                position: relative;
                left: 0.5em;
            }
            .quiz_question > p > .glyphicon-pencil            
            {
                font-size: 1.25em;
                padding-top: 0.25em;
                float: right;
                position: relative;
                top: -0.1em;
                right: 1em;
                color: #FFC107;
            }
            .quiz_question > p > .glyphicon-remove
            {
                font-size: 1.25em;
                padding-top: 0.25em;
                float: right;
                /* clear: both; */
                position: relative;
                top: -0.1em;
                right: 1em;
                color: #ef6f65;
            }
            .quiz_question ul .glyphicon-pencil
            {
                color: #FFC107;
            }
            .quiz_question ul .glyphicon-remove
            {
                color: #ef6f65;
                margin-left: 0.5em;
            }
            .quiz_correct_container input
            {
                float: right;
            }
            .quiz_choice_text
            {
                display: inline-block;
                margin-left: 1.5em;
            }
            .quiz_question .label-success
            {
                text-shadow: 0px 0px 0.1em #000;
                font-size: 1em;
                margin-bottom: 0.5em;
                display: inline-block;
                cursor: pointer;
            }
            .media_tbl_powerup td > .glyphicon-pencil
            {
                font-size: 1em;
            }
            .media_tbl_powerup li .glyphicon-remove, .media_tbl_powerup li .glyphicon-pencil
            {
                font-size: 0.8em;
                margin-right: 0.5em;
                margin-left: 0em;
            }
            .media_tbl_powerup ul
            {
                list-style-type: decimal;
            }
            .power_up_incentives_ul li
            {
                border: 1px solid #000;
                background: rgba(255, 255, 255, 0.1);
                padding: 0.5em;
            }
            #power_up_icon
            {
                width: 1em;
                display: inline-block;
                margin-right: 1em;
            }
            #sign_off_tbl
            {
                width: 100%;
            }
            #sign_off_tbl .label
            {
                text-shadow: 0px 0px 0.1em #000;
                cursor: pointer;
                margin-left: 1em;
                margin-right: 1em;
            }
            #sign_off_tbl th
            {
                background: #009688;
                text-shadow: 0px 0px 0.1em #000;
            }
            #sign_off_tbl td, th
            {
                padding: 0.5em;
                border: 1px solid #000;
            }
            .directory_emp_address .img-responsive
            {
                max-width: 50px;
                position: absolute;
                top: 0;
                right: 150px;
            }
            #ed_office_filter, #ed_user_type_filter
            {
                background: #575757;
                margin-left: 1em;
            }
            .media_tbl .btn-primary
            {
                margin-right: 1em;
            }
            #to_do
            {
                overflow: scroll;
                z-index: 1000;
                position: fixed;
                top: 0;
                left: 0;
                width: 400px;
                padding: 1em;
                background: #443f3f;
                height: 400px;
                border: 1px solid #4f7586;
                -webkit-transition: width 0.25s; /* Safari */
                transition: width 0.25s;
            }
            #to_do_items
            {
                overflow: scroll;
            }
            #to_do > p
            {
                background: #2196F3;
                text-align: center;
                font-size: 1.5em;
                text-shadow: 0px 0px 0.1em #000;
            }
            #to_do > .symbola
            {
                position: absolute;
                top: 0.75em;
                right: 0.6em;
                font-size: 1.5em;
                cursor: pointer;
            }
            .to_do_minimized > p
            {
                width: 0px;
                overflow: hidden;
            }
            .to_do_minimized
            {
                width: 80px !important;
                margin-left: -2em;
                left: 0px !important;
                background: transparent !important;
                border: 0px solid #000 !important;
                overflow: hidden !important;
            }
            .to_do_minimized #to_do_items
            {
                display: none;
            }
            .to_do_minimized .symbola
            {
                left: 2em;
            }
            .to_do_up, .to_do_down
            {
                color: #FFC107;
                font-size: 1.5em;
                position: relative;
                top: -0.5em;
                cursor: pointer;
                display: none;
            }
            .to_do_down
            {
                float: right;
            }
            #to_do_loading, .to_do_loading
            {
                display: none;
            }
            #to_do_loading img
            {
                width: 40px;
            }
            .to_do_minimized h3
            {
                display: none !important;
            }
            .to_do_minimized #load_incomplete_to_dos, .to_do_minimized #load_completed_to_dos, .to_do_minimized .to_do_details
            {
                display: none;
            }
            .to_do_item
            {
                background: rgba(0, 0, 0, 0.25);
                margin-bottom: 0.25em;
                margin-top: 0.25em;
                font-size: 0.8em;
            }
            .to_do_item .glyphicon-remove
            {
                cursor: pointer;
                color: #F44336;
            }
            .to_do_item .glyphicon-info-sign
            {
                cursor: pointer;
                color: #2196f3;
            }
            .to_do_item input
            {
                margin-left: 0.5em;
                margin-right: 1em;
            }
            .to_do_item > .glyphicon
            {
                float: right;
                margin-right: 0.25em;
                margin-left: 0.25em;
                position: relative;
                top: 0.25em;
                cursor: pointer;
            }
            .to_do_details
            {
                background: rgba(0, 0, 0, 0.25);
                position: relative;
                top: -0.25em;
                width: 95%;
                left: 5%;
                padding: 0.5em;
            }
            .to_do_details select, .to_do_details option
            {
                background: #575757;
                border: 0px solid #000;
                color: #fff;
            }
            #due_dt_label
            {
                position: relative;
                top: -12.1em;
                left: 12em;
                margin-bottom: -5em;
            }
            #due_dt_dp_div
            {
                position: relative;
                top: -6.35em;
                left: 12em;
            }
            #due_sel
            {
                position: relative;
                top: -6.35em;
                left: 12em;
            }
            #to_do_notes
            {
                position: relative;
                top: -13em;
                width: 100%;
                background: #575757;
                margin-bottom: -12em;
                height: 5em;
                padding: 0.25em;
            }
            .to_do_details > p
            {
                background: #2196f3;
                text-shadow: 0px 0px 0.1em #000;
                text-indent: 0.5em;
            }
            .to_do_details > .label-danger
            {
                cursor: pointer;
                margin-bottom: 1em;
                display: inline-block;
            }
            .to_do_item > .glyphicon-pencil
            {
                color: #FFC107;
            }
            .to_do_incomplete .to_do_details > .label-danger
            {
                margin-top: 5em;
                position: relative;
                top: -5em;
            }
            .to_do_incomplete .to_do_details > p
            {
                position: relative;
                top: -4.5em;
                margin-top: 1em;
                margin-bottom: 1em;
            }
            .due_date_diffed
            {
                background: #4CAF50;
                float: right;
                text-shadow: 0px 0px 0.1em #000;
                padding-left: 0.5em;
                padding-right: 0.5em;
                margin-right: 2em;
            }
            .add_to_do_ta
            {
                background: #575757;
                padding: 0.5em;
                width: 80%;
                border: 0px solid #000;
            }
            .to_do_time, .to_do_time option, .to_do_mode
            {
                background: #575757;
                border: 0px solid #000;
            }
            #details_reminder_date
            {
                position: relative;
                top: -4.9em;
            }
            #reminder_sel
            {
                position: relative;
                top: -4.9em;
            }
            #to_do_details_reassign_label
            {
                position: relative;
                top: 0.25em;
            }
            .to_do_minimized #add_new_todo, .to_do_minimized #to_do_refresh_btn, .to_do_minimized #add_new_kwikie
            {
                display: none;
            }
            #to_do > .label
            {
                margin-right: 0.5em;
                text-shadow: 0px 0px 0.1em #000;
                cursor: pointer;
                margin-bottom: 1em;
                display: inline-block;
            }
            .to_do_minimized > .label
            {
                display: none !important;
            }
            .to_do_details_owner_name
            {
                margin-bottom: 7em;
            }
            .to_do_reminder_lbl
            {
                position: relative;
                top: -5.8em;
            }
            .pm_to_do
            {
                margin-bottom: 0.5em;
                border: 1px solid rgba(255, 255, 255, 0.25);
                padding-bottom: 0.25em;
                padding-top: 0.25em;
            }
            .pm_to_do > input
            {
                margin-right: 0.5em;
            }
            .pm_to_do > span
            {
                float: right;
                margin-left: 1em;
            }
            .to_do_pm_edit
            {
                background: transparent !important;
                float: right !important;
                position: relative;
                top: -0.1em;
                left: -0.25em !important;
                cursor: pointer;
            }
            .to_do_pm_drop
            {
                cursor: pointer;
                color: #ff0e60;
            }
            .pm_edit_to_do_notes_ta
            {
                background: #000;
                padding: 0.5em;
                width: 100%;
                min-height: 5em;
            }
            .fc-day-grid-event > .fc-content
            {
                white-space: inherit;
            }
            .fc-day-grid
            {
                background: #2b4442;
            }
            .fc-unthemed .fc-today 
            {
                background: transparent;
            }
            /*.fc-today-button
            {
                display: none;
            }
            .fc-day-grid
            {
                display: none;
            }
            .fc-time-grid .fc-slats td
            {
                height: 5em;
                min-height: 5em;
            }
            .fc-unthemed .fc-today
            {
                background: #484847;
            }
            .fc-event
            {
                border: 1px solid #000000;
                background-color: #117B29;
                font-weight: 400;
                padding-top: 0.5em;
                padding-left: 0.5em;
            }*/
            #new_event_type_sel, .event_time_sel, #new_event_color
            {
                background: #000;
                color: #fff;
            }
            #new_event_name
            {
                margin-bottom: 1em;
            }
            #new_event_details
            {
                display: block;
                width: 100%;
                margin-bottom: 1em;
                background: #575757;
                padding: 0.5em;
            }
            #event_details_one_time, #event_details_repeated
            {
                display: none;
            }
            .fc-content
            {
                text-shadow: 0px 0px 0.1em #000;
            }
            #new_event_dow_ul input
            {
                margin-right: 1em;
            }
            .event_black
            {
                background: #000;
                border: 1px solid #000;
            }
            .event_red
            {
                background: #F44336;
                border: 1px solid #F44436;
            }
            .event_orange
            {
                background: #d8a60f;
                border: 1px solid #d8a60f;
            }
            .event_yellow
            {
                background: #FFEB3B;
                border: 1px solid #FFEB3B;
            }
            .event_green
            {
                background: #4CAF50;
                border: 1px solid #4CAF50;
            }
            .event_blue
            {

            }
            .event_purple
            {
                background: #9C27B0;
                border: 1px solid #9C27B0;
            }
            .event_pink
            {
                background: #f436e1;
                border: 1px solid #f436e1;
            }
            .event_grey
            {
                background: #615d5d;
                border: 1px solid #000000;
            }
            [data-type="assigned"] #details_reminder_date
            {
                top: -5.7em;
            }
            [data-type="assigned"] #reminder_sel
            {
                top: -5.75em;
            }
            [data-type="assigned"] .recurring_reminders_ul
            {
                top: -7em;
            }
            .recurring_reminders_ul
            {
                position: relative;
                top: -5em;
            }
            .recurring_reminders_ul input
            {
                margin-right: 0.75em;
            }
            .add_reminders_ul input
            {
                margin-right: 0.5em;
            }
            .to_do_details > .label-primary
            {
                margin-left: 1em;
                cursor: pointer;
            }
            .fc-today
            {
                background: #22495a !important;
            }
            .directory_emp_manager input
            {
                margin-left: 0.5em;
            }
            .directory_emp_manager
            {
                color: #eadd34;
                margin-left: 2em;
            }
            .color_key_ul li
            {
                float: left;
                width: 25%;
                list-style-type: none;
            }
            .color_key
            {
                display: inline-block;
                width: 25px;
                height: 25px;
                background: #000;
                position: relative;
                top: 0.5em;
                margin-right: 0.5em;
            }
            .color_key_black
            {
                background: #000;
            }
            .color_key_red
            {
                background: #F44336;
            }
            .color_key_orange
            {
                background: #d8a60f;
            }
            .color_key_yellow
            {
                background: #FFEB3B;
            }
            .color_key_green
            {
                background: #4CAF50;
            }
            .color_key_blue
            {
                background: #3a87ad;
            }
            .color_key_purple
            {
                background: #9C27B0;
                border: 1px solid #9C27B0;
            }
            .color_key_pink
            {
                background: #f436e1;
            }
            .color_key_grey
            {
                background: #615d5d;
            }
            .appears_after_msg
            {
                background: #00bcd4;
                text-shadow: 0px 0px 0.1em #000;
                padding-left: 0.5em;
                padding-right: 0.5em;
            }
            .appears_after_sel
            {
                background: #676363;
                margin-left: 1em;
            }
            #customer_email_template_save
            {
                float: right;
                position: relative;
                top: -2em;
                padding-left: 1em;
                padding-right: 1em;
            }
            #customer_email_template_subject
            {
                width: 100%;
                margin-bottom: 1.5em;
            }
            #customer_email_template_ta
            {
                width: 100%;
                background: #575757;
                min-height: 25em;
                border: 0px solid #000;
                padding: 1em;
            }
            .fc-left
            {
                float: left;
                position: relative;
                left: 5.25em;
                margin-bottom: 1em;
            }
            .pm_communication_buttons
            {
                list-style-type: none;
            }
            .pm_communication_buttons button
            {
                margin-left: 3em;
                margin-bottom: 0.5em;
            }
            .customer_communication_date
            {
                font-size: 0.9em;
                background: rgba(0, 0, 0, 0.2);
                padding-left: 0.5em;
                padding-right: 0.5em;
                cursor: cell;
                margin-left: 1em;
            }
            .event_owner_sel
            {
                background: #575757;
                border: 0px solid #000;
            }
            .pm_event_details_ta
            {
                background: #575757;
                border: 0px solid #000;
                width: 80%;
                min-height: 8em;
            }
            .credits_usage_b, .credits_usage_p
            {
                color: #000;
            }
            .bootstrap-dialog-body .credits_usage_b, .bootstrap-dialog-body .credits_usage_p
            {
                color: #fff;
            }
            #credits_reconfigure_twelve_months_1, #credits_reconfigure_twelve_months_0
            {
                display: none;
            }
            .residual_bill_warning
            {
                background: #fff;
                color: #000;
                border: 1px solid red;
                padding: 0.5em;
            }
            .tenative_install_btn
            {
                float: right;
                cursor: pointer;
            }
            .not_applicable_hr
            {
                margin-top: 0em;
                margin-bottom: 0em;
                position: relative;
                top: -0.75em;
                border-top: 1px solid #000;
            }
            .unassigned_plan_set_completed
            {
                float: right;
            }
            .pm_notes_ul li
            {
                border: 1px solid rgba(0, 0, 0, 0.2);
                padding: 0.5em;
            }
            .pm_notes_ul .glyphicon-pencil
            {
                float: right;
                background: rgb(110, 66, 7);
                padding: 0.5em;
                border-radius: 0.25em;
                position: relative;
                top: -0.2em;
            }
            #paycheck_preview_msg_ta
            {
                padding: 0.5em;
                width: 50%;
                min-height: 5em;
                background: #807c7c;
                border: 0px solid #000;
            }
            .install_notes_ta
            {
                min-height: 5em;
                padding: 0.5em;
                width: 80%;
                background: #777272;
                border: 0px solid #000;
            }
            #attachment_type
            {
                background: #585656;
            }
            .directory_emp_pm input, .directory_emp_accepts_leads input
            {
                margin-left: 0.5em;
            }
            .directory_emp_pm
            {
                color: #ebde33;
            }
            #install_happened_sel, #pto_received_yes_no_sel
            {
                background: #000;
                border: 0px solid #000;
            }
            #cust_comm_log_h4
            {
                float: right;
                position: relative;
                top: -2em;
                right: 2em;
            }  
            .pm_add_communication_btn
            {
                float: right;
                clear: both;
                margin-top: -2em;
            }  
            .pm_add_note_btn
            {
                clear: both;
                display: block;
            } 
            .pm_comm_tbl
            {
                float: right;
                margin-top: -6.5em;
                background: rgba(255, 255, 255, 0.1);
                width: 45%;
                left: 0em;
                position: relative;
            }
            .pm_comm_tbl td
            {
                padding: 0.5em;
                border: 1px solid rgba(0, 0, 0, 0.5);
            }
            #pm_sel_comm_type
            {
                background: #000;
                border: 0px solid #000;
            }
            .comm-pencil
            {
                left: 0em !important;
                background: #6e4207 !important;
            }
            .standard_checkoff_pencil
            {
                display: none;
            }
            .unassigned_leads_tbl
            {
                min-width: 500px;
            }
            .unassigned_leads_tbl td
            {
                padding: 1em;
                border: 1px solid #000;
                background: #184a46;
            }
            .lead_assignment_btn
            {
                cursor: pointer;
                text-shadow: 0px 0px 0.1em #000;
            }
            #breadcrumbs_custom_range
            {
                float: right;
                position: relative;
                top: -3em;
                left: -24em;
            }
            #breadcrumbs_report_type_sel
            {
                background: #000;
                border: 0px solid #000;
            }
            #breadcrumb_report_btn
            {
                float: right;
                position: relative;
                top: -3em;
                left: -30em;
            }
            .fc-scroller
            {
                height: auto !important;
            }
            #unassigned_leads_lbl, #assigned_leads_lbl
            {
                margin-right: 3em;
                cursor: pointer;
                text-shadow: 0px 0px 0.25em #000;
                position: relative;
                top: -1em;
            }
            .leads_admin_a
            {
                background: #fff;
                border-radius: 0.25em;
                padding: 0.5em;
                margin-right: 3em;
                border: 2px solid #000;
                position: relative;
                top: -1em;
            }
            .admin_edit_lead_notes_ta
            {
                background: #1f1e1e;
                width: 80%;
                min-height: 5em;
                padding: 0.5em;
                border: 0px solid #000;
            }
            .admin_edit_lead_notes_and_checklist_pencil
            {
                color: #FFC107;
                cursor: pointer;
            }
            .rep_notes_from_unassigned
            {
                cursor: pointer;
            }
            .lead_checklist_name_span
            {
                width: 50%;
                display: inline-block;
            }
            .lead_checklist_ul .glyphicon-pencil
            {
                margin-left: 2em;
                color: #d29f28;
                cursor: pointer;
            }
            .lead_checklist_ul .glyphicon-remove
            {
                color: red;
                margin-left: 0.5em;
                cursor: pointer;
            }
            .edit_lead_checklist_ta_from_settings
            {
                border: 0px solid #000;
                width: 50%;
                background: #656060;
                height: 10em;
                padding: 0.5em;
            }
            .project_tally
            {
                float: right !important;
                padding-right: 1em;
            }
            .pm_customers_wrapper_v2
            {
                background: #3e3b3b;
                width: 96%;
                margin-left: 4%;
                padding: 0.5em;
                margin-top: 0.5em;
            }
            .pm_v2_customer
            {
                border: 1px solid rgba(255, 255, 255, 0.25);
                padding: 0.25em;
            }
            .pm_sub_group
            {
                background: #3e3b3b;
                margin-top: 0.25em;
                width: 98%;
                margin-left: 2%;
                text-indent: 0.5em;
                border: 1px solid #000;
            }
            .pm_group_v2
            {
                background: #484545;
                text-shadow: 0px 0px 0.1em #000;
                padding: 0.25em;
                margin-bottom: 0.75em;
                min-height: 2em;
                text-indent: 0.5em;
                border: 1px solid #000;
            }
            .pm_v2_customer, .pending_electrical_customers
            {
                
                background: #AB6805;
                text-shadow: 0px 0px 0.05em #000;
                text-indent: 0.5em;
                /* width: 90%; */
                /* left: 10%; */
                position: relative;
                cursor: pointer;
            }
            .pending_electrical_customers
            {
                width: 93%;
                margin-left: 7%;
            }
            .pm_v2_wrapper .pm_customer_details_info
            {
                width: 95%;
                left: 5%;
            }
            .pm_v2_wrapper .pm_customer_details_info .glyphicon-pencil
            {
                padding-left: 0em;
            }
            .pm_v2_wrapper .pm_detail_pm_name
            {
                left: -10%;
                position: relative;
            }
            .pm_v2_wrapper .pm_close_btn
            {
                background: rgba(0, 0, 0, 0.7);
                padding-left: 0em;
                padding-right: 0.5em;
                border-radius: 0.25em;
                cursor: pointer;
                float: right;
                position: relative;
                left: -0.5em;
                top: -1.4em;
            }
            .pm_v2_wrapper .pm_save_me
            {
                background: #231504;
                padding-left: 0.1em;
                padding-right: 0.5em;
                padding-top: 0.1em;
                padding-bottom: 0.1em;
                position: relative;
                left: -1.5em;
                float: none;
                right: 0em;
            }
            .pm_v2_wrapper .pm_customer_details_info .glyphicon-refresh
            {
                padding-left: 0em;
            }
            .project_tally
            {
                background: #1a79a5;
                width: 3em;
                text-align: center;
                border-radius: 0.25em;
                font-size: 0.8em;
                margin-right: 0.5em;
            }
            .pm_sub_group .project_tally
            {
                margin-top: 0.75em;
            }
            .pm_v2_wrapper .pm_comm_tbl
            {
                margin-top: -4em;
            }
            #pm_v2_search_box, #pm_v2_addie_search
            {
                margin-bottom: 1em;
                width: 100%;
            }
            .pm_v2_search_match
            {
                background: #009688;
                text-indent: 0.5em;
                text-shadow: 0px 0px 0.1em #000;
                cursor: pointer;
            }
            .pto_received_details .pm_comm_tbl
            {
                margin-top: -1.75em;
                left: 10%;
            }
            .pm_v2_wrapper .pto_received_details .pm_close_btn
            {
                top: 0em;
            }
            .directory_emp_user_type_change
            {
                display: block;
                width: 10em;
                text-shadow: 0px 0px 0.1em #000;
                margin-top: 1em;
                cursor: pointer;
            }
            .directory_emp_pin_check
            {
                text-shadow: 0px 0px 0.1em #000;
                border: 0px solid #000;
                width: 10em;
                cursor: pointer;
                margin-left: 1em;
            }
            .credits_edit_sp_two_pencil
            {
                margin-left: 1em;
            }
            #credits_edit_sp2_hour, #credits_edit_sp2_min, #credits_edit_sp2_ampm
            {
                background: black;
                border: 0px solid #000;
                margin-right: 1em;
            }
            .signed_days_ago_pm_tab
            {
                background: rgba(0, 0, 0, 0.2);
                /* padding: 0.25em; */
                float: right;
                /* position: relative; */
                /* top: 0; */
                text-align: center;
                padding-right: 0.25em;
            }
            .sp2_schedule_market_sel, .sp2_schedule_office_sel, .sp2_schedule_rep_sel
            {
                background: #000;
                border: 0px solid #000;
                margin-right: 1em;
            }
            #manage_recurring_transactions_btn
            {
                float: left;
                position: relative;
                left: 1em;
                top: -1em;
            }
            #recurring_transaction_type_sel
            {
                background: #575757;
                border: 1px solid #000;
            }
            .recurring_transactions_tbl
            {
                width: 100%;
            }
            .recurring_transactions_tbl td, .recurring_transactions_tb th
            {
                padding: 0.5em;
                border: 1px solid #000;
            }
            .recurring_transactions_tbl td
            {
                background: rgba(0, 0, 0, 0.25);
            }
            .recurring_transactions_tbl .glyphicon
            {
                cursor: pointer;
            }
            .recurring_transactions_tbl .glyphicon-remove
            {
                color: red;
            }
            .recurring_transactions_tbl .glyphicon-pencil
            {
                color: yellow;
                float: right;
                margin-top: 1.5em;
            }
            .recurring_transaction_user_img
            {
                max-width: 40px;
            }
            #rep_sp2_fcal .fc-time-grid-event
            {
                min-height: 9em;
            }
            .rep_sp2_address
            {
                background: #25536b;
                padding: 0.25em;
                margin-left: 0.25em;
            }
            .rep_sp2_phone
            {
                color: yellow;
                text-indent: 0.25em;
                display: inline-block;
                position: relative;
                z-index: 100;
            }
            .lead_search_box
            {
                margin-bottom: 2em;
                width: 25em;
                background: rgb(50, 119, 180);
                text-indent: 0.5em;
                border: 0px solid #000;
            }
            .standard_sel
            {
                background: #000;
                border: 0px solid #000;
                margin-bottom: 0.5em;
            }
            .pending_user_registration .btn
            {
                float: right;
                margin-bottom: 1em;
                display: inline-block;
            }

            .pending_user_registration
            {
                border: 1px solid #009688;
                padding: 0.5em;
                margin-bottom: 1em;
                background: rgba(255, 255, 255, 0.05);
                min-height: 4em;
            }
            .with_ab_call
            {
                background: #4CAF50;
            }
            .lead_archive_btn
            {
                margin-top: 0.5em;
                display: inline-block;
                cursor: pointer;
            }
            .missing_docs_ta
            {
                width: 80%;
                min-height: 5em;
                background: rgba(255, 255, 255, 0.2);
                border: 0px solid #000;
                padding: 0.5em;
            }
            #grid_map
            {
                margin-left: auto;
                margin-right: auto;
                width: 800px;
                height: 500px;
            }
            .grid_region_market_sel, .grid_region_office_sel, .grid_region_time_sel, .grid_region_status_sel, .grid_region_rep_sel
            {
                background: #000;
                border: 0px solid #000;
                margin-bottom: 1.5em;
                margin-right: 0.5em;
                position: relative;
            }
            #grid_area_management .symbola
            {
                position: relative;
                left: -0.5em;
            }
            .region_info_tbl td, .info_window_transaction_tbl td, .info_window_transaction_tbl th
            {
                color: #000;
                padding: 0.5em;
                border: 1px solid rgba(0, 0, 0, 0.25);
            }
            .info_window_region_delete, .info_window_region_reassign
            {
                float: right;
                text-shadow: 0px 0px 0.1em #000;
                cursor: pointer;
            }
            #region_draw_reset_btn, #region_draw_save_btn
            {
                margin-right: 1em;
                height: 2em;
                line-height: 0em;
                text-shadow: 0px 0px 0.1em #000;
            }
            #boundaries_save_btn, #boundaries_cancel_btn
            {
                display: none;
                margin-right: 1em;
                margin-bottom: 1em;
            }
            #cal_refresh_hint
            {
                position: fixed;
                top: 50px;
                right: 10px;
                text-shadow: 0px 0px 0.1em #000;
                font-size: 1em;
                cursor: pointer;
                z-index: 1000;
            }
            .region_notes_ta
            {
                color: #000;
                padding: 0.25em;
            }
            .pending_electrical_list
            {
                background: #484545;
                text-shadow: 0px 0px 0.1em #000;
                padding: 0.25em;
                margin-bottom: 0.75em;
                min-height: 2em;
                text-indent: 0.5em;
                border: 1px solid #000;
            }
            .pending_electrical_list .electrical_tally
            {
                background: #1a79a5;
                width: 3em;
                text-align: center;
                border-radius: 0.25em;
                font-size: 0.8em;
                margin-right: 0.5em;
                float: right;
                text-indent: 0em;
            }
            .lb_dds, .lb_tally_total, .lb_main_div
            {
                width: 90%;
                margin-left: auto;
                margin-right: auto;
            }
            #mainbtns .open > .dropdown-menu
            {
                left: -15em;
            }
            .payouts_edit_amount_pencil
            {
                cursor: pointer;
                color: #FFC107;
            }    
            .emp_directory_user_type_sel
            {
                display: block;
                background: #35373a;
                margin-top: 0.5em;
                border: 1px solid #efad4e;
                margin-bottom: 0.5em;
            }
            .payment_customization_label
            {
                text-shadow: 0px 0px 0.1em #000;
                cursor: pointer;
            }         
            .emergency_info_symbola
            {
                color: #0dddf4 !important;
                margin-left: -0.5em !important;
            }   
            .expand_payroll_btn
            {
                position: relative;
                top: -8.6em;
            }
            .outstanding_balances_tbl td
            {
                padding: 0.5em;
                border: 1px solid #71a0b5;
                text-align: center;
            }
            .outstanding_balances_tbl {
                width: 100%;
            }
            .ar_customer
            {
                cursor: pointer;
                background: rgba(255, 255, 255, 0.1);
                padding: 0.25em;
                text-indent: 0.5em;
                clear: both;
            }
            .ar_signed_date
            {
                float: right;
                margin-right: 1em;
                background: #49849f;
                text-shadow: 0px 0px 0.1em #000;
                padding-left: 0.5em;
                padding-right: 1em;
            }
            .ar_search
            {
                width: 60%;
                margin-bottom: 1em;
            }
            .ar_search_result_item
            {
                background: #f1ae43;
                width: 60%;
                text-shadow: 0px 0px 0.1em #000;
                text-indent: 1em;
                cursor: pointer;
            }
            .ar_goal
            {
                margin-right: 1em;
                text-shadow: 0px 0px 0.1em #000;
                cursor: pointer;
            }
            .ar_container
            {
                width: 90%;
                float: right;
                background: #4684a0;
                padding: 1em;
                margin-top: -0.5em;
            }
            .ar_details_card
            {
                background: #fff;
                color: #575757;
                padding: 1em;
                width: 45%;
                float: left;
                margin-right: 2.5%;
                margin-left: 2.5%;
                box-shadow: 0px 0px 0px 0.25em rgba(0, 0, 0, 0.1);
            }
            .ar_details_card > p
            {
                border: 1px solid #afaaaa;
                padding-left: 0.25em;
            }

            .ar_details_card > b
            {
                background: #4384a1;
                color: #fff;
                padding: 0.25em;
            }
            .ar_container_closer
            {
                text-align: right;
                text-shadow: 0px 0px 0.1em #000;
            }
            .ar_container_closer > span
            {
                background: #4a4545;
                padding: 0.25em;
                border: 1px solid #000;
            }
            .amount_collected_ar
            {
                display: block;
                text-align: center;
                width: 18em;
                cursor: pointer;
                text-shadow: 0px 0px 0.1em #000;
                margin-bottom: 1em
            }
            .ar_details_card .glyphicon-pencil
            {
                color: #FFC107;
                margin-left: 1em;
                cursor: pointer;
            }
            .ar_notes_ul
            {
                clear: both;
                position: relative;
                top: 1em;
                margin-bottom: 1em;
                width: 97.5%;
            }
            .ar_notes_ul li
            {
                background: rgba(255, 255, 255, 0.1);
                padding: 1em;
                margin-top: 0.5em;
            }
            .funding_add_note_btn
            {
                clear: both;
                margin-bottom: 1em;
            }
            .ar_notes_ul textarea
            {
                width: 90%;
                margin-left: auto;
                margin-right: auto;
                display: block;
                min-height: 5em;
                background: rgba(0, 0, 0, 0.25);
                padding: 0.5em;
                border: 0px solid #000;
            }
            .ar_notes_ul .glyphicon-pencil
            {
                cursor: pointer;
                color: #f1ae43;
            }
            .ar_stats_show_btn
            {
                color: yellow;
                display: block;
                margin-top: 1em;
                cursor: pointer;
                width: 8em;
            }
            .ar_stat_p
            {
                color: orange;
                background: rgba(255, 255, 255, 0.05);
                padding: 0.5em;
                margin-top: 0.5em;
                font-size: 0.8em;
            }
            .infoBox
            {
                background: #000;
                width: auto !important;
            }
            #show_ownership_span
            {
                margin-right: 0.5em;
            }
            .grid_region_market_sel
            {
                margin-left: 1em;
            }
            .pl_details
            {
                margin-right: 0.5em;
                background: rgba(51,49,49,0.5);
                padding: 0.5em;
                border: 1px solid rgba(0, 0, 0, 0.2);
            }
            .pl_details .glyphicon-eye-open
            {
                color: #efad4e;
            }
            .lb_timestamp_details > p
            {
                border: 1px solid rgba(211, 239, 14, 0.2);
                text-indent: 0.5em;
            }
            .lb_timestamp_details
            {
                background: rgba(255, 255, 255, 0.1);
                padding-top: 0.5em;
            }
            .lead_smart_assign_btn
            {
                text-shadow: 0px 0px 0.1em #000;
                cursor: pointer;
            }
            .confirm_smart_assigned_label, .reject_smart_assigned_label
            {
                text-shadow: 0px 0px 0.1em #000;
                cursor: pointer;
            }
            .soiling_level_ta
            {
                background: #504948;
                width: 50%;
                border: 0px solid #000;
                min-height: 5em;
                padding: 0.5em;
            }
            .lb_timestamp_details > p > .glyphicon-eye-open
            {
                float: right;
                margin-right: 1em;
                color: #efad4e;
            }
            .cust_identifier_name_result_lb
            {
                color: yellow;
                float: right;
                margin-right: 1em;
            }
            .d2g_installs_list_year_sel
            {
                background: #000;
                border: 0px solid #000;
                width: 5em;
            }
            .true_hk_tbl td, .true_hk_tbl th
            {
                padding: 1em;
                border: 1px solid rgba(255, 255, 255, 0.1);
            }
            .true_hk_tbl
            {
                width: 100%;
            }
            .true_hk_tbl th
            {
                background: #094e2b;
            }
            .true_hk_tbl td
            {
                background: #023d54;
            }
            .solar_reader_tbl th, .solar_reader_details_tbl th {
                background: #000;
                padding: 0.5em;
            }
            .solar_reader_tbl, .solar_reader_details_tbl
            {
                margin-top: 1em;
                border: 1px solid #000;
                width: 100%;
            }
            .solar_reader_tbl td, .solar_reader_details_tbl td
            {
                background: #2d2c2c;
                padding: 0.5em;
            }
            .solar_reader_device_id_sel, .reassign_device_sel_solar_reader
            {
                background: #000;
                border: 0px solid #000;
            }
            .solar_reader_tbl .label, .solar_reader_details_tbl .label
            {
                cursor: pointer;
                text-shadow: 0px 0px 0.1em #000;
            }
            .solar_reader_inventory_div .btn-primary, .solar_reader_details_tbl .btn-primary
            {
                margin-right: 1em;
            }
            #sel_cust_response_note
            {
                background: #000;
                border: 0px solid #000;
            }
            .solar_reader_details_tbl
            {
                margin-bottom: 1.5em;
            }
            .v3_pending_transactions_tbl td, .v3_pending_transactions_tbl th
            {
                background: rgba(0, 0, 0, 0.2);
                border: 1px solid #000;
                padding: 0.5em;
            }
            .v3_pending_transactions_tbl
            {
                width: 80%;
                margin-bottom: -2em;
            }
            .wc_complete_details_div > h2
            {
                font-size: 15px;
            }
            .v3_cc_add_transaction, .v3_commit_transactiosn_btn
            {
                display: inline-block;
                margin-bottom: 1em;
                cursor: pointer;
                margin-right: 3em;
            }
            .v3_add_transaction_description_ta
            {
                background: rgba(0, 0, 0, 0.5);
                padding: 0.5em;
                width: 80%;
                min-height: 5em;
                border: 0px solid #000;
            }
            .v3_pending_finalize_table
            {
                margin-bottom: 1em;
            }
            .v3_committ_transactions_final_btn
            {
                margin-bottom: 1em;
                cursor: pointer;
            }
            .cust_proposal_search_result
            {
                width: 80%;
                margin-left: auto;
                margin-right: auto;
            }
            .merged_details_v2_question_label
            {
                margin-left: -1em;
                background: #208420;
            }
            .merged_details_v2_sel
            {
                margin-bottom: 1em;
            }
            .merged_details_v2_ta
            {
                border: 1px solid rgba(255, 255, 255, 0.2) !important;
                min-height: 10em;
            }
            .solar_reader_tbl .glyphicon-remove
            {
                color: red;
            }
            .v3_prev_table
            {
                background: rgba(0, 0, 0, 0.2);
            }
            .v3_prev_table th
            {
                background: rgba(0, 0, 0, 0.2);
            }
            .v3_prev_table th, .v3_prev_table td
            {
                padding: 0.5em;
                border: 1px solid #000;
            }
            .load_ccs_btn
            {
                float: left;
                margin-left: 10em;
                position: relative;
                top: -1em;
            }
            .util_provider_tbl th
            {
                background: #5cb85c;
            }
            .util_provider_tbl td, .util_provider_tbl th
            {
                border: 1px solid #000;
                padding: 0.5em;
            }
            .multi_user_hint_div img
            {
                display: inline-block;
                margin-right: 1em;
            }
            .multi_user_hint_div
            {
                width: 100%;
            }
            .multi_user_hint_div
            {
                background: rgba(0, 0, 0, 0.5);
                padding: 1em;
            }
            .multi_user_hint_div p
            {
                cursor: pointer;
                margin-bottom: 1em;
                border: 1px solid #000;
                background: rgba(255, 255, 255, 0.1);
            }
            .bulk_sms_custom_selection img
            {
                max-width: 40px;
                max-height: 40px;
                display: inline-block;
                margin-right: 1em;
            }
            .bulk_sms_custom_selection
            {
                background: rgba(0, 0, 0, 0.5);
            }
            .bulk_sms_custom_selection .glyphicon
            {
                color: red;
                float: right;
                position: relative;
                top: 1em;
                cursor: pointer;
                margin-right: 1em;
            }
            #existing_custom_recipients_div
            {
                margin-top: 2em;
            }
            #custom_recipients_list_one_time .glyphicon-remove
            {
                color: red;
                cursor: pointer;
                float: right;
            }
            .runways_tb td, .runways_tb th
            {
                padding: 1em;
                background: rgba(0, 0, 0, 0.2);
                border: 1px solid #fff;
            }
            .runways_tb {
                width: 100%;
            }
            .runways_tb .label
            {
                cursor: pointer;
                text-shadow: 0px 0px 0.1em #000;
            }
            #pm_filter_sel
            {
                background: #000000;
                border: 0px solid #FFFFFF;
            }
            #filter_cares
            {
                margin-left: 1em;
                text-shadow: 0px 0px 0.1em #000;
            }
            .reg_date_e_d
            {
                background: #35840f;
                float: right;
                clear: both;
                padding-left: 0.5em;
                padding-right: 0.5em;
                text-shadow: 0px 0px 0.1em #000;
            }
            #admin_reimbursement_category
            {
                background: #000;
            }
            #admin_description {
                background: #786e6e;
                width: 25em;
                min-height: 5em;
                border: 0px solid #000;
            }
            .edit_reimbursement_desc
            {
                color: #000;
                margin-right: 1em;
                display: inline-block;
            }
            #plan_set_change_sel
            {
                background: #000000;
                border: 0px solid #000;
            }
            #describe_details-ta
            {
                display: block;
                width: 75%;
                margin-top: 1em;
                background: #000;
                border: 0px solid #000;
                padding: 0.5em;
            }
            #describe_details_p
            {
                margin-top: 1em;
                display: block;
            }
            #pan_to_address
            {
                display: block;
                width: 50%;
                margin-bottom: 1em;
            }
            .pop_pin_addy
            {
                color: #000000;
            }
            .ed_change_name
            {
                color: #d4c80e;
                margin-left: 1em;
            }
            .pending_aks_tbl img
            {
                max-width: 40px;
                /* border: 1px solid; */
            }
            .pending_aks_tbl td
            {
                background: rgba(255, 255, 255, 0.1);
                border: 1px solid #000000;
                padding: 1em;
            }
            .pending_aks_tbl .label
            {
                text-shadow: 0px 0px 0.1em #000000;
            }
            .pending_aks_tbl .btn-success
            {
                text-shadow: 0px 0px 0.1em #000000;
            }
            .ak_prev_tally
            {
                background: #3379b6;
                text-shadow: 0px 0px 0.1em #000;
                padding: 0.5em;
                border-radius: 1em;
                width: 2em;
                display: inline-block;
                height: 2em;
                line-height: 1em;
                text-indent: 0.125em;
            }
            .usage_type_pending_ak
            {
                background: #F0AD4E;
                text-shadow: 0px 0px 0.1em #000;
                padding: 0.5em;
                display: inline-block;
            }
            .hidden_btn_pop_up
            {
                display: none;
            }
            .closer_sig_tbl td
            {
                padding: 1em;
                border: 1px solid #000;
            }
            #carve_out_tbl
            {
                width: 100%;
            }
            #carve_out_tbl td, #carve_out_tbl th
            {
                padding: 1em;
                border: 1px solid #5cb85c;
            }
            #carve_out_tbl img
            {
                max-width: 80px;
            }
            #carve_out_tbl .glyphicon-remove
            {
                color: red;
                cursor: pointer;
                font-size: 3em;
            }
            textarea.holidays_ta
            {
                width: 100%;
                background: rgba(255, 255, 255, 0.1);
                margin-top: 1em;
                min-height: 7em;
                border: 0px solid #000;
                padding: 0.5em;
            }
            .sepia_filter
            {
                filter: sepia(1);
            }
            .grayscale_filter
            {
                filter: grayscale(1);
            }
            #filter_links_row a
            {
                float: right;
                margin-left: 2em;
                background: rgba(255, 255, 255, 0.1);
                color: #eea43d;
                padding-left: 1em;
                padding-right: 1em;
                padding-top: 0.25em;
                padding-bottom: 0.25em;
                cursor: pointer;
            }
            .pending_cds_tbl
            {
                width: 100%;
            }
            .pending_cds_tbl th, .pending_cds_tbl td
            {
                padding: 0.5em;
                border: 1px solid #000000;
                text-align: center;
            }
            .pending_cds_tbl th
            {
                background: #337ab7;
            }
            .pending_cds_tbl td
            {
                background: rgba(255, 255, 255, 0.05);
            }
            .pending_cds_tbl img
            {
                max-width: 60px;
                margin-left: auto;
                margin-right: auto;
            }
         </style> 

         <script type="text/javascript">
            window.pin_required_tools = ["docs_composer", "data_to_go"];
            window.onunload = function(){clearApp(function(){});};
            window.onbeforeunload = function(){clearApp(function(){});};
            window.office_data = {{ office_json|safe }};
            window.app_bucket = "{{ app_bucket }}";
            window.user_identifier = "{{ user_identifier }}";            
            window.lead_id = "lead_" + (new Date().getTime() + '');
         
            window.temp_intervals = [];
            window.all_keys_reserved = [];
            String.prototype.replaceAll = function(a, b)
            {
                var that = (this + '');
                while(that.indexOf(a) > -1)
                {
                    that = that.replace(a, b);
                }
                return that;
            }
            String.prototype.digits = function()
            {
              var arr = [];
              var digits = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"];
              for(var i = 0; i < this.length; i++)
              {
                if(digits.indexOf(this[i]) > -1)
                {
                  arr.push(this[i]);
                }
              }
              if(arr.length === 0)
              {
                return null;
              }
              return arr.join("");
            };
            String.prototype.decimal = function()
            {
              var arr = [];
              var digits = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "."];
              var dec_count = 0;
              for(var i = 0; i < this.length; i++)
              {
                dec_count += ($(this)[i] === ".") * 1;
                if(digits.indexOf(this[i]) > -1 && this[i] !== ".")
                {
                  arr.push(this[i]);
                }
                else if(this[i] === ".")
                {
                    if(dec_count === 1)
                    {
                        arr.push(this[i]);
                    }
                }
              }
              if(arr.length === 0)
              {
                return null;
              }
              return arr.join("");
            };
            function getDateString()
            {
                var fn = function()
                {
                    var d = new Date();
                    var str = (d.getMonth() + 1) + '';
                    str += "/";
                    str += d.getDate() + '';
                    str += "/";
                    str += d.getFullYear() + '';

                    return str;

                    str += " ";
                    var hours = d.getHours();
                    var is_pm = false;
                    if(hours > 11)
                    {
                        is_pm = true;
                        hours -= 12;
                    }
                    str += hours + '';
                    str += ":";
                    var mins_str = d.getMinutes() + '';
                    if(mins_str.length === 1)
                    {
                        mins_str = "0" + mins_str;
                    }
                    str += mins_str;
                    str += ":";
                    var seconds_str = d.getSeconds() + '';
                    if(seconds_str.length === 1)
                    {
                        seconds_str = "0" + seconds_str;
                    }
                    str += " ";
                    if(is_pm)
                    {
                        str += "PM";
                    }
                    else
                    {
                        str += "AM";
                    }
                    return str;
                };
                return fn();
            }             

            function notifyMe()
            {
                try
                {
                    if(Notification.permission === "granted")
                    {
                        $.post("/data2", {"fn": "leaderboard_notifications", "identifier": window.user_identifier}).done(function(r)
                        {
                            $.each(r.notifications, function(i, n)
                            {
                                var notification = new Notification
                                (
                                    'Cha-Ching',
                                    {
                                        "body": n.name + " closed a deal!",
                                        "icon": "/bootstrap/images/favicon-32x32.png",
                                        "id": n.identifier

                                    }
                                );
                            });                        
                        });
                    }
                }
                catch(e99)
                {

                }                    
            }
            function resizeButtons()
            {
                /*var btns = $(".btn-group").find("button");
                var em_width = 50;
                btns.css("font-size", "50em");
                while(btns.first().offset().top < btns.last().offset().top)
                {
                    em_width -= 1;
                    btns.css("font-size", (em_width + '') + 'px');
                }*/
            }
            $(document).ready(function()
            {
                window.office_data.notifications = bubbleSortArrayOfObjectsByKey(window.office_data.notifications, "action_name");
                $(window).resize(function()
                {
                    resizeButtons();
                });
                window.addEventListener("orientationchange", function()
                {
                    resizeButtons();
                });
                resizeButtons();
                var is_chrome = navigator.userAgent.toLowerCase().indexOf('chrome') > -1;
                if(is_chrome)
                {
                    if (Notification.permission !== "granted")
                    {
                        try
                        {
                            Notification.requestPermission();
                            notifyMe();                    
                            setInterval(function()
                            {
                                notifyMe();
                            }, 1000 * 60);
                        }
                        catch(e21212)
                        {
                            window.alert("caught");
                        }                                                
                    }
                    else
                    {
                        notifyMe();                    
                        setInterval(function()
                        {
                            notifyMe();
                        }, 1000 * 60);
                    }                    
                }
                $(".flushcache").click(function(ev)
                {
                    ev.stopPropagation();
                    ev.cancelBubble = true;

                    if(window.confirm("Are you sure you would like to flush the cache?"))
                    {
                        $.post("./data", {"fn": "flush_cp_cache"}).done(function(resp)
                        {
                            window.location.reload();
                        });
                    }
                });
                if(window.location.protocol.toLowerCase().indexOf("https") === -1)
                {
                    $("body").html("");
                    var url = window.location.href.toLowerCase();
                    url = url.replace("http://", "https://");
                    window.location.href = url;
                    return;
                }
                $("#view_field_form").click(function()
                {
                    var a = $("<a></a>").attr("id", "temporary_anchor");
                    a.attr("href", "/sales");
                    a.appendTo($("body"));
                    a.attr("target", "_blank");
                    $("#temporary_anchor")[0].click();
                    $("#temporary_anchor").remove();
                });
                $("#surveyor_view_btn").click(function()
                {
                    var a = $("<a></a>").attr("id", "temporary_anchor2")
                    a.attr("href", "/surveyor");
                    a.appendTo($("body"));
                    $("#temporary_anchor2").attr("target", "_blank");
                    $("#temporary_anchor2")[0].click();
                    $("#temporary_anchor2").remove();
                });

                $.fn.bootstrapSwitch.defaults.onText = "Include";
                $.fn.bootstrapSwitch.defaults.offText = "Exclude";
                window.menu_item_click_handlers = {{ menu_item_click_handlers|safe}};
                window.allowed_admin_functions = {{ allowed_functions|safe}};
                window.to_do_users = {{ to_do_users|safe}};

                $.each(menu_item_click_handlers, function(i, menu_item_click_handler)
                {
                    if(window.allowed_admin_functions.indexOf(menu_item_click_handler.id) === -1)
                    {
                        $("#" + menu_item_click_handler.id).remove();
                        return;
                    }
                    $("#" + menu_item_click_handler.id).click(function()
                    {
                        clearApp(function()
                        {
                            if(window.pin_required_tools.indexOf(menu_item_click_handler.id) > -1)
                            {
                                window.pin_input_index = 0;
                                window.pin_checking = false;
                                var html = $("<div></div>");
                                $("<div></div>").addClass("pin_input")
                                .append
                                (
                                    $("<input />").attr("type", "password").attr("disabled", "disabled").attr("value", "-")
                                )
                                .append
                                (
                                    $("<input />").attr("type", "password").attr("disabled", "disabled").attr("value", "-")
                                )
                                .append
                                (
                                    $("<input />").attr("type", "password").attr("disabled", "disabled").attr("value", "-")
                                )
                                .append
                                (
                                    $("<input />").attr("type", "password").attr("disabled", "disabled").attr("value", "-")
                                )
                                .appendTo(html);
                                BootstrapDialog.show
                                (
                                    {
                                        "title": "A pin is required for accessing " + menu_item_click_handler.name,
                                        "message": html.html(),
                                        "onshown": function(dialog)
                                        {
                                            $("body").on("keyup", function(ev)
                                            {
                                                if(window.pin_input_index === 4)
                                                {
                                                    return;
                                                }
                                                $(".pin_input").find("input").eq(window.pin_input_index).val(String.fromCharCode(ev.keyCode))
                                                var inp = $(".pin_input").find("input").eq(window.pin_input_index);
                                                inp.attr("type", "text");
                                                setTimeout(function()
                                                {
                                                    inp.attr("type", "password");
                                                    if(window.pin_input_index === 4 && !window.pin_checking)
                                                    {
                                                        window.pin_checking = true;
                                                        var p = "";
                                                        var add = function(index, el)
                                                        {
                                                            p += $(el).val();
                                                        };
                                                        $(".pin_input input").each(add);
                                                        $.post("./data", {"fn": "pin", "pin_key": menu_item_click_handler.id, "pin": p}).done(function(resp)
                                                        {
                                                            if(resp.success)
                                                            {
                                                                dialog.close();
                                                                window[menu_item_click_handler.fn]();
                                                            }
                                                            else
                                                            {
                                                                dialog.close();
                                                                BootstrapDialog.alert("Bad User!!!");
                                                            }
                                                        });
                                                    }
                                                }, 250);
                                                window.pin_input_index++;
                                            });
                                        },
                                        "onhidden": function(dialog)
                                        {
                                            $("body").off("keyup");
                                        }
                                    }
                                );
                                return;
                            }
                            window[menu_item_click_handler.fn]();
                        });
                    });                    
                });
                if(window.allowed_admin_functions.indexOf("to_do_trigger") > -1)
                {
                    $("#to_do_trigger").trigger("click");
                }

                $.each({{ project_managers|safe }}, function(ii, pm)
                {
                    if(pm.identifier === window.user_identifier)
                    {
                        pmAssist();
                    }
                });
                /*$.post("/data",
                {
                    "fn": "check_for_missing_payscale_keys"
                }).done(function(data)
                {
                    if (data.users.length === 0)
                    {
                        return;
                    }
                    var users = "<div class=\"row\">";
                    users += "<div class='col-xs-6 col-sm-6 col-md-6 col-lg-6 ps_alert_name'>";
                    users += "Name";
                    users += "</div>";
                    users += "<div class='col-xs-6 col-sm-6 col-md-6 col-lg-6 ps_alert_rep'>";
                    users += "Rep ID";
                    users += "</div>";
                    for (var i = 0; i < data.users.length; ++i)
                    {
                        users += "<div class='col-xs-6 col-sm-6 col-md-6 col-lg-6'>";
                        users += data.users[i].name;
                        users += "</div>";
                        users += "<div class='col-xs-6 col-sm-6 col-md-6 col-lg-6'>";
                        users += data.users[i].rep_id;
                        users += "</div>";
                    }
                    users += "</div>";
                    BootstrapDialog.show(
                    {
                        message: users,
                        type: BootstrapDialog.TYPE_INFO,
                        title: "Missing payscale!",
                        closable: true,
                        closeByBackdrop: false,
                        closeByKeyboard: false,
                        buttons:
                        [
                            {
                                label: "Fix it!<span class='glyphicon glyphicon-chevron-right ps_alert_glyph'></span>",
                                action: function(dialogRef)
                                {
                                    clearApp(function()
                                    {
                                        editPayscales();
                                    });
                                    dialogRef.close();
                                }
                            }
                        ]
                    });
                });*/

                window.check_for_unread_threads = true;
                
                var check_for_threads = function()
                {
                    if(!window.check_for_unread_threads)
                    {
                        return;
                    }

                    try
                    {
                        $.post("./data", {"fn": "get_unread_threads_for_user"}).done(function(resp)
                        {
                            if(resp.senders.length < 1)
                            {
                                return;
                            }

                            var html = $("<div></div>");
                            var word = "person";
                            if(resp.senders.length > 1)
                            {
                                word = word.replace("rson", "ople");
                            }
                            html.append
                            (
                                $("<p></p>").text((resp.senders.length + '') + " " + word + " is waiting to hear back from you...")
                            );
                            html.append
                            (
                                $("<hr />")
                            );

                            var users_div = $("<div></div>").addClass("row");
                            $.each(resp.senders, function(i, sender)
                            {
                                var img = $("<img />").addClass("img").addClass("img-responsive");
                                img.attr("src", "//storage.googleapis.com/" + window.app_bucket + "/Images/ProfilePictures/Thumb/" + sender + ".jpg");
                                img.css("max-width", "200px").css("max-height", "200px");

                                var p = $("<p></p>").text(resp.sender_name_dict[sender]);

                                var user_div = $("<div></div>").addClass("col-xs-3").addClass("col-sm-3").addClass("col-md-3").addClass("col-lg-3");
                                img.appendTo(user_div);
                                p.appendTo(user_div);
                                user_div.appendTo(users_div);

                            });

                            html.append(users_div);

                            window.check_for_unread_threads = false;
                            BootstrapDialog.show
                            (
                                {
                                    "title": "New messages are waiting!",
                                    "message": html.html(),
                                    "buttons":
                                    [
                                        {
                                            "label": "Show me",
                                            "cssClass": "btn-primary",
                                            "action": function(dialog)
                                            {
                                                $("#inbox").trigger("click");
                                                dialog.close();
                                            }
                                        },
                                        {
                                            "label": "I'm Busy",
                                            "cssClass": "btn-danger",
                                            "action": function(dialog)
                                            {
                                                var exp = new Date().getTime();
                                                exp += (1000 * 60 * 60);
                                                $.cookie("snooze_message_notifications", "1", {"path": "/", "expires": new Date(exp)});
                                                dialog.close();
                                            }
                                        }
                                    ],
                                    "onhidden": function(d)
                                    {
                                        window.check_for_unread_threads = true;
                                    }
                                }
                            );

                        });
                    }
                    catch(e626)
                    {

                    }
                };
                
                setInterval(function()
                {
                    check_for_threads();    
                }, 60000);
                check_for_threads();

                if(localStorage.getItem("button_to_click") !== null)
                {
                    $("#" + localStorage.getItem("button_to_click")).click();
                    localStorage.removeItem("button_to_click");
                }
                if(localStorage.getItem("assumed_user_hint_to_show"))
                {
                    BootstrapDialog.alert
                    (
                        {
                            "title": "Howdy!",
                            "message": "Well hello there, \"" + localStorage.getItem("assumed_user_hint_to_show") + "\"&nbsp;&nbsp;&nbsp;;)"
                        }
                    );
                    localStorage.removeItem("assumed_user_hint_to_show");
                }
            });
            function showQualCardSearch()
            {
                var app_area = $("#app_area");
                var search_spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1").html("&nbsp;");

                var search_row = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10");
                $("<p id='qual_search_note'>Please enter one or more pieces of search criteria:</p>").appendTo(search_row);
                var inner_row = $("<div></div>").addClass("row");

                var field_fname_container = $("<div></div>").addClass("col-xs-12").addClass("col-sm-12").addClass("col-md-4").addClass("col-lg-4");
                $("<input />").attr("type", "text").attr("placeholder", "Customer First Name").attr("id", "qual_first").appendTo(field_fname_container);

                var field_lname_container = $("<div></div>").addClass("col-xs-12").addClass("col-sm-12").addClass("col-md-4").addClass("col-lg-4");
                $("<input />").attr("type", "text").attr("placeholder", "Customer Last Name").attr("id", "qual_last").appendTo(field_lname_container);

                var field_postal_container = $("<div></div>").addClass("col-xs-12").addClass("col-sm-12").addClass("col-md-4").addClass("col-lg-4");
                $("<input />").attr("type", "text").attr("placeholder", "Customer Postal Code").attr("id", "qual_postal").appendTo(field_postal_container);

                var dropdown_div = $("<div></div>").addClass("dropdown").addClass("lookup_dropdown");
                $("<button></button>").attr("data-toggle", "dropdown").addClass("btn-default").addClass("dropdown-toggle").addClass("btn").text("Qual Card").append($("<span></span>").addClass("caret")).appendTo(dropdown_div);

                var ul = $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu");
                $("<li></li>").attr("role", "presentation").attr("id", "path_of_QualificationCards").append
                (
                    $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text("Qual Card")
                ).appendTo(ul);
                $("<li></li>").attr("role", "presentation").attr("id", "path_of_UtilityBills").append
                (
                    $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text("Utility Bill")
                ).appendTo(ul);

                ul.find("li").each(function(i, e)
                {
                    $(e).click(function()
                    {
                        $(e).parent().parent().find("button").text($(e).text());
                        $("<span></span>").addClass("caret").appendTo($(e).parent().parent().find("button"));
                        $(e).parent().parent().find("input").val($(e).attr("id").replace("path_of_", "")).attr("value", $(e).attr("id").replace("path_of_", ""));
                        field_fname_container.find("input").trigger("change");
                    });
                });
                ul.appendTo(dropdown_div);
                $("<input />").attr("type", "hidden").attr("id", "lookup_path").val("QualificationCards").attr("value", "QualificationCards").appendTo(dropdown_div);


                var inner_row2 = $("<div></div>").addClass("row").addClass("qual_search_results");
                $("<p></p>").attr("id", "qual_no_result").text("No results found.").appendTo(inner_row2);
                $("<p></p>").attr("id", "qual_searching").css("display", "none").text("Searching...").appendTo(inner_row2);

                $("<div></div>").addClass("row").attr("id", "qual_results_inner").appendTo(inner_row2);

                $.each([field_fname_container, field_lname_container, field_postal_container], function(i, e)
                {
                    $(e).find("input").change(function()
                    {
                        var input_fields = $("#qual_first, #qual_last, #qual_postal");
                        var cnt = 0;
                        input_fields.each(function(ii, ee)
                        {
                            cnt += $.trim($(ee).val()).length > 1;
                        });
                        if(cnt > 0)
                        {
                            doQualSearch();
                        }
                    });
                });

                field_fname_container.appendTo(inner_row);
                field_lname_container.appendTo(inner_row);
                field_postal_container.appendTo(inner_row);
                dropdown_div.appendTo(inner_row);

                inner_row.appendTo(search_row);
                $("<hr />").appendTo(search_row);
                inner_row2.appendTo(search_row);

                search_spacer.appendTo(app_area);
                search_row.appendTo(app_area)
                search_spacer.clone().appendTo(app_area);
            }

            function doQualSearch()
            {
                $("#qual_no_result").css("display", "none");
                $("#qual_results_inner").html("");
                $("#qual_searching").css("display", "block");
                $.post("/data", {"fn": "qual_card_search", "first": $.trim($("#qual_first").val().toLowerCase()), "last": $.trim($("#qual_last").val().toLowerCase()), "postal": $.trim($("#qual_postal").val().toLowerCase())}).done(function(data)
                {

                    if(data.results.length === 0)
                    {
                        $("#qual_searching").css("display", "none");
                        $("#qual_no_result").css("display", "block");
                    }
                    else
                    {
                        $.each(data.results, function(i, result)
                        {
                            var result_div = $("<div></div>").addClass("col-xs-6").addClass("col-sm-6").addClass("col-md-3").addClass("col-lg-3");
                            var img = $("<img />");
                            img.error(function()
                            {
                                img.remove();
                            });
                            img.load(function()
                            {
                                if(img[0].naturalWidth === 0 || typeof(img[0].naturalWidth) + '' === "undefined")
                                {
                                    img.remove();
                                }
                            });
                            img.attr("src", "//storage.googleapis.com/" + window.app_bucket + "/" + $("#lookup_path").val() + "/" + data.results[i].identifier + "." + data.results[i].image_extension);
                            img.addClass("img").addClass("img-responsive");
                            img.appendTo(result_div);

                            result_div.appendTo($("#qual_results_inner"));
                        });
                        $("#qual_searching").css("display", "none");
                    }
                });
            }

            function showPerfectPacket(rejection_mode_hack)
            {
                if(typeof(rejection_mode_hack) + '' === "undefined")
                {
                    rejection_mode_hack = false;
                }
                function getPackets()
                {
                    return {
                        packets: [
                            {
                                name: "TestPacket1_accepted",
                                rep_name: "Rep1",
                                d1: "Date1",
                                d2: "Date2",
                                identifier: "0",
                                booking_identifier: "fake booking id1",
                                status: "accepted"
                            },
                            {
                                name: "TestPacket2_rejected",
                                rep_name: "Rep2",
                                d1: "Date3",
                                d2: "Date4",
                                identifier: "1",
                                booking_identifier: "fake booking id2",
                                status: "rejected"
                            },
                            {
                                name: "TestPacket3_accepted",
                                rep_name: "Rep1",
                                d1: "Date5",
                                d2: "Date6",
                                identifier: "2",
                                booking_identifier: "fake booking id3",
                                status: "accepted"
                            },
                            {
                                name: "TestPacket4_rejected",
                                rep_name: "Rep2",
                                d1: "Date7",
                                d2: "Date8",
                                identifier: "3",
                                booking_identifier: "fake booking id4",
                                status: "rejected"
                            },
                        ]
                    }
                }

                function updatePackets(cb)
                {
                    var time = 250;
                    packet_list.animate({opacity: 0.0}, time, function()
                    {
                        packet_list.empty();
                        cb();
                        packet_list.animate({opacity: 1.0}, time, function()
                        {

                        });
                    });
                }
                var app_area = $("#app_area");
                var spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1").html("&nbsp;");
                var row = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10");
                var title = $("<h2></h2>").text(" Submitted Packets").prepend
                (
                    $("<span></span>").addClass("glyphicon").addClass("glyphicon-floppy-save")
                );
                if(rejection_mode_hack)
                {
                    title = $("<h2></h2>").text(" Rejected Packets").prepend
                    (
                        $("<span></span>").addClass("glyphicon").addClass("glyphicon-floppy-save")
                    );
                }

                var dropdown_div = $("<div></div>").addClass("dropdown").addClass("dropdownAccRejPp");
                var btn = $("<button></button>").text("Pending").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("type", "button").attr("id", "btnAccRejPp").attr("data-toggle", "dropdown").attr("aria-expanded", "true");
                btn.appendTo(dropdown_div);
                $("<span></span>").addClass("caret").appendTo(dropdown_div.find(".btn"));
                var accrej_ul = $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu").attr("aria-labelledby", "btnAccRejPp");

                var li1 = $("<li></li>").attr("role", "presentation").attr("id", "pending");
                $("<a></a>").text("Pending").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").appendTo(li1);
                li1.appendTo(accrej_ul);
                var li2 = $("<li></li>").attr("role", "presentation").attr("id", "accept");
                $("<a></a>").text("Approved").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").appendTo(li2);
                li2.appendTo(accrej_ul);
                var li3 = $("<li></li>").attr("role", "presentation").attr("id", "reject");
                $("<a></a>").text("Rejected").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").appendTo(li3);
                li3.appendTo(accrej_ul);


                accrej_ul.find("li").each(function(i, e)
                {
                    $(e).click(function()
                    {
                        btn.text($(e).text());
                        $("<span></span>").addClass("caret").appendTo(dropdown_div.find(".btn"));
                        var value = $(e).attr("id");
                        if(!rejection_mode_hack)
                        {
                            if (value == "pending")
                            {
                                updatePackets(function()
                                {
                                    /*f(getPackets(), null);*/
                                    $.post("./data", {"fn": "list_pending_perfect_packet_submissions"}).done(function(resp)
                                    {
                                        $(".lblfive").remove();
                                        $(".lblsix").remove();
                                        f(resp, "pending");
                                    });
                                });
                            }
                            else
                            {
                                if(value == "accept")
                                {
                                    updatePackets(function()
                                    {
                                        $.post("./data", {"fn": "list_approved_perfect_packets"}).done(function(resp)
                                        {
                                            $(".lblsix").remove();
                                            f(resp, "accept");
                                            $("<span></span>").addClass("label").addClass("label-success").addClass("lblfive").text("System Size").insertAfter($(".lblfour"));
                                            $.each(resp.packets, function(i, packet)
                                            {
                                                var size_span = $("<span></span>").addClass("sys_size");
                                                size_span.text(packet.system_size);


                                                size_span.appendTo($(".packet_list_date2").eq(i));
                                                $(".packet_list_item").eq(i).addClass("defaultcursor");
                                            });
                                        });
                                    });
                                }
                                if(value == "reject")
                                {
                                    updatePackets(function()
                                    {
                                        $.post("./data", {"fn": "list_rejected_perfect_packets"}).done(function(resp)
                                        {
                                            $(".lblfive").remove();
                                            f(resp, "reject");
                                            $("<span></span>").addClass("label").addClass("label-success").addClass("lblsix").text("History").insertAfter($(".lblfour"));

                                            $.each(resp.packets, function(i, packet)
                                            {
                                                var hist_span = $("<span></span>").addClass("glyphicon").addClass("glyphicon-time").addClass("sys_size").attr("title", "Rejection History");
                                                hist_span.click(function()
                                                {
                                                    showRejectionHistory(packet, i);
                                                });
                                                hist_span.appendTo($(".packet_list_date2").eq(i));
                                            });
                                        });
                                    });
                                }
                            }
                        }
                        else
                        {
                            updatePackets(function()
                            {
                                $.post("./data", {"fn": "list_rejected_perfect_packets"}).done(function(resp)
                                {
                                    $(".lblfive").remove();
                                    f(resp, "reject");
                                    $("<span></span>").addClass("label").addClass("label-success").addClass("lblsix").text("History").insertAfter($(".lblfour"));

                                    $.each(resp.packets, function(i, packet)
                                    {
                                        var hist_span = $("<span></span>").addClass("glyphicon").addClass("glyphicon-time").addClass("sys_size").attr("title", "Rejection History");
                                        hist_span.click(function()
                                        {
                                            showRejectionHistory(packet, i);
                                        });
                                        hist_span.appendTo($(".packet_list_date2").eq(i));
                                    });
                                });
                            });
                        }
                    });
                });


                dropdown_div.append(accrej_ul);
                if(rejection_mode_hack)
                {
                    dropdown_div.find("*").css("display", "none");
                    $("<button></button>").addClass("btn").attr("type", "button").addClass("btn-danger").html("&larr; Back").addClass("rejection_mode_hack_back_btn").click(function()
                    {
                        clearApp(function()
                        {
                            perfectPacketV2();
                        });
                    }).appendTo(dropdown_div);
                }

                var packet_list = $("<div></div>").addClass("packet_list");
                row.append(title);
                row.append(dropdown_div);

                var labels_div = $("<div></div>").addClass("admin_pp_labels_div_pending");
                $("<span></span>").addClass("label").addClass("label-success").text("Customer Name").addClass("lblone").appendTo(labels_div);
                $("<span></span>").addClass("label").addClass("label-success").text("Rep Name/ID").addClass("lbltwo").appendTo(labels_div);
                $("<span></span>").addClass("label").addClass("label-success").text("Submission Date").addClass("lblthree").appendTo(labels_div);
                $("<span></span>").addClass("label").addClass("label-success").text("Survey Date").addClass("lblfour").appendTo(labels_div);
                labels_div.appendTo(row);

                row.append(packet_list);

                // TODO: Use actual post data
                var f = function(resp, filter)
                {
                    console.log(resp.packets);
                    var acceptable = ["pending"];
                    if(filter !== "pending")
                    {
                        acceptable = [filter + "ed"];
                    }

                    var packets = resp.packets;
                    $.each(packets, function(i, packet)
                    {
                        var div = $("<div></div>").addClass("row").addClass("field_app_identifier_of_" + packet.field_application_identifier).addClass("packet_list_item");

                        if(rejection_mode_hack)
                        {
                            div.append
                            (
                                $("<span></span>").addClass("glyphicon").addClass("glyphicon-trash").attr("title", "Archive " + packet.cust_name).addClass("rej_mode_hack_archive")
                                .click(function()
                                {
                                    promptForArchive(packet.field_application_identifier, packet.cust_name);
                                })
                            )
                        }
                        div.append
                        (
                            $("<div></div>").addClass("col-xs-3").addClass("col-sm-3").addClass("col-md-3").addClass("col-lg-3").addClass("packet_list_name")
                            .text(packet.cust_name)
                        ).append
                        (
                            $("<div></div>").addClass("col-xs-3").addClass("col-sm-3").addClass("col-md-3").addClass("col-lg-3").addClass("packet_list_rep_name")
                            .text(packet.rep_name).append($("<span></span>").addClass("pp_rep_id_hint").text("(" + packet.rep_id + ")"))
                        ).append
                        (
                            $("<div></div>").addClass("col-xs-3").addClass("col-sm-3").addClass("col-md-3").addClass("col-lg-3").addClass("packet_list_date1")
                            .text(packet.rep_submission_date)
                        ).append
                        (
                            $("<div></div>").addClass("col-xs-3").addClass("col-sm-3").addClass("col-md-3").addClass("col-lg-3").addClass("packet_list_date2")
                            .text(packet.survey_date)
                        );
                        if(typeof(packet.rejection_reasons) + '' !== "undefined")
                        {
                            if(packet.rejection_reasons.reasons.length > 0)
                            {
                                $("<span></span>").addClass("glyphicon").addClass("glyphicon-asterisk").attr("title", "Packet has a rejection history").prependTo(div.find("> div").eq(0));
                            }
                        }

                        div.appendTo(packet_list);
                        div.click(function()
                        {
                            if(filter === "pending")
                            {
                                clearApp(function()
                                {
                                    showPacket(packet);
                                });
                            }
                        });
                    });
                    var word_map =
                    {
                        "pending": "pending",
                        "accepted": "approved",
                        "rejected": "rejected"
                    };

                    if(packets.length === 0)
                    {
                        $("<center id='no_pending_packets_msg'><h3 style='margin-top: 3em;'>There are no " + word_map[acceptable] + "  packets...</h3></center>").appendTo(packet_list);
                    }
                    else
                    {
                        $("#no_pending_packets_msg").remove();
                    }
                };

                app_area.append(spacer.clone());
                app_area.append(row);
                app_area.append(spacer);

                $(".dropdownAccRejPp").find("#pending").trigger("click");
            }

            // TODO: Replace with POST call
            function getReps()
            {
                return [
                    'Rep1',
                    'Rep2',
                    'Rep3'
                ];
            }

            function showLedger()
            {
                var app_area = $("#app_area");
                var spacer = $("<div></div>").addClass("col-xs-1 col-sm-1 col-md-1 col-lg-1");
                var row = $("<div></div>").addClass("col-xs-12 col-sm-12 col-md-12 col-lg-12");
                var spacer_clone = spacer.clone();

                var btns_div = $("<div></div>").addClass("ledger_fns_btns_div");
                $("<span></span>").addClass("label").addClass("label-success").addClass("add_trans_label").text(" New Transaction").prepend($("<span></span>").addClass("glyphicon").addClass("glyphicon-plus")).click(function()
                {
                    clearApp(function()
                    {
                        addToLedger();
                    });
                }).appendTo(btns_div);

                $("<span></span>").addClass("label").addClass("label-primary").addClass("trans_check_preview").text(" Paychecks").prepend($("<span></span>").addClass("glyphicon").addClass("glyphicon-usd")).prepend($("<span></span>").addClass("glyphicon").addClass("glyphicon-file")).click(function()
                {
                    clearApp(function()
                    {
                        listUsersForPaycheckPreview();
                    });
                }).appendTo(btns_div);

                $("<span></span>").addClass("label").addClass("label-expenses").addClass("trans_expense_approve").text(" Reimbursements").prepend($("<span></span>").addClass("glyphicon").addClass("glyphicon-refresh")).click(function()
                {
                    clearApp(function()
                    {
                        listUsersForExpenses();
                    });
                }).appendTo(btns_div);

                btns_div.appendTo(row);

                //spacer.appendTo(app_area);
                row.appendTo(app_area);
                //spacer_clone.appendTo(app_area);

            }
            function filterUsersPaycheckAdmin()
            {
                var filter_fn = function(jqDiv, fname, lname, rep_id, office)
                {
                    return true;
                }

                if($.trim($("#paycheck_admin_fname").val()).length > 0)
                {
                    var orig_filter_fn = filter_fn;
                    filter_fn = function(jqDiv, fname, lname, rep_id, office)
                    {
                        var fname_val = $.trim(jqDiv.find(".paycheck_user_name").text()).split(" ")[0].toLowerCase();
                        return orig_filter_fn(jqDiv, fname, lname, rep_id, office) && fname_val.indexOf(fname) === 0;
                    };
                }

                if($.trim($("#paycheck_admin_lname").val()).length > 0)
                {
                    var orig_filter_fn2 = filter_fn;
                    filter_fn = function(jqDiv, fname, lname, rep_id, office)
                    {
                        var lname_val = $.trim(jqDiv.find(".paycheck_user_name").text()).split(" ")[1].toLowerCase();
                        return orig_filter_fn2(jqDiv, fname, lname, rep_id, office) && lname_val.indexOf(lname) === 0;
                    };
                }

                if($.trim($("#paycheck_admin_rid_box").val()).length > 0)
                {
                    var orig_filter_fn3 = filter_fn;
                    filter_fn = function(jqDiv, fname, lname, rep_id, office)
                    {
                        var rid_val = $.trim(jqDiv.find(".paycheck_user_rid").text()).toLowerCase();
                        return orig_filter_fn3(jqDiv, fname, lname, rep_id, office) && rid_val.indexOf(rep_id) === 0;
                    };
                }
                if($("#office_paycheck_filter").val().toLowerCase() !== "all")
                {
                    var orig_filter_fn4 = filter_fn;
                    filter_fn = function(jqDiv, fname, lname, rep_id, office)
                    {
                        var o_val = jqDiv.find(".paycheck_user_office").eq(0).attr("id").replace("paycheck_office_of_", "");
                        return orig_filter_fn4(jqDiv, fname, lname, rep_id, office) && o_val === office;
                    };
                }

                var f = $.trim($("#paycheck_admin_fname").val()).toLowerCase();
                var l = $.trim($("#paycheck_admin_lname").val()).toLowerCase();
                var r = $.trim($("#paycheck_admin_rid_box").val()).toLowerCase();
                var o = $.trim($("#office_paycheck_filter").val());

                $(".paycheck_user").each(function(i, e)
                {
                    var d = $(e);

                    if(filter_fn(d, f, l, r, o))
                    {
                        d.css("display", "block");
                    }
                    else
                    {
                        d.css("display", "none");
                    }
                });
            }
            function listUsersForPaycheckPreview(all_usr_data)
            {
                if(typeof(all_usr_data) + '' === "undefined")
                {
                    $.post("./data", {"fn": "calculate_upcoming_paycheck_for_reps"}).done(function(resp)
                    {
                        window.all_usr_data = resp.data;
                        listUsersForPaycheckPreview(resp.data);
                    });
                    return;
                }
                var office_identifier_office_name_map = {}
                $.each(window.office_data.offices, function(i, office)
                {
                    office_identifier_office_name_map[office.identifier] = office.name;
                });

                var app_area = $("#app_area");
                var spacer = $("<div></div>").addClass("col-xs-1 col-sm-1 col-md-1 col-lg-1");
                var row = $("<div></div>").addClass("col-xs-10 col-sm-10 col-md-10 col-lg-10");
                var spacer_clone = spacer.clone();



                $.post("./data", {"fn": "list_users_for_paycheck_preview_admin"}).done(function(resp)
                {
                    var m = moment(new Date());
                    while(m.isoWeekday() !== 5)
                    {
                        m = m.add(1, "days");
                    }

                    $("<h2></h2>").addClass("check_no_date").text("Checks for ").append($("<span></span>").addClass("check_no_dt").text(m.format("dddd, MMMM Do YYYY"))).appendTo(row);
                    $("<div></div>").addClass("paycheck_users_filter_title").text("Filter:").appendTo(row);
                    var boxes = [];
                    boxes.push($("<input />").attr("type", "text").attr("Placeholder", "First Name").attr("id", "paycheck_admin_fname"));
                    boxes.push($("<input />").attr("type", "text").attr("Placeholder", "Last Name").attr("id", "paycheck_admin_lname"));
                    boxes.push($("<input />").attr("type", "text").attr("Placeholder", "Rep ID").attr("id", "paycheck_admin_rid_box"));

                    $.each(boxes, function(i, box)
                    {
                        $.each(["change", "keyup", "blur"], function(k, ev_name)
                        {
                            box.on(ev_name, function(ev)
                            {
                                filterUsersPaycheckAdmin();
                            }).appendTo(row);
                        });
                    });

                    var dropdown_div = $("<div></div>").addClass("dropdown").addClass("ddspecial");
                    $("<button></button>").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").addClass("eightpoint5").attr("type", "button").attr("id", "dropdownMenuPayCheckAdmin").attr("data-toggle", "dropdown").attr("aria-expanded", "true").text("All").append($("<span></span>").addClass("caret")).appendTo(dropdown_div);
                    var dd_ul = $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu").attr("aria-labelledby", "dropdownMenuPayCheckAdmin");
                    var input = $("<input />").attr("type", "hidden").attr("id", "office_paycheck_filter").attr("value", "all").val("all");

                    $("<li></li>").attr("role", "presentation").attr("id", "office_all")
                    .append
                    (
                        $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text("All")
                    )
                    .appendTo(dd_ul);
                    $.each(window.office_data.offices, function(i, office)
                    {
                        var li = $("<li></li>").attr("role", "presentation").attr("id", "office_" + office.identifier);
                        var a = $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text(office.name);
                        a.appendTo(li);
                        li.appendTo(dd_ul);
                    });

                    dd_ul.find("li").each(function(i, e)
                    {
                        $(e).click(function()
                        {
                            $(e).parent().prev().text($(e).text());
                            $("<span></span>").addClass("caret").appendTo($(e).parent().prev());
                            $("#office_paycheck_filter").attr("value", $(e).attr("id").replace("office_", "")).val($(e).attr("id").replace("office_", ""));
                            $("#paycheck_admin_fname").trigger("keyup");
                        }).appendTo(dd_ul);
                    });

                    dd_ul.appendTo(dropdown_div);
                    input.appendTo(dropdown_div);

                    dropdown_div.appendTo(row);

                    $("<div></div>").addClass("row").html("&nbsp;").appendTo(row);
                    $("<div></div>").addClass("row").html("&nbsp;").appendTo(row);

                    $.each(resp.users, function(i, user)
                    {
                        if(all_usr_data.positive_user_list.indexOf(user.identifier) === -1)
                        {
                            return;
                        }
                        var user_div = $("<div></div>").addClass("paycheck_user").addClass("row").attr("id", "user_row_of_" + user.identifier);

                        var name_div = $("<div></div>").addClass("paycheck_user_name").addClass("col-xs-4").addClass("col-sm-4").addClass("col-md-4").addClass("col-lg-4").text
                        (
                            user.first_name + " " + user.last_name
                        )
                        .prepend
                        (
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-user")
                        );

                        name_div.appendTo(user_div);

                        var rep_id_div = $("<div></div>").addClass("paycheck_user_rid").addClass("col-xs-4").addClass("col-sm-4").addClass("col-md-4").addClass("col-lg-4").text
                        (
                            user.rep_id
                        );

                        rep_id_div.appendTo(user_div);

                        var office_div = $("<div></div>").addClass("paycheck_user_office").attr("id", "paycheck_office_of_" + user.office_identifier).text(office_identifier_office_name_map[user.office_identifier]);
                        var pc_ball = $("<span></span>").addClass("paycheck-ball");
                        if(typeof(all_usr_data.check_status_map[user.identifier]) + '' !== "undefined")
                        {
                            if(all_usr_data.check_status_map[user.identifier] === 2)
                            {
                                pc_ball.addClass("ball-paid").attr("title", "Check has been paid, transactions are closed");
                                pc_ball.appendTo(office_div);
                            }
                            else if(all_usr_data.check_status_map[user.identifier] === 1)
                            {
                                pc_ball.addClass("ball-check-no-set").attr("title", "Check number has been set");
                                pc_ball.appendTo(office_div);
                            }
                        }

                        office_div.appendTo(user_div);

                        user_div.click(function()
                        {
                            $(".active_paycheck_user").removeClass("active_paycheck_user");
                            user_div.addClass("active_paycheck_user");
                            showPaycheckForUser(user);
                        }).appendTo(row);
                    });

                    spacer.appendTo(app_area);
                    row.appendTo(app_area);
                    spacer_clone.appendTo(app_area);

                    var back_btn_div = $("<div></div>").addClass("col-xs-12").addClass("col-sm-12").addClass("col-md-12").addClass("col-lg-12").addClass("admin_paycheck_back_btn1");
                    $("<button></button>").addClass("btn").addClass("btn-danger").html("&larr; Back").click(function()
                    {
                        $("#ledger").trigger("click");
                    }).appendTo(back_btn_div);

                    back_btn_div.appendTo(app_area);

                });
            }
            window.temp_confirm_change_check_number_fn = function()
            {
                return true;
            };
            window.set_paycheck_fn_name = "set_check_number";
            function showPaycheckForUser(user)
            {
                $(".paycheck_details_row").remove();
                var row = $("<div></div>").addClass("row").addClass("paycheck_details_row");
                var inner_div = $("<div></div>").addClass("col-xs-12").addClass("col-sm-12").addClass("col-md-12").addClass("col-lg-12");
                var inner_row = $("<div></div>").addClass("row").addClass("paycheck_details_row_top");

                var left_div1 = $("<div></div>").addClass("col-xs-6").addClass("col-sm-6").addClass("col-md-6").addClass("col-lg-6");
                var right_div1 = left_div1.clone();

                var check_num_box = $("<input />").attr("type", "text").attr("id", "check_no").attr("placeholder", "Check # (ex: 005)");
                $.each(["change", "keyup", "blur"], function(i, ev_name)
                {
                    check_num_box.on("ev_name", function(ev)
                    {
                        check_num_box.val($.trim(check_num_box.val()));
                        var chars = check_num_box.val();
                        var new_val = "";
                        $.each(chars, function(k, char)
                        {
                            var ascii = char.charCodeAt(0);
                            if(ascii >= 48 && ascii <= 57)
                            {
                                new_val += char;
                            }
                        });
                        check_num_box.val(new_val);
                    });
                });
                check_num_box.appendTo(right_div1);
                var pay_btn = $("<button></button>").addClass("btn").addClass("btn-default").attr("id", "set_check_no_button").text("Set Check Number")
                .click(function()
                {
                    if($.trim($("#check_no").val()).length < 1)
                    {
                        BootstrapDialog.alert
                        (
                            {
                                "title": "Missing Check Number",
                                "message": "The check number is required"
                            }
                        );
                        return;
                    }
                    if(window.temp_confirm_change_check_number_fn())
                    {
                        $(this).css("opacity", "0.5").text("Setting Check Number...");
                        setCheckNumber();
                    }
                }).appendTo(right_div1);

                var m = moment(new Date());
                while(m.isoWeekday() !== 5)
                {
                    m = m.add(1, "days");
                }


                $("<button></button>").addClass("btn").addClass("btn-default").attr("id", "mark_paid_button").text("Mark Paid")
                .on("click", function()
                {
                    markTransactionsPaid(user.identifier, m.format("MM-DD-YYYY"));
                }).appendTo(right_div1);

                var details_row = $("<div></div>").addClass("col-xs-12").addClass("col-sm-12").addClass("col-md-12").addClass("col-lg-12").addClass("paycheck_rep_details");
                $("<button></button>").attr("type", "button").addClass("btn").addClass("btn-default").text("Show Details")
                .click(function()
                {
                    $(this).next("div").css("display", "block");
                    $(this).remove();
                }).appendTo(details_row);
                var details_div = $("<div></div>").addClass("paycheck_actual_details");

                var status_p = $("<p></p>");
                var status_span = $("<span></span>").addClass("label").addClass("payment_status_lbl").text("Unpaid");

                var total_p = $("<p></p>").text("Total Due: $");
                total_p.append($("<span></span>").addClass("t_amount"));

                $.post("./data", {"fn": "admin_upcoming_paycheck_for_rep", "identifier": user.identifier}).done(function(resp)
                {
                    if(resp.paid)
                    {
                        status_span.text("Paid");
                        status_span.addClass("label-success");
                        right_div1.find("#mark_paid_button").off("click").css("display", "none");

                    }
                    else
                    {
                        status_span.addClass("label-warning");
                    }

                    status_span.appendTo(status_p);

                    if(resp.has_check_number)
                    {
                        $("<input />").attr("type", "hidden").val(resp.check_number).attr("value", resp.check_number).attr("id", "old_check_no").appendTo(right_div1);
                        if(!resp.paid)
                        {
                            right_div1.find("#check_no").attr("disabled", "disabled").attr("value", resp.check_number).val(resp.check_number);
                            right_div1.find("#set_check_no_button").attr("disabled", "disabled");
                            $("<span></span>").addClass("change_check_no").text("Change Check #").click(function()
                            {
                                $("#check_no").val("").attr("value", "").removeAttr("disabled");
                                $("#set_check_no_button").text("Change Check Number").removeAttr("disabled");
                            }).insertAfter(right_div1.find("#check_no"));

                            window.temp_confirm_change_check_number_fn = function()
                            {
                                return window.confirm("Are you sure you would like to change the change the check number?\n\nThis applies to the existing transactions, and any additional transactions posted for this week's paycheck.");
                            };
                            window.set_paycheck_fn_name = "change_check_number";
                        }
                        else
                        {
                            $("<span></span>").addClass("check_no_hint").text("Check #:").insertAfter(right_div1.find("#check_no"));
                            right_div1.find("#check_no").attr("disabled", "disabled").attr("value", resp.check_number).val(resp.check_number);
                            right_div1.find("#set_check_no_button").remove();
                        }
                    }
                    else
                    {
                        right_div1.find("#mark_paid_button").off("click").attr("disabled", "disabled");
                    }
                    var tot = 0;
                    $.each(resp.paycheck_data.transactions, function(i, transaction)
                    {
                        tot += transaction.amount;
                    });
                    if(tot < 1 && !resp.paid)
                    {
                        BootstrapDialog.alert
                        (
                            {
                                "title": "Check Processing Unnecessary",
                                "message": user.first_name + " " + user.last_name + " has a pending balance that is less than $0.01..."
                            }
                        );
                        return;
                    }

                    var dollars_total = (parseInt(tot / 100)) + '';
                    var cents_total = (tot % 100) + '';
                    if(cents_total.length === 1)
                    {
                        cents_total = "0" + cents_total;
                    }

                    status_p.appendTo(left_div1);

                    total_p.find(".t_amount").text(dollars_total + "." + cents_total);
                    total_p.appendTo(left_div1);

                    var header_tbl = $("<table></table>").addClass("desc_tbl");
                    header_tbody = $("<tbody></tbody>");
                    $("<td></td>").text("Description").appendTo(header_tbody);
                    $("<td></td>").text("Amount").appendTo(header_tbody);
                    $("<td></td>").text("Date Applied").appendTo(header_tbody);
                    header_tbody.appendTo(header_tbl);

                    header_tbl.appendTo(details_div);

                    $.each(resp.paycheck_data.transactions, function(i, transaction)
                    {
                        var line_item = $("<table></table>").addClass("line_item").attr("id", transaction.identifier);
                        var tbody = $("<tbody></tbody>");
                        var tr = $("<tr></tr>");
                        $("<td></td>").text(transaction.description).appendTo(tr);

                        var d_amount = (parseInt(transaction.amount / 100)) + '';
                        var c_amount = (transaction.amount % 100) + '';
                        if(c_amount.length === 1)
                        {
                            c_amount = "0" + c_amount;
                        }

                        $("<td></td>").text("$" + d_amount + "." + c_amount).appendTo(tr);
                        $("<td></td>").text(transaction.effective.split(" ")[0]).appendTo(tr);

                        tr.appendTo(tbody);
                        tbody.appendTo(line_item);

                        line_item.appendTo(details_div);

                    });

                    details_div.appendTo(details_row);

                    left_div1.appendTo(inner_div);
                    right_div1.appendTo(inner_div);
                    details_row.appendTo(inner_div);

                    inner_div.appendTo(inner_row);
                    inner_row.appendTo(row);

                    row.insertAfter($("#user_row_of_" + user.identifier));
                });


            }
            //sh
            function listUsersForExpenses(all_usr_data)
            {
                var app_area = $("#app_area");
                var spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1").html("&nbsp;");
                var row = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10");
                var title = $("<h2></h2>").text(" Requested Reimbursements");
                title.addClass("reimbursement_title");

                var labels_div = $("<div></div>").addClass("expense_labels");

                $("<div></div>").addClass("col-xs-2").addClass("col-sm-2").addClass("col-md-2").addClass("col-lg-2")
                .append(
                    $("<span></span>").addClass("label").addClass("label-warning").text("Request Date").addClass("lbl1")
                ).appendTo(labels_div);
                $("<div></div>").addClass("col-xs-2").addClass("col-sm-2").addClass("col-md-2").addClass("col-lg-2")
                .append(
                    $("<span></span>").addClass("label").addClass("label-warning").text("Rep Name").addClass("lbl2")
                ).appendTo(labels_div);
                $("<div></div>").addClass("col-xs-3").addClass("col-sm-3").addClass("col-md-3").addClass("col-lg-3")
                .append(
                    $("<span></span>").addClass("label").addClass("label-warning").text("Category").addClass("lbl3")
                ).appendTo(labels_div);
                $("<div></div>").addClass("col-xs-2").addClass("col-sm-2").addClass("col-md-2").addClass("col-lg-2")
                .append(
                    $("<span></span>").addClass("label").addClass("label-warning").text("Amount").addClass("lbl4")
                ).appendTo(labels_div);
                $("<div></div>").addClass("col-xs-3").addClass("col-sm-3").addClass("col-md-3").addClass("col-lg-3")
                .append(
                    $("<span></span>").addClass("label").addClass("label-warning").text("Actions").addClass("lbl5")
                ).appendTo(labels_div);

                var expense_list = $("<div></div>").addClass("expense_list");

                $.post("./data", {"fn": "get_unapproved_expenses_list"}).done(function(resp)
                {
                    requested_expenses(resp);
                });
                var requested_expenses = function(data)
                {
                    title.appendTo(row);
                    labels_div.appendTo(expense_list);
                    expense_list.appendTo(row);
                    spacer.appendTo(app_area);
                    row.appendTo(app_area);
                    if(data.transactions.length === 0)
                    {
                        app_area.find(".reimbursement_title").text("No pending reimbursements...");
                    }
                    $.each(data.transactions, function(i, transaction)
                    {

                        var action_sel = $("<input>").attr("type", "hidden").attr("id", "action_sel").attr("name", "action_sel").val("N/A");
                        var action_sel_div = $("<div></div>").addClass("dropdown").addClass("dropdownActionSel");
                        var action_btn = $("<button></button>").text("Select an action").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("type", "button").attr("id", "btnActionSel").attr("data-toggle", "dropdown").attr("aria-expanded", "true");

                        action_btn.appendTo(action_sel_div);

                        var action_sel_ul = $("<ul></ul>").addClass("dropdown-menu").addClass("action_sel_menu").attr("role", "menu").attr("aria-labelledby", "btnActionSel");

                        var li1 = $("<li></li>").attr("role", "presentation").attr("name", transaction.identifier).attr("id", "action_sel_approve_this");
                        $("<a></a>").text("Approve").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").appendTo(li1);
                        li1.appendTo(action_sel_ul);
                        var li3 = $("<li></li>").attr("role", "presentation").attr("name", transaction.identifier).attr("id", "action_sel_deny");
                        $("<a></a>").text("Deny").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").appendTo(li3);
                        li3.appendTo(action_sel_ul);

                        action_sel_ul.find("li").each(function(i, e)
                        {
                            $(e).click(function()
                            {
                                action_btn.text($(e).text());
                                $("<span></span>").addClass("caret").appendTo(action_sel_div.find(".btn"));

                                $("#action_sel").val($(e).attr("id").replace("action_sel_", ""));
                                $("#action_sel").attr("value", $(e).attr("id").replace("action_sel_", ""));

                                var value = ($(e).attr("id").replace("action_sel_", ""));
                                var identifier = ($(e).attr("name"));
                                if (value == "approve_this" || value === "approve_next")
                                {
                                    $.post("./data", {"fn": "approve_reimbursement", "identifier": identifier, "option": value}).done(function(resp)
                                    {
                                        if(resp.success)
                                        {
                                            $(e).closest(".expense_row").remove();
                                        }
                                        else
                                        {
                                            BootstrapDialog.alert
                                            (
                                                {
                                                    "title": "Approve Failed",
                                                    "message": "Failed, please try again shortly."
                                                }
                                            )
                                        }
                                    });
                                }
                                if (value == "deny")
                                {
                                    $.post("./data", {"fn": "deny_expense", "identifier": identifier}).done(function(resp)
                                    {
                                        if(resp.success)
                                        {
                                            $(e).closest(".expense_row").remove();
                                        }
                                        else
                                        {
                                            BootstrapDialog.alert
                                            (
                                                {
                                                    "title": "Deny Failed",
                                                    "message": "Failed, please try again shortly."
                                                }
                                            )
                                        }
                                    });
                                }
                            });
                        });

                        action_sel_div.append(action_sel_ul);

                        var trans_date = moment(transaction.recorded_dt).format("MM-DD-YYYY")
                        var usd_amount = "$";
                        usd_amount += (parseInt(transaction.amount / 100) + '');
                        var cents = transaction.amount % 100 + '';
                        cents = cents.replace("-", "");
                        if(cents.length === 1)
                        {
                            cents = "0" + cents;
                        }
                        usd_amount += ("." + cents);

                        var expense_row = $("<div></div>").addClass("expense_row");
                        var view_btn = $("<button></button>").attr("title", "View Details").html("<span class='glyphicon glyphicon-picture'></span>").addClass("view_request").attr("type", "button").attr("name", transaction.identifier).attr("id", transaction.identifier).addClass("btn").addClass("btn-info").addClass("btn-sm").click(function(ev)
                        {
                            ev.preventDefault();
                            var identifier = $(this).attr("id");
                            $.post("./data", {"fn": "get_unapproved_expense", "identifier": identifier}).done(function(resp)
                            {

                                var expense_view = $("<div></div>");
                                var img = $("<img />");
                                img.attr("src", "//storage.googleapis.com/" + window.app_bucket + resp.receipt);
                                img.addClass("img").addClass("img-responsive");
                                var description =  $("<p></p>").addClass("description").text(resp.description);

                                expense_view.append(img);
                                expense_view.append(description);
                                BootstrapDialog.alert
                                (
                                    {
                                        "title": "Reimbursement Detail",
                                        "message": expense_view
                                    }
                                )
                            });
                        });

                        expense_row.append(
                            $("<div></div>").addClass("col-xs-2").addClass("col-sm-2").addClass("col-md-2").addClass("col-lg-2").text(trans_date)
                        ).append(
                            $("<div></div>").addClass("col-xs-2").addClass("col-sm-2").addClass("col-md-2").addClass("col-lg-2").text(transaction.user_name)
                        ).append(
                            $("<div></div>").addClass("col-xs-3").addClass("col-sm-3").addClass("col-md-3").addClass("col-lg-3").text(transaction.description_key)
                        ).append(
                            $("<div></div>").addClass("col-xs-2").addClass("col-sm-2").addClass("col-md-2").addClass("col-lg-2").text(usd_amount)
                       ).append(
                            $("<div></div>").addClass("col-xs-3").addClass("col-sm-3").addClass("col-md-3").addClass("col-lg-3").append(view_btn).append(action_sel_div).append(action_sel)
                       ).appendTo(expense_list);
                    });
                }


            }
            function markTransactionsPaid(user_identifier, friday)
            {
                $.post("./data", {"fn": "mark_transactions_paid", "check_no": $.trim($("#check_no").val()),"user_identifier": user_identifier, "friday": friday}).done(function(resp)
                {
                    $(".paycheck_details_row").prev().removeClass("active_paycheck_user");
                    $(".paycheck_details_row").remove();
                    $("#user_row_of_" + user_identifier).find(".paycheck_user_office").find(".paycheck-ball").removeClass("ball-check-no-set").addClass("ball-paid").attr("title", "Check has been paid, transactions are closed");
                });
            }
            function setCheckNumber(bool)
            {
                bool = (bool === true);
                if(!bool)
                {
                    setTimeout(function()
                    {
                        setCheckNumber(true)
                    }, 500);
                    return;
                }

                $.post("./data", {"fn": "check_number_exists", "check_no": $.trim($("#check_no").val())}).done(function(resp)
                {
                    if(resp.exists)
                    {
                        $("#set_check_no_button").css("opacity", "1.0").text("Set Check Number")
                        BootstrapDialog.alert
                        (
                            {
                                "title": "Check number already in use",
                                "message": "The check number provided has already been used before."
                            }
                        )
                        return;
                    }

                    var identifiers = [];
                    $(".line_item").each(function(i, e)
                    {
                        identifiers.push($(e).attr("id"));
                    });

                    var payload =
                    {
                        "fn": window.set_paycheck_fn_name,
                        "identifiers": JSON.stringify(identifiers),
                        "check_no": $("#check_no").val()
                    };
                    if(window.set_paycheck_fn_name === "change_check_number")
                    {
                        payload["old_check_no"] = $("#old_check_no").val();
                        window.set_paycheck_fn_name = "set_check_number";
                    }

                    $.post("./data", payload).done(function(resp2)
                    {
                        var pc_ball = $("<span></span>").addClass("paycheck-ball");
                        pc_ball.addClass("ball-check-no-set").attr("title", "Check number has been set");
                        pc_ball.appendTo($(".active_paycheck_user").find(".paycheck_user_office").eq(0));

                        $(".paycheck_details_row").prev().removeClass("active_paycheck_user");
                        $(".paycheck_details_row").remove();

                        window.temp_confirm_change_check_number_fn = function()
                        {
                            return true;
                        };

                    });
                });
            }
            function addToLedger()
            {
                var app_area = $("#app_area");
                var spacer = $("<div></div>").addClass("col-xs-1 col-sm-1 col-md-1 col-lg-1");
                var row = $("<div></div>").addClass("col-xs-10 col-sm-10 col-md-10 col-lg-10");
                var type_sel_cnt = $("<div>").addClass("col-xs-4 col-sm-4 col-md-2 col-lg-2");
                var type_sel = $("<input />").attr("type", "checkbox").addClass("type_sel");
                type_sel_cnt.append
                (
                    type_sel
                );
                var amnt_in = $("<input>").attr("type", "text").addClass("form-control").keypress(function(e)
                {
                    var dot_loc = $(this).val().indexOf(".", 0);
                    var k = e.keyCode;
                    // Accept 0-9
                    if (((k - '0'.charCodeAt(0) >= 0 && k - '0'.charCodeAt(0) <= 9))
                        || (dot_loc === -1 && String.fromCharCode(k) === '.'))
                    {
                        // Pass
                    }
                    else
                    {
                        e.preventDefault();
                    }
                }).blur(function()
                {
                    var amnt = $(this).val();
                    var dot_loc = $(this).val().indexOf(".", 0);
                    if (dot_loc === -1)
                    {
                        $(this).val($(this).val() + ".00");
                    }
                    else if (dot_loc === $(this).val().length - 1)
                    {
                        $(this).val($(this).val() + "00");
                    }
                    else if (dot_loc === $(this).val().length - 2)
                    {
                        $(this).val($(this).val() + "0");
                    }
                    else
                    {
                        $(this).val($(this).val().substring(0, dot_loc + 3));
                    }

                    dot_loc = $(this).val().indexOf(".", 0);
                    if (dot_loc === 0)
                    {
                        $(this).val('0' + $(this).val());
                    }
                    var length = $(this).val().length;
                    // XXX.XX A comma is inserted if the string is more than 6 chars long
                    if (length > 6)
                    {
                        var comma_exists = $(this).val().indexOf(",", 0) !== -1;
                        if (!comma_exists)
                        {
                            $(this).val($(this).val().substr(0, dot_loc - 3) + "," + $(this).val().substr(dot_loc - 3));
                        }
                    }
                    var amnt = parseFloat($(this).val().replace(',','')).toFixed(2);
                    if (amnt < 0.01)
                    {
                        $(this).parent().css("box-shadow", "0 0 7px #f55");
                        amnt_in._valid = false;
                    }
                    else
                    {
                        amnt_in._valid = true;
                    }
                }).focus(function()
                {
                    $(this).parent().css("box-shadow", "");
                });
                amnt_in._valid = false;

                $("<p></p>").addClass("pos_neg_lbl").text("Positive/Negative").prependTo(type_sel_cnt);
                row.append
                (
                    type_sel_cnt
                );

                type_sel.bootstrapSwitch("size", "mini");
                type_sel.bootstrapSwitch("onText", "&nbsp;&nbsp;&nbsp;+&nbsp;&nbsp;&nbsp;");
                type_sel.bootstrapSwitch("offText", "&nbsp;&nbsp;&nbsp;-&nbsp;&nbsp;&nbsp;");
                type_sel.bootstrapSwitch("offColor", "danger");
                type_sel.bootstrapSwitch("onColor", "success");
                type_sel.bootstrapSwitch("state", true);

                var amnt_cnt2 = $("<div>").addClass("amnt_cnt")
                .append
                (
                    $("<div>").addClass("input-group").attr("id", "amnt_in")
                    .append
                    (
                        $("<span>").addClass("input-group-addon").text("$")
                    )
                    .append
                    (
                        amnt_in
                    )
                )

                $("<p></p>").addClass("amount_lbl").text("Amount:").prependTo(amnt_cnt2);

                amnt_cnt2.appendTo(row);

                $("<div></div>").addClass("taxable_date").append
                (
                    $("<div></div>").attr("id", "dt_add_ledger").addClass("input-append").addClass("date").attr("data-date", "12-02-2012").attr("data-date-format", "dd-mm-yyyy")
                    .append
                    (
                        $("<input  />").addClass("span2").addClass("eightpoint5").attr("size", "16").attr("type", "text").attr("value", "12-02-2012").attr("name", "add_ledger_chosen_date").attr("id", "add_ledger_chosen_date")
                        .on("keyup", function(ev)
                        {
                            ev.preventDefault();
                        })
                        .on("keydown", function(ev)
                        {
                            ev.preventDefault();
                        })
                    )
                    .append
                    (
                        $("<span></span>").addClass("add-on")
                        .append
                        (
                            $("<i></i>").addClass("icon-th")
                        )
                    )
                    .append
                    (
                        $("<span></span>").addClass("add_ledger_date_lbl").text("Transaction Payout Date")
                    )
                ).appendTo(row);
                $("<div></div>").addClass("taxable_cnt").append
                (
                    $("<p></p>").addClass("taxable_lbl").html("Taxable&nbsp;")
                    .append
                    (
                        $("<span></span>").addClass("glyphicon").addClass("glyphicon-question-sign").attr("title", "Check this box if the amount is elibible for inclusion in a 1099 form").html("&nbsp;&nbsp;&nbsp;")
                    )
                    .append
                    (
                        $("<input />").attr("type", "checkbox").attr("id", "add_ledger_taxable_cb").attr("checked", "checked")
                    )
                ).appendTo(row);

                $("<div>").addClass("row").append
                (
                    spacer
                ).append
                (
                    row
                ).append
                (
                    spacer.clone()
                ).appendTo
                (
                    app_area
                );

                row = $("<div>").addClass("col-xs-10 col-sm-10 col-md-10 col-lg-10");
                var desc_lbl = $("<span>").addClass("col-xs-2 col-sm-2 col-md-2 col-lg-2").text("Description:");
                var desc = $("<textarea>").addClass("ledger_desc").attr("rows", "2").attr("cols", "60").blur(function()
                {
                    if ($.trim($(this).val()).length === 0)
                    {
                        $(this).css("box-shadow", "0 0 7px #f55");
                        desc._valid = false;
                    } else
                    {
                        $(this).css("box-shadow", "");
                        desc._valid = true;
                    }
                });
                desc._valid = false;

                row.append
                (
                    desc_lbl
                ).append
                (
                    desc
                );

                $("<div>").addClass("row").append
                (
                    spacer.clone()
                ).append
                (
                    row
                ).append
                (
                    spacer.clone()
                ).appendTo
                (
                    app_area
                );

                var search_users_div = $("<div></div>").addClass("add_legder_user_search");
                $("<p></p>").addClass("add_ledger_user_search_lbl").text("Search for rep, apply to his/her account:").appendTo(search_users_div);
                $("<input />").attr("type", "text").attr("id", "add_ledger_fname").attr("placeholder", "First Name").appendTo(search_users_div);
                $("<input />").attr("type", "text").attr("id", "add_ledger_lname").attr("placeholder", "Last Name").appendTo(search_users_div);
                $("<input />").attr("type", "text").attr("id", "add_ledger_rid").attr("placeholder", "Rep ID").appendTo(search_users_div);
                $("<div></div>").addClass("listed_users_div").appendTo(search_users_div);

                search_users_div.find("input").each(function(i, e)
                {
                    var fn = function()
                    {
                        ledgerSearchUsers();
                    };
                    $(e)
                    .on("keyup", function(ev)
                    {
                        fn();
                    })
                    .on("change", function(ev)
                    {
                        fn();
                    })
                    .on("blur", function(ev)
                    {
                        fn();
                    });
                });

                search_users_div.insertAfter(app_area.find("textarea").eq(0));


                var validation_fn = function()
                {
                    //verify the amount
                    $("#amnt_in").find("input").eq(0).val($.trim($("#amnt_in").find("input").eq(0).val()));

                    var vals_1 = $("#amnt_in").find("input").eq(0).val().split("");
                    var valid = true;
                    var found_period = false;
                    var found_comma = false;
                    $.each(vals_1, function(i, char)
                    {
                        var ascii = char.charCodeAt(0);
                        if((ascii >= 48 && ascii <= 57) || ascii === 46 || ascii === 44)
                        {
                            if(ascii === 46)
                            {
                                if(!found_period)
                                {
                                    found_period = true;
                                }
                                else
                                {
                                    valid = false;
                                }
                            }
                            else if(ascii === 44)
                            {
                                if(!found_comma)
                                {
                                    found_comma = true;
                                }
                                else
                                {
                                    valid = false;
                                }
                            }
                        }
                        else
                        {
                            valid = false;
                        }
                    });
                    valid = valid && vals_1.length > 0;
                    if(!valid)
                    {
                        BootstrapDialog.show
                        (
                            {
                                title: "Fail!",
                                type: BootstrapDialog.TYPE_WARNING,
                                closable: true,
                                closeByBackdrop: false,
                                closeByKeyboard: false,
                                message: "Failed to add to ledger, because amount provided was invalid",
                                buttons:
                                [
                                    {
                                        label: "Close",
                                        action: function(dialogRef)
                                        {
                                            dialogRef.close();
                                        }
                                    }
                                ]
                            }
                        );
                        return false;
                    }

                    var desc = $.trim($(".ledger_desc").val());
                    if(desc.length === 0)
                    {
                        BootstrapDialog.show
                        (
                            {
                                title: "Fail!",
                                type: BootstrapDialog.TYPE_WARNING,
                                closable: true,
                                closeByBackdrop: false,
                                closeByKeyboard: false,
                                message: "Failed to add to ledger, because the description was left blank.",
                                buttons:
                                [
                                    {
                                        label: "Close",
                                        action: function(dialogRef)
                                        {
                                            dialogRef.close();
                                        }
                                    }
                                ]
                            }
                        );
                        return false;
                    }

                    if($(".user_chosen_add_ledger").size() === 0)
                    {
                        BootstrapDialog.show
                        (
                            {
                                title: "Fail!",
                                type: BootstrapDialog.TYPE_WARNING,
                                closable: true,
                                closeByBackdrop: false,
                                closeByKeyboard: false,
                                message: "Failed to add to ledger, because the rep account(s) was/were not selected.",
                                buttons:
                                [
                                    {
                                        label: "Close",
                                        action: function(dialogRef)
                                        {
                                            dialogRef.close();
                                        }
                                    }
                                ]
                            }
                        );
                        return false;
                    }

                    return true;

                };


                $("<div></div>").addClass("row").append
                (
                    spacer.clone()
                ).append
                (
                    $("<div></div>").addClass("col-xs-10 col-sm-10 col-md-10 col-lg-10").append
                    (
                        $("<div></div>").addClass("col-xs-1 col-sm-1 col-md-1 col-lg-1").append
                        (
                            $("<button></button>").text("Apply transaction to account(s)").addClass("ledger_submit").attr("type", "button").addClass("btn").addClass("btn-success").click(function()
                            {
                                if (validation_fn())
                                {
                                    var user_identifiers = [];
                                    var transactions = [];
                                    $(".user_chosen_add_ledger").each(function(i, e)
                                    {
                                        var transaction = {};
                                        transaction["user_identifier"] = $(e).attr("id").replace("add_user_", "");
                                        user_identifiers.push(transaction["user_identifier"]);
                                        transaction["amount"] = $("#amnt_in").find("input").eq(0).val();
                                        while(transaction["amount"].indexOf(",") !== -1)
                                        {
                                            transaction["amount"] = transaction["amount"].replace(",", "");
                                        }

                                        var polarity_vals =
                                        {
                                            "0": "-",
                                            "1": "+"
                                        };
                                        transaction["polarity"] = polarity_vals[(($(".bootstrap-switch-wrapper").eq(0).hasClass("bootstrap-switch-on") * 1) + '')];
                                        transaction["taxable"] = $("#add_ledger_taxable_cb")[0].checked;
                                        transaction["description"] = $.trim($(".ledger_desc").val());
                                        transaction["date"] = {}
                                        transaction["date"]["year"] = parseInt($("#add_ledger_chosen_date").val().split("-")[2]);
                                        transaction["date"]["month"] = parseInt($("#add_ledger_chosen_date").val().split("-")[0]);
                                        transaction["date"]["day"] = parseInt($("#add_ledger_chosen_date").val().split("-")[1]);


                                        transactions.push(transaction);
                                    });

                                    $.post("./data", {"fn": "ensure_checks_are_open", "friday": $.trim($("#add_ledger_chosen_date").val()), "user_identifiers": JSON.stringify(user_identifiers)}).done(function(resp)
                                    {
                                        var ret_false = false;
                                        var bad_user_identifier = "";
                                        $.each(resp.answers, function(i, answer)
                                        {
                                            if(!answer.result)
                                            {
                                                ret_false = true;
                                                if(bad_user_identifier == "")
                                                {
                                                    bad_user_identifier = answer.identifier;
                                                }
                                            }
                                        });

                                        if(ret_false)
                                        {
                                            BootstrapDialog.alert
                                            (
                                                {
                                                    "title": "Check has already been closed",
                                                    "message": "For the date \"" + $("#add_ledger_chosen_date").val() + "\", the check has already been marked paid. You should remove \"" + $("#add_user_" + bad_user_identifier).find(".usr_name").text() + "\" from the transaction, or push it to the following Friday."
                                                }
                                            );

                                            return false;
                                        }

                                        $.post("./data", {"fn": "add_monetary_transactions", "transactions": JSON.stringify(transactions)}).done(function(resp2)
                                        {
                                            localStorage.setItem("button_to_click", "ledger");
                                            window.location.reload();
                                        });
                                    });
                                }
                            })
                        )
                    )
                ).append
                (
                    spacer.clone()
                ).appendTo
                (
                    app_area
                );

                setTimeout(function()
                {
                    var val2 = getDateString();
                    var split2 = val2.split("/");
                    for(var i = 0; i < split2.length; i++)
                    {
                        if(split2[i].length === 1)
                        {
                            split2[i] = "0" + split2[i];
                        }
                    }
                    var switched_up2 = split2[2] + "-" + split2[0] + "-" + split2[1];

                    var today2 = moment(switched_up2);
                    while(today2.isoWeekday() !== 5)
                    {
                        today2 = today2.add(1, "days");
                    }
                    var new_str = today2.format("MM-DD-YYYY")
                    $("#add_ledger_chosen_date").attr("value", new_str).val(new_str);

                    var disabled_fridays = [];
                    var friday = today2;
                    while(disabled_fridays.length < 52)
                    {
                        friday = friday.subtract(7, "days");
                        disabled_fridays.push(friday.format("MM-DD-YYYY"));
                    }
                    $("#add_ledger_chosen_date").datepicker
                    (
                        {
                            format: "mm-dd-yyyy",
                            autoClose: true,
                            daysOfWeekDisabled: [0, 1, 2, 3, 4, 6],
                            datesDisabled: disabled_fridays
                        }
                    );


                }, 50);
            }
            function ledgerSearchUsers()
            {
                var fname_val = $.trim($("#add_ledger_fname").val());
                var lname_val = $.trim($("#add_ledger_lname").val());
                var rid_val = $.trim($("#add_ledger_rid").val());

                if(fname_val.length === 0)
                {
                    fname_val = null;
                }
                if(lname_val.length === 0)
                {
                    lname_val = null;
                }
                if(rid_val.length === 0)
                {
                    rid_val = null;
                }

                if(fname_val === null && lname_val === null && rid_val === null)
                {
                    return;
                }

                var vals = {"fname_val": fname_val, "lname_val": lname_val, "rid_val": rid_val};
                $.post("./data", {"fn": "add_ledger_search_users", "vals": JSON.stringify(vals)}).done(function(resp)
                {
                    $(".user_result_add_ledger").remove();
                    $.each(resp.users, function(i, user)
                    {
                        var usr_div = $("<div></div>").addClass("user_result_add_ledger");
                        $("<span></span>").addClass("glyphicon").addClass("glyphicon-user").appendTo(usr_div);
                        usr_div.attr("id", "add_user_" + user.identifier).appendTo(usr_div);
                        $("<span></span>").addClass("usr_name").text(user.name).append
                        (
                            $("<span></span>").addClass("usr_rid").text("( " + user.rep_id + " )")
                        ).appendTo(usr_div);

                        usr_div.on("click", function()
                        {

                            usr_div
                            .removeClass("user_result_add_ledger")
                            .addClass("user_chosen_add_ledger")
                            .prepend
                            (
                                $("<span></span>").addClass("glyphicon").addClass("glyphicon-ok")
                            )
                            .append
                            (
                                $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove-sign").attr("title", "Remove user from transaction").click(function()
                                {
                                    usr_div.remove();
                                })
                            )
                            .off("click");
                        });
                        if($("#add_user_" + user.identifier).size() === 0)
                        {
                            usr_div.appendTo($(".listed_users_div"));
                        }
                    });
                });
            }
            function showRejectionHistory(packet, idx, ret)
            {
                ret = (ret === true);
                window.packet = packet;
                var rejection_history_div = $("<div></div>").addClass("row").addClass("rejection_history_row");
                $("<h3></h3>").addClass("rej_history_header").text("Rejection History").appendTo(rejection_history_div);
                $.each(packet.rejection_reasons.reasons, function(i, reason)
                {
                    var reason_date = packet.rejection_reasons.dates[i];
                    var empty_div = $("<div></div>").addClass("col-xs-3").addClass("col-sm-3").addClass("col-md-3").addClass("col-lg-3");
                    empty_div.html("&nbsp;");

                    empty_div.appendTo(rejection_history_div);

                    var hist_div = $("<div></div>").addClass("col-xs-9").addClass("col-sm-9").addClass("col-md-9").addClass("col-lg-9");

                    //var inner_history_div = $("<div></div>").addClass("inner_history_container");
                    $("<p></p>").addClass("hist_lbl").text(reason_date.split(" ")[0] + " - The packet was rejected with the following outstanding items:" ).appendTo(hist_div);
                    var ul1 = $("<ul></ul>").addClass("hist_ul");

                    $.each(reason, function(k, reason_item)
                    {
                        $("<li></li>").text(reason_item).appendTo(ul1);
                    });

                    ul1.appendTo(hist_div);

                    if(typeof(packet.rejection_reasons.responses[i]) + '' !== "undefined")
                    {
                        var response_date = packet.rejection_reasons.response_dates[i];
                        $("<hr />").appendTo(hist_div);
                        $("<p></p>").addClass("hist_lbl").text(response_date.split(" ")[0] + " - " + packet.rep_name.split(" ")[0] + " provided the following responses:").appendTo(hist_div);

                        var ul2 = $("<ul></ul>").addClass("hist_ul");

                        var response = packet.rejection_reasons.responses[i];
                        $.each(response, function(k, response_item)
                        {
                            $("<li></li>").text(response_item).appendTo(ul2);
                        });

                        ul2.appendTo(hist_div);
                    }
                    else
                    {
                        $("<p></p>").addClass("hist_lbl").addClass("disclaimer_note").text("(Awaiting rep's response)").appendTo(hist_div);
                    }

                    empty_div.appendTo(rejection_history_div);
                    hist_div.appendTo(rejection_history_div);
                });
                $("<center></center>").append
                (
                    $("<button></button>").addClass("btn").addClass("rej_history_close").addClass("btn-danger").text("Close")
                    .click(function()
                    {
                        $(".rejection_history_row").remove();
                    })
                ).appendTo(rejection_history_div);
                if(!ret)
                {
                    rejection_history_div.insertAfter($(".packet_list_item").eq(idx));
                }
                else
                {
                    return rejection_history_div;
                }
            }
            function showPacket(packet)
            {
                function shorten(s)
                {
                    var ret = s;
                    if (ret.length > 40)
                    {
                        ret = ret.substr(ret, 40 - 1) + "&hellip;";
                    }
                    return [ret, s]
                }

                // https://jsfiddle.net/hmelenok/WM6Gq/
                // TODO: Handle cut/paste
                function autoGrow()
                {
                    _autoGrow(this);
                }


                function _autoGrow(textarea)
                {
                    textarea.style.height = "auto";
                    // Min. size of 30
                    if (textarea.scrollHeight > 30)
                    {
                        textarea.style.height = textarea.scrollHeight + "px";
                    }
                }
                window.pp_submit_clicked = false;
                function adjustNumOfEntries()
                {
                    if (_maybeRemove(this))
                    {
                        return;
                    }
                    if(!window.pp_submit_clicked)
                    {
                        var that = this;
                        setTimeout(function()
                        {
                            _maybeAdd(that);
                        }, 250);
                        $(".reject_reason").each(function(i, e)
                        {
                            if($.trim($(e).val()).length === 0)
                            {
                                $(".reject_switch").eq(i).bootstrapSwitch("state", false, false);
                            }
                        });
                        return;
                    }

                    $(".reject_reason").each(function(i, e)
                    {
                        if($.trim($(e).val()).length === 0)
                        {
                            $(".reject_switch").eq(i).bootstrapSwitch("state", false, false);
                        }
                    });
                }

                function _maybeRemove(textarea)
                {
                    if ($(textarea).val().length === 0)
                    {
                        var counter = 0;
                        reject_marker.children().each(function()
                        {
                            if ($(this).children().last().val().length === 0)
                            {
                                ++counter;
                            }
                            if (counter > 1)
                            {
                                return false;
                            }
                        });
                        if (counter > 1)
                        {
                            $(textarea).parent().remove();
                            return true;
                        }
                    }
                    return false;
                }

                function _maybeAdd(textarea)
                {
                    if(window.pp_submit_clicked)
                    {
                        return;
                    }
                    setTimeout(function()
                    {
                        if (($(reject_marker).children().length === 1 && $.trim($(textarea).val()).length > 0) ||
                            $.trim($(reject_marker).children().last().children().last().val()).length !== 0)
                        {
                            var reject_entry = reject_entry_template.clone();
                            reject_marker.append(reject_entry);
                            bind(reject_entry.children(".reject_switch")[0]);
                        }
                    }, 250);

                }

                function bind(sw)
                {
                    var textarea = $(sw).next();
                    textarea.on("keyup", autoGrow);
                    textarea.on("focus", function()
                    {
                        _autoGrow(this);
                        textarea.on("keyup", autoGrow);
                        $(sw).bootstrapSwitch("state", true, true);
                    });
                    textarea.on("blur", adjustNumOfEntries);
                    $(sw).bootstrapSwitch("size", "mini").on("switchChange.bootstrapSwitch", function(event, state)
                    {
                        if (state === true)
                        {
                            textarea.on("keyup", autoGrow);
                            _autoGrow(textarea[0]);
                        }
                        else
                        {
                            textarea.off("keyup");
                            textarea[0].style.height = "auto";
                        }
                    });
                }

                function clearReasons(cb)
                {
                    var time = 250;
                    reasons.animate({opacity: 0.0}, time, function()
                    {
                        reasons.empty();
                        cb();
                        reasons.animate({opacity: 1.0}, time, function()
                        {

                        });
                    });
                }

                var app_area = $("#app_area");
                var spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1").html("&nbsp;");
                var row = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10");
                var reject_marker = $("<div></div>").addClass("row").attr("id", "reject_marker");
                var reject_entry_template =
                    $("<div></div>").addClass("reject_entry").append
                    (
                        $("<input />").attr("type", "checkbox").addClass("reject_switch")
                    ).append
                    (
                        $("<textarea></textarea>").addClass("reject_reason").attr("rows", "1")
                    );

                reject_marker.append(reject_entry_template.clone());

                var dropdown_div = $("<div></div>").addClass("dropdown").addClass("dropdownAccRejPp");
                var btn = $("<button></button>").text("Select One").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("type", "button").attr("id", "btnAccRejPp").attr("data-toggle", "dropdown").attr("aria-expanded", "true");
                btn.appendTo(dropdown_div);
                $("<span></span>").addClass("caret").appendTo(dropdown_div.find(".btn"));
                var accrej_ul = $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu").attr("aria-labelledby", "btnAccRejPp");

                var li = $("<li></li>").attr("role", "presentation").attr("id", "value_of_accept");
                $("<a></a>").text("Approve").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").appendTo(li);
                li.appendTo(accrej_ul);
                li = $("<li></li>").attr("role", "presentation").attr("id", "value_of_reject");
                $("<a></a>").text("Reject").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").appendTo(li);
                li.appendTo(accrej_ul);

                accrej_ul.find("li").each(function(i, e)
                {
                    $(e).click(function()
                    {
                        btn.text($(e).text());
                        $("<span></span>").addClass("caret").appendTo(dropdown_div.find(".btn"));
                        var value = $(e).attr("id").replace("value_of_","");
                        accrej_hid.val(value);
                        if (value === "reject")
                        {
                            $("#system_size, .admin_pp_approval_date_lbl, #pp_approval_date_from_admin").css("display", "none");
                            reject_marker.css("display", "block");
                        }
                        else
                        {
                            $("#system_size, .admin_pp_approval_date_lbl, #pp_approval_date_from_admin").css("display", "block");
                            reject_marker.css("display", "none");
                        }
                    });
                });

                var accrej_hid = $("<input />").attr("type", "hidden").val("N/A").attr("value", "N/A").attr("id", "accrej_hid");

                dropdown_div.append(accrej_ul);
                dropdown_div.append(accrej_hid);

                var details = $("<div></div>").addClass("col-xs-6").addClass("col-sm-6").addClass("col-md-6").addClass("col-lg-6").append
                (
                    $("<div></div>").addClass("row").append
                    (
                        $("<div></div>").addClass("col-xs-5").addClass("col-sm-5").addClass("col-md-5").addClass("col-lg-5").addClass("pp_key").text("Customer Name:")
                    ).append
                    (
                        $("<div></div>").addClass("col-xs-7").addClass("col-sm-7").addClass("col-md-7").addClass("col-lg-7").append
                        (
                            $("<span></span>").addClass("pp_value").text(packet.cust_name)
                        )
                    )
                ).append
                (
                    $("<div></div>").addClass("row").append
                    (
                        $("<div></div>").addClass("col-xs-5").addClass("col-sm-5").addClass("col-md-5").addClass("col-lg-5").addClass("pp_key").text("Rep Name:")
                    ).append
                    (
                        $("<div></div>").addClass("col-xs-7").addClass("col-sm-7").addClass("col-md-7").addClass("col-lg-7").append
                        (
                            $("<span></span>").addClass("pp_value").text(packet.rep_name)
                        )
                    )
                ).append
                (
                    $("<div></div>").addClass("row").append
                    (
                        $("<div></div>").addClass("col-xs-5").addClass("col-sm-5").addClass("col-md-5").addClass("col-lg-5").addClass("pp_key").text("Surveyor Name:")
                    ).append
                    (
                        $("<div></div>").addClass("col-xs-7").addClass("col-sm-7").addClass("col-md-7").addClass("col-lg-7").append
                        (
                            $("<span></span>").addClass("pp_value").text(packet.surveyor_name)
                        )
                    )
                );
                if(typeof(packet.extra_info["docs_link"]) + '' !== "undefined")
                {
                    details.append
                    (
                        $("<div></div>").addClass("row").append
                        (
                            $("<div></div>").addClass("col-xs-5").addClass("col-sm-5").addClass("col-md-5").addClass("col-lg-5").addClass("pp_key").text("Customer Docs Link:")
                        ).append
                        (
                            $("<div></div>").addClass("col-xs-7").addClass("col-sm-7").addClass("col-md-7").addClass("col-lg-7").append
                            (
                                $("<span></span>").addClass("pp_value")
                                .append
                                (
                                    $("<a></a>").attr("target", "_blank").text(packet.extra_info.docs_link).attr("href", packet.extra_info.docs_link)
                                )
                            )
                        )
                    )
                }

                details.appendTo(row);


                var input_validation_fn = function(jqInput, ev)
                {
                    if(ev.keyCode === 37 || ev.keyCode === 38 || ev.keyCode === 39 || ev.KeyCode === 40)
                    {
                        return;
                    }
                    jqInput.val($.trim(jqInput.val()));

                    var vals = jqInput.val().split("")
                    var good = true;
                    var found_period = false;

                    $.each(vals, function(i, val)
                    {
                        var ascii = val.charCodeAt(0);
                        if(Number.isNaN(ascii))
                        {
                            return;
                        }
                        if(ascii === 46 || (ascii >= 48 && ascii <= 57))
                        {
                            if(found_period && ascii === 46)
                            {
                                good = false;
                            }
                        }
                        else
                        {
                            good = false;
                        }
                        if(ascii === 46)
                        {
                            found_period = true;
                        }
                    });
                    if(!good)
                    {
                        jqInput.val("");
                    }

                };

                details
                .append
                (
                    dropdown_div
                )
                .append
                (
                    reject_marker
                )
                .append
                (
                    $("<input />").attr("type", "text").attr("id", "system_size").attr("placeholder", "System Size (Ex: 5.62)")
                    .keyup(function(ev)
                    {
                        input_validation_fn($(this), ev);
                    })
                    .keydown(function(ev)
                    {
                        input_validation_fn($(this), ev);
                    })
                    .change(function(ev)
                    {
                        input_validation_fn($(this), ev);
                    })
                    .keypress(function(ev)
                    {
                        input_validation_fn($(this), ev);
                    })
                )
                .append
                (
                    $("<p></p>").text("Approval Date for packet:").addClass("admin_pp_approval_date_lbl")
                )
                .append
                (
                    $("<div></div>").addClass("dt_55").addClass("input-append").addClass("date").attr("data-date", moment().format("MM-DD-YYYY")).attr("data-date-format", "dd-mm-yyyy").attr("id", "pp_approval_date_from_admin_div")
                    .append
                    (
                        $("<input />").attr("type", "text").attr("value", moment().format("MM-DD-YYYY")).attr("id", "pp_approval_date_from_admin").attr("size", "16").addClass("span2")
                        .keyup(function(ev)
                        {
                            ev.preventDefault();
                        })
                        .keydown(function(ev)
                        {
                            ev.preventDefault();
                        })
                        .keypress(function(ev)
                        {
                            ev.preventDefault();
                        })
                    )
                    .append
                    (
                        $("<span></span>").addClass("add-on").append($("<i></i>").addClass("icon-th"))
                    )
                )
                .append
                (
                    $("<div></div>").addClass("row").addClass("show-packet-btns").append
                    (
                        $("<button></button>").text("Submit").attr("type", "button").addClass("btn").addClass("btn-success").click(function()
                        {
                            window.pp_submit_clicked = true;
                            setTimeout(function()
                            {
                                window.pp_submit_clicked = false;
                            }, 600);
                            if (accrej_hid.val() === "reject")
                            {
                                var missing_rej_reason = false;

                                if($(".reject_reason").size() === 0)
                                {
                                    missing_rej_reason = true;
                                }
                                if($(".reject_reason").size() === 1)
                                {
                                    if($(".reject_reason").prev().hasClass("bootstrap-switch-on"))
                                    {
                                        // good
                                    }
                                    else
                                    {
                                        missing_rej_reason = true;
                                    }
                                }
                                $(".reject_reason").each(function(i, e)
                                {
                                    if($(e).prev().hasClass("bootstrap-switch-on"))
                                    {
                                        if($.trim($(e).val()).length === 0)
                                        {
                                            missing_rej_reason = true;
                                        }
                                    }
                                });

                                if(missing_rej_reason)
                                {
                                    BootstrapDialog.show
                                    (
                                        {
                                            type: BootstrapDialog.TYPE_WARNING,
                                            title: "Missing Rejection Reason",
                                            message: "Please enter at least one reason for rejecting the perfect packet. If multiple reason boxes are present and you are seeing this message, mark the undesired box(s) as \"excluded\" if you do not wish to include it/them."
                                        }
                                    );
                                }
                                else
                                {
                                        var reasons_json = [];
                                        $(".reject_reason").each(function(i, e)
                                        {
                                            if($(e).prev().hasClass("bootstrap-switch-on"))
                                            {
                                                if($.trim($(e).val()).length > 0)
                                                {
                                                    reasons_json.push($.trim($(e).val()));
                                                }
                                            }
                                        });
                                        if(reasons_json.length > 0)
                                        {
                                            $.post("./data", {"fn": "reject_perfect_packet", "identifier": packet.identifier, "reasons": JSON.stringify(reasons_json), "json": "1"}).done(function(resp)
                                            {
                                                clearApp(function()
                                                {
                                                    showPerfectPacket();
                                                });
                                            });
                                        }
                                }
                            }
                            else if (accrej_hid.val() === "accept")
                            {
                                    if($("#system_size").val().length > 0)
                                    {
                                        var sys_size = parseFloat($("#system_size").val()) + '';
                                        $.post("./data", {"fn": "approve_perfect_packet", "identifier": packet.identifier, "system_size": sys_size, "approval_date": $("#pp_approval_date_from_admin").val()}).done(function(resp)
                                        {
                                            if(resp.success)
                                            {
                                                clearApp(function()
                                                {
                                                    showPerfectPacket();
                                                });
                                            }
                                            else
                                            {
                                                if(resp.reason === "missing_payscale")
                                                {
                                                    rep_name_txt = $(".pp_value").eq(1).text();
                                                    BootstrapDialog.show
                                                    (
                                                        {
                                                            type: BootstrapDialog.TYPE_WARNING,
                                                            message: "The packet could not be approved. The rep (" + rep_name_txt + ") has not been assigned to a payscale.<br /><br /><a target='_blank' href='./super'><button type='button' class='btn btn-primary' id='tmp_btn_rejected_bc_of_payscale'>Fix it &rarr;</button></a>"
                                                        }
                                                    );
                                                    setTimeout(function()
                                                    {
                                                        $(".show-packet-btns").find(".btn-success").text("Try again");

                                                        $("#tmp_btn_rejected_bc_of_payscale").click(function()
                                                        {
                                                            localStorage.setItem("button_to_click", "payscale_editor");
                                                        });
                                                    }, 250);
                                                }
                                                else if(resp.reason === "missing_fund")
                                                {
                                                    $.post("./data", {"fn": "list_funding_sources"}).done(function(resp2)
                                                    {
                                                        var html = "The packet could not be approved. The customer's fund was never set during the time when it was available in the upcoming view.<br /><br />";

                                                        html += "<div class='dropdown'>";

                                                        html += "<button class='btn btn-default dropdown-toggle' type='button' id='btnFixFund' data-toggle='dropdown' aria-expanded='false'>Select a Fund<span class='caret'></span></button>";

                                                        html += "<ul id='ul_for_updating_fund_when_missing' class='dropdown-menu' role='menu' aria-labelledby='btnAccRejPp'>";

                                                        $.each(resp2, function(i, fund_item)
                                                        {
                                                            if(i > 0 && i !== resp2.length - 1)
                                                            {
                                                                var li_html = "<li role='presentation' id='fund_value_of_" + fund_item.value + "'>";
                                                                li_html += "<a role='menuitem' tabindex='-1' href='javascript:void(0);'>";
                                                                li_html += fund_item.value_friendly
                                                                li_html += "</a></li>";

                                                                html += li_html;
                                                            }
                                                        });

                                                        html += "</ul>";

                                                        html += "<input type='hidden' value='n/a' id='temp_hidden_fix_fund' />";

                                                        html += "</div>";

                                                        html += "<div>&nbsp;</div>";

                                                        html += "<button type='button' class='btn btn-primary' id='tmp_btn_rejected_bc_of_fund'>Update Fund</button>";

                                                        BootstrapDialog.show
                                                        (
                                                            {
                                                                type: BootstrapDialog.TYPE_WARNING,
                                                                message: html
                                                            }
                                                        );
                                                        setTimeout(function()
                                                        {
                                                            $(".show-packet-btns").find(".btn-success").text("Try again");

                                                            $("#ul_for_updating_fund_when_missing").find("li").each(function(i, e)
                                                            {
                                                                $(e).click(function()
                                                                {
                                                                    var new_val = $(e).attr("id").replace("fund_value_of_", "");
                                                                    $("#btnFixFund").text($(e).text());
                                                                    $("<span></span>").addClass("caret").appendTo($("#btnFixFund"));
                                                                    $("#temp_hidden_fix_fund").attr("value", new_val).val(new_val);
                                                                });
                                                            });

                                                            $("#tmp_btn_rejected_bc_of_fund").click(function()
                                                            {
                                                                if($("#temp_hidden_fix_fund").val() === "n/a")
                                                                {
                                                                    window.alert("You must select a fund in order to update the fund.");
                                                                    return;
                                                                }

                                                                $("#tmp_btn_rejected_bc_of_fund").animate({opacity: 0.5}, 250, function()
                                                                {
                                                                    var new_fund = $("#temp_hidden_fix_fund").val();

                                                                    $.post("/data", {"fn": "set_fund_for_booking", "fund": new_fund, "identifier": packet.booking_identifier}).done(function(resp)
                                                                    {
                                                                        $("#tmp_btn_rejected_bc_of_fund").animate({opacity: 1.0}, 250, function()
                                                                        {
                                                                            $.each(BootstrapDialog.dialogs, function(idx, dialog)
                                                                            {
                                                                                dialog.close();
                                                                            });
                                                                        });
                                                                    });
                                                                });
                                                            });

                                                        }, 250);
                                                    });
                                                }
                                                else
                                                {
                                                    BootstrapDialog.show
                                                    (
                                                        {
                                                            type: BootstrapDialog.TYPE_WARNING,
                                                            message: "The packet could not be approved. Most likely, rep's payscale and/or the customer's fund has been deprecated."
                                                        }
                                                    );
                                                }
                                            }
                                        });
                                    }
                                    else
                                    {
                                        BootstrapDialog.show({
                                            type: BootstrapDialog.TYPE_WARNING,
                                            message: "The system size is required"
                                        });
                                    }
                            }
                            else
                            {
                                    BootstrapDialog.show({
                                        type: BootstrapDialog.TYPE_WARNING,
                                        message: "Please choose whether to accept or reject this perfect packet"
                                    });
                            }
                        })
                    )
                    .append
                    (
                            $("<button></button>").text("Cancel").attr("type", "button").addClass("btn").addClass("btn-danger").click(function()
                            {
                                clearApp(function()
                                {
                                    showPerfectPacket();
                                });
                            })
                    )
                ).appendTo(row);


                var reasons = $("<div></div>").addClass("col-xs-6").addClass("col-sm-6").addClass("col-md-6").addClass("col-lg-6").attr("id", "rej_reasons");

                if(packet.rejection_reasons.reasons.length > 0)
                {
                    var rej_hist_div = showRejectionHistory(packet, 0, true);
                    rej_hist_div.find(".btn-danger").remove();
                    rej_hist_div.appendTo(reasons);
                }
                reasons.appendTo(row);

                app_area.append(spacer);
                app_area.append(row);

                $("#pp_approval_date_from_admin").datepicker
                (
                    {
                    }
                )
                app_area.append(spacer.clone());
                var switches = $(".reject_switch");
                switches.each(function()
                {
                    bind(this);
                });
            }

            window.cpf_info = {};
            window.mosaic_info = {};
            window.sales_rabbit_info = {};
            function manageThirdPartyCredentials()
            {
                var html = $("<div></div>");
                $("<p></p>").addClass("third_party_label").text("CPF").appendTo(html);
                $("<span>CPF Login:</span><input type='email' id='cpf_email' />").appendTo(html);
                $("<p></p>").appendTo(html);
                $("<span>CPF Pass:</span><input type='password' id='cpf_pass' />").appendTo(html);
                $("<button></button>").attr("type", "button").addClass("btn").addClass("btn-success").text("Update").attr("id", "update_cpf_btn").appendTo(html);
                $("<p></p>").addClass("third_party_label").text("Mosaic").appendTo(html);
                $("<span>Mosaic Login:</span><input type='email' id='mosaic_email' />").appendTo(html);
                $("<span>Mosaic Pass:</span><input type='password' id='mosaic_pass' />").appendTo(html);
                $("<button></button>").attr("type", "button").addClass("btn").addClass("btn-success").text("Update").attr("id", "update_mosaic_btn").appendTo(html);
                $("<p></p>").addClass("third_party_label").text("Sales Rabbit").appendTo(html);
                $("<span>Sales Rabbit Login:</span><input type='email' id='sales_rabbit_email' />").appendTo(html);
                $("<span>Sales Rabbit:</span><input type='password' id='sales_rabbit_pass' />").appendTo(html);
                $("<button></button>").attr("type", "button").addClass("btn").addClass("btn-success").text("Update").attr("id", "update_sales_rabbit_btn").appendTo(html);
                $("<p></p>").appendTo(html);
                $("<br />").appendTo(html);
                $("<p></p>").appendTo(html);
                $("<br />").appendTo(html);
                BootstrapDialog.alert
                ({
                    "title": "Third Party Credentials",
                    "message": $("<div></div>").append(html).html()
                });
                setTimeout(function()
                {
                    $(".bootstrap-dialog-footer-buttons").find(".btn").text("Cancel");
                    $(".modal-content").find("#update_cpf_btn").click(function()
                    {
                        $.each(BootstrapDialog.dialogs, function(i, dialog)
                        {
                            dialog.close();
                            setTimeout(function()
                            {
                                $.post("/data", {"fn": "test_cpf_credentials", "email": window.cpf_info["cpf_email"], "password": window.cpf_info["cpf_pass"]}).done(function(resp)
                                {
                                    if(resp.success)
                                    {
                                        var success_html = $("<div></div>");
                                        $("<p></p>").text("Congratulations! Your credentials worked. Please click to confirm you'd like to override these settings.'").appendTo(success_html);
                                        $("<button type='button' class='btn btn-success' id='cpf_overwrite_btn'>Confirm</button>").appendTo(success_html);
                                        BootstrapDialog.alert
                                        (
                                            {
                                                "title": "Success!",
                                                "message": $("<div></div>").append(success_html).html()
                                            }
                                        );
                                        setTimeout(function()
                                        {
                                            $("#cpf_overwrite_btn").click(function()
                                            {
                                                $.post("/data", {"fn": "store_cpf_credentials", "email": window.cpf_info["cpf_email"], "password": window.cpf_info["cpf_pass"]}).done(function(resp2)
                                                {
                                                    $.each(BootstrapDialog.dialogs, function(i, dialog)
                                                    {
                                                        dialog.close();
                                                    });
                                                    window.cpf_info = {};
                                                });
                                            });
                                            $(".bootstrap-dialog-footer-buttons").find(".btn").text("Cancel");
                                        }, 250);
                                    }
                                    else
                                    {
                                        BootstrapDialog.alert({"title": "Sorry", "message": "no dice!"});
                                    }
                                });
                            }, 250);
                        });
                    });

                    $(".modal-content").find("#update_mosaic_btn").click(function()
                    {
                        $.each(BootstrapDialog.dialogs, function(i, dialog)
                        {
                            dialog.close();
                            setTimeout(function()
                            {
                                $.post("/data", {"fn": "test_mosaic_credentials", "email": window.mosaic_info["mosaic_email"], "password": window.mosaic_info["mosaic_pass"]}).done(function(resp)
                                {
                                    if(resp.success)
                                    {
                                        var success_html = $("<div></div>");
                                        $("<p></p>").text("Congratulations! Your credentials worked. Please click to confirm you'd like to override these settings.'").appendTo(success_html);
                                        $("<button type='button' class='btn btn-success' id='mosaic_overwrite_btn'>Confirm</button>").appendTo(success_html);
                                        BootstrapDialog.alert
                                        (
                                            {
                                                "title": "Success!",
                                                "message": $("<div></div>").append(success_html).html()
                                            }
                                        );
                                        setTimeout(function()
                                        {
                                            $("#mosaic_overwrite_btn").click(function()
                                            {
                                                $.post("/data", {"fn": "store_mosaic_credentials", "email": window.mosaic_info["mosaic_email"], "password": window.mosaic_info["mosaic_pass"]}).done(function(resp2)
                                                {
                                                    $.each(BootstrapDialog.dialogs, function(i, dialog)
                                                    {
                                                        dialog.close();
                                                    });
                                                    window.mosaic_info = {};
                                                });
                                            });
                                            $(".bootstrap-dialog-footer-buttons").find(".btn").text("Cancel");
                                        }, 250);
                                    }
                                    else
                                    {
                                        BootstrapDialog.alert({"title": "Sorry", "message": "no dice!"});
                                    }
                                });
                            }, 250);
                        });
                    });

                    $(".modal-content").find("#update_sales_rabbit_btn").click(function()
                    {
                        $.each(BootstrapDialog.dialogs, function(i, dialog)
                        {
                            dialog.close();
                            setTimeout(function()
                            {
                                $.post("/data", {"fn": "test_sales_rabbit_credentials", "email": window.sales_rabbit_info["sales_rabbit_email"], "password": window.sales_rabbit_info["sales_rabbit_pass"]}).done(function(resp)
                                {
                                    if(resp.success)
                                    {
                                        var success_html = $("<div></div>");
                                        $("<p></p>").text("Congratulations! Your credentials worked. Please click to confirm you'd like to override these settings.'").appendTo(success_html);
                                        $("<button type='button' class='btn btn-success' id='sales_rabbit_overwrite_btn'>Confirm</button>").appendTo(success_html);
                                        BootstrapDialog.alert
                                        (
                                            {
                                                "title": "Success!",
                                                "message": $("<div></div>").append(success_html).html()
                                            }
                                        );
                                        setTimeout(function()
                                        {
                                            $("#sales_rabbit_overwrite_btn").click(function()
                                            {
                                                $.post("/data", {"fn": "store_sales_rabbit_credentials", "email": window.sales_rabbit_info["sales_rabbit_email"], "password": window.sales_rabbit_info["sales_rabbit_pass"]}).done(function(resp2)
                                                {
                                                    $.each(BootstrapDialog.dialogs, function(i, dialog)
                                                    {
                                                        dialog.close();
                                                    });
                                                    window.sales_rabbit_info = {};
                                                });
                                            });
                                            $(".bootstrap-dialog-footer-buttons").find(".btn").text("Cancel");
                                        }, 250);
                                    }
                                    else
                                    {
                                        BootstrapDialog.alert({"title": "Sorry", "message": "no dice!"});
                                    }
                                });
                            }, 250);
                        });
                    });

                    $("#cpf_email, #cpf_pass").each(function(i, e)
                    {
                        $(e).keyup(function()
                        {
                            window.cpf_info[$(this).attr("id")] = $(this).val();
                        });
                    });
                    $("#mosaic_email, #mosaic_pass").each(function(i, e)
                    {
                        $(e).keyup(function()
                        {
                            window.mosaic_info[$(this).attr("id")] = $(this).val();
                        });
                    });
                    $("#sales_rabbit_email, #sales_rabbit_pass").each(function(i, e)
                    {
                        $(e).keyup(function()
                        {
                            window.sales_rabbit_info[$(this).attr("id")] = $(this).val();
                        });
                    });
                }, 250);
            }
            function setCPFPassword()
            {
                var html = $("<div></div>");
                $("<span>CPF Login:</span><input type='email' id='cpf_email' />").appendTo(html);
                $("<p></p>").appendTo(html);
                $("<span>CPF Pass:</span><input type='password' id='cpf_pass' />").appendTo(html);

                BootstrapDialog.alert
                ({
                    "title": "Your CPF Credentials",
                    "message": $("<div></div>").append(html).html()
                });
                setTimeout(function()
                {
                    $(".bootstrap-dialog-footer-buttons").find(".btn").text("OK");
                    var html1 = $(".bootstrap-dialog-footer-buttons").html();
                    $(".bootstrap-dialog-footer-buttons").html("");
                    $(".bootstrap-dialog-footer-buttons").html(html1);
                    $(".bootstrap-dialog-footer-buttons").find(".btn").click(function()
                    {
                        $.each(BootstrapDialog.dialogs, function(i, dialog)
                        {
                            dialog.close();
                            setTimeout(function()
                            {
                                $.post("/data", {"fn": "test_cpf_credentials", "email": window.cpf_info["cpf_email"], "password": window.cpf_info["cpf_pass"]}).done(function(resp)
                                {
                                    if(resp.success)
                                    {
                                        var success_html = $("<div></div>");
                                        $("<p></p>").text("Congratulations! Your credentials worked. Please click to confirm you'd like to override these settings.'").appendTo(success_html);
                                        $("<button type='button' class='btn btn-success' id='cpf_overwrite_btn'>Confirm</button>").appendTo(success_html);
                                        BootstrapDialog.alert
                                        (
                                            {
                                                "title": "Success!",
                                                "message": $("<div></div>").append(success_html).html()
                                            }
                                        );
                                        setTimeout(function()
                                        {
                                            $("#cpf_overwrite_btn").click(function()
                                            {
                                                $.post("/data", {"fn": "store_cpf_credentials", "email": window.cpf_info["cpf_email"], "password": window.cpf_info["cpf_pass"]}).done(function(resp2)
                                                {
                                                    $.each(BootstrapDialog.dialogs, function(i, dialog)
                                                    {
                                                        dialog.close();
                                                    });
                                                    window.cpf_info = {};
                                                });
                                            });
                                            $(".bootstrap-dialog-footer-buttons").find(".btn").text("Cancel");
                                        }, 250);
                                    }
                                    else
                                    {
                                        BootstrapDialog.alert({"title": "Sorry", "message": "no dice!"});
                                    }
                                });
                            }, 250);
                        });
                    });
                    $("#cpf_email, #cpf_pass").each(function(i, e)
                    {
                        $(e).keyup(function()
                        {
                            window.cpf_info[$(this).attr("id")] = $(this).val();
                        });
                    });
                }, 250);
            }
            function clearApp(cb)
            {
                window.check_for_unread_threads = true;
                $("#template_controls, .templated_text").remove();
                $(".msg_file").remove();
                $(".click_helper_overlay").remove();
                $(".z_index_300").removeClass("z_index_300");
                $.each(window.temp_intervals, function(i, interval)
                {
                    window.clearInterval(interval);
                });
                if(!window.temp_permit_design_interval === null)
                {
                    window.clearInterval(window.temp_permit_design_interval);
                }
                window.temp_intervals = [];
                if(window.all_keys_reserved.length > 0)
                {
                    
                }

                var time = 250 * (($.trim($("#app_area").html()) !== "") * 1);
                $("#app_area").animate({opacity: 0.0}, time, function()
                {
                    $("#app_area").html("");
                    cb();
                    $("#app_area").animate({opacity: 1.0}, time, function()
                    {
                    });
                });
            }
            function showCancelAppointment()
            {
                var html = $("<div class='row'><div class='col-xs-1 col-sm-1 col-md-1 col-lg-1'>&nbsp;</div><div class='col-xs-10 col-sm-10 col-md-10 col-lg-10'><div class='dropdown'></div></div><div class='col-xs-1 col-sm-1 col-md-1 col-lg-1'>&nbsp;</div></div>");
                var target_div = html.find(".dropdown");
                var btn = $("<button class='btn btn-default dropdown-toggle' type='button' id='dropdownMenuSelOfficeCancel' data-toggle='dropdown' aria-expanded='true'>Select an Office<span class='caret'></span></button>");
                btn.appendTo(target_div);
                var ul = $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu").attr("aria-labelledby", "dropdownMenuSelOfficeCancel");
                $.each(window.office_data.offices, function(i, office)
                {
                    var li = $("<li></li>");
                    li.attr("id", "office_" + office.identifier).attr("role", "presentation");

                    var a = $("<a></a>").attr("tabindex", "-1").attr("href", "javascript:void(0);").text(office.name);
                    a.appendTo(li);
                    li.appendTo(ul);
                });
                ul.appendTo(target_div);
                $("<input type='hidden' />").val("N/A").attr("value", "N/A").attr("id", "temp_sel_office_cancel_appt").appendTo(target_div);
                BootstrapDialog.alert
                (
                    {"title": "Select an Office",
                    "message": $("<div></div>").append(html).html()}
                );
                setTimeout(function()
                {
                     $("#dropdownMenuSelOfficeCancel").nextAll("ul").eq(0).find("li").each(function(i, e)
                     {
                         $(e).click(function()
                         {
                             var o_id = $(e).attr("id").replace("office_", "");
                             $("#temp_sel_office_cancel_appt").attr("value", o_id).val(o_id);
                             $("#dropdownMenuSelOfficeCancel").text($(e).find("a").eq(0).text());
                             $("<span></span>").addClass("caret").appendTo($("#dropdownMenuSelOfficeCancel"));
                         });
                     });
                     $(".bootstrap-dialog-footer").find("button").click(function()
                     {
                        if($("#temp_sel_office_cancel_appt").val() != "N/A")
                        {
                            var val = $("#temp_sel_office_cancel_appt").val();
                            var o_name = $("#dropdownMenuSelOfficeCancel").text();
                            $.each(BootstrapDialog.dialogs, function(i, dialog)
                            {
                                dialog.close();
                            });
                            setTimeout(function()
                            {
                                showCancelAppointmentDateSelector(val, o_name);
                            }, 250);
                        }
                        else
                        {
                            $.each(BootstrapDialog.dialogs, function(i, dialog)
                            {
                                dialog.close();
                            });
                        }
                     });
                }, 250);
            }
            function showCancelAppointmentDateSelector(o_id, o_name, show_warning)
            {
                if(typeof(show_warning) + '' === "undefined" || !show_warning)
                {
                    show_warning = false;
                }
                var html = $("<div><p>Select a date a date to cancel an appointment (" + o_name + " office):</p></div>");
                if(show_warning)
                {
                    $("<p style='color: red;'>There were no appointments for the previous date you chose.</p>").insertBefore(html.find("p"));
                }
                var dt_div = $("<div></div>").attr("id", "dtcancel").attr("class", "input-append date").attr("data-date", "12-02-2012").attr("data-date-format", "dd-mm-yyyy");
                $("<input class='span2' size='16' type='text' value='12-02-2012' id='cancellation_date' />").appendTo(dt_div);
                $("<span class='add-on'><ic lass='icon-th'></i></span>").appendTo(dt_div);
                dt_div.appendTo(html);
                BootstrapDialog.alert
                (
                    {
                        message: html.html(),
                        buttons: []
                    }
                );

                setTimeout(function()
                {
                    var val = getDateString();
                    var split = val.split("/");
                    for(var i = 0; i < split.length; i++)
                    {
                        if(split[i].length === 1)
                        {
                            split[i] = "0" + split[i];
                        }
                    }

                    $("#cancellation_date").attr("value", split.join("-"));
                    $("#cancellation_date").datepicker
                    (
                        {
                            format: "mm-dd-yyyy",
                            autoClose: true
                        }
                    );

                    $(".bootstrap-dialog-footer").find(".btn").click(function()
                    {
                        var date = $("#cancellation_date").val();
                        $.post("/data", {"fn": "get_open_appointments", "office_id": o_id, "appointment_date": date}).done(function(resp)
                        {
                            if(resp.bookings.length === 0)
                            {
                                $.each(BootstrapDialog.dialogs, function(i, dialog)
                                {
                                    dialog.close();
                                });
                                setTimeout(function()
                                {
                                    showCancelAppointmentDateSelector(o_id, o_name, true);
                                }, 250);
                            }
                            else
                            {
                                $.each(BootstrapDialog.dialogs, function(i, dialog)
                                {
                                    dialog.close();
                                });
                                setTimeout(function()
                                {
                                    showAppointmentsForCancellation(resp.bookings, resp.date_queried, o_name);
                                }, 250);
                            }
                        });
                    });

                }, 250);
            }
            function showAppointmentsForCancellation(bookings, date_queried, o_name)
            {
                var html = $("<div></div>");
                $("<p>Select the appointment you wish to cancel:</p>").appendTo(html);
                $("<p>&nbsp;</p>").appendTo(html);
                $.each(bookings, function(i, booking)
                {
                   $("<p></p>").addClass("cancellation_slot_number").attr("id", "cancellation_slot_number_" + (booking.slot_number + '')).text("Slot #" + booking.slot_number + '' + "(" + booking.name + ")").css("cursor", "pointer").appendTo(html);
                   $("<hr />").appendTo(html);
                });
                BootstrapDialog.alert
                (
                    {
                        "title": "Cancelling appointment - " + o_name + " office -" + date_queried,
                        "message": html.html()
                    }
                );
                setTimeout(function()
                {
                    $(".cancellation_slot_number").each(function(i, e)
                    {
                        $(e).click(function()
                        {
                            $.each(BootstrapDialog.dialogs, function(k, dialog)
                            {
                                dialog.close();
                            });
                            setTimeout(function()
                            {
                                confirmCancellation(bookings[i], o_name, date_queried);
                            }, 250);
                        });
                    });
                }, 250);


            }
            function confirmCancellation(booking, o_name, date, extra_cb)
            {
                var from_appointment_card = true;
                if(typeof(extra_cb) + '' !== "function")
                {
                    extra_cb = function(){};
                    from_appointment_card = false;
                }

                var html = $("<div></div>");
                $("<p>Confirming Appointment Cancellation</p>").appendTo(html);
                $("<hr />").appendTo(html);
                $("<p><b>Office:</b></p>").appendTo(html);
                $("<p></p>").text(o_name + " Office").appendTo(html);
                $("<p><b>Date:</b></p>").appendTo(html);
                $("<p></p>").text(date).appendTo(html);
                $("<p><b>Slot:</b></p>").appendTo(html);
                $("<p></p>").text(booking.slot_number + '').appendTo(html);
                $("<p></p>").append($("<b></b>").text("Name:")).appendTo(html);
                $("<p></p>").text(booking.name).appendTo(html);
                $("<p><b>Address:</b></p>").appendTo(html);
                $("<p></p>").text(booking.address).appendTo(html);
                $("<p><b>City:</b></p>").appendTo(html);
                $("<p></p>").text(booking.city).appendTo(html);
                $("<p><b>State:</b></p>").appendTo(html);
                $("<p></p>").text(booking.state).appendTo(html);
                $("<p><b>Zip:</b></p>").appendTo(html);
                $("<p></p>").text(booking.postal).appendTo(html);
                $("<hr />").appendTo(html);
                html.find("b").each(function(i, e)
                {
                    $(e).parent().css("font-family", "Arial, Helvetica, sans-serif").css("color", "#2BACE9");
                });
                var cancel_btn = $("<button type='btn' class='btn btn-success' id='appt_cancel_next_btn'>Choose Another Date</button>");
                $("<center></center>").append(confirmation_btn).appendTo(html);

                var confirmation_btn = $("<button type='btn' class='btn btn-danger' id='appt_cancel_confirm_btn'>Cancel Appointment</button>");
                $("<center></center>").append(confirmation_btn).appendTo(html);

                BootstrapDialog.alert
                (
                    {
                        "title": "Confirmation Cancellation",
                        "message": html.html()
                    }
                );
                setTimeout(function()
                {
                    $(".bootstrap-dialog-footer").find(".btn").css("display", "none");
                    $("#appt_cancel_confirm_btn").click(function()
                    {
                        $.post("/data", {"fn": "cancel_booking", "identifier": booking.identifier}).done(function(resp)
                        {
                            $.each(BootstrapDialog.dialogs, function(i, dialog)
                            {
                                dialog.close();
                            });
                            if(!from_appointment_card)
                            {
                                setTimeout(function()
                                {
                                    BootstrapDialog.alert
                                    (
                                        {
                                            "title": "Success!",
                                            "message": "The appointment was succesfully cancelled"
                                        }
                                    );
                                }, 250);
                            }
                            else
                            {
                                setTimeout(function()
                                {
                                    extra_cb();
                                }, 250);
                            }

                        });
                    });
                }, 250);
            }
            function modifySlotData(is_checked, identifier, day, slot)
            {
                for(var i = 0; i < window.office_data.offices.length; i++)
                {
                    var office = window.office_data.offices[i];
                    if(office.identifier === identifier)
                    {
                        office.slot_data[day + "_slots"]["slot_" + (slot + '') + "_enabled"] = (is_checked === true);
                    }
                }
                $.post("/data", {"fn": "modify_slot_data", "office": identifier, "day": day, "slot_num": (slot + ''), "value": ((is_checked * 1) + '')}).done(function(resp)
                {
                    //
                });
            }
            function promptForSessionAssumption()
            {
                $.post("./data", {"fn": "list_non_admins"}).done(function(resp)
                {
                    var div = $("<div></div>");
                    div.append
                    (
                        $("<p></p>").text("Enter the rep id of the user's session you would like to assume...")
                    );
                    div.append($("<input />").attr("type", "text").attr("id", "assume_session_repid").css("text-indent", "0.5em").attr("placeholder", "rep's ID"));

                    BootstrapDialog.alert
                    (
                        {
                            "title": "Which user?",
                            "message": div.html()
                        }
                    );
                    setTimeout(function()
                    {
                        $(".modal-footer").find(".btn").off("click").on("click", function()
                        {
                            var show_error_message = true;
                            $.each(resp.users, function(i, user)
                            {
                                if(user.rep_id === $.trim($("#assume_session_repid").val()).toUpperCase())
                                {
                                    show_error_message = false;
                                    if(window.confirm("Are you sure you would like to logon as " + user.name + "?\n"))
                                    {
                                        $.post("./data", {"fn": "assume_session", "rep_id": $.trim($("#assume_session_repid").val()).toUpperCase()}).done(function(resp2)
                                        {
                                            $.each(BootstrapDialog.dialogs, function(k, dialog)
                                            {
                                                dialog.close();
                                            });
                                            localStorage.setItem("assumed_user_hint_to_show", user.first_name);
                                            window.location.href = "/";
                                        });
                                    }
                                }
                            });
                            if(show_error_message)
                            {
                                window.alert("A user with that Rep ID could not be found, or the user has super admin credentials, in which case assumption of the user's session would not be allowed");
                            }
                        });
                    }, 250);
                });
            }
            function promptForSlotSelection(identifier, date)
            {
                var html = $("<div class='container'></div>");
                $("<div class='row'><div class='col-xs-12 col-sm-12 col-md-12 col-lg-12'>Choosing slots for " + date + "</div></div>")
                var row = $("<div></div>").addClass("row");
                for(var i = 1; i < 13; i++)
                {
                    var eye_str = i + '';
                    if(eye_str.length === 1)
                    {
                        eye_str = "0" + eye_str;
                    }
                    var item = $("<div class='col-xs-4 col-sm-4 col-md-4 col-lg-4'></div>");
                    item.text("Slot #" + eye_str + ":");
                    $("<input type='checkbox' class='exception_selection_cb' />").appendTo(item);
                    item.appendTo(row);
                }
                row.appendTo(html);
                var confirmation_btn = $("<button type='btn' class='btn btn-success' id='ex_next_btn2'>Confirm</button>");
                $("<center></center>").append(confirmation_btn).appendTo(html);
                BootstrapDialog.alert
                (
                    {"message": html.html(), buttons: []}
                );
                setTimeout(function()
                {
                    $(".bootstrap-dialog-footer").find("button").remove();
                    $("#ex_next_btn2").click(function()
                    {
                        $("#ex_next_btn2").detach();
                        var str = "";
                        $(".exception_selection_cb").each(function(i, e)
                        {
                            str += (($(e)[0].checked * 1) + '');
                            str += ",";
                        });
                        str = str.substring(0, str.length - 1);
                        $.each(BootstrapDialog.dialogs, function(i, dialog)
                        {
                            dialog.close();
                        });
                        $.post("/data", {"fn": "add_date_exception", "date": date, "slots": str, "office": identifier}).done(function(resp)
                        {
                            BootstrapDialog.alert
                            (
                                {"message": "The date exception has been added succesfully."}
                            );
                        });
                    });
                }, 250);
            }
            function promptForException(identifier)
            {
                var val = getDateString();
                var split = val.split("/");
                for(var i = 0; i < split.length; i++)
                {
                    if(split[i].length === 1)
                    {
                        split[i] = "0" + split[i];
                    }

                }

                var office_name = "";
                for(var i = 0; i < window.office_data.offices.length; i++)
                {
                    if(window.office_data.offices[i].identifier === identifier)
                    {
                        office_name = window.office_data.offices[i].name;
                    }
                }
                var html = $("<div><p>Select a date for custom survey time slots (" + office_name + " office):</p></div>");
                var dt_div = $("<div></div>").attr("id", "dt").attr("class", "input-append date").attr("data-date", "12-02-2012").attr("data-date-format", "dd-mm-yyyy");
                $("<input class='span2' size='16' type='text' value='12-02-2012' id='exception_date' />").appendTo(dt_div);
                $("<span class='add-on'><ic lass='icon-th'></i></span>").appendTo(dt_div);
                dt_div.appendTo(html);
                var next_btn = $("<button type='btn' class='btn btn-success' id='ex_next_btn1'>Next</button>");
                $("<center></center>").append(next_btn).appendTo(html);
                BootstrapDialog.alert
                (
                    {
                        message: html.html(),
                        buttons: []
                    }
                );

                setTimeout(function()
                {
                    $(".bootstrap-dialog-footer").find("button").remove();
                    $("#ex_next_btn1").click(function()
                    {
                        var date = $("#exception_date").val();
                        $.each(BootstrapDialog.dialogs, function(i, dialog)
                        {
                            dialog.close();
                        });
                        promptForSlotSelection(identifier, date);
                    });
                    $("#exception_date").attr("value", split.join("-"));
                    //$("#dt").attr("data-date", split.join("-"));
                    $("#exception_date").datepicker
                    (
                        {
                            format: "mm-dd-yyyy",
                            autoClose: true
                        }
                    );
                }, 250);
            }
            function showOfficeSlots(identifier, day)
            {
                $("#office_" + identifier).find(".office_slot_container").each(function(i, e)
                {
                    $(e).css("display", "none");
                });
                $("#office_" + identifier).find(".slots_for_" + day).css("display", "block");
            }
            function manageSoilingLevels()
            {
                var app_area = $("#app_area");
                var spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");
                var main_div = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10");
                var spacer_clone = spacer.clone();

                $("<h2></h2>").text("Loading...").appendTo(app_area);
                $.post("/data", {"fn": "get_soiling_levels"}).done(function(r)
                {
                    app_area.find("h2").remove();
                    $("<h3></h3>").text("Enter postal codes in the boxes below, one per line...").appendTo(main_div);
                    $("<button></button>").addClass("btn").addClass("btn-primary").text("Update")
                    .click(function()
                    {
                        var that = $(this);
                        that.text("Updating...");
                        var data = {};
                        $(".soiling_level_ta").each(function(i, e)
                        {
                            var text = $.trim($(e).val());
                            text = text.replaceAll("\r", "");
                            var key = $(e).data("key");
                            var lines = text.split("\n");
                            data[key] = lines;
                        });
                        $.post("/data", {"fn": "write_soiling_levels", "data": JSON.stringify(data)}).done(function(rr)
                        {
                            that.text("Updated");
                            setTimeout(function()
                            {
                                that.text("Update");
                            }, 2500);
                        });
                    })
                    .appendTo(main_div);
                    $.each(Object.keys(r), function(i, key)
                    {
                        $("<hr />").appendTo(main_div);
                        $("<p></p>").text(key.split("_").join(" ")).appendTo(main_div);
                        $("<textarea></textarea>").addClass("soiling_level_ta").attr("data-key", key).appendTo(main_div);
                        $("<hr />").appendTo(main_div);
                    });

                    $.each([spacer, main_div, spacer_clone], function(i, e)
                    {
                        e.appendTo(app_area);
                        setTimeout(function()
                        {
                            main_div.find("textarea").each(function(ii, ee)
                            {
                                var key = $(ee).data("key")
                                var lines = r[key].join("\n");
                                $(ee).val(lines);
                            });
                        }, 250);
                    });
                });
            }
            function showTestData(identifier, date)
            {
                $.post("/data", {"fn": "office_slot_testing", "date": date, "office": identifier}).done(function(resp)
                {
                    var html = $("<div></div>");
                    $("<p>Slots available on " + date + " for the " + resp.office_name + " office...</p>").appendTo(html);
                    var ul = $("<ul style='list-style-type: none; list-style-image: none;'></ul>");
                    for(var i = 0; i < resp.slots.length; i++)
                    {
                        var eye = i + 1;
                        eye = eye + '';
                        if(eye.length === 1)
                        {
                            eye = "0" + eye;
                        }
                        var inner_html = "Slot #" + eye + ": &nbsp;"
                        if(resp.slots[i])
                        {
                            inner_html += "&#x2713;"
                        }
                        else
                        {
                            inner_html += "<span style='color: red;'>x</span>";
                        }
                        $("<li style='list-style-type: none; list-style-image: none;'></li>").html(inner_html).appendTo(ul);
                    }
                    ul.appendTo(html);
                    var rule_style = "none";
                    var exception_style = "none";
                    if(resp.rule_generated)
                    {
                        exception_style = "line-through";
                    }
                    if(resp.exception_generated)
                    {
                        rule_style = "line-through";
                    }
                    $("<p>Slot availability coming from: <span style='text-decoration: " + rule_style + ";'>Rule</span> <span style='text-decoration: " + exception_style + ";'>Exception</span></p>").appendTo(html);

                    BootstrapDialog.alert
                    (
                        {"title": "Showing Test Results", "message": html.html(), buttons: []}
                    );
                });
            }
            function promptForExceptionTesting(identifier, nam)
            {
                var html = $("<div></div>");
                $("<p>Select a date for testing the " + nam + " office...</p>").appendTo(html);
                var dt_div = $("<div></div>").attr("id", "dt_testing").attr("class", "input-append date").attr("data-date", "12-02-2012").attr("data-date-format", "dd-mm-yyyy");
                $("<input class='span2' size='16' type='text' value='12-02-2012' id='exception_date_testing' />").appendTo(dt_div);
                $("<span class='add-on'><ic lass='icon-th'></i></span>").appendTo(dt_div);
                dt_div.appendTo(html);
                var next_btn = $("<button type='btn' class='btn btn-success' id='ex_next_btn3'>Next</button>");
                $("<center></center>").append(next_btn).appendTo(html);

                BootstrapDialog.alert
                (
                    {"Title": "Testing the " + nam + " office...", "message": html.html(), "buttons": []}
                );
                setTimeout(function()
                {

                    var val = getDateString();
                    var split = val.split("/");
                    for(var i = 0; i < split.length; i++)
                    {
                        if(split[i].length === 1)
                        {
                            split[i] = "0" + split[i];
                        }

                    }
                    $(".bootstrap-dialog-footer").find("button").remove();
                    $("#ex_next_btn3").click(function()
                    {
                        var date = $("#exception_date_testing").val();
                        $.each(BootstrapDialog.dialogs, function(i, dialog)
                        {
                            dialog.close();
                        });
                        showTestData(identifier, date);
                    });
                    $("#exception_date_testing").attr("value", split.join("-"));
                    //$("#dt_testing").attr("data-date", split.join("-"));
                    $("#exception_date_testing").datepicker
                    (
                        {
                            format: "mm-dd-yyyy",
                            autoClose: true
                        }
                    );
                }, 250);
            }
            function showAddAppointment()
            {
                var add_appt_spacer = $("<div></div>").attr("class", "col-xs-1 col-sm-1 col-md-1 col-lg-1");
                var add_appt_main = $("<div></div>").attr("class", "col-xs-10 col-sm-10 col-md-10 col-lg-10");
                var add_appt_spacer2 = add_appt_spacer.clone();
                // the form
                var form = $("<form></form>").addClass("form-horizontal").attr("role", "form").attr("action", "#").attr("method", "post").attr("id", "add_appt_form");

                // the office
                var office_item = $("<div></div>").addClass("form-group");
                $("<label></label>").addClass("control-label").addClass("col-sm-2").attr("for", "office_id")
                .text("Office: ").appendTo(office_item);

                var office_body = $("<div></div>").addClass("col-sm-10");
                var dropdown_div = $("<div></div>").addClass("dropdown");
                $("<button></button>").text("Select an Office").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("type", "button").attr("id", "dropdownMenuAddAppt").attr("data-toggle", "dropdown").attr("aria-expanded", "true").appendTo(dropdown_div);
                $("<span></span>").addClass("caret").appendTo(dropdown_div.find(".btn"));
                var office_ul = $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu").attr("aria-labelledby", "dropdownMenuAddAppt");
                for(var i = 0; i < window.office_data.offices.length; i++)
                {
                    var name = window.office_data.offices[i].name;
                    var identifier = window.office_data.offices[i].identifier;

                    var li = $("<li></li>").attr("role", "presentation").attr("id", "office_" + identifier);
                    $("<a></a>").text(name).attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").appendTo(li);
                    li.appendTo(office_ul);
                }
                office_ul.appendTo(dropdown_div)
                dropdown_div.appendTo(office_body);
                $("<input />").attr("type", "text").attr("id", "office_id").css("display", "none").attr("name", "office_id").attr("value", "N/A").appendTo(office_body);
                office_body.appendTo(office_item);
                office_item.appendTo(form);

                // the date
                var date_item = $("<div></div>").addClass("form-group");
                $("<label></label>").addClass("control-label").addClass("col-sm-2").attr("for", "appt_date")
                .text("Date: ").appendTo(date_item);

                var date_body = $("<div></div>").addClass("col-sm-10");
                var dpicker_div = $("<div></div>").addClass("input-append").addClass("date").attr("data-date", "12-02-2012").attr("data-date-format", "dd-mm-yyyy").attr("id", "dt667");
                $("<input />").addClass("span2").attr("size", "16").attr("type", "text").attr("value", "12-02-2012").attr("name", "appt_date").attr("id", "appt_date").keydown(function(ev)
                {
                    ev.preventDefault();
                }).keyup(function(ev)
                {
                    ev.preventDefault();
                }).appendTo(dpicker_div);
                $("<span></span>").addClass("add-on").append($("<i></i>").addClass("icon-th")).appendTo(dpicker_div);
                dpicker_div.appendTo(date_body);
                date_body.appendTo(date_item);

                date_item.appendTo(form);


                // the slot
                var slot_item = $("<div></div>").addClass("form-group");
                $("<label></label>").addClass("control-label").addClass("col-sm-2").attr("for", "appt_slot")
                .text("Appointment Slot: ").appendTo(slot_item);

                var slot_body = $("<div></div>").addClass("col-sm-10");
                var dropdown_div2 = $("<div></div>").addClass("dropdown");
                $("<button></button>").text("Select a Slot").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").addClass("disabled").attr("type", "button").attr("id", "dropdownMenuAddAppt2").attr("data-toggle", "dropdown").attr("aria-expanded", "true").text("Select a Slot").appendTo(dropdown_div2);
                $("<span></span>").addClass("caret").appendTo(dropdown_div2.find(".btn"));
                var slot_ul = $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu").attr("aria-labelledby", "dropdownMenuAddAppt2");
                for(var i = 1; i < 13; i++)
                {
                    var li = $("<li></li>").attr("role", "presentation").attr("id", "slot_" + (i + ''));
                    $("<a></a>").addClass("linethrough_anchor").css("text-decoration", "line-through").text("Slot #" + (i + '')).attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").appendTo(li);
                    li.appendTo(slot_ul);
                }
                slot_ul.appendTo(dropdown_div2);
                dropdown_div2.appendTo(slot_body);
                $("<input />").attr("type", "text").attr("id", "appt_slot").css("display", "none").attr("name", "appt_slot").attr("value", "N/A").appendTo(slot_body);
                slot_body.appendTo(slot_item);
                slot_item.appendTo(form);

                // customer first name
                var fname_item = $("<div></div>").addClass("form-group");
                $("<label></label>").addClass("control-label").addClass("col-sm-2").attr("for", "cust_first")
                .text("Customer First Name:").appendTo(fname_item);

                var fname_body = $("<div></div>").addClass("col-sm-10");
                $("<input />").attr("type", "text").attr("autocomplete", "off").addClass("form-control").attr("id", "cust_first").attr("placeholder", "John").attr("name", "cust_first").attr("required", "required").appendTo(fname_body);
                fname_body.appendTo(fname_item);
                fname_item.appendTo(form);

                // customer last name
                var lname_item = $("<div></div>").addClass("form-group");
                $("<label></label>").addClass("control-label").addClass("col-sm-2").attr("for", "cust_last")
                .text("Customer Last Name:").appendTo(lname_item);

                var lname_body = $("<div></div>").addClass("col-sm-10");
                $("<input />").attr("type", "text").attr("autocomplete", "off").addClass("form-control").attr("id", "cust_last").attr("placeholder", "Doe").attr("name", "cust_last").attr("required", "required").appendTo(lname_body);
                lname_body.appendTo(lname_item);
                lname_item.appendTo(form);

                // customer postal code
                var postal_item = $("<div></div>").addClass("form-group");
                $("<label></label>").addClass("control-label").addClass("col-sm-2").attr("for", "cust_postal")
                .text("Customer Postal Code:").appendTo(postal_item);

                var postal_body = $("<div></div>").addClass("col-sm-10");
                $("<input />").attr("type", "text").attr("autocomplete", "off").addClass("form-control").attr("id", "cust_postal").attr("placeholder", "91711").attr("name", "cust_postal").attr("required", "required").appendTo(postal_body);
                postal_body.appendTo(postal_item);
                postal_item.appendTo(form);

                // customer address
                var address_item = $("<div></div>").addClass("form-group");
                $("<label></label>").addClass("control-label").addClass("col-sm-2").attr("for", "cust_address")
                .text("Customer Address: ").appendTo(address_item);

                var address_body = $("<div></div>").addClass("col-sm-10");
                $("<input />").attr("type", "text").attr("autocomplete", "off").addClass("form-control").attr("id", "cust_address").attr("placeholder", "352 Willow St.").attr("name", "cust_address").attr("required", "required").appendTo(address_body);
                address_body.appendTo(address_item);
                address_item.appendTo(form);

                // customer city
                var city_item = $("<div></div>").addClass("form-group");
                $("<label></label>").addClass("control-label").addClass("col-sm-2").attr("for", "cust_city")
                .text("Customer City: ").appendTo(city_item);

                var city_body = $("<div></div>").addClass("col-sm-10");
                $("<input />").attr("type", "text").attr("autocomplete", "off").addClass("form-control").attr("id", "cust_city").attr("placeholder", "Escondido").attr("name", "cust_city").attr("required", "required").appendTo(city_body);
                city_body.appendTo(city_item);
                city_item.appendTo(form);

                // customer state
                var state_item = $("<div></div>").addClass("form-group");
                $("<label></label>").addClass("control-label").addClass("col-sm-2").attr("for", "cust_state")
                .text("Customer State: ").appendTo(state_item);

                var state_body = $("<div></div>").addClass("col-sm-10");
                $("<input />").attr("type", "text").attr("autocomplete", "off").addClass("form-control").attr("id", "cust_state").attr("placeholder", "CA").attr("name", "cust_state").attr("required", "required").attr("maxlength", "2").appendTo(state_body);
                state_body.appendTo(state_item);
                state_item.appendTo(form);

                // customer phone
                var phone_item = $("<div></div>").addClass("form-group");
                $("<label></label>").addClass("control-label").addClass("col-sm-2").attr("for", "cust_phone")
                .text("Customer Phone: ").appendTo(phone_item);

                var phone_body = $("<div></div>").addClass("col-sm-10");
                $("<input />").attr("type", "text").attr("autocomplete", "off").addClass("form-control").attr("id", "cust_phone").attr("placeholder", "(123) 456-7890").attr("name", "cust_phone").attr("required", "required").appendTo(phone_body);
                phone_body.appendTo(phone_item);
                phone_item.appendTo(form);

                // customer email
                var email_item = $("<div></div>").addClass("form-group");
                $("<label></label>").addClass("control-label").addClass("col-sm-2").attr("for", "cust_email")
                .text("Customer Email: ").appendTo(email_item);

                var email_body = $("<div></div>").addClass("col-sm-10");
                $("<input />").attr("type", "email").attr("autocomplet", "off").addClass("form-control").attr("id", "cust_email").attr("placeholder", "someone@micrsoft.com").attr("name", "cust_email").attr("required", "required").appendTo(email_body);
                email_body.appendTo(email_item);
                email_item.appendTo(form);

                // customer utility account #
                var utility_item = $("<div></div>").addClass("form-group");
                $("<label></label>").addClass("control-label").addClass("col-sm-2").attr("for", "cust_utility")
                .text("Customer Utility Acct #: ").appendTo(utility_item);

                var utility_body = $("<div></div>").addClass("col-sm-10");
                $("<input />").attr("type", "text").attr("autocomplete", "off").addClass("form-control").attr("id", "cust_utility").attr("placeholder", "2369178921").attr("name", "cust_utility").attr("required", "required").appendTo(utility_body);
                utility_body.appendTo(utility_item);
                utility_item.appendTo(form);

                // the rep ID
                var  rep_item = $("<div></div>").addClass("form-group");
                $("<label></label>").addClass("control-label").addClass("col-sm-2").attr("for", "rep_id")
                .text("Associated Rep ID: ").appendTo(rep_item);

                var rep_body = $("<div></div>").addClass("col-sm-10");
                $("<input />").attr("type", "text").attr("autocomplete", "off").addClass("form-control").attr("id", "rep_id").attr("placeholder", "SHA526").attr("name", "rep_id").attr("required", "required").appendTo(rep_body);
                rep_body.appendTo(rep_item);
                rep_item.appendTo(form);

                // the submit button
                var submit_item = $("<div></div>").addClass("form-group");
                $("<label></label>").addClass("control-label").addClass("col-sm-2").attr("for", "appt_submit")
                .html("&nbsp;").appendTo(submit_item);

                var submit_body = $("<div></div>").addClass("col-sm-10");
                $("<button type='submit' id='appt_submit' class='btn btn-success'>Submit</button>").click(function()
                {
                    if(validateApptForm())
                    {
                        submitAppointmentForm();
                    }
                }).appendTo(submit_body);
                submit_body.appendTo(submit_item);
                submit_item.appendTo(form);

                var val = getDateString();
                var split = val.split("/");
                for(var i = 0; i < split.length; i++)
                {
                    if(split[i].length === 1)
                    {
                        split[i] = "0" + split[i];
                    }
                }
                form.find("#appt_date").attr("value", split.join("-"));
                form.find("#dt667").attr("data-date", split.join("-"));
                form.find("#appt_date").datepicker(
                {
                    format: "mm-dd-yyyy",
                    autoClose: true
                });
                form.find("#appt_date, #office_id").each(function(i, e)
                {
                    $(e).change(function()
                    {
                        $.post("/data", {"fn": "get_bookings", "date": $("#appt_date").val(), "office": $("#office_id").val(), "lead_id": lead_id}).done(function(resp)
                        {
                            form.find("#dropdownMenuAddAppt2").nextAll("ul").eq(0).find("li").each(function(k, e2)
                            {
                                if(resp.slot_reservations[k])
                                {
                                    $(e2).find("a").css("text-decoration", "line-through");
                                    $(e2).find("a").addClass("linethrough_anchor");
                                }
                                else
                                {
                                    $(e2).find("a").css("text-decoration", "none");
                                    if($(e2).find("a").hasClass("linethrough_anchor"))
                                    {
                                        $(e2).find("a").removeClass("linethrough_anchor");
                                        $(e2).find("a").css("text-decoration", "none");
                                    }
                                }
                            });
                            $("#appt_slot").attr("value", "N/A").val("N/A");
                            $("#dropdownMenuAddAppt2").text("Select a slot");
                            $("<span></span>").addClass("caret").appendTo($("#dropdownMenuAddAppt2"));
                        });
                    });
                });
                form.find("#dropdownMenuAddAppt2").nextAll("ul").eq(0).find("li").each(function(i, e)
                {
                    $(e).click(function()
                    {
                        if(!$(e).find("a").hasClass("linethrough_anchor"))
                        {
                            $("#dropdownMenuAddAppt2").text($(e).find("a").eq(0).text());
                            var slot_num = $(e).attr("id").replace("slot_", "");
                            $("#appt_slot").val(slot_num);
                            $("<span></span>").addClass("caret").appendTo($("#dropdownMenuAddAppt2"));

                            $.post("/data", {"fn": "reserve_slot", "date": $("#appt_date").val(), "office": $("#office_id").val(), "lead_id": lead_id, "slot": slot_num}).done(function(resp)
                            {

                            });

                        }
                    });
                });
                form.find("#dropdownMenuAddAppt").nextAll("ul").eq(0).find("li").each(function(i, e)
                {
                    $(e).click(function()
                    {
                        $("#dropdownMenuAddAppt").text($(e).find("a").eq(0).text());
                        var office = $(e).attr("id").replace("office_", "");
                        $("#office_id").val(office).attr("value", office);
                        $("<span></span>").addClass("caret").appendTo($("#dropdownMenuAddAppt"));
                        $("#office_id").trigger("change");
                    });
                });
                form.find("#cust_postal").on("keyup", function()
                {
                    if($("#cust_postal").val().length === 5)
                    {
                        if($("#cust_postal").val().match(/\d/g).length === 5)
                        {
                            $.getJSON("https://maps.googleapis.com/maps/api/geocode/json?address=" + $("#cust_postal").val()).done(function(resp)
                            {
                                var city = resp.results[0].address_components[1].long_name;
                                var state = ""
                                if(resp.results.length > 0)
                                {
                                    for(var i = 0; i < resp.results[0].address_components.length; i++)
                                    {
                                        if(resp.results[0].address_components[i].types[0] === "administrative_area_level_1")
                                        {
                                            state = resp.results[0].address_components[i].short_name;
                                        }
                                    }
                                }

                                $("#cust_city").val(city);
                                $("#cust_state").val(state);
                            });
                        }
                    }
                });
                window.temp_intervals.push(window.setInterval(function()
                {
                    var cnt = 0;
                    $("#dropdownMenuAddAppt2").nextAll("ul").find("li").each(function(i, e)
                    {
                        cnt += (($(e).find("a").hasClass("linethrough_anchor")) * 1);
                    });
                    for(i = 0; i < ((cnt === 12) * 1); i++)
                    {
                        if(!$("#dropdownMenuAddAppt2").hasClass("disabled"))
                        {
                            $("#dropdownMenuAddAppt2").addClass("disabled");
                        }
                    }
                    for(i = 0; i < ((cnt !== 12) * 1); i++)
                    {
                        if($("#dropdownMenuAddAppt2").hasClass("disabled"))
                        {
                            $("#dropdownMenuAddAppt2").removeClass("disabled");
                        }
                    }

                    if($("#office_id").val().toLowerCase() !== "n/a")
                    {
                        if(! $("#dropdownMenuAddAppt2").hasClass("disabled"))
                        {
                            if($("#appt_slot").val().toLowerCase() !== "n/a")
                            {
                                var split_items = $("#appt_date").val().split("-");
                                var key = $("#office_id").val() + "_" + split_items[1] + "_" + split_items[0] + "_" + split_items[2] + "_slot_" + $("#appt_slot").val();
                                if(window.all_keys_reserved.indexOf(key) === -1)
                                {
                                    window.all_keys_reserved.push(key);
                                }
                            }
                        }
                    }
                }, 100));


                form.submit(function()
                {
                    return false;
                });

                var app_area = $("#app_area");
                form.appendTo(add_appt_main);
                add_appt_spacer.appendTo(app_area);
                add_appt_main.appendTo(app_area);
                add_appt_spacer2.appendTo(app_area);

            }
            function validateApptForm()
            {
                var cont = true;
                if($("#office_id").val().toLowerCase() === "n/a")
                {
                    window.alert("You must provide an office");
                    return false;
                }
                if($("#appt_slot").val().toLowerCase() === "n/a")
                {
                    window.alert("You must select a time slot");
                    return false;
                }

                if($.trim($("#cust_first").val()).length < 2)
                {
                    window.alert("A customer first name is required");
                    return false;
                }
                if($.trim($("#cust_last").val()).length < 2)
                {
                    window.alert("A customer last name is required");
                    return false;
                }
                $("#cust_address, #cust_city, #cust_state").each(function(i, e)
                {
                    if($.trim($(e).val()).length === 0)
                    {
                        if(cont)
                        {
                            window.alert("All address components are required");
                            cont = false;
                        }
                    }
                });
                if(!cont)
                {
                    return false;
                }
                if($("#appt_slot").val().toLowerCase() === "n/a")
                {
                    window.alert("You must first select an appointment slot");
                    return false;
                }
                var postal_val = $("#cust_postal").val();
                if(postal_val.length !== 5)
                {
                    window.alert("The postal code must be exactly 5 digits");
                    return false;
                }
                if(postal_val.match(/\d/g) === null || postal_val.match(/\d/g).length !== 5)
                {
                    window.alert("The postal code must be exactly 5 digits");
                    return false;
                }
                var phone_val = $.trim($("#cust_phone").val());
                if(phone_val.match(/\d/g) === null || phone_val.match(/\d/g).length !== 10)
                {
                    window.alert("Your phone number (customer) must contain exactly ten digits");
                    return false;
                }
                else
                {
                    var new_val2 = $.trim($("#cust_phone").val()).match(/\d/g).join("");
                    $("#cust_phone").val(new_val2);
                }
                if($.trim($("#cust_utility").val()).length === 0)
                {
                    window.alert("The customer utility # is required");
                    return false;
                }
                if($.trim($("#rep_id").val()).length === 0)
                {
                    window.alert("You must provide a rep ID associated with this appointment");
                    return false;
                }
                else
                {
                    $("#rep_id").val($("#rep_id").val().toUpperCase());
                }
                var ret_val = true;
                $("#appt_submit").css("display", "none");                

            }
            function submitAppointmentForm()
            {
                var payload = {};
                $("#add_appt_form").find("input").each(function(i, e)
                {
                    payload[$(e).attr("name")] = $(e).val();
                });
                payload["reservation_keys"] = window.all_keys_reserved.join(",");
                payload["fn"] = "add_appt_ajax";
                $.post("/data", payload).done(function(resp)
                {
                    if(resp.success)
                    {
                        window.all_keys_reserved = [];
                    }
                    var messages = [];
                    messages["0"] = "Unfortunately, there was a problem with submitting your appointment. Perhaps the slot has already been taken";
                    messages["1"] = "The appointment was added succesfully!";

                    var fns = [];
                    fns["0"] = function()
                    {
                        $("#appt_submit").css("display", "block");
                    };
                    fns["1"] = function()
                    {
                        clearApp(function()
                        {
                            window.location.reload();
                        });
                    };
                    var key = ((resp.success * 1) + '');

                    BootstrapDialog.alert
                    (
                        {
                            "title": "Submission Status",
                            "message": messages[key]
                        }
                    );
                    setTimeout(function()
                    {
                        $(".bootstrap-dialog-footer-buttons").find(".btn").click(function()
                        {
                            fns[key]();
                            $.each(BootstrapDialog.dialogs, function(i, dialog)
                            {
                                dialog.close();
                            });
                        });
                    }, 250);
                });
            }
            function showUpcomingView()
            {
                var mom = moment(new Date());
                $.post("/data", {"fn": "get_upcoming_view_v2", "today": mom.format("MM-DD-YYYY")}).done(function(resp)
                {
                    loadUpcomingViewV2(resp.offices, resp.funding_list, resp.utility_providers);
                });
            }
            function loadUpcomingView(offices, funding_list)
            {
                var app_area = $("#app_area");
                var days =
                {
                    "0": ["Sunday", "Monday", "Tuesday", "Wednesday"],
                    "1": ["Monday", "Tuesday", "Wednesday", "Thursday"],
                    "2": ["Tuesday", "Wednesday", "Thursday", "Friday"],
                    "3": ["Wednesday", "Thursday", "Friday", "Saturday"],
                    "4": ["Thursday", "Friday", "Saturday", "Sunday"],
                    "5": ["Friday", "Saturday", "Sunday", "Monday"],
                    "6": ["Saturday", "Sunday", "Monday", "Tuesday"]
                };

                var upcoming_spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");
                //var upcoming_row = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10");
                var upcoming_row = $("<div></div>").addClass("col-xs-12").addClass("col-sm-12").addClass("col-md-12").addClass("col-lg-12");

                var inner_row = $("<div></div>").addClass("row").addClass("upcoming_inner");
                $.each(offices, function(i, office)
                {

                    var name_div = $("<div></div>").addClass("col-xs-12").addClass("col-sm-12").addClass("col-md-12").addClass("col-lg-12");
                    $("<a></a>").attr("href", "javascript:void(0);").addClass("upcoming_anchor").text(office.name).appendTo(name_div);
                    name_div.appendTo(inner_row);
                    var quasi_hr = $("<div></div>").addClass("upcoming_office_quasi_hr").addClass("col-xs-12").addClass("col-sm-12").addClass("col-md-12").addClass("col-lg-12");
                    $("<div class='progress'><div class='progress-bar progress-bar-warning progress-bar-striped' role='progressbar' aria-valuenow='100' aria-valuemin='0' aria-valuemax='100' style='width: 100%'><span class='sr-only'>100% Complete (warning)</span></div></div>").appendTo(quasi_hr);
                    //quasi_hr.appendTo(inner_row);

                    var appointments = office.appointments;
                    var day_str = new Date().getDay() + '';

                    var large_screen_col_size = 3;
                    var medium_screen_col_size = 6;
                    var sunday_present = ((typeof(appointments["Sunday"]) + '').toLowerCase() !== "undefined");

                    if(sunday_present)
                    {
                        delete appointments["Sunday"];
                        large_screen_col_size = 4;
                        medium_screen_col_size = 4;
                    }
                    large_screen_col_size += '';
                    medium_screen_col_size += '';
                    $.each(days[day_str], function(ii, day)
                    {
                        if(day !== "Sunday")
                        {
                            var day_div = $("<div></div>").addClass("col-xs-12").addClass("col-sm-12").addClass("col-md-" + medium_screen_col_size).addClass("col-lg-" + large_screen_col_size);
                            var day_item = $("<p></p>").addClass("upcoming_appointment_day").text(day);
                            day_item.appendTo(day_div);

                            $.each(appointments[day], function(iii, appointment)
                            {
                                if(appointment !== null && (typeof(appointment) + '').toLowerCase() === "object")
                                {
                                    /*for(var iiii = 0; iiii < 12; iiii++)
                                    {*/
                                        $("<p></p>").addClass("upcoming_appointment_item").text(appointment.name).on("click", function()
                                        {
                                            if(!window.appointment_clicked)
                                            {
                                                showUpcomingAppointmentCard(appointment, $(this), funding_list);
                                            }
                                        }).appendTo(day_div);
                                    /*}*/
                                }
                        });
                        if(day_div.find(".upcoming_appointment_item").size() === 0)
                        {
                            $("<p></p>").addClass("no_appointments").text("(No appointments found)").appendTo(day_div);
                        }

                        day_div.appendTo(inner_row)
                        }
                    });
                });
                inner_row.appendTo(upcoming_row);
                //upcoming_spacer.appendTo(app_area);
                upcoming_row.appendTo(app_area);
                //upcoming_spacer.clone().appendTo(app_area);
            }
            function loadUpcomingViewV2(offices, funding_list, utility_providers)
            {
                var app_area = $("#app_area");
                var days =
                {
                    "0": ["Monday", "Tuesday", "Wednesday", "Thursday"],
                    "1": ["Monday", "Tuesday", "Wednesday", "Thursday"],
                    "2": ["Tuesday", "Wednesday", "Thursday", "Friday"],
                    "3": ["Wednesday", "Thursday", "Friday", "Saturday"],
                    "4": ["Thursday", "Friday", "Saturday", "Monday"],
                    "5": ["Friday", "Saturday", "Monday", "Tuesday"],
                    "6": ["Saturday", "Monday", "Tuesday", "Wednesday"]
                };
                var upcoming_spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");
                //var upcoming_row = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10");
                var upcoming_row = $("<div></div>").addClass("col-xs-12").addClass("col-sm-12").addClass("col-md-12").addClass("col-lg-12");

                var inner_row = $("<div></div>").addClass("row").addClass("upcoming_inner");
                $.each(offices, function(i, office)
                {

                    var name_div = $("<div></div>").addClass("col-xs-12").addClass("col-sm-12").addClass("col-md-12").addClass("col-lg-12");
                    $("<a></a>").attr("href", "javascript:void(0);").addClass("upcoming_anchor").text(office.name).appendTo(name_div);
                    name_div.appendTo(inner_row);
                    var quasi_hr = $("<div></div>").addClass("upcoming_office_quasi_hr").addClass("col-xs-12").addClass("col-sm-12").addClass("col-md-12").addClass("col-lg-12");
                    $("<div class='progress'><div class='progress-bar progress-bar-warning progress-bar-striped' role='progressbar' aria-valuenow='100' aria-valuemin='0' aria-valuemax='100' style='width: 100%'><span class='sr-only'>100% Complete (warning)</span></div></div>").appendTo(quasi_hr);
                    //quasi_hr.appendTo(inner_row);

                    var appointments = office.appointments;
                    var day_str = new Date().getDay() + '';

                    var large_screen_col_size = 3;
                    var medium_screen_col_size = 6;
                    sunday_present = false;

                    if(sunday_present)
                    {
                        delete appointments["Sunday"];
                        large_screen_col_size = 4;
                        medium_screen_col_size = 4;
                    }
                    large_screen_col_size += '';
                    medium_screen_col_size += '';
                    $.each(days[day_str], function(ii, day)
                    {
                        if(day !== "Sunday")
                        {
                            var day_div = $("<div></div>").addClass("col-xs-12").addClass("col-sm-12").addClass("col-md-" + medium_screen_col_size).addClass("col-lg-" + large_screen_col_size);
                            var day_item = $("<p></p>").addClass("upcoming_appointment_day").text(day);
                            day_item.appendTo(day_div);

                            $.each(appointments[day], function(iii, appointment)
                            {
                                if(appointment !== null && (typeof(appointment) + '').toLowerCase() === "object")
                                {
                                    $("<p></p>").addClass("upcoming_appointment_item").text(appointment.name).on("click", function()
                                    {
                                        if(!window.appointment_clicked)
                                        {
                                            showUpcomingAppointmentCard(appointment, $(this), funding_list, utility_providers);
                                        }
                                    }).appendTo(day_div);
                                }
                            });
                            if(day_div.find(".upcoming_appointment_item").size() === 0)
                            {
                                $("<p></p>").addClass("no_appointments").text("(No appointments found)").appendTo(day_div);
                            }
                            day_div.appendTo(inner_row)
                        }
                    });
                });
                inner_row.appendTo(upcoming_row);
                //upcoming_spacer.appendTo(app_area);
                upcoming_row.appendTo(app_area);
                //upcoming_spacer.clone().appendTo(app_area);
            }
            function loadAppsScriptSettingsScreen()
            {
                var app_area = $("#app_area");
                var apps_script_settings_spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");
                var apps_script_settings_row = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10").css("margin-bottom", "1em").addClass("notificationrow");
                var apps_script_settings_spacer2 = apps_script_settings_spacer.clone();

                var apps_script_settings_div = $("<div></div>").addClass("apps_script_settings_div");
                $("<center></center>").append($("<h2></h2>").text("Apps Script Settings")).append($("<hr />")).appendTo(apps_script_settings_div);

                var ico = $("<img />").attr("src", "/bootstrap/images/apps_script.png").attr("class", "img img-responsive");
                $("<p></p>").addClass("script_label").append(ico).append($("<span></span>").text("Mailer")).appendTo(apps_script_settings_div);
                $("<p></p>").addClass("script_description").text("Responsible for outgoing mail sent internally by the application. Currently responsible for mailing customers after receiving their field form entry and for notifying internal users of certain events. For more info, see Additional Actions > Manage Notifications").appendTo(apps_script_settings_div);
                $("<p></p>").addClass("script_url label_value_of_mailer").text("Retrieving url...").appendTo(apps_script_settings_div);
                $("<p></p>").addClass("script_changer changer_for_mailer").text("Change Script URL").appendTo(apps_script_settings_div);

                var ico2 = $("<img />").attr("src", "/bootstrap/images/apps_script.png").attr("class", "img img-responsive");
                $("<p></p>").addClass("script_label").append(ico2).append($("<span></span>").text("DocuSign Forwarder")).appendTo(apps_script_settings_div);
                $("<p></p>").addClass("script_description").text("Forwards the DocuSign signature request email with a link to the docs for the customer to sign with the field rep...").appendTo(apps_script_settings_div);
                $("<p></p>").addClass("script_url label_value_of_docusign_forwarder").text("Retrieving url...").appendTo(apps_script_settings_div);
                $("<p></p>").addClass("script_changer changer_for_docusign_forwarder").text("Change Script URL").appendTo(apps_script_settings_div);

                var ico3 = $("<img />").attr("src", "/bootstrap/images/apps_script.png").attr("class", "img img-responsive");
                $("<p></p>").addClass("script_label").append(ico3).append($("<span></span>").text("Payscale Auditor")).appendTo(apps_script_settings_div);
                $("<p></p>").addClass("script_description").text("Generates a spreadsheet via of which field reps are assigned to which payscale...").appendTo(apps_script_settings_div);
                $("<p></p>").addClass("script_url label_value_of_payscale_audit").text("Retrieving url...").appendTo(apps_script_settings_div);
                $("<p></p>").addClass("script_changer changer_for_payscale_audit").text("Change Script URL").appendTo(apps_script_settings_div);

                var ico4 = $("<img />").attr("src", "/bootstrap/images/apps_script.png").attr("class", "img img-responsive");
                $("<p></p>").addClass("script_label").append(ico4).append($("<span></span>").text("Rep SP2 Spreadsheet Sharer")).appendTo(apps_script_settings_div);
                $("<p></p>").addClass("script_description").text("Copies a templated Google SpreadSheet which is wired up to some code. This code allows the rep to type in their email address and password, and to then pull their upcoming SP2 times from the app. The duplicated sheet is then shared with the rep.").appendTo(apps_script_settings_div);
                $("<p></p>").addClass("script_url label_value_of_rep_sp2_schedule").text("Retrieving url...").appendTo(apps_script_settings_div);
                $("<p></p>").addClass("script_changer changer_for_rep_sp2_schedule").text("Change Script URL").appendTo(apps_script_settings_div);

                apps_script_settings_div.appendTo(apps_script_settings_row);
                apps_script_settings_spacer.appendTo(app_area);
                apps_script_settings_row.appendTo(app_area);
                apps_script_settings_spacer2.appendTo(app_area);

                apps_script_settings_div.find(".script_changer").each(function(i, e)
                {
                    $(e).click(function()
                    {
                        var lbl = $.trim($(e).attr("class").replace("script_changer", "").replace("changer_for_", ""));
                        $(".label_value_of_" + lbl).attr("contenteditable", "true").off("blur").on("blur", function()
                        {
                            var val = $.trim($(this).text());
                            var that = $(this);
                            $.post("/data", {"fn": "change_apps_script_url", "label": lbl, "value": val}).done(function(resp)
                            {
                                that.removeAttr("contenteditable");
                                that.text(val);
                            });
                        })[0].focus();
                    });
                });

                $.each(["mailer", "docusign_forwarder", "payscale_audit", "rep_sp2_schedule"], function(i, label_name)
                {
                    $.post("/data", {"fn": "get_apps_script_url", "label": label_name}).done(function(resp)
                    {
                        $(".label_value_of_" + label_name).text(resp);
                    });
                });
            }
            window.appointment_clicked = false;
            function closeUpcomingApptCard()
            {
                var size = $(".upcoming_appointment_item, .no_appointments").size();
                $(".upcoming_appointment_item, .no_appointments").each(function(i, e)
                {
                    $(e).animate({opacity: 1.0}, 250, function()
                    {
                        if(i === size - 1)
                        {
                            $(".upcoming_appt_card").css("min-height", "0px").css("overflow", "hidden").animate({height: "0px", padding: "0px"}, 250, function()
                            {
                                $(".upcoming_appt_card").remove();
                                window.appointment_clicked = false;
                            });
                        }
                    });
                });

            }
            function showUpcomingAppointmentCard(appt, self, funding_list, utility_providers)
            {
                window.appointment_clicked = true;
                self.addClass("preclude_from_hiding");
                var card = $("<div></div>").addClass("upcoming_appt_card");
                $("<span class='close'>X</span>").click(function()
                {
                    closeUpcomingApptCard();
                }).appendTo(card);

                $("<p></p>").addClass("upcoming_card_label").text("Slot #:").appendTo(card);
                $("<p></p>").addClass("upcoming_card_value").text(appt.slot_number + '').appendTo(card);

                $("<p></p>").addClass("upcoming_card_label").text("Name:").appendTo(card);
                $("<p></p>").addClass("upcoming_card_value").text(appt.name).appendTo(card);

                $("<p></p>").addClass("upcoming_card_label").text("DOB: ").appendTo(card);
                $("<p></p>").addClass("upcoming_card_value").text(appt.customer_dob).appendTo(card);

                $("<p></p>").addClass("upcoming_card_label").text("Email:").appendTo(card);
                $("<p></p>").addClass("upcoming_card_value").append
                (
                    $("<a></a>").attr("href", "mailto:" + appt.email).text(appt.email)
                ).appendTo(card);

                $("<p></p>").addClass("upcoming_card_label").text("Phone:").append
                (
                    $("<a></a>").attr("href", "tel:" + appt.phone_number).text(appt.phone_number_formatted)
                ).appendTo(card);

                $("<p></p>").addClass("upcoming_card_label").text("Address:").appendTo(card);
                $("<p></p>").addClass("upcoming_card_value").text(appt.address).append
                (
                    $("<br />")
                )
                .append
                (
                    $("<span></span>").text(appt.city + "," + appt.state)
                )
                .append
                (
                    $("<br />")
                )
                .append
                (
                    $("<span></span>").text(appt.postal)
                )
                .appendTo(card);

                $("<p></p>").addClass("upcoming_card_label").text("Utility No:").appendTo(card);
                $("<p></p>").addClass("upcoming_card_value").text(appt.utility_no).appendTo(card);

                var option_vals = [];
                var option_vals_friendly = [];

                $.each(funding_list, function(i, list_item)
                {
                    option_vals.push(list_item.value);
                    option_vals_friendly.push(list_item.value_friendly);
                });

                //var option_vals = ["n/a", "gd", "kw", "sunrun", "sunnova", "hero", "prepaid", "cash", "fail"]
                //var option_vals_friendly = ["N/A", "GD", "KW", "sunrun", "sunnova", "HERO", "Prepaid", "cash", "Failed Credit Check"]

                var trust_vals = ["n/a", "yes", "no"];
                var trust_vals_friendly = ["Not Sure", "Not Required", "Required"];

                var fund_div = $("<div></div>").addClass("upcoming_card_label").text("Fund:").append("<br />");
                var trust_div = $("<div></div>").addClass("upcoming_card_label").text("Trust Docs:").append("<br />");

                var fund_dd = $("<div></div>").addClass("dropdown");
                var trust_dd = $("<div></div>").addClass("dropdown");

                var friendly_fund_name = option_vals_friendly[option_vals.indexOf(appt.fund)];
                var friendly_trust_name = trust_vals_friendly[trust_vals.indexOf(appt.trust_docs)];

                $("<button></button>").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("type", "button").attr("id", "dropdownMenuFund").attr("data-toggle", "dropdown").attr("aria-expanded", "true").text(friendly_fund_name).append($("<span></span>").addClass("caret")).appendTo(fund_dd);
                $("<button></button>").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("type", "button").attr("id", "dropdownMenuTrust").attr("data-toggle", "dropdown").attr("aria-expanded", "true").text(friendly_trust_name).append($("<span></span>").addClass("caret")).appendTo(trust_dd);

                var ul = $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu").attr("aria-labelledby", "dropdownMenuFund");

                var ul2 = $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu").attr("aria-labelledby", "dropdownMenuTrust");

                $.each(option_vals, function(i, option_val)
                {
                    var li = $("<li></li>");
                    li.attr("role", "presentation").attr("id", "fund_" + option_val).attr("");

                    var a = $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text(option_vals_friendly[i]);
                    a.appendTo(li);
                    li.appendTo(ul);
                });

                $.each(trust_vals, function(i, trust_val)
                {
                    var li = $("<li></li>");
                    li.attr("role", "presentation").attr("id", "trust_" + trust_val).attr("");

                    var a = $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text(trust_vals_friendly[i]);
                    a.appendTo(li);
                    li.appendTo(ul2);
                });

                ul.find("li").each(function(i, e)
                {
                    $(e).click(function()
                    {
                        var that = $(this);
                        var fund_source = that.attr("id").replace("fund_", "");
                        $("#dropdownMenuFund").animate({opacity: 0.2}, 250, function()
                        {
                            $.post("/data", {"fn": "set_fund_for_booking", "fund": fund_source, "identifier": appt.identifier}, function()
                            {
                                $("#dropdownMenuFund").text($(e).text());
                                $("<span></span>").addClass("caret").appendTo($("#dropdownMenuFund"));
                                $("#dropdownMenuFund").animate({opacity: 1.0}, 250, function()
                                {
                                    appt.fund = fund_source;
                                });
                            });
                        });
                    });
                });

                ul2.find("li").each(function(i, e)
                {
                    $(e).click(function()
                    {
                        var that = $(this);
                        var trust_opt = that.attr("id").replace("trust_", "");
                        $("#dropdownMenuTrust").animate({opacity: 0.2}, 250, function()
                        {
                            $.post("/data", {"fn": "set_trust_for_booking", "trust": trust_opt, "identifier": appt.identifier}, function()
                            {
                                $("#dropdownMenuTrust").text($(e).text());
                                $("<span></span>").addClass("caret").appendTo($("#dropdownMenuTrust"));
                                $("#dropdownMenuTrust").animate({opacity: 1.0}, 250, function()
                                {
                                    appt.trust_docs = trust_opt;
                                });
                            });
                        });
                    });
                });

                ul.appendTo(fund_dd);
                ul2.appendTo(trust_dd);

                fund_dd.appendTo(fund_div);
                trust_dd.appendTo(trust_div);

                fund_div.appendTo(card);
                trust_div.appendTo(card);
                $("<span></span>").text("Cancel Survey Appt.").addClass("inner_card_cancel").attr("id", "cancel_" + appt.identifier).click(function()
                {
                    var o_name = self.parent().prevAll(".col-lg-12").eq(0).text();
                    var dayte = self.prevAll(".upcoming_appointment_day").eq(0).text();
                    var extra_cb = function()
                    {
                        localStorage.setItem("button_to_click", "upcoming_view");
                        window.location.reload();
                    };
                    confirmCancellation(appt, o_name, dayte, extra_cb);
                }).appendTo(trust_div);


                /*var card_cpy = card.clone(true);
                card.css("background-color", "#867F7F");
                card.css("visibility", "hidden");

                card_cpy.css("background-color", "#867F7F;")

                var day_label = self.prevAll(".upcoming_appointment_day").eq(0);

                var day_offset = day_label.offset();
                var day_height = day_label.height();

                var left = day_offset.left + '';
                left = left.replace("px", "");
                left = left * 1;
                left = parseInt(left);
                left = left + '';
                left = left + 'px';

                card_cpy.css("left", left);

                var top = day_offset.top + '';
                top = top.replace("px", "");
                top = top * 1;
                top = parseInt(top);

                var height = day_height + '';
                height = height.replace("px", "");
                height = height * 1;
                height = parseInt(height);

                top += height;
                top = top + '';
                top = top + 'px';

                card_cpy.css("top", top)
                card_cpy.css("width", "100%");
                card_cpy.css("position", "absolute");
                card_cpy.css("height", "0px");
                card_cpy.css("opacity", "0.0");

                var size = $(".upcoming_appointment_item, .no_appointments").size();
                $(".upcoming_appointment_item, .no_appointments").each(function(i, e)
                {
                    if(!$(e).hasClass("preclude_from_hiding"))
                    {
                        $(e).animate({opacity:0.0}, 1160, function()
                        {
                            if(i === size - 1)
                            {
                                var target_top = card.offset().top;
                                target_top = target_top + '';
                                target_top = target_top.replace("px", "");
                                target_top = parseInt(target_top);
                                target_top = target_top + '';
                                target_top = target_top + 'px';

                                var target_height = card.height();
                                target_height = target_height + '';
                                target_height = target_height.replace("px", "");
                                target_height = parseInt(target_height);
                                target_height = target_height + '';
                                target_top = target_height + 'px';

                                var current_width = card.width();
                                current_width = current_width + '';
                                current_width = current_width.replace("px", "");
                                current_width = parseInt(current_width);
                                current_width = current_width + '';
                                current_width = current_width + '';

                                card_cpy.css("width", current_width);

                                card_cpy.appendTo($("body"));

                                card_cpy.animate({"height": target_height, "top": target_top}, 1160, function()
                                {
                                    card_cpy.animate({opacity: 0.0}, 1160, function()
                                    {
                                        card.css("visibility", "visible");
                                        card_cpy.remove();
                                    });
                                });
                            }
                        });
                    }
                });*/
                card.insertAfter(self);

                var size = $(".upcoming_appointment_item, .no_appointments").size();
                var animation_cb_count = 0;
                $(".upcoming_appointment_item, .no_appointments").each(function(i, e)
                {
                    if(!$(e).hasClass("preclude_from_hiding"))
                    {
                        $(e).animate({opacity:0.2}, 250, function()
                        {
                            animation_cb_count++;
                        });
                    }
                    else
                    {
                        animation_cb_count++;
                    }
                });
                window.temp_animation_check_interval = setInterval(function()
                {
                    if(animation_cb_count === size)
                    {
                        card.animate({opacity: 1.0}, 250, function()
                        {
                            card.animate({backgroundColor: "#F3EEEE"}, 250);
                        });
                        window.clearInterval(temp_animation_check_interval);
                    }
                }, 20);

            }
            function updatePerms(office_identifier, user_identifier, allowed)
            {
                var perm_map =
                {
                    "0": "disallow",
                    "1": "allow"
                };

                $("#surveyor_perm_" + user_identifier).animate({opacity: 0.2}, 250, function()
                {
                    $.post("./data", {"fn": "update_surveyor_perm", "office_identifier": office_identifier, "user_identifier": user_identifier, "perm": perm_map[(allowed * 1) + '']}).done(function(resp)
                    {
                        $("#surveyor_perm_" + user_identifier).animate({opacity: 1.0}, 250, function()
                        {
                            // kk
                        });
                    });
                });
            }
            function manageSurveyorAccess(identifier)
            {
                $.post("./data", {"fn": "list_surveyor_access_permission"}).done(function(resp)
                {
                    var surveyor_items_div = $("<div></div>").addClass("surveyor_perms_container");
                    $("<span></span>").text("Surveyors with Access:").appendTo(surveyor_items_div);
                    $.each(resp.surveyors, function(i, surveyor)
                    {
                        var survey_item_div = $("<div></div>").addClass("surveyor_perm_item").attr("id", "surveyor_perm_" + surveyor.identifier);
                        var cbox = $("<input />").attr("type", "checkbox");
                        if(surveyor.allowed_offices.indexOf(identifier) > -1)
                        {
                            cbox.attr("checked", "checked");
                        }

                        cbox.change(function()
                        {
                            updatePerms(identifier, surveyor.identifier, $("#surveyor_perm_" + surveyor.identifier).find("input").eq(0)[0].checked);
                        });

                        cbox.appendTo(survey_item_div);
                        $("<span></span>").addClass("surveyor_perm_surveyor_name").text(surveyor.name).appendTo(survey_item_div);

                        survey_item_div.appendTo(surveyor_items_div);
                    });
                    $(".surveyor_perms_container").remove();
                    surveyor_items_div.insertAfter($("#office_" + identifier).find(".oname"));
                });
            }
            function manageOffices()
            {
                var app_area = $("#app_area");
                $("<h2></h2>").text("Loading...").appendTo(app_area);
                $.post("./data", {"fn": "office_data_v2"}).done(function(r)
                {
                    app_area.find("h2").remove();
                    var markets_ul = $("<ul></ul>").addClass("new_markets_ul")
                    $.each(r.offices, function(i, office)
                    {
                        var main_li = $("<li></li>").addClass("market_li").attr("data-identifier", office.identifier)
                        .append
                        (
                            $("<span></span>").addClass("actual_office_name").text(office.name)
                        )
                        .append
                        (
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-pencil")
                        )
                        .append
                        (
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove").css("display", "none")
                        )
                        .append
                        (
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-plus")
                        )
                        .append
                        (
                            $("<span></span>").addClass("label").addClass("label-primary").addClass("market_rp").text("Residual Pay").attr("data-residual", (office.residual_overrides * 1) + '')
                        );
                        if(office.offices.length > 0)
                        {
                            var offices_ul = $("<ul></ul>").addClass("new_offices_ul");
                            $.each(office.offices, function(ii, child_office)
                            {
                                var office_active_cb = $("<input />").attr("type", "checkbox").addClass("office_deactivation_cb");
                                if(child_office.active)
                                {
                                    office_active_cb.attr("checked", "checked");
                                }
                                office_active_cb.change(function(ev)
                                {
                                    var c = $(this)[0].checked;
                                    if(!c)
                                    {
                                        if(window.confirm("Are you sure you would like to deactivate this office?"))
                                        {
                                            $.post("./data", {"fn": "office_deactivation", "identifier": child_office.identifier}).done(function(r)
                                            {
                                                $("#manage_offices").trigger("click");
                                            });
                                        }
                                        else
                                        {
                                            $(this)[0].checked = true;
                                        }
                                    }                                    
                                });
                                
                                $("<li></li>").addClass("office_li").attr("data-identifier", child_office.identifier)
                                .append
                                (
                                    $("<span></span>").addClass("actual_office_name").text(child_office.name)
                                )
                                .append
                                (
                                    $("<span></span>").addClass("glyphicon").addClass("glyphicon-screenshot").addClass("office_geo_glyph").attr("data-geo", JSON.stringify(child_office.geo_data))
                                )
                                .append
                                (
                                    $("<span></span>").addClass("glyphicon").addClass("glyphicon-pencil")
                                )
                                .append
                                (
                                    $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove")
                                )
                                .append
                                (
                                    $("<span></span>").addClass("glyphicon").addClass("glyphicon-random")
                                )
                                .append
                                (
                                    $("<span></span>").addClass("glyphicon").addClass("glyphicon-file").attr("data-list", JSON.stringify(child_office.distribution_list))
                                )
                                .append
                                (
                                    $("<span></span>").addClass("glyphicon").addClass("glyphicon-user")
                                    .click(function()
                                    {
                                        $(".offices_market_user_div").remove();
                                        $(".office_market_override_tbl").remove();
                                        var el_eye = $(this).parent();
                                        el_eye.css("opacity", "0.2");
                                        var selection = $("<select></select>");
                                        $("<option></option>").attr("value", "n/a").text("Select a new office").appendTo(selection);
                                        $(".office_li").each(function(n, o)
                                        {
                                            if($(o).data("identifier") !== el_eye.data("identifier"))
                                            {
                                                $("<option></option>").attr("value", $(o).data("identifier")).text($(o).find("> .actual_office_name").text()).appendTo(selection);
                                            }
                                        });
                                        $.post("./data", {"fn": "list_users_in_given_office", "identifier": child_office.identifier}).done(function(users)
                                        {
                                            el_eye.css("opacity", "1.0");
                                            $.each(users, function(iiiiiii, user)
                                            {
                                                var u_d = $("<div></div>").addClass("offices_market_user_div").attr("data-identifier", user.identifier)
                                                .append
                                                (
                                                    $("<span></span>").addClass("u_name").text(user.name)
                                                )
                                                .append
                                                (
                                                    $("<span></span>").addClass("u_rid").text(user.rep_id)
                                                )
                                                .append
                                                (
                                                    selection.clone()
                                                )
                                                .append
                                                (
                                                    $("<span></span>").addClass("glyphicon").addClass("glyphicon-ban-circle").attr("title", "Deactivate " + user.first_name + " " + user.last_name + "'s Account").click(function()
                                                    {
                                                        var that = this;
                                                        if(window.confirm("Are you sure you would like to deactivate " + user.name + "'s account?"))
                                                        {
                                                            if(window.confirm(user.name + "'s access will be revoked, and his/her customers will be reassigned to the corporate account....\nIs this correct?"))
                                                            {
                                                                $(that).parent().css("opacity", "0.2");
                                                                $.post("./data", {"fn": "deactivate_user", "identifier": user.identifier}).done(function(respkkk)
                                                                {
                                                                    $(that).parent().remove();
                                                                });
                                                            }
                                                        }
                                                    })
                                                );
                                                u_d.find("select").on("change", function(evvvv)
                                                {
                                                    $(this).css("opacity", "0.1");
                                                    var vvv = $(this).val();
                                                    $.post("./data", {"fn": "user_office_reassignment", "identifier": user.identifier, "office": vvv}).done(function(dun)
                                                    {
                                                        u_d.remove();
                                                    });
                                                });

                                                u_d.appendTo(el_eye);
                                            });
                                        });
                                    })
                                )
                                .append
                                (
                                    $("<span></span>").addClass("glyphicon").addClass("glyphicon-usd")
                                    .click(function()
                                    {
                                        var that = $(this);
                                        that.css("opacity", "0.2");
                                        $.post("./data", {"fn": "list_users_in_given_office", "identifier": that.parent().data("identifier")}).done(function(users)
                                        {
                                            $.post("./data", {"fn": "override_data_for_office", "identifier": that.parent().data("identifier")}).done(function(o_data)
                                            {
                                                $(".office_market_override_tbl").remove();
                                                $(".offices_market_user_div").remove();
                                                
                                                var overrides = o_data.data;
                                                var tr_count = 2;
                                                tr_count += overrides["recipients"].length;

                                                var main_override_tbl = $("<table></table>").addClass("office_market_override_tbl");
                                                var main_override_tbody = $("<tbody></tbody>");
                                                $.post("./data", {"fn": "get_rep_names_from_identifiers", "identifiers": JSON.stringify(overrides["recipients"])}).done(function(respons)
                                                {
                                                    var header_tr = $("<tr></tr>")
                                                    .append
                                                    (
                                                        $("<th></th>").text("Rep")
                                                    )
                                                    .append
                                                    (
                                                        $("<th></th>").text("Gets OR?")
                                                    );
                                                    $.each(overrides["recipients"], function(iii, recipient_identifier)
                                                    {
                                                        $("<th></th>").text(respons.map[recipient_identifier]).appendTo(header_tr);
                                                    });
                                                    header_tr
                                                    .append
                                                    (
                                                        $("<th></th>")
                                                        .text("Issues OR?")
                                                        .append
                                                        (
                                                            $("<button></button>").text("Add Foreign Recipient").addClass("btn").addClass("btn-success").addClass("add-foreign-recipient-btn")
                                                            .click(function()
                                                            {
                                                                addForeignRecipientToOffice(child_office.identifier);
                                                            })
                                                        )
                                                    );
                                                    header_tr.appendTo(main_override_tbody);
                                                    $.each(users, function(iii, user)
                                                    {
                                                        var user_tr = $("<tr></tr>").addClass("office_market_override_tr").attr("data-identifier", user.identifier);
                                                        $("<td></td>").text(user.name).appendTo(user_tr);
                                                        var enabled_td = $("<td></td>").addClass("office_market_override_enabled_td");
                                                        if(overrides["recipients"].indexOf(user.identifier) > -1)
                                                        {
                                                            enabled_td.append
                                                            (
                                                                $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove").addClass("rem_yielder")
                                                                .click(function()
                                                                {
                                                                    var that = $(this);                                                                    
                                                                    if(window.confirm("Are you sure you would like to remove " + $(this).closest("tr").find("td").first().text() + " as an override recipient for this office?"))
                                                                    {
                                                                        that.closest("table").css("opacity", "0.2");
                                                                        $.post("./data", {"fn": "purge_office_override_recipient", "office": child_office.identifier, "recipient": $(this).closest("tr").data("identifier")}).done(function(rrr)
                                                                        {
                                                                            that.closest("li").find(".glyphicon-usd").trigger("click");
                                                                            that.closest("table").remove();                                                                        
                                                                        });
                                                                    }
                                                                })
                                                            );
                                                        }
                                                        else
                                                        {
                                                            $("<span></span>").addClass("label").addClass("label-success").text("Enable Overrides").click(function()
                                                            {
                                                                addRecipientToOverrides(user.identifier, user.name, that.parent().data("identifier"));
                                                            }).appendTo(enabled_td);
                                                        }
                                                        enabled_td.appendTo(user_tr);                                                        
                                                        
                                                        $.each(overrides["recipients"], function(iiii, recipient) 
                                                        {
                                                            var amt_td = $("<td></td>").text("$0.00").attr("data-identifier", recipient);
                                                            if(Object.keys(overrides["data"]).indexOf(user.identifier) > -1)
                                                            {
                                                                $.each(overrides["data"][user.identifier], function(iiiii, obj)
                                                                {
                                                                    if(obj.identifier === recipient)
                                                                    {
                                                                        amt_td.text(currencyFormat(parseFloat(obj.amount)));
                                                                    }
                                                                });
                                                            }
                                                            amt_td.on("dblclick", function(evvv)
                                                            {
                                                                var orig_amt = $(this).text();
                                                                amt_td.text($.trim(amt_td.text()).substring(1));
                                                                amt_td.off("blur");
                                                                amt_td.on("blur", function(evvv2)
                                                                {
                                                                    amt_td.removeAttr("contenteditable");
                                                                    var new_amt = parseFloat($.trim(amt_td.text().replace("$", "")));
                                                                    if(Number.isNaN(new_amt) || new_amt === null || ((typeof(new_amt) + '').toLowerCase() !== "number"))
                                                                    {
                                                                        amt_td.text(orig_amt);
                                                                        return;
                                                                    }
                                                                    amt_td.css("opacity", "0.2");                                                                    
                                                                    $.post("./data", {"fn": "update_override_data_for_office", "office": amt_td.closest("table").parent().data("identifier"), "user": amt_td.parent().data("identifier"), "recipient": amt_td.data("identifier"), "amount": new_amt.toFixed(2)}).done(function(succ)
                                                                    {
                                                                        amt_td.text(currencyFormat(new_amt));
                                                                        amt_td.css("opacity", "1.0");                                                                        
                                                                    });
                                                                });
                                                                amt_td.attr("contenteditable", "true");
                                                                amt_td[0].focus();
                                                            });
                                                            amt_td.addClass("override_amt_td").appendTo(user_tr);
                                                        });
                                                        if(overrides["yielders"].indexOf(user.identifier) > -1)
                                                        {
                                                            $("<td></td>").addClass("remove_yielder_td")
                                                            .append
                                                            (
                                                                $("<span></span>").addClass("label").addClass("label-danger").addClass("label-remove-yielder").text("Disable Overrides")
                                                                .click(function()
                                                                {
                                                                    var that = $(this);
                                                                    that.closest("table").css("opacity", "0.2");
                                                                    $.post("./data", {"fn": "purge_office_override_yielder", "office": child_office.identifier, "yielder": user.identifier}).done(function(rnr)
                                                                    {
                                                                        that.closest("li").find(".glyphicon-usd").trigger("click");
                                                                        try
                                                                        {
                                                                            that.closest("table").remove();
                                                                        }
                                                                        catch(ex5)
                                                                        {

                                                                        }
                                                                    });
                                                                })

                                                            ).appendTo(user_tr);
                                                        }
                                                        else
                                                        {
                                                            $("<td></td>").addClass("remove_yielder_td")
                                                            .text("Nope")
                                                            .appendTo(user_tr);
                                                        }       
                                                        user_tr.appendTo(main_override_tbody);
                                                    });
                                                    var last_tr = $("<tr></tr>").attr("data-identifier", "other-accounts");
                                                    $("<td></td>").text("Other Accounts").appendTo(last_tr);
                                                    $("<td></td>").html("&nbsp;").appendTo(last_tr);
                                                    $.each(overrides["recipients"], function(iiii, recipient)
                                                    {
                                                        var amt_td = $("<td></td>").text("$0.00").attr("data-identifier", recipient).addClass("override_amt_td");
                                                        if(Object.keys(overrides["other_accounts"]).indexOf(recipient) > -1)
                                                        {
                                                            amt_td.text(currencyFormat(parseFloat(overrides["other_accounts"][recipient])));
                                                        }
                                                        amt_td.on("dblclick", function(evvv)
                                                        {
                                                            var orig_amt = $(this).text();
                                                            amt_td.text($.trim(amt_td.text()).substring(1));
                                                            amt_td.off("blur");
                                                            amt_td.on("blur", function(evvv2)
                                                            {
                                                                amt_td.removeAttr("contenteditable");
                                                                var new_amt = parseFloat($.trim(amt_td.text().replace("$", "")));
                                                                if(Number.isNaN(new_amt) || new_amt === null || ((typeof(new_amt) + '').toLowerCase() !== "number"))
                                                                {
                                                                    amt_td.text(orig_amt);
                                                                    return;
                                                                }
                                                                amt_td.css("opacity", "0.2");
                                                                $.post("./data", {"fn": "set_other_amount_for_recipient", "office": amt_td.closest("table").parent().data("identifier"), "recipient": amt_td.data("identifier"), "amount": new_amt.toFixed(2)}).done(function(succ)
                                                                {
                                                                    amt_td.text(currencyFormat(new_amt));
                                                                    amt_td.css("opacity", "1.0");                                                                        
                                                                });
                                                            });
                                                            amt_td.attr("contenteditable", "true");
                                                            amt_td[0].focus();
                                                        });
                                                        amt_td.appendTo(last_tr);                                                   
                                                    });
                                                    last_tr.append($("<td></td>").html("&nbsp;"));
                                                    last_tr.addClass("overrides_other_account_tr").addClass("office_market_overide_tr");
                                                    last_tr.appendTo(main_override_tbody);
                                                    var last_tr2 = $("<tr></tr>").addClass("overrides_last_tr")
                                                    .append
                                                    (
                                                        $("<td></td>").text("Remove as Override Recipient")
                                                    )
                                                    .append
                                                    (
                                                        $("<td></td>").html("&nbsp;")
                                                    );
                                                    $.each(overrides["recipients"], function(iiiii, recipient2)
                                                    {
                                                        $("<td></td>").append
                                                        (
                                                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove")
                                                            .click(function()
                                                            {
                                                                var that = $(this);
                                                                if(window.confirm("Are you sure you would like to remove " + $(this).closest("table").find("th").eq(2 + iiiii).text() + " as an override recipient for this office?"))
                                                                {
                                                                    that.closest("table").css("opacity", "0.2");
                                                                    $.post("./data", {"fn": "purge_office_override_recipient", "office": child_office.identifier, "recipient": recipient2}).done(function(rrr)
                                                                    {
                                                                        that.closest("li").find(".glyphicon-usd").trigger("click");
                                                                        that.closest("table").remove();                                                                        
                                                                    });
                                                                }
                                                            })
                                                        ).appendTo(last_tr2)
                                                    });
                                                    last_tr2.append($("<td></td>").html("&nbsp;"));
                                                    last_tr2.appendTo(main_override_tbody);
                                                    main_override_tbody.appendTo(main_override_tbl);
                                                    main_override_tbl.appendTo(that.parent());
                                                    that.css("opacity", "1.0");
                                                });
                                            });
                                        });
                                    })
                                )
                                .append
                                (
                                    office_active_cb
                                )
                                .appendTo(offices_ul);
                            });
                            offices_ul.appendTo(main_li);
                        }
                        main_li.appendTo(markets_ul);
                    });

                    markets_ul.on("click", "> li > li >.glyphicon-remove", function()
                    {
                        var that = $(this);
                        var entity_name = "office";
                        if(that.closest("li").hasClass("market_li"))
                        {
                            entity_name = "market";
                            if(that.parent().find("li").size() > 0)
                            {
                                window.alert("You must first reassign the office(s) to another market.");
                                return;
                            }
                        }
                        var conf_msg = "Are you sure you would like to remove the '" + that.parent().find("> .actual_office_name").text() + "' " + entity_name + "? An alternative might be to deactivate via the checkbox. By proceeding....ANY PENDING CUSTOMERS/CONTRACTS IN THIS " + entity_name.toUpperCase() + " WILL HAVE INCOMPLETE DATA...";
                        
                        if(window.confirm(conf_msg))
                        {
                            if(window.confirm("Wait, you really wanna do this, right?"))
                            {
                                $.post("./data", {"fn": "office_remove_v2", "identifier": that.closest("li").data("identifier")}).done(function(rr)
                                {
                                    if(rr.success)
                                    {
                                        that.closest("li").remove();
                                    }
                                    else
                                    {
                                        window.alert("The office could not be removed because there are currently reps assigned to it.");
                                    }
                                });
                            }
                        }
                    });

                    markets_ul.on("click", ".office_li .office_geo_glyph", function()
                    {
                        var geo_data = $(this).data("geo");
                        if((typeof(geo_data) + '').toLowerCase() === "string")
                        {
                            geo_data = $.parseJSON(geo_data);
                        }
                        var that = $(this);
                        var lat_lng = geo_data[0];
                        var lat = lat_lng.split(",")[0]
                        var lng = lat_lng.split(",")[1];

                        lat = $.trim(lat);
                        lng = $.trim(lng);

                        var geo_html = $("<div></div>");
                        $("<p></p>").text("Latitude (usually the first number):").appendTo(geo_html);
                        $("<input />").attr("type", "text").attr("id", "office_geo_update_lat").attr("value", lat).appendTo(geo_html);
                        $("<p></p>").text("Longitude (usually the second number):").appendTo(geo_html);
                        $("<input />").attr("type", "text").attr("id", "office_geo_update_lng").attr("value", lng).appendTo(geo_html);

                        BootstrapDialog.show
                        (
                            {
                                "title": "Update the Latitude Longitude Geo-Data",
                                "message": geo_html.html(),
                                "buttons":
                                [
                                    {
                                        "label": "Cancel",
                                        "cssClass": "btn-danger",
                                        "action": function(d)
                                        {
                                            d.close();
                                        }
                                    },
                                    {
                                        "label": "Update",
                                        "cssClass": "btn-primary",
                                        "action": function(d)
                                        {
                                            var new_lat = $.trim($("#office_geo_update_lat").val());
                                            var new_lng = $.trim($("#office_geo_update_lng").val());

                                            var error = false;
                                            
                                            var parsed_lat = parseFloat(new_lat);
                                            if(Number.isNaN(parsed_lat))
                                            {
                                                error = true;
                                            }
                                            else
                                            {
                                                if(parsed_lat < -90.0 || parsed_lat > 90.0)
                                                {
                                                    error = true;
                                                }
                                            }
                                            var parsed_lng = parseFloat(new_lng);
                                            if(Number.isNaN(parsed_lng))
                                            {
                                                error = true;
                                            }
                                            else
                                            {
                                                if(parsed_lng < -180.0 || parsed_lng > 180.0)
                                                {
                                                    error = true;
                                                }
                                            }
                                            
                                            if(error)
                                            {
                                                window.alert("Bad value(s) for latitude and/or longitude");
                                                return;
                                            }

                                            new_lat = parsed_lat + '';
                                            new_lng = parsed_lng + '';

                                            $.post("/data", {"fn": "set_geo_data_for_office", "lat": new_lat, "lng": new_lng, "identifier": that.closest(".office_li").first().data("identifier")}).done(function()
                                            {
                                                d.close();
                                                that.data("geo", JSON.stringify([new_lat + "," + new_lng])).attr("data-geo", JSON.stringify([new_lat + "," + new_lng]));
                                            });
                                        }
                                    }
                                ],
                                "onshown": function(d)
                                {
                                    $("#office_geo_update_lat").val(lat);
                                    $("#office_geo_update_lng").val(lng);
                                }
                            }
                        )
                    });

                    markets_ul.on("click", ".market_rp", function()
                    {
                        var that = $(this);
                        var html = $("<div></div>");
                        $("<p></p>").text("Pay Overrides Residually?").appendTo(html);
                        var cb = $("<input />").attr("type", "checkbox");
                        if(that.attr("data-residual") === "1")
                        {
                            cb.attr("checked", "checked");
                        }
                        cb.appendTo(html);
                        BootstrapDialog.show
                        (
                            {
                                "title": "Residual Overrides for " + that.parent().find(".actual_office_name").text(),
                                "message": html.html(),
                                "buttons":
                                [
                                    {
                                        "label": "Cancel",
                                        "cssClass": "btn-danger",
                                        "action": function(d)
                                        {
                                            d.close();
                                        }
                                    },
                                    {
                                        "label": "Save",
                                        "cssClass": "btn-primary",
                                        "action": function(d)
                                        {
                                            var checked = ($(".bootstrap-dialog-body").find("input").first()[0].checked * 1) + '';
                                            $.post("/data", {"fn": "set_residual_overrides_for_market", "identifier": that.parent().data("identifier"), "enabled": checked}).done(function(rrrrr)
                                            {
                                                that.attr("data-residual", checked);
                                                d.close();
                                            });
                                        }
                                    }
                                ]
                            }
                        );
                    });

                    markets_ul.on("click", ".glyphicon-pencil", function()
                    {
                        var that = $(this);
                        var entity_name = "office";

                        var curr_name = that.parent().find("> .actual_office_name").text();

                        var html = $("<div></div>");
                        $("<p></p>").text("Enter the new name...").appendTo(html);
                        $("<input />").attr("type", "text").attr("value", curr_name).appendTo(html);

                        BootstrapDialog.show
                        (
                            {
                                "title": "Rename the office",
                                "message": html.html(),
                                "buttons":
                                [
                                    {
                                        "label": "Cancel",
                                        "cssClass": "btn-danger",
                                        "action": function(d)
                                        {
                                            d.close();
                                        }
                                    },
                                    {
                                        "label": "Save",
                                        "cssClass": "btn-primary",
                                        "action": function(d)
                                        {
                                            var new_name = $.trim($(".bootstrap-dialog-body").find("input").first().val());
                                            if(new_name.length === 0)
                                            {
                                                window.alert("The name cannot be blank, sorry.");
                                                return;
                                            }

                                            $.post("./data", {"fn": "rename_office_v2", "identifier": that.closest("li").data("identifier"), "name": new_name}).done(function(rrr)
                                            {
                                                that.closest("li").find("> .actual_office_name").text(new_name);
                                                d.close();
                                            });
                                        }
                                    }
                                ]
                            }
                        );
                    });

                    markets_ul.on("click", ".glyphicon-plus", function()
                    {
                        var that = $(this);

                        var html = $("<div></div>");
                        $("<p></p>").text("Enter the office's name...").appendTo(html);
                        $("<input />").attr("type", "text").appendTo(html);

                        BootstrapDialog.show
                        (
                            {
                                "title": "Adding a new office",
                                "message": html.html(),
                                "buttons":
                                [
                                    {
                                        "label": "Cancel",
                                        "cssClass": "btn-danger",
                                        "action": function(d)
                                        {
                                            d.close();
                                        }
                                    },
                                    {
                                        "label": "Save",
                                        "cssClass": "btn-primary",
                                        "action": function(d)
                                        {
                                            var new_name = $.trim($(".bootstrap-dialog-body").find("input").first().val());
                                            if(new_name.length === 0)
                                            {
                                                window.alert("The name cannot be blank, sorry.");
                                                return;
                                            }

                                            $.post("./data", {"fn": "add_new_office", "office_name": new_name, "parent": that.closest("li").data("identifier")}).done(function(rrr)
                                            {
                                                d.close();
                                                $("#manage_offices").trigger("click");
                                            });
                                        }
                                    }
                                ]
                            }
                        );
                    });

                    markets_ul.on("click", ".glyphicon-random", function()
                    {
                        var that = $(this);

                        var html = $("<div></div>");
                        $("<p></p>").text("Choose the new market...").appendTo(html);
                        var sel = $("<select></select>").attr("id", "office_v2_reassignment_sel");

                        $(".market_li").find("> .actual_office_name").each(function(i, e)
                        {
                            $("<option></option>").attr("value", $(e).parent().data("identifier")).text($(e).text()).appendTo(sel);
                        });
                        sel.appendTo(html);

                        BootstrapDialog.show
                        (
                            {
                                "title": "Reassigning to another market",
                                "message": html.html(),
                                "buttons":
                                [
                                    {
                                        "label": "Cancel",
                                        "cssClass": "btn-danger",
                                        "action": function(d)
                                        {
                                            d.close();
                                        }
                                    },
                                    {
                                        "label": "Save",
                                        "cssClass": "btn-primary",
                                        "action": function(d)
                                        {
                                            var val = $(".bootstrap-dialog-body").find("select").first().val();
                                            if(val.length !== 128)
                                            {
                                                window.alert("Sorry, there was an unknown problem. The reassignment cannot proceed.");
                                                return;
                                            }

                                            $.post("./data", {"fn": "office_reassignment_v2", "identifier": that.closest("li").data('identifier'), "parent": val}).done(function(rrr)
                                            {
                                                d.close();
                                                $("#manage_offices").trigger("click");
                                            });
                                        }
                                    }
                                ]
                            }
                        );
                    });

                    markets_ul.on("click", ".glyphicon-file", function(ev)
                    {
                        var that = $(this);
                        BootstrapDialog.show
                        (
                            {
                                "title": "Edit Report Distribution List",
                                "message": "<p>Enter one email address per line: <br /><textarea style=\"width: 50%; background: #5a5555; border: 0px solid #000; margin-top: 1em; min-height: 5em; padding: 0.5em;\"></textarea><br />",
                                "buttons":
                                [
                                    {
                                        "label": "Cancel",
                                        "cssClass": "btn-danger",
                                        "action": function(d)
                                        {
                                            d.close();
                                        }
                                    },
                                    {
                                        "label": "Save",
                                        "cssClass": "btn-primary",
                                        "action": function(d)
                                        {
                                            var val = $.trim($(".bootstrap-dialog-body").find("textarea").first().val());
                                            while(val.indexOf("\r") > -1)
                                            {
                                                val = val.replace("\r", "");
                                            }
                                            var vals = val.split("\n");
                                            var new_vals = [];
                                            $.each(vals, function(i, value)
                                            {
                                                if(value.length > 0)
                                                {
                                                    new_vals.push(value);
                                                }
                                            });

                                            $.post("/data", {"fn": "set_distribution_list_for_office", "list": JSON.stringify(new_vals), "identifier": that.parent().data("identifier")}).done(function(rrrrrrrrr)
                                            {
                                                that.data("list", JSON.stringify(new_vals)).attr("data-list", JSON.stringify(new_vals));
                                                d.close();
                                            });
                                        }
                                    }
                                ],
                                "onshown": function(d)
                                {
                                    if((typeof(that.data("list")) + '').toLowerCase() === "object")
                                    {
                                        $(".bootstrap-dialog-body").find("textarea").val(that.data("list").join("\n"));
                                    }
                                    else
                                    {
                                        $(".bootstrap-dialog-body").find("textarea").val($.parseJSON(that.data("list")).join("\n"));
                                    }
                                }
                            }
                        );
                    });

                    var deactivated_li = $("<li></li>").addClass("market_li")
                    .append
                    (
                        $("<span></span>").addClass("actual_office_name").text("Deactivated Offices")
                    )
                    .append
                    (
                        $("<ul></ul>").addClass("new_offices_ul")
                    );
                    deactivated_li.appendTo(markets_ul);

                    markets_ul.find(".office_li").each(function(i, e)
                    {
                        if($(e).find(".office_deactivation_cb").first()[0].checked === false)
                        {
                            $(e).appendTo(deactivated_li.find("> ul").first());
                            $(e).find(".glyphicon-pencil, .glyphicon-remove, .glyphicon-random, .glyphicon-file, .glyphicon-user, .office_deactivation_cb, .glyphicon-usd").each(function(ii, ee)
                            {
                                $(ee).remove();
                            });
                            $("<span></span>").addClass("label").addClass("label-primary").text("Restore Office").click(function()
                            {
                                $.post("./data", {"fn": "office_reactivation", "identifier": $(e).data("identifier")}).done(function(r)
                                {
                                    $("#manage_offices").trigger("click");
                                });
                            }).appendTo($(e));
                        }
                    });
                    var ul_len = markets_ul.find(".new_offices_ul").size();
                    /*markets_ul.find(".new_offices_ul").each(function(i, e)
                    {
                        if(i === (ul_len - 1))
                        {
                            return;
                        }
                        if($(e).find("li").size() === 0)
                        {
                            $(e).parent().remove();
                        }
                    });*/

                    var office_spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");
                    var office_row = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10");
                    office_row.append
                    (
                        $("<span></span>").addClass("label").addClass("label-new-market").text("Add new Market")
                        .click(function()
                        {
                            var html = $("<div></div>");
                            $("<p></p>").text("Enter the market's name...").appendTo(html);
                            $("<input />").attr("type", "text").appendTo(html);

                            BootstrapDialog.show
                            (
                                {
                                    "title": "Adding a new market",
                                    "message": html.html(),
                                    "buttons":
                                    [
                                        {
                                            "label": "Cancel",
                                            "cssClass": "btn-danger",
                                            "action": function(d)
                                            {
                                                d.close();
                                            }
                                        },
                                        {
                                            "label": "Save",
                                            "cssClass": "btn-primary",
                                            "action": function(d)
                                            {
                                                var new_name = $.trim($(".bootstrap-dialog-body").find("input").first().val());
                                                if(new_name.length === 0)
                                                {
                                                    window.alert("The name cannot be blank, sorry.");
                                                    return;
                                                }

                                                $.post("./data", {"fn": "add_new_office", "office_name": new_name, "parent": "n/a"}).done(function(rrr)
                                                {
                                                    d.close();
                                                    $("#manage_offices").trigger("click");
                                                });
                                            }
                                        }
                                    ]
                                }
                            );
                        })
                    );
                    office_row.append(markets_ul);
                    var office_spacer_clone = office_spacer.clone();
                    $.each([office_spacer, office_row, office_spacer_clone], function(i, e)
                    {
                        e.appendTo(app_area);
                    });
                });
            }
            function addRecipientToOverrides(identifier, name, office_identifier)
            {
                var html = $("<div></div>");
                $("<p></p>").text("Enter an initialized dollar amount for this override recipient...").appendTo(html);
                $("<input />").attr("type", "text").attr("placeholder", "25.00").appendTo(html);
                BootstrapDialog.show
                (
                    {
                        "title": "Please specify the default amount",
                        "message": html.html(),
                        "buttons":
                        [
                            {
                                "label": "Cancel",
                                "cssClass": "btn-danger",
                                "action": function(d)
                                {
                                    d.close();
                                }
                            },
                            {
                                "label": "Continue",
                                "cssClass": "btn-primary",
                                "action": function(d)
                                {
                                    var inp = $(".bootstrap-dialog-body").find("input").first();
                                    var amt = parseFloat($.trim(inp.val().replace("$", "")));
                                    if((typeof(amt) + '').toLowerCase() !== "number" || Number.isNaN(amt))
                                    {
                                        window.alert("The amount was not understood");
                                        return;
                                    }
                                    $.post("./data", {"fn": "add_override_recipient_o_and_m", "identifier": identifier, "office": office_identifier, "amount": amt.toFixed(2)}).done(function(r)
                                    {
                                        d.close();

                                        $(".office_li").each(function(i, e)
                                        {
                                            if($(e).data("identifier") === office_identifier)
                                            {
                                                $(e).find(".glyphicon-usd").trigger("click");
                                            }
                                        });
                                    });
                                }
                            }
                        ]
                    }
                )
            }
            function addForeignRecipientToOffice(office_identifier, recipient_identifier, recipient_nayme)
            {
                if(typeof(recipient_identifier) + '' === "undefined")
                {
                    var office_nayme = "";
                    $(".office_li").each(function(i, e)
                    {
                        if($(e).data("identifier") === office_identifier)
                        {
                            office_nayme = $(e).find(".actual_office_name").text();
                        }
                    });
                    $(".add-foreign-recipient-btn").css("opacity", "0.2");
                    $.post("./data", {"fn": "list_all_users"}).done(function(responsee)
                    {
                        var contacts = responsee.contacts;
                        // build the contacts dictionary and the identifier => name map
                        var hint_dictionary = {};
                        var ident_name_map = {};

                        // do the first name hints
                        $.each(contacts, function(i, contact)
                        {
                            ident_name_map[contact.identifier] = contact.name;

                            var fname = contact.first_name.toLowerCase();
                            for(var k = 0; k < fname.length; k++)
                            {
                                var hint = fname.substring(0, k + 1);
                                if(typeof(hint_dictionary[hint]) + '' === "undefined")
                                {
                                    hint_dictionary[hint] = [];
                                }
                                hint_dictionary[hint].push
                                (
                                    {
                                        "name": contact.name,
                                        "identifier": contact.identifier
                                    }
                                );
                            }

                            var lname = contact.last_name.toLowerCase();
                            for(var k = 0; k < lname.length; k++)
                            {
                                var hint = lname.substring(0, k + 1);
                                if(typeof(hint_dictionary[hint]) + '' === "undefined")
                                {
                                    hint_dictionary[hint] = [];
                                }
                                hint_dictionary[hint].push
                                (
                                    {
                                        "name": contact.name,
                                        "identifier": contact.identifier
                                    }
                                );
                            }

                            var name = contact.name.toLowerCase();
                            for(var k = 0; k < name.length; k++)
                            {
                                var hint = name.substring(0, k + 1);
                                if(typeof(hint_dictionary[hint]) + '' === "undefined")
                                {
                                    hint_dictionary[hint] = [];
                                }
                                hint_dictionary[hint].push
                                (
                                    {
                                        "name": contact.name,
                                        "identifier": contact.identifier
                                    }
                                );
                            }
                        });
                        var contacts = hint_dictionary;

                        var html = $("<div></div>");

                        $("<p></p>").text("Type the foreign recipient's name:").appendTo(html);
                        $("<input />").attr("type", "text").addClass("wc_recipient_transaction_input_box").attr("placeholder", "Rep's name...").appendTo(html);
                        var hinted_users_div = $("<div></div>").addClass("hinted_users");
                        $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove").appendTo(hinted_users_div);
                        $("<h2></h2>").css("visibility", "hidden").text("Loading Data...").appendTo(html);

                        hinted_users_div.appendTo(html);

                        var hint_dictionary = contacts;
                        $(".add-foreign-recipient-btn").css("opacity", "1.0");
                        BootstrapDialog.show
                        (
                            {
                                "title": office_nayme + " - Adding a foreign recipient",
                                "message": html.html(),
                                "buttons":
                                [
                                    {
                                        "label": "Nevermind",
                                        "cssClass": "btn-danger",
                                        "action": function(d)
                                        {
                                            d.close();
                                        }
                                    },
                                    {
                                        "label": "Continue",
                                        "cssClass": "btn-primary",
                                        "action": function(d)
                                        {
                                            if($(".hidden_identifier_for_transaction_match").size() === 0)
                                            {
                                                window.alert("But you haven't chosen anyone yet?");
                                                return;
                                            }
                                            addForeignRecipientToOffice(office_identifier, $(".hidden_identifier_for_transaction_match").data("identifier"), $(".hidden_identifier_for_transaction_match").text());
                                            d.close();
                                        }
                                    }
                                ],
                                "onshown": function(d)
                                {
                                    $(".hinted_users").find("span").first().click(function()
                                    {
                                        $(".hinted_users").css("display", "none");
                                        $(".hinted_user").remove();
                                        $(".bootstrap-dialog-footer").find("input").first().trigger("keyup");
                                    });

                                    var to_box = $(".bootstrap-dialog-body").find("input").eq(0);
                                    to_box
                                    .focus(function()
                                    {
                                        if(to_box.val() === "Enter someone's name...")
                                        {
                                            to_box.val("");
                                        }
                                    })
                                    .blur(function()
                                    {
                                        if($.trim(to_box.val()) === "")
                                        {
                                            to_box.val("Enter someone's name...");
                                        }
                                    })
                                    .on("keyup", function()
                                    {
                                        if($.trim(to_box.val()).length > 0)
                                        {
                                            hint_at_users3(to_box, hint_dictionary, function(data)
                                            {
                                                //confirmCloser(data);
                                            });
                                        }
                                    });

                                    if(typeof(optional_name) + '' !== "undefined")
                                    {
                                        to_box.val(optional_name);
                                        setTimeout(function()
                                        {
                                            to_box.trigger("keyup");
                                            setTimeout(function()
                                            {
                                                if($(".hinted_user").size() === 1)
                                                {
                                                    $(".hinted_user").first().trigger("click");
                                                }
                                            }, 750);
                                        }, 250);
                                    }
                                }
                            }
                        );
                    });
                    return;
                }
                var html2 = $("<div></div>");
                $("<p></p>").text("Please specify an override amount for " + recipient_nayme).appendTo(html2);
                $("<input />").attr("type", "text").attr("placeholder", "$25.00").appendTo(html2);
                BootstrapDialog.show
                (
                    {
                        "title": "How much?",
                        "message": html2.html(),
                        "buttons":
                        [
                            {
                                "label": "Cancel",
                                "cssClass": "btn-danger",
                                "action": function(d)
                                {
                                    d.close();
                                }
                            },
                            {
                                "label": "Add as Foreign Recipient",
                                "cssClass": "btn-primary",
                                "action": function(d)
                                {
                                    var inp = $(".bootstrap-dialog-body").find("input").first();
                                    var amt = parseFloat($.trim(inp.val().replace("$", "")));
                                    if((typeof(amt) + '').toLowerCase() !== "number" || Number.isNaN(amt))
                                    {
                                        window.alert("The amount was not understood");
                                        return;
                                    }
                                    $.post("./data", {"fn": "add_override_recipient_o_and_m", "identifier": recipient_identifier, "office": office_identifier, "amount": amt.toFixed(2)}).done(function(r)
                                    {
                                        d.close();

                                        $(".office_li").each(function(i, e)
                                        {
                                            if($(e).data("identifier") === office_identifier)
                                            {
                                                $(e).find(".glyphicon-usd").trigger("click");
                                            }
                                        });
                                    });
                                }
                            }
                        ]
                    }
                )
            }
            function addOverridesToUser(identifier, name, office_identifier)
            {
                var da_office = null;
                var html = $("<div></div>");
                var table = $("<table></table>").addClass("n_override_table");
                var tbody = $("<tbody></tbody>");
                $("<tr></tr>")
                .append
                (
                    $("<th></th>").text("Rep")
                )
                .append
                (
                    $("<th></th>").text("Override Amount")
                )
                .appendTo(tbody);
                var reps = [];
                $(".office_li").each(function(i, e)
                {
                    if($(e).data("identifier") === office_identifier)
                    {
                        da_office = $(e);
                        $(e).find(".office_market_override_tr").each(function(ii, ee)
                        {
                            var item = {"identifier": $(ee).data("identifier"), "name": $(ee).find("td").first().text()};
                            if(item.identifier !== identifier)
                            {
                                reps.push(item);
                            }
                        });
                    }
                });
                $.each(reps, function(i, rep)
                {
                    $("<tr></tr>").attr("data-identifier", rep.identifier)
                    .append
                    (
                        $("<td></td>").text(rep.name)
                    )
                    .append
                    (
                        $("<td></td>").addClass("new_override_editor_amt").text("0.00")
                    )
                    .appendTo(tbody);
                });
                tbody.appendTo(table);
                table.appendTo(html);


                BootstrapDialog.show
                (
                    {
                        "title": "Specify the recipients and amounts for " + name + "'s overrides...",
                        "message": html.html(),
                        "buttons":
                        [
                            {
                                "label": "Cancel",
                                "cssClass": "btn-danger",
                                "action": function(d)
                                {
                                    d.close();
                                }
                            },
                            {
                                "label": "Set overrides",
                                "cssClass": "btn-primary",
                                "action": function(d)
                                {
                                    var recipient_data = [];
                                    var ret_early = false;
                                    $(".new_override_editor_amt").each(function(i, e)
                                    {
                                        var a = parseFloat($.trim($(e).text().replace("$", "")));
                                        if(Number.isNaN(a) || a === null)
                                        {
                                            ret_early = true;
                                        }
                                        if(a >= 0.01)
                                        {
                                            recipient_data.push({"amount": a.toFixed(2), "identifier": $(e).parent().data("identifier")});
                                        }                                        
                                    });
                                    if(ret_early)
                                    {
                                        window.alert("Something went wrong.");
                                        return;
                                    }
                                    if(recipient_data.length === 0)
                                    {
                                        window.alert("You must provide at least one override recipient with $0.01 or greater in the override amount(s).");
                                        return;
                                    }
                                    $.post("./data", {"fn": "add_to_override_data_for_office", "identifier": office_identifier, "data": JSON.stringify(recipient_data), "user": identifier}).done(function(k)
                                    {
                                        d.close();
                                        if(da_office !== null)
                                        {
                                            da_office.find(".glyphicon-usd").trigger("click");
                                        }
                                    });


                                }
                            }
                        ],
                        "onshown": function(d)
                        {
                            $(".new_override_editor_amt").each(function(i, e)
                            {
                                $(e).on("dblclick", function(ev)
                                {
                                    $(e).attr("contenteditable", "true");
                                    $(e).off("blur");
                                    $(e).on("blur", function(ev2)
                                    {
                                        var amt = parseFloat($.trim($(this).text().replace("$", "")));
                                        try
                                        {
                                            if(Number.isNaN(amt) || amt === null || ((typeof(amt) + '') === "undefined"))
                                            {
                                                $(e).text("0.00");
                                                $(e).removeAttr("contenteditable");
                                            }
                                            else
                                            {
                                                $(e).text(amt.toFixed(2));
                                                $(e).removeAttr("contenteditable");
                                            }
                                        }
                                        catch(e6)
                                        {
                                            $(e).text("0.00");
                                            $(e).removeAttr("contenteditable");
                                        }
                                    });
                                    $(e)[0].focus();
                                });
                            });
                        }
                    }
                );
            }
            function editPaycheckTextMessage()
            {
                var app_area = $("#app_area");
                $.post("/data", {"fn": "read_setting", "value": "paycheck_ready_message"}).done(function(r)
                {
                    $("<textarea></textarea>").attr("id", "paycheck_preview_msg_ta").val(r.data).appendTo(app_area);
                    $("#paycheck_preview_msg_ta")[0].scrollIntoView();
                    $("<br />").appendTo(app_area);
                    $("<button></button>").addClass("btn").addClass("btn-primary").text("Save")
                    .click(function()
                    {
                        var msg = $.trim($("#paycheck_preview_msg_ta").val());
                        $.post("/data", {"fn": "write_setting", "value": "paycheck_ready_message", "data": msg}).done(function(r)
                        {
                            BootstrapDialog.alert("The message has been updated.");
                        });
                    })
                    .appendTo(app_area);
                });
            }
            function manageNotificationsAndSettings()
            {
                var app_area = $("#app_area");
                var notification_spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");
                var notification_row = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10").css("margin-bottom", "1em").addClass("notificationrow");
                var notification_spacer2 = notification_spacer.clone();
                var dropdown_div = $("<div></div>").addClass("dropdown");

                $("<button></button>").text("Select a Notification Type").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("type", "button").attr("id", "dropdownMenuSelNotification").attr("data-toggle", "dropdown").attr("aria-expanded", "true").appendTo(dropdown_div);
                $("<span></span>").addClass("caret").appendTo(dropdown_div.find(".btn"));

                var ul = $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu").attr("aria-labelledby", "dropdownMenuSelNotification");
                $.each(window.office_data.notifications, function(i, notification)
                {
                    var li = $("<li></li>");
                    li.attr("id", "notification_" + notification.identifier).attr("role", "presentation");

                    var a = $("<a></a>").attr("tabindex", "-1").attr("href", "javascript:void(0);").text(notification.action_name);
                    a.appendTo(li);
                    li.click(function()
                    {
                        $("#dropdownMenuSelNotification").text(li.find("a").eq(0).text()).append($("<span></span>").addClass("caret"));
                        reloadTextArea(notification);
                    });
                    li.appendTo(ul);
                });
                ul.appendTo(dropdown_div);
                dropdown_div.appendTo(notification_row);
                $("<hr />").css("opacity", "0.0").appendTo(notification_row);
                $("<textarea class='form-control' id='email_list' style='visibility: hidden; min-height: 300px;'></textarea>").appendTo(notification_row);
                $("<br />").appendTo(notification_row);
                $("<center><button type='button' class='notification_save_btn btn btn-success' style='visibility: hidden'>Save</button></center>").appendTo(notification_row);
                $("<center><button type='button' class='utility_provider_save_btn btn btn-success' style='visibility: hidden;'>Save</button></center>").appendTo(notification_row);


                var dropdown_div2 = $("<div></div>").addClass("dropdown").addClass("settings_ddown");
                $("<button></button>").text("Select a Setting").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("type", "button").attr("id", "dropdownMenuSelSetting").attr("data-toggle", "dropdown").attr("aria-expanded", "true").append($("<span></span>").addClass("caret")).appendTo(dropdown_div2);

                var ul2 = $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu").attr("aria-labelledby", "dropdownMenuSelSetting");
                var settings =
                [
                    {
                        "value": "kwh_prices",
                        "value_friendly": "Kwh Prices"
                    },
                    {
                        "value": "utility_providers",
                        "value_friendly": "Utility Providers"
                    },
                    {
                        "value": "proposal_formulas",
                        "value_friendly": "Proposal Formulas"
                    },
                    {
                        "value": "pricing_structures",
                        "value_friendly": "Pricing Structures"
                    },
                    {
                        "value": "project_management_checkoffs",
                        "value_friendly": "Project Management Checkoffs"
                    },
                    {
                        "value": "system_options",
                        "value_friendly": "System Options"
                    },
                    {
                        "value": "permitting_jurisdictions",
                        "value_friendly": "Permitting Jurisdictions"
                    },
                    {
                        "value": "services_schedule",
                        "value_friendly": "Services Fee Schedule"
                    },
                    {
                        "value": "project_managers",
                        "value_friendly": "Project Managers"
                    },
                    {
                        "value": "electricians",
                        "value_friendly": "Electricians"
                    },
                    {
                        "value": "email_templates",
                        "value_friendly": "Email Templates"
                    },
                    {
                        "value": "data_export_ips",
                        "value_friendly": "Data Export Whitelist"
                    },
                    {
                        "value": "passwords",
                        "value_friendly": "Passwords"
                    },
                    {
                        "value": "deal_closing_checklists",
                        "value_friendly": "Deal Closing Checklists"
                    },
                    {
                        "value": "tax_brackets",
                        "value_friendly": "Tax Bracket Matrices"
                    },
                    {
                        "value": "customer_communications",
                        "value_friendly": "Customer Communications"
                    },
                    {
                        "value": "paycheck_ready_message",
                        "value_friendly": "Paycheck Ready Text Message"
                    },
                    {
                        "value": "lead_checklist",
                        "value_friendly": "Leads Checklist"
                    },
                    {
                        "value": "soiling_levels",
                        "value_friendly": "Soiling Levels"
                    },
                    {
                        "value": "company_holidays",
                        "value_friendly": "Company Holidays"
                    }
                ];

                $.each(settings, function(i, setting)
                {
                    var li = $("<li></li>");
                    li.attr("id", "setting_value_of_" + setting.value).attr("role", "presentation");

                    var a = $("<a></a>").attr("tabindex", "-1").attr("href", "javascript:void(0);").text(setting.value_friendly);
                    a.appendTo(li);
                    li.click(function()
                    {
                        $("#dropdownMenuSelSetting").text(li.find("a").eq(0).text()).append($("<span></span>").addClass("caret"));
                        editSetting(setting.value);
                    });

                    li.appendTo(ul2);
                });

                ul2.appendTo(dropdown_div2);
                var edit_settings_div = $("<div></div>").attr("id", "edit_settings_div");
                $("<textarea></textarea>").attr("id", "settings_edit_ta").addClass("form-control").css("min-height", "300px").appendTo(edit_settings_div);
                edit_settings_div.appendTo(notification_row);
                dropdown_div2.insertAfter(notification_row.find(".dropdown").eq(0));
                $("<center><button type='button' class='settings_save_btn btn btn-success' style='display: none;'>Save</button></center>").appendTo(notification_row);

                var utility_provider_settings_div = $("<div></div>").addClass("utility_provider_div").addClass("row");
                $("<p></p>").addClass("add_u_provider_lbl").text("Add Utility Provider:").appendTo(utility_provider_settings_div)

                var add_provider_input = $("<input />").attr("type", "text").attr("placeholder", "Full name of company...");

                add_provider_input.appendTo(utility_provider_settings_div);

                utility_provider_settings_div.appendTo(notification_row);

                var proposal_formulas_div = $("<div></div>").addClass("proposal_formulas_div").addClass("row");
                $("<ul></ul>").addClass("formulas_ul").appendTo(proposal_formulas_div);

                $("<button></button>").text("+ New Formula").addClass("btn").addClass("btn-success")
                .click(function()
                {
                    var html = $("<div></div>");
                    $("<p></p>").text("Name of Formula:").appendTo(html);
                    $("<input />").attr("size", "48").attr("type", "text").attr("placeholder", "Average Monthly Bill, Ten-Year Cost of Savings, etc...").attr("id", "new_proposal_formula").appendTo(html);
                    BootstrapDialog.show
                    (
                        {
                            "title": "Create new Formula",
                            "message": html.html(),
                            "buttons":
                            [
                                {
                                    "label": "Nevermind",
                                    "cssClass": "btn-danger",
                                    "action": function(dialog)
                                    {
                                        dialog.close();
                                    }
                                },
                                {
                                    "label": "Create Formula",
                                    "cssClass": "btn-success",
                                    "action": function(dialog)
                                    {
                                        var potential_formula_name = $.trim($("#new_proposal_formula").val());
                                        if(potential_formula_name.length === 0)
                                        {
                                            window.alert("A name is required...");
                                            return;
                                        }
                                        while(potential_formula_name.indexOf("\t") > - 1)
                                        {
                                            potential_formula_name = potential_formula_name.replace("\t", "");
                                        }
                                        while(potential_formula_name.indexOf("\r") > -1)
                                        {
                                            potential_formula_name = potential_formula_name.replace("\r", "");
                                        }
                                        while(potential_formula_name.indexOf("\n") > -1)
                                        {
                                            potential_formula_name = potential_formula_name.replace("\n", "");
                                        }
                                        while(potential_formula_name.indexOf("  ") > -1)
                                        {
                                            potential_formula_name = potential_formula_name.replace("  ", " ");
                                        }
                                        var split_vals = potential_formula_name.split(" ");
                                        var new_vals = [];
                                        for(var cnt = 0; cnt < split_vals.length; cnt++)
                                        {
                                            new_vals.push(split_vals[cnt][0].toUpperCase() + split_vals[cnt].substring(1));
                                        }
                                        potential_formula_name = new_vals.join("_");
                                        potential_formula_name = "fx_" + potential_formula_name;

                                        if(Object.keys(window.proposal_formula_data).indexOf(potential_formula_name) === -1)
                                        {
                                            $("#app_area").css("opacity", "0.5");
                                            window.proposal_formula_data[potential_formula_name] = "";
                                            $.post("./data", {"fn": "write_setting", "value": "proposal_formulas", "data": JSON.stringify(window.proposal_formula_data)}).done(function(resp)
                                            {
                                                $("#app_area").css("opacity", "1.0");
                                                $("#setting_value_of_proposal_formulas").trigger("click");
                                                dialog.close();
                                            });
                                        }
                                        else
                                        {
                                            window.alert("A formula with the same name already exists, so it cannot be created...");

                                        }

                                    }
                                }
                            ]
                        }
                    );
                }).appendTo(proposal_formulas_div);
                proposal_formulas_div.appendTo(notification_row);

                notification_spacer.appendTo(app_area);
                notification_row.appendTo(app_area);
                notification_spacer2.appendTo(app_area);
            }
            function editEmailTemplate(template, jqDiv)
            {
                $(".email_body").remove();
                var main_div = $("<div></div>").addClass("email_body");
                var dd = $("<div></div>").addClass("dropdown");
                $("<button></button>").text("Choose a State").addClass("btn").addClass("btn-default")
                .addClass("dropdown-toggle").attr("data-toggle", "dropdown")
                .append
                (
                    $("<span></span>").addClass("caret")
                )
                .appendTo(dd);
                var ul = $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu");
                $("<li></li>").attr("role", "presentation").attr("id", "choice_ca")
                .append
                (
                    $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text("California")
                )
                .appendTo(ul);
                $("<li></li>").attr("role", "presentation").attr("id", "choice_ut")
                .append
                (
                    $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text("Utah")
                )
                .appendTo(ul);
                ul.find("li").each(function(i, e)
                {
                    $(e).click(function()
                    {
                        var btn = $(e).parent().prevAll(".btn").first();
                        btn.text($(this).text());
                        $("<span></span>").addClass("caret").appendTo(btn);
                        var s = $(e).attr("id").replace("choice_", "");
                        main_div.find("textarea").remove();

                        var texta = $("<textarea></textarea>");
                        var update_ta = function()
                        {
                            var v = texta.val();
                            template[s + "_content"] = v;
                            $.post("./data", {"fn": "email_template_update_text", "identifier": template.identifier, "state": s, "value": v});
                        };
                        $.each(["change", "blur", "keyup", "paste"], function(i, ev)
                        {
                            texta.on(ev, function()
                            {
                                update_ta();
                            });
                        });
                        texta.appendTo(main_div);
                        var content = template[s + "_content"];
                        var ta = main_div.find("textarea");
                        ta.val(content);
                        $("#exp_dd").css("visibility", "visible");
                    });
                });
                ul.appendTo(dd);
                dd.appendTo(main_div);

                var dd2 = $("<div></div>").addClass("dropdown").attr("id", "exp_dd");
                var ul2 = $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu");

                $("<button></button>").addClass("btn").addClass("btn-default").attr("id", "exp_button").addClass("dropdown-toggle")
                .attr("data-toggle", "dropdown")
                .text("Insert an Expression")
                .append($("<span></span>").addClass("caret"))
                .appendTo(dd2);

                var expressions =
                [
                    {
                        "value_friendly": "Customer Name",
                        "value": "cust_name"
                    },
                    {
                        "value_friendly": "Rep Name",
                        "value": "rep_name"
                    },
                    {
                        "value_friendly": "Rep Phone",
                        "value": "rep_phone"
                    },
                    {
                        "value_friendly": "SP2 Date/Time",
                        "value": "sp2_datetime"
                    },
                    {
                        "value_friendly": "SP2 Date",
                        "value": "sp2_date"
                    },
                    {
                        "value_friendly": "SP2 Time",
                        "value": "sp2_time"
                    }
                ];

                $.each(expressions, function(i, e)
                {
                    $("<li></li>").attr("role", "presentation")
                    .attr("id", "expression_" + e.value)
                    .append
                    (
                        $("<a></a>").attr("href", "javascript:void(0);").attr("tabindex", "-1").text(e.value_friendly).attr("role", "menuitem")
                    )
                    .appendTo(ul2);
                });
                ul2.find("li").each(function(i, e)
                {
                    $(e).click(function()
                    {
                        var mustache = "{" + "{" + $(e).attr("id").replace("expression_", "") + "}" + "}";
                        var v = main_div.find("textarea").val();
                        v += mustache;
                        main_div.find("textarea").val(v);
                        main_div.find("textarea").trigger("change");
                    });
                });
                ul2.appendTo(dd2);
                dd2.appendTo(main_div);

                main_div.insertAfter(jqDiv);
            }
            function loadEmailTemplateEditor()
            {
                var app_area = $("#app_area");
                var spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");
                var main_row = $("<div><div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10");
                main_row.append
                (
                    $("<button></button>")
                    .addClass("btn")
                    .addClass("btn-success")
                    .text("+New Email Template Item")
                    .click(function()
                    {
                        var html = $("<div></div>");

                        $("<br />").appendTo(html);
                        $("<input />").attr("type", "text").attr("placeholder", "Name the template...").appendTo(html);
                        $("<br />").appendTo(html);

                        BootstrapDialog.show
                        (
                            {
                                "title": "Creating a new email template...",
                                "message": html.html(),
                                "buttons":
                                [
                                    {
                                        "label": "Cancel",
                                        "cssClass": "btn-danger",
                                        "action": function(d)
                                        {
                                            d.close();
                                        }
                                    },
                                    {
                                        "label": "Create",
                                        "cssClass": "btn-primary",
                                        "action": function(d)
                                        {
                                            var inp = $(".bootstrap-dialog-body").find("input").first();
                                            if($.trim(inp.val()).length === 0)
                                            {
                                                window.alert("The name is required");
                                            }
                                            else
                                            {
                                                $.post("./data", {"fn": "create_new_email_template", "name": $.trim(inp.val())}).done(function(resp)
                                                {
                                                    d.close();
                                                    clearApp(function()
                                                    {
                                                        loadEmailTemplateEditor();
                                                    });
                                                });
                                            }
                                        }
                                    }
                                ]
                            }
                        );
                    })
                )
                .append
                (
                    $("<div></div>").css("min-height", "30px")
                )
                .append
                (
                    $("<span></span>").addClass("label").addClass("label-primary").addClass("et_lbl").text("Active/Inactive")
                );
                var spacer_clone = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1").clone();
                $.post("./data", {"fn": "read_email_templates"}).done(function(r)
                {
                    $.each(r.templates, function(i, template)
                    {
                        var cb = $("<input />").attr("type", "checkbox").addClass("et_active");
                        if(template.active)
                        {
                            cb.attr("checked", "checked");
                        }
                        cb.change(function()
                        {
                            var new_checked = $(this)[0].checked;
                            if(new_checked)
                            {
                                $(this)[0].checked = false;
                            }
                            else
                            {
                                $(this)[0].checked = true;
                            }
                            var val = (new_checked * 1) + '';
                            var conf_msgs =
                            {
                                "0": "Are you sure you wish to deactivate this template?",
                                "1": "Are you sure you wish to activate (make live) this template?"
                            };
                            var that = $(this);
                            if(window.confirm(conf_msgs[val]))
                            {
                                $.post("./data", {"fn": "activate_deactivate_email_template", "identifier": template.identifier, "value": val}).done(function(resp)
                                {
                                    BootstrapDialog.alert("OK, the changes have been applied.");
                                    that[0].checked = new_checked;
                                });
                            }
                        });
                        $("<div></div>").addClass("email_template_item")
                        .append
                        (
                            $("<span></span>").text(template.name)
                        )
                        .append
                        (
                            cb
                        )
                        .append
                        (
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-pencil").addClass("et_pencil")
                            .click(function()
                            {
                                editEmailTemplate(template, $(this).parent());
                            })
                        )
                        .append
                        (
                            $("<span></span>").text("rename").addClass("et_rename").text("Rename")
                            .click(function()
                            {
                                var name_span = $(this).parent().find("> span").first();
                                var old_txt = name_span.text();
                                name_span.off("blur").attr("contenteditable", "true").on("blur", function()
                                {
                                    name_span.removeAttr("contenteditable");
                                    var v = $.trim($(this).text());
                                    if(v.length === 0)
                                    {
                                        name_span.text(old_txt);
                                    }
                                    else
                                    {
                                        $.post("./data", {"fn": "update_name_for_email_template", "name": v, "identifier": template.identifier});
                                    }
                                });
                                name_span[0].focus();

                            })
                        )
                        .appendTo(main_row);
                    });
                });
                $.each([spacer, main_row, spacer_clone], function(i, e)
                {
                    e.appendTo(app_area);
                });
            }
            function editBonusThresholds(data, market)
            {
                if(typeof(data[market]) + '' === "undefined")
                {
                    data[market] = {};
                }
                try
                {
                    var parsed = $.parseJSON(data[market]["ppa_bonus_thresholds"]);
                    var len = parsed.length;
                }
                catch(e)
                {
                    data[market]["ppa_bonus_thresholds"] = "[]";
                }

                var arr = $.parseJSON(data[market]["ppa_bonus_thresholds"]);

                var html = $("<div></div>");
                var table = $("<table></table>").addClass("edit_bonus_thresholds_table");
                var tbody = $("<tbody></tbody>");

                $("<tr></tr>")
                .append
                (
                    $("<th></th>").text("Floor")
                )
                .append
                (
                    $("<th></th>").text("Ceiling")
                )
                .append
                (
                    $("<th></th>").text("Amount")
                )
                .append
                (
                    $("<th></th>").text("Remove")
                )
                .appendTo(tbody);

                $.each(arr, function(i, e)
                {
                    var tr = $("<tr></tr>");
                    tr.append($("<td></td>").text(e.floor));
                    tr.append($("<td></td>").text(e.ceiling));
                    tr.append($("<td></td>").text(e.amount));
                    tr.append
                    (
                        $("<td></td>")
                        .append
                        (
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove").addClass("drop_bonus_threshold_row")
                        )
                    );
                    tr.appendTo(tbody);
                });

                tbody.appendTo(table);
                table.appendTo(html);
                $("<br />").appendTo(html);
                $("<br />").appendTo(html);
                $("<h6></h6>").text("(Double-Click cells to edit)").appendTo(html);

                BootstrapDialog.show
                (
                    {
                        "title": "Editing Bonus Thresholds",
                        "message": html.html(),
                        "onshown": function(d)
                        {
                            $(".edit_bonus_thresholds_table").on("click", ".drop_bonus_threshold_row", function(ev)
                            {
                                if(window.confirm("Are you sure you would like to drop this row?"))
                                {
                                    $(this).closest("tr").remove();
                                }                                
                            });
                            $(".edit_bonus_thresholds_table").on("dblclick", "td", function(ev)
                            {
                                if($(this).parent().is("th"))
                                {
                                    return;
                                }
                                if($(this).find(".glyphicon-remove").size() > 0)
                                {
                                    return;
                                }
                                $(this).attr("contenteditable", "true");
                                $(this).off("blur");
                                var that = $(this);
                                
                                that.on("blur", function(ev2)
                                {
                                    var numerics = [".", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9"];
                                    var val = $.trim(that.text());
                                    var new_vals = [];
                                    $.each(val.split(""), function(ii, value)
                                    {
                                        if(numerics.indexOf(value) > -1)
                                        {
                                            new_vals.push(value);
                                        }
                                    });

                                    if(new_vals.length > 0)
                                    {
                                        that.text(new_vals.join(""));
                                    }
                                    else
                                    {
                                        that.text("0");
                                    }
                                                                        
                                    that.removeAttr("contenteditable");
                                });
                                that[0].focus();

                            });
                        },
                        "buttons":
                        [
                            {
                                "label": "Cancel",
                                "cssClass": "btn-danger",
                                "action": function(d)
                                {
                                    d.close();
                                }
                            },
                            {
                                "label": "Add new row",
                                "cssClass": "btn-primary",
                                "action": function(d)
                                {
                                    $("<tr></tr>")
                                    .append
                                    (
                                        $("<td></td>").text("0")
                                    )
                                    .append
                                    (
                                        $("<td></td>").text("0")
                                    )
                                    .append
                                    (
                                        $("<td></td>").text("0")
                                    )
                                    .append
                                    (
                                        $("<td></td>")
                                        .append
                                        (
                                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove").addClass("drop_bonus_threshold_row")
                                        )
                                    )
                                    .appendTo($(".edit_bonus_thresholds_table"));
                                }
                            },
                            {
                                "label": "Save",
                                "cssClass": "btn-success",
                                "action": function(d)
                                {
                                    var vals = [];
                                    $(".edit_bonus_thresholds_table").find("tr").each(function(ii, ee)
                                    {
                                        if(ii === 0)
                                        {
                                            return;
                                        }
                                        vals.push
                                        (
                                            {
                                                "floor": $.trim($(ee).find("td").eq(0).text()),
                                                "ceiling": $.trim($(ee).find("td").eq(1).text()),
                                                "amount": $.trim($(ee).find("td").eq(2).text())
                                            }
                                        );                                        
                                    });
                                    $.post("./data", {"fn": "update_pricing_structure", "market": market, "key": "ppa_bonus_thresholds", "value": JSON.stringify(vals)}).done(function(yay)
                                    {
                                        d.close();
                                        data[market]["ppa_bonus_thresholds"] = JSON.stringify(vals);                                                    
                                    });                                    
                                }
                            }
                        ]
                    }
                )
            }
            function loadPricingStructures()
            {
                var app_area = $("#app_area");

            	var spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");
            	var main_div = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10");
            	var spacer_clone = spacer.clone();
                $("<h2></h2>").text("Loading...").appendTo(app_area);
                $.post("./data", {"fn": "list_markets"}).done(function(resp1)
                {
                    var dataset = {};
                    var markets = resp1.markets;
                    var market_identifier_name_map = {};
                    $.post("./data", {"fn": "read_pricing_structures"}).done(function(resp2)
                	{
                        var data = resp2.data;

                        $.post("./data", {"fn": "list_funding_sources"}).done(function(resp3)
                        {
                            app_area.find("h2").remove();
                		
                            $.each(markets, function(i, market)
                            {
                                dataset[market.identifier] = {};
                                market_identifier_name_map[market.identifier] = market.name;
                                if(typeof(data[market.identifier]) + '' !== "undefined")
                                {
                                    dataset[market.identifier] = data[market.identifier];
                                }
                                
                            });

                            var key_groups = 
                            [
                                [
                                    "baseline_price",
                                    "price_tier_b",
                                    "price_tier_c",
                                    "price_tier_d",
                                    "price_tier_e"
                                ],
                                [
                                    "solar_pro_pay_per_hk",
                                    "solar_pro_manager_pay_per_hk",
                                    "solar_pro_flat_amount_per_install",
                                    "solar_pro_per_kw_amount_per_install",
                                    "solar_pro_manager_flat_amount_per_install",
                                    "solar_pro_manager_per_kw_amount_per_install",
                                    "solar_pro_managers_override_amount",
                                    "solar_pro_pay_per_ak",
                                    "solar_pro_real_usage_ak_bonus",
                                    "solar_pro_manager_pay_per_ak",
                                    "solar_pro_manager_real_usage_ak_bonus"
                                ],
                                [
                                    "energy_expert_self_gen_commission_per_kw",
                                    "energy_expert_commission_per_kw",
                                    "sales_manager_self_gen_commission_per_kw",
                                    "sales_manager_commission_per_kw"
                                ],
                                [
                                    "baseline_commission",
                                    "commission_tier_b",
                                    "commission_tier_c",
                                    "commission_tier_d",
                                    "commission_tier_e",
                                    "ppa_commission",
                                    "ppa_override_multiplication_factor",
                                    "residual_pay_per_kw",
                                    "residual_eligibility_monthly_deal_minimum",
                                    "state_tax_credit",
                                    "other_rebates",
                                    "label_for_state_tax_credit"
                                ],
                                [
                                    "utility_rate_hikes",
                                    "average_utility_bill_per_month_addon",
                                    "thirty_year_utility_cost_multiplier"
                                ],
                                [
                                    "ppa_bonus_thresholds"
                                ],
                                [
                                    "contractor_name",
                                    "contractor_street_address",
                                    "contractor_city",
                                    "contractor_state",
                                    "contractor_zip",
                                    "contractor_phone_number",
                                    "contractor_license_number",
                                    "contractor_email",
                                    "contractor_insurance_company",
                                    "contractor_insurance_company_phone_number",
                                    "contractor_logo",
                                    "contractor_signature"
                                ]
                            ];
                            var funds_arr = [];
                            var fund_value_name_map = {};
                            $.each(resp3, function(i, e)
                            {
                                if(i > 0 && i !== resp3.length - 1)
                                {
                                    funds_arr.push(e.value);
                                    fund_value_name_map[e.value] = e.value_friendly;
                                }
                            });
                            //key_groups.push(funds_arr);

                            var main_tbl = $("<table></table>");
                            var tbody = $("<tbody></tbody>");
                            var header = $("<tr></tr>").append
                            (
                                $("<th></th>").text("")
                            );
                            $.each(Object.keys(dataset), function(i, market_identifier)
                            {
                                $("<th></th>").text(market_identifier_name_map[market_identifier]).appendTo(header);
                            });
                            header.appendTo(tbody);

                            $.each(key_groups, function(i, key_group)
                            {
                                $.each(key_group, function(k, key)
                                {
                                    var words = key.split("_");
                                    for(var n = 0; n < words.length; n++)
                                    {
                                        var cpy = words[n][0].toUpperCase();
                                        if(words[n].length > 1)
                                        {
                                            cpy += words[n].substring(1);
                                        }
                                        words[n] = cpy;
                                    }
                                    var key_name = words.join(" ");
                                    if(i === 5)
                                    {
                                        key_name = fund_value_name_map[key];
                                    }

                                    var item_tr = $("<tr></tr>");
                                    $("<td></td>").addClass("key_name").text(key_name).appendTo(item_tr);
                                    $.each(Object.keys(dataset), function(j, market_identifier)
                                    {
                                        var dataset_specifics = dataset[market_identifier];
                                        var tee_d = $("<td></td>").attr("data-key", key);
                                        if(typeof(dataset_specifics[key]) + '' !== "undefined" || key === "ppa_bonus_thresholds")
                                        {
                                            if(key === "ppa_bonus_thresholds")
                                            {
                                                $("<a></a>").text("Click to edit").attr("href", "javascript:void(0);").addClass("edit_ppa_bonus_a").appendTo(tee_d);
                                            }
                                            else if(["contractor_signature", "contractor_logo"].indexOf(key) === -1)
                                            {
                                                tee_d.text(dataset_specifics[key]);
                                            }
                                            else
                                            {                                                
                                                $("<img />").addClass("img").addClass("img-responsive").addClass("contractor_thumb").attr("src", "//storage.googleapis.com/" + window.app_bucket + "/MarketSettings/Contractors/" + key.split("_")[1][0].toUpperCase() + key.split("_")[1].substring(1) + "s/" + market_identifier + ".jpg?dt=" + new Date().getTime() + '').appendTo(tee_d);
                                                $("<hr />").appendTo(tee_d);
                                                $("<p></p>").text("Upload and Overwrite (JPG Only)").appendTo(tee_d);
                                                $("<input />").attr("type", "file").addClass("contractor_file").appendTo(tee_d);
                                                $("<button></button>").addClass("btn").addClass("btn-primary").text("Overwrite").appendTo(tee_d);
                                            }
                                        }
                                        else
                                        {
                                            if(["contractor_signature", "contractor_logo"].indexOf(key) > -1)
                                            {
                                                $("<span></span>").addClass("label").addClass("label-danger").text("Missing").appendTo(tee_d);
                                                $("<p></p>").text("Upload and Overwrite (JPG Only)").appendTo(tee_d);
                                                $("<input />").attr("type", "file").addClass("contractor_file").appendTo(tee_d);
                                                $("<button></button>").addClass("btn").addClass("btn-primary").text("Overwrite").appendTo(tee_d);
                                            }
                                        }
                                        tee_d.appendTo(item_tr);
                                        tee_d.on("dblclick", function()
                                        {
                                            if(["contractor_signature", "contractor_logo", "ppa_bonus_thresholds"].indexOf($(this).data("key")) > -1)
                                            {
                                                return;
                                            }
                                            tee_d.off("blur");
                                            tee_d.attr("contenteditable", "true");
                                            tee_d.on("blur", function()
                                            {
                                                tee_d.removeAttr("contenteditable");
                                                tee_d.closest("table").css("opacity", "0.2");
                                                dataset[market_identifier][key] = $.trim($(this).text());
                                                $.post("./data", {"fn": "update_pricing_structure", "market": market_identifier, "key": key, "value": dataset[market_identifier][key]}).done(function(yay)
                                                {
                                                    tee_d.closest("table").css("opacity", "1.0");                                                    
                                                });
                                            });
                                            tee_d[0].focus();
                                        });
                                        tee_d.find(".edit_ppa_bonus_a").on("click", function(ev)
                                        {
                                            editBonusThresholds(dataset, market_identifier);
                                        });
                                        if(tee_d.find(".btn-primary").size() > 0)
                                        {
                                            tee_d.find(".btn-primary").click(function()
                                            {                                            
                                                var btn = tee_d.find(".btn-primary");
                                                if(btn.prev()[0].files.length > 0)
                                                {
                                                    var file_name_components = $.trim(btn.prev().val()).split(".");
                                                    var extension = file_name_components[file_name_components.length - 1];
                                                    extension = extension.toLowerCase();
                                                    if(extension !== "jpg")
                                                    {
                                                        window.alert("Sorry the file has to be JPEG (and end with a .jpg extension)");
                                                        return;
                                                    }
                                                }
                                                else
                                                {
                                                    window.alert("You have to first choose a JPEG file");
                                                    return;
                                                }

                                                tee_d.closest("table").css("opacity", "0.2");
                                                
                                                var formData = new FormData();

                                                formData.append("fn", "upload_contractor_image_data");
                                                formData.append("market", market_identifier);
                                                formData.append("img", btn.prev()[0].files[0]);
                                                formData.append("sub_folder", key.split("_")[1][0].toUpperCase() + key.split("_")[1].substring(1) + "s");

                                                var xhr = new XMLHttpRequest();
                                                (xhr.upload || xhr).addEventListener("progress", function(e)
                                                {
                                                    // progress

                                                });
                                                xhr.addEventListener("load", function(e)
                                                {
                                                    dataset[market_identifier][key] = "available";
                                                    $.post("./data", {"fn": "update_pricing_structure", "market": market_identifier, "key": key, "value": "available"}).done(function(yay)
                                                    {
                                                        tee_d.find("img").remove();
                                                        tee_d.find("hr").remove();
                                                        tee_d.find(".label-danger").remove();
                                                        
                                                        $("<hr />").prependTo(tee_d);
                                                        $("<img />").addClass("img").addClass("img-responsive").addClass("contractor_thumb").attr("src", "//storage.googleapis.com/" + window.app_bucket + "/MarketSettings/Contractors/" + key.split("_")[1][0].toUpperCase() + key.split("_")[1].substring(1) + "s/" + market_identifier + ".jpg?dt=" + new Date().getTime() + '').prependTo(tee_d);
                                                        tee_d.closest("table").css("opacity", "1.0");
                                                    });   
                                                });
                                                xhr.open("POST", "./data");
                                                xhr.send(formData);                                                
                                            });
                                        }
                                    });
                                    item_tr.appendTo(tbody);
                                });
                                if(i !== key_groups.length - 1)
                                {
                                    var spacer_tr = $("<tr></tr>").addClass("pricing_spacer_tr").attr("height", "25");
                                    for(var n = 0; n <= Object.keys(dataset).length; n++)
                                    {
                                        $("<td></td>").text(" ").appendTo(spacer_tr);
                                    }
                                    spacer_tr.appendTo(tbody);
                                }
                            });
                            tbody.appendTo(main_tbl);
                            main_tbl.addClass("pricing_dataset_table").appendTo(main_div);

                            var secondary_table = $("<table></table>").addClass("funds_helper_info");
                            var tbody2 = $("<tbody></tbody>");
                            $("<tr></tr>")
                            .append
                            (
                                $("<th></th>").text("Fund Name")
                            )
                            .append
                            (
                                $("<th></th>").text("Discount")
                            )
                            .append
                            (
                                $("<th></th>").text("Promo Period")
                            )
                            .append
                            (
                                $("<th></th>").text("Promo Factor")
                            )
                            .append
                            (
                                $("<th></th>").text("After Promo Factor")
                            )
                            .append
                            (
                                $("<th></th>").text("Downpayment")
                            )
                            .append
                            (
                                $("<th></th>").text("Milestone 1")
                            )
                            .append
                            (
                                $("<th></th>").text("Milestone 2")
                            )
                            .appendTo(tbody2);

                            $.each(resp3, function(iiii, fund)
                            {
                                if(iiii === 0 || iiii === resp3.length - 1)
                                {
                                    return;
                                }
                                $("<tr></tr>")
                                .append
                                (
                                    $("<td></td>").text(fund_value_name_map[fund.value])
                                )
                                .append
                                (
                                    $("<td></td>").text(fund.discount_percentage)
                                )
                                .append
                                (
                                    $("<td></td>").text(fund.promo_period + '')
                                )
                                .append
                                (
                                    $("<td></td>").text(fund.promo_factor)
                                )
                                .append
                                (
                                    $("<td></td>").text(fund.after_promo_factor)
                                )
                                .append
                                (
                                    $("<td></td>").text(fund.downpayment_amount)
                                )
                                .append
                                (
                                    $("<td></td>").text(fund.milestone_1_percentage)
                                )
                                .append
                                (
                                    $("<td></td>").text(fund.milestone_2_percentage)
                                )
                                .appendTo(tbody2);                                
                            });
                            tbody2.appendTo(secondary_table);
                            secondary_table.appendTo(main_div);

                            $.each([spacer, main_div, spacer.clone()], function(i, div)
                            {
                                div.appendTo(app_area);
                            });                            
                        });
                	});
                });
            }
            function editPasswords()
            {
                var app_area = $("#app_area");
                var spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");
                var main_div = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10");
                var spacer_clone = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");

                $("<h2></h2>").text("Loading...").appendTo(app_area);
                $.post("/data", {"fn": "read_setting", "value": "passwords"}).done(function(r)
                {
                    app_area.find("h2").remove();
                    $("<h2></h2>").text("Passwords:").appendTo(app_area);
                    $("<hr />").appendTo(app_area);
                    $.each(r.data, function(i, pass)
                    {
                        $("<p></p>").addClass("protected_password").text(pass.name)
                        .append
                        (
                            $("<input />").attr("type", "text").attr("value", pass.password)
                        )
                        .appendTo(main_div);
                    });
                    $("<button></button>").addClass("btn").addClass("btn-primary").text("Update")
                    .click(function()
                    {
                        var that = $(this);
                        that.text("Updating...");
                        var passwords = [];
                        $(".protected_password").each(function(i, e)
                        {
                            passwords.push({"name": $(e).text(), "password": $(e).find("input").first().val()});
                        });
                        $.post("/data", {"fn": "write_setting", "value": "passwords", "data": JSON.stringify(passwords)}).done(function(rr)
                        {
                            that.text("Update");
                        });
                    })
                    .appendTo(main_div)
                    $.each([spacer, main_div, spacer_clone], function(i, e)
                    {
                        e.appendTo(app_area);
                    });
                });
            }
            function editDealClosingChecklists()
            {
                var app_area = $("#app_area");
                var spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");
                var main_div = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10");
                var spacer_clone = spacer.clone();

                $("<h2></h2>").text("Loading...").appendTo(app_area);
                $.post("/data", {"fn": "list_funding_sources"}).done(function(r)
                {
                    var funds = [];
                    $.each(r, function(i, fund)
                    {
                        if(i !== 0 && i !== r.length - 1)
                        {
                            funds.push(fund);
                        }
                        
                    });

                    $.post("/data", {"fn": "read_setting", "value": "deal_closing_checklists"}).done(function(rr)
                    {
                        app_area.find("h2").remove();
                        $("<h2></h2>").text("Deal Closing Checklists:").appendTo(app_area);
                        $("<hr />").appendTo(app_area);
                        var mapping = {};
                        var fund_key_name_map = {};
                        var textareas = [];
                        var textarea_key_idx_map = {};
                        $.each(funds, function(i, fund)
                        {
                            mapping[fund.value] = [];
                            fund_key_name_map[fund.value] = fund.value_friendly;
                            textareas.push($("<textarea></textarea>").css("display", "none").addClass("checklist_fund_ta").attr("data-key", fund.value));
                            textarea_key_idx_map[fund.value] = i;
                        });

                        $.each(Object.keys(rr.data), function(i, key)
                        {
                            mapping[key] = rr.data[key];
                        });

                        var fund_dd = $("<div></div>").addClass("dropdown");
                        var fund_btn = $("<button></button>").addClass("btn").addClass("btn-primary").addClass("dropdown-toggle").attr("data-toggle", "dropdown").text("Choose One").append($("<span></span>").addClass("caret"));
                        var fund_ul = $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu");
                        
                        $.each(Object.keys(mapping), function(i, key)
                        {
                            var ta = textareas[textarea_key_idx_map[key]];
                            ta.val(mapping[key].join("\n"));
                            var li = $("<li></li>").attr("role", "presentation").attr("data-key", key);
                            var a = $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);");
                            a.text(fund_key_name_map[key]);
                            a.appendTo(li);
                            li.click(function()
                            {
                                $.each(textareas, function(ii, t)
                                {
                                    t.css("display", "none");
                                });
                                ta.css("display", "block");
                                fund_btn.text(fund_key_name_map[key]);
                                $("<span></span>").addClass("caret").appendTo(fund_btn);
                            });
                            li.appendTo(fund_ul);
                        });
                        fund_btn.appendTo(fund_dd);
                        fund_ul.appendTo(fund_dd);
                        fund_dd.appendTo(main_div);                        
                        fund_dd.appendTo(main_div);
                        $("<p></p>").text("Enter checklist items, one-per-line...").appendTo(main_div);
                        $.each(textareas, function(i, t)
                        {
                            t.appendTo(main_div);
                        });
                        $("<br />").appendTo(main_div);
                        $("<button></button>").addClass("btn").addClass("btn-primary").text("Save")
                        .click(function()
                        {
                            var that = $(this);
                            that.text("Saving...");
                            $.each(textareas, function(i, t)
                            {
                                if(t.css("display").toLowerCase() === "block")
                                {
                                    var val = t.val();
                                    while(val.indexOf("\r") > -1)
                                    {
                                        val = val.replace("\r", "");
                                    }
                                    while(val.indexOf("\n\n") > -1)
                                    {
                                        val = val.replace("\n\n", "\n");
                                    }
                                    var vals = val.split("\n");
                                    var values = [];
                                    $.each(vals, function(ii, v)
                                    {
                                        if($.trim(v).length > 0)
                                        {
                                            values.push(v);
                                        }
                                    });
                                    mapping[t.data("key")] = values;
                                    $.post("/data", {"fn": "write_setting", "value": "deal_closing_checklists", "data": JSON.stringify(mapping)}).done(function(rrr)
                                    {
                                        that.text("Save");
                                    });
                                }
                            });
                        }).appendTo(main_div);

                        $.each([spacer, main_div, spacer_clone], function(i, e)
                        {
                            e.appendTo(app_area);
                        });
                    });


                });
            }
            function editSetting(val, setting_data, funding_list, rep_exposed_formulas)
            {
                if(val === "lead_checklist" && typeof(setting_data) + '' !== "undefined")
                {
                    clearApp(function()
                    {
                        editLeadChecklist(setting_data);
                    });
                    return;
                }
                if(val === "email_templates")
                {
                    clearApp(function()
                    {
                        loadEmailTemplateEditor();
                    });
                    return;
                }
                if(val === "pricing_structures")
                {
                    clearApp(function()
                    {
                        loadPricingStructures();
                    });
                    return;
                }
                if(val === "project_management_checkoffs")
                {
                    if(["348ac34965b374d82630f8927192c1fa2fcf4439a3a9f2b7e7cd8c65d3b639c4fff40310f2900f293356817afa6f841ede6b71d5f7da02e0ddebcdabc198db1e", "38655a8a3e258861c88e0bb74ba206af08970f499c355ee9739c95c2b39ff5f7f9ecb7adfef8756f33868e7385a2a951190ad97b332a247e2817fc70253f235c", "38655a8a3e258861c88e0bb74ba206af08970f499c355ee9739c95c2b39ff5f7f9ecb7adfef8756f33868e7385a2a951190ad97b332a247e2817fc70253f235c"].indexOf(window.user_identifier) > -1)
                    {
                        clearApp(function()
                        {
                            editProjectManagementCheckoffs();
                        });
                        return;
                    }
                    else
                    {
                        window.alert("Only Ray has access to this tool.");
                        return;
                    }
                }
                if(val === "data_export_ips")
                {
                    clearApp(function()
                    {
                        editDataExportWhitelist();
                    });
                    return;
                }
                if(val === "passwords")
                {
                    clearApp(function()
                    {
                        editPasswords();
                    });
                    return;
                }
                if(val === "utility_providers")
                {
                    clearApp(function()
                    {
                        manageUtilityProviders();
                    });
                    return;
                }
                if(val === "deal_closing_checklists")
                {
                    clearApp(function()
                    {
                        editDealClosingChecklists();
                    });
                    return;
                }
                if(val === "tax_brackets")
                {
                    clearApp(function()
                    {
                        editTaxBrackets();
                    });
                    return;
                }
                if(val === "customer_communications")
                {
                    clearApp(function()
                    {
                        editCustomerEmails();
                    });
                    return;
                }
                if(val === "paycheck_ready_message")
                {
                    clearApp(function()
                    {
                        editPaycheckTextMessage();
                    });
                    return;
                }
                if(typeof(setting_data) + '' === "undefined")
                {
                    $.post("./data", {"fn": "read_setting", "value": val}).done(function(resp)
                    {
                        editSetting(val, resp.data);
                    });
                    return;
                }
                if(val === "proposal_formulas" && typeof(funding_list) + '' === "undefined")
                {
                    $.post("./data", {"fn": "list_funding_sources"}).done(function(resp)
                    {
                        editSetting(val, setting_data, resp);
                    });
                    return;
                }
                if(val === "proposal_formulas" && typeof(rep_exposed_formulas) + '' === "undefined")
                {
                    $.post("./data", {"fn": "get_rep_exposed_formulas"}).done(function(resp)
                    {
                        editSetting(val, setting_data, funding_list, resp);
                    });
                    return;
                }
                if(val === "soiling_levels")
                {
                    clearApp(function()
                    {
                        manageSoilingLevels();
                    });
                    return;
                }
                if(val === "company_holidays")
                {
                    clearApp(function()
                    {
                        manageHolidays();
                    });
                    return;
                }
                $("#email_list, .notification_save_btn, .utility_provider_div, .proposal_formulas_div, #edit_settings_div").css("visibility", "hidden");
                $(".system_option_save").remove();
                $(".sys_option_wrapper").remove();
                $(".removableh4").remove();
                $(".removablehr").remove();
                $(".removablebr").remove();

                if($(".notificationrow").find("h4").size() === 0)
                {
                    $("<h4></h4>").insertBefore($(".notificationrow").find("textarea").eq(0));
                }

                var settings =
                [
                    {
                        "value": "kwh_prices",
                        "value_friendly": "Kwh Prices"
                    }
                ];

                var setting_info =
                {
                    "kwh_prices":
                    {
                        "message": "Enter a price per Kwh (in cents) in the lines below (Ex: 19.9, 17.8)",
                        "type": "textarea",
                        "restore": function(data)
                        {
                            $(".hide_me_hack").removeClass("hide_me_hack");
                            $(".utility_provider_div").css("visibility", "hidden");
                            $(".proposal_formulas_div").css("visibility", "hidden");
                            $.each(data, function(i, data_item)
                            {
                                var txt = data_item + '';
                                $("#settings_edit_ta").val($("#settings_edit_ta").val() + txt);
                                if(i !== data.length - 1)
                                {
                                    $("#settings_edit_ta").val($("#settings_edit_ta").val() + "\n");
                                }
                            });
                        },
                        "save": function()
                        {
                            var lines = $("#settings_edit_ta").val();
                            while(lines.indexOf("\r") !== -1)
                            {
                                lines = lines.replace("\r", "");
                            }
                            lines = lines.split("\n");
                            $.post("./data", {"fn": "write_setting", "value": "kwh_prices", "data": JSON.stringify(lines)}).done(function(resp)
                            {
                                $(".settings_save_btn").text("Saved.");
                                setTimeout(function()
                                {
                                    $(".settings_save_btn").text("Save");
                                }, 1000);
                            });
                        }
                    },
                    "utility_providers":
                    {
                        "message": "Utility Providers...",
                        "type": "utility_providers_div",
                        "restore": function(data)
                        {
                            $(".hide_me_hack").removeClass("hide_me_hack");
                            window.utility_providers_json = JSON.stringify(data);
                            $(".proposal_formulas_div").css("visibility", "hidden");
                            $(".utility_provider_div").css("display", "block").css("visibility", "visible");

                            $(".provider_ul").each(function(i, e)
                            {
                                $(e).parent().remove();
                            });
                            var provider_wrapper_div = $("<div></div>").addClass("col-xs-9").addClass("col-sm-9").addClass("col-md-9").addClass("col-lg-9");
                            var provider_ul = $("<ul></ul>").addClass("provider_ul");
                            $.each(data, function(i, provider)
                            {
                                var provider_li = $("<li></li>");
                                provider_li.attr("id", "utility_provider_" + provider.value);
                                provider_li.text(provider.value_friendly);

                                provider_li.appendTo(provider_ul);
                            });

                            provider_ul.appendTo(provider_wrapper_div);
                            provider_wrapper_div.insertAfter($(".notificationrow h4").eq(0));
                        },
                        "save": function()
                        {
                            // add the provider if there's a value
                            if($.trim($(".utility_provider_div").find("> input").first().val()).length > 0)
                            {
                                var words = $.trim($(".utility_provider_div").find("> input").first().val());
                                words = words.split(" ");
                                var new_words = [];
                                $.each(words, function(i, word)
                                {
                                    new_words.push(word.toLowerCase());
                                });

                                var key = new_words.join("_");

                                var curr_items = JSON.parse(window.utility_providers_json);
                                var exit_early = false;
                                $.each(curr_items, function(i, curr_item)
                                {
                                    if(curr_item.value === key)
                                    {
                                        exit_early = true;
                                        BootstrapDialog.alert
                                        (
                                            {
                                                "title": "Save operation forbidden.",
                                                "message": "The utility provider already exists. The save request cannot be fulfilled."
                                            }
                                        );
                                    }
                                });

                                if(exit_early)
                                {
                                    return;
                                }

                                //////////////

                                curr_items.push
                                (
                                    {
                                        "value": key,
                                        "value_friendly": $.trim($(".utility_provider_div").find("> input").first().val())
                                    }
                                );

                                $.post("./data", {"fn": "write_setting", "value": "utility_providers", "data": JSON.stringify(curr_items)}).done(function(resp)
                                {
                                    $(".settings_save_btn").text("Saved.");
                                    $(".utility_provider_div").find("> input").first().val("");
                                    setTimeout(function()
                                    {
                                        $(".settings_save_btn").text("Save");
                                        $("#setting_value_of_utility_providers").trigger("click");
                                    }, 1000);
                                });
                            }
                        }
                    },
                    "proposal_formulas":
                    {
                        "message": "Formulas for proposals...",
                        "type": "proposal_formulas_div",
                        "restore": function(data, locked_functions)
                        {
                            if(typeof(locked_functions) + '' === "undefined")
                            {
                                var orig_fn = arguments.callee;
                                $.post("./data", {"fn": "read_setting", "value": "proposal_locks"}).done(function(resp)
                                {
                                    orig_fn(data, resp.data);
                                });
                                return;
                            }
                            $(".formulas_ul").empty();
                            $(".settings_save_btn").addClass("hide_me_hack");
                            window.proposal_formula_data = data;
                            window.proposal_locks = locked_functions;
                            $(".proposal_formulas_div").css("display", "block").css("visibility", "visible");

                            $.each(Object.keys(data), function(i, formula)
                            {
                                var li = $("<li></li>");
                                li.text(formula.split("_").join(" ").replace("fx_", ""));
                                li.append
                                (
                                    $("<span></span>").addClass("glyphicon").addClass("glyphicon-pencil").attr("title", "Edit Formula").click(function()
                                    {
                                        showFormulaEditor(formula, funding_list);
                                    })
                                );
                                if(proposal_locks.indexOf(formula) === -1)
                                {
                                    li.append
                                    (
                                        $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove").attr("title", "Remove Formula").click(function()
                                        {
                                            tryFormulaDeletion(formula);
                                        })
                                    )
                                    .append
                                    (
                                        $("<span></span>").addClass("glyphicon").addClass("glyphicon-text-width").attr("title", "Rename Formula").click(function()
                                        {
                                            renameFormula(formula);
                                        })
                                    )
                                    .append
                                    (
                                        $("<span></span>").attr("title", "Lock Formula").addClass("formula_lock_ico").addClass("symbola").addClass("glyphicon").html("&#128274;").click(function()
                                        {
                                            lockFormula(formula);
                                        })
                                    );
                                }
                                else
                                {
                                    li.append
                                    (
                                        $("<span></span>").addClass("symbola").attr("title", "Unlock Formula").addClass("glyphicon").addClass("formula_lock_ico").html("&#128275;").click(function()
                                        {
                                            unlockFormula(formula);
                                        })
                                    );
                                }

                                var exposure_span = $("<span></span>").addClass("glyphicon");
                                var extra_classname = rep_exposed_formulas[i] ? "glyphicon-eye-close" : "glyphicon-eye-open";
                                var title = rep_exposed_formulas[i] ? "Formula is currently exposed to reps, click to hide" : "Formula is currently hidden from reps, click to expose it";
                                exposure_span.addClass(extra_classname).attr("title", title);

                                exposure_span.click(function()
                                {
                                    var action = "expose this formula for rep's view?";
                                    var target_value = "exposed";
                                    if(exposure_span.hasClass("glyphicon-eye-close"))
                                    {
                                        target_value = "unexposed";
                                        action = "remove this formula for rep's view?";
                                    }

                                    if(window.confirm("Are you sure you would like to " + action))
                                    {
                                        $.post("./data", {"fn": "change_formula_exposure", "target_value": target_value, "formula": formula}).done(function(resp2)
                                        {
                                            if(exposure_span.hasClass("glyphicon-eye-close"))
                                            {
                                                exposure_span.removeClass("glyphicon-eye-close").addClass("glyphicon-eye-open");
                                                exposure_span.attr("title", "Formula is currently hidden from reps, click to expose it");
                                            }
                                            else
                                            {
                                                exposure_span.removeClass("glyphicon-eye-open").addClass("glyphicon-eye-close");
                                                exposure_span.attr("title", "Formula is currently exposed to reps, click to hide");
                                            }
                                        });
                                    }
                                }).appendTo(li);

                                $("<span></span>").addClass("glyphicon").addClass("glyphicon-check").attr("title", "Apply Formula").click(function()
                                {
                                    showFormulaTestDialog(formula, funding_list);
                                }).appendTo(li);

                                li.appendTo($(".formulas_ul"));
                            });
                        },
                        "save": function(data)
                        {
                            $.post("./data", {"fn": "write_setting", "value": "proposal_formulas", "data": JSON.stringify(window.proposal_formula_data)}).done(function(resp)
                            {
                                $("#setting_value_of_proposal_formulas").trigger("click");
                            });
                        }
                    },
                    "system_options":
                    {
                        "restore": function(data)
                        {
                            var mail_list = $("#email_list");
                            var keyyys = Object.keys(data);
                            keyyys.reverse();
                            $.each(keyyys, function(i, key)
                            {
                                if(key === "panel_points")
                                {
                                    return;
                                }
                                var h4 = $("<h4></h4>").addClass("removableh4").text(key.split("_").join(" ")[0].toUpperCase() + key.split("_").join(" ").substring(1))
                                if(key === "panels")
                                {
                                    $("<span></span>").addClass("points_indicator").text("Points").appendTo(h4);
                                }
                                h4.insertBefore(mail_list);
                                var sys_option_div = $("<div></div>").addClass("sys_option_wrapper").attr("id", "wrapper_for_" + key);
                                $.each(data[key], function(k, item)
                                {
                                    var line_item_div = $("<div></div>").addClass("sys_option_lineitem");

                                    $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove").click(function()
                                    {
                                        $(this).parent().remove();
                                    }).appendTo(line_item_div);

                                    /*$("<span></span>").addClass("glyphicon").addClass("glyphicon-edit").click(function()
                                    {
                                        $(this).next().attr("contenteditable", "true");
                                        $(this).next().off("blur").on("blur", function()
                                        {
                                            $(this).removeAttr("contenteditable");
                                        });
                                        $(this).next()[0].focus();
                                    }).appendTo(line_item_div);*/

                                    $("<span></span>").text(item).addClass("line_item_name").appendTo(line_item_div);
                                    if(key === "panels")
                                    {
                                        line_item_div.find(".line_item_name").text(line_item_div.find(".line_item_name").text().split("[[[")[0]);
                                        $("<span></span>")
                                        .addClass("line_item_watts")
                                        .attr("title", "Wattage")
                                        .append
                                        (
                                            $("<span></span>")
                                            .addClass("actual_watts")
                                            .text(item.substring(item.indexOf("[[[") + 3).replace("]]]", ""))
                                            .css("cursor", "cell")
                                            .click(function()
                                            {
                                                $(this).off("blur");
                                                $(this).attr("contenteditable", "true");
                                                $(this).on("blur", function()
                                                {
                                                    $(this).removeAttr("contenteditable")
                                                });
                                                $(this)[0].focus();
                                            })
                                        )
                                        .prepend
                                        (
                                            $("<span></span>").addClass("symbola").html("&#9889")
                                        ).appendTo(line_item_div);
                                        $("<span></span>").addClass("line_item_points")
                                        .attr("title", "Points")
                                        .text(data.panel_points[item.substring(0, item.indexOf("[[["))] + '')
                                        .click(function()
                                        {
                                            $(this).off("blur");
                                            $(this).attr("contenteditable", "true");
                                            $(this).on("blur", function()
                                            {
                                                $(this).removeAttr("contenteditable")
                                            });
                                            $(this)[0].focus();
                                        })
                                        .appendTo(line_item_div);

                                    }

                                    line_item_div.appendTo(sys_option_div);
                                });

                                $("<button></button>").addClass("btn").addClass("btn-success").text("Add new " + $.trim(mail_list.prevAll("h4").first().text().replace("Points", "")) + " option")
                                .click(function()
                                {
                                    var html = $("<div><br /><br /><input type='text' id='new_item' placeholder='Enter the name...' /><br /><br /></div>");
                                    BootstrapDialog.show
                                    (
                                        {
                                            "title": "Provide the name",
                                            "message": html.html(),
                                            "buttons":
                                            [
                                                {
                                                    "label": "Cancel",
                                                    "cssClass": "btn-danger",
                                                    "action": function(dialog)
                                                    {
                                                        dialog.close();
                                                    }
                                                },
                                                {
                                                    "label": "Add",
                                                    "cssClass": "btn-primary",
                                                    "action": function(dialog)
                                                    {
                                                        var n = $.trim($("#new_item").val());
                                                        if(n.length === 0)
                                                        {
                                                            window.alert("You must provide a valid name");
                                                            return;
                                                        }

                                                        var new_line_item_div = $("<div></div>").addClass("sys_option_lineitem");

                                                        $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove").click(function()
                                                        {
                                                            $(this).parent().remove();
                                                        }).appendTo(new_line_item_div);

                                                        /*$("<span></span>").addClass("glyphicon").addClass("glyphicon-edit").click(function()
                                                        {
                                                            $(this).next().attr("contenteditable", "true");
                                                            $(this).next().off("blur").on("blur", function()
                                                            {
                                                                $(this).removeAttr("contenteditable");
                                                            });
                                                            $(this).next()[0].focus();
                                                        }).appendTo(new_line_item_div);*/

                                                        $("<span></span>").text(n).addClass("line_item_name").appendTo(new_line_item_div);

                                                        if(sys_option_div.attr("id") === "wrapper_for_panels")
                                                        {
                                                            $("<span></span>")
                                                            .addClass("line_item_watts")
                                                            .attr("title", "Wattage")
                                                            .append
                                                            (
                                                                $("<span></span>")
                                                                .addClass("actual_watts")
                                                                .text("999")
                                                                .css("cursor", "cell")
                                                                .click(function()
                                                                {
                                                                    $(this).off("blur");
                                                                    $(this).attr("contenteditable", "true");
                                                                    $(this).on("blur", function()
                                                                    {
                                                                        $(this).removeAttr("contenteditable")
                                                                    });
                                                                    $(this)[0].focus();
                                                                })
                                                            )
                                                            .prepend
                                                            (
                                                                $("<span></span>").addClass("symbola").html("&#9889")
                                                            ).appendTo(new_line_item_div);

                                                            $("<span></span>").addClass("line_item_points")
                                                            .attr("title", "Points")
                                                            .text("0")
                                                            .click(function()
                                                            {
                                                                $(this).off("blur");
                                                                $(this).attr("contenteditable", "true");
                                                                $(this).on("blur", function()
                                                                {
                                                                    $(this).removeAttr("contenteditable")
                                                                });
                                                                $(this)[0].focus();
                                                            })
                                                            .appendTo(new_line_item_div);
                                                        }

                                                        new_line_item_div.insertBefore(sys_option_div.find(".btn-success"));
                                                        dialog.close();
                                                    }
                                                }
                                            ]
                                        }
                                    );
                                })
                                .appendTo(sys_option_div);
                                sys_option_div.insertBefore(mail_list);

                                if(i !== data.length - 1)
                                {
                                    $("<br />").addClass("removablebr").insertBefore(mail_list);
                                    $("<hr />").addClass("removablehr").insertBefore(mail_list);
                                    $("<br />").addClass("removablebr").insertBefore(mail_list);
                                }
                            });
                            $("<button></button>").addClass("btn").addClass("btn-primary").addClass("system_option_save").text("Save").click(function()
                            {
                                var new_settings = {};
                                $(".sys_option_wrapper").each(function(i, e)
                                {
                                    var arr = [];
                                    $(e).find(".sys_option_lineitem").each(function(k, ee)
                                    {
                                        var content = $.trim($(ee).find(".line_item_name").text());
                                        if($(ee).find(".actual_watts").size() > 0)
                                        {
                                            content += ("[[[" + $(ee).find(".actual_watts").text() + "]]]");
                                        }
                                        arr.push
                                        (
                                            content
                                        );
                                    });
                                    new_settings[$(e).attr("id").replace("wrapper_for_", "")] = arr;
                                });
                                new_settings["panel_points"] = data.panel_points;                            
                                $("#wrapper_for_panels").find(".sys_option_lineitem").each(function(iiiii, eeeee)
                                {
                                    var el = $(eeeee);
                                    var pts = 0;
                                    try
                                    {
                                        pts = parseFloat(el.find(".line_item_points").first().text());
                                        if(Number.isNaN(pts))
                                        {
                                            pts = 0;
                                        }
                                    }
                                    catch(e6565645)
                                    {

                                    }
                                    new_settings.panel_points[el.find(".line_item_name").first().text()] = pts;
                                });
                                $.post("./data", {"fn": "write_setting", "value": "system_options", "data": JSON.stringify(new_settings)}).done(function(resp2)
                                {
                                    $("#app_area").css("opacity", "0.2");
                                    localStorage.setItem("button_to_click", "manage_notifications_and_settings");
                                    window.location.reload();
                                });

                            }).insertBefore($(".sys_option_wrapper").first().prev());
                            $("#settings_save_btn").css("visibility", "hidden");
                        },
                        "save": function(data)
                        {
                        }
                    },
                    "permitting_jurisdictions":
                    {
                        "restore": function(data)
                        {
                            clearApp(function()
                            {
                                editPermittingJurisdictions(data);
                            });
                        }
                    },
                    "services_schedule":
                    {
                        "restore": function(data)
                        {
                            clearApp(function()
                            {
                                editServices(data);
                            });
                        }
                    },
                    "project_managers":
                    {
                        "restore": function(data)
                        {
                            clearApp(function()
                            {
                                editProjectManagers(data);
                            });
                        }
                    },
                    "electricians":
                    {
                        "restore": function(data)
                        {
                            clearApp(function()
                            {
                                editElectricians(data);
                            });
                        }
                    }
                };

                $(".notificationrow").find("textarea").eq(0).prevAll("h4").eq(0).text(setting_info[val]["message"]);
                $(".settings_save_btn").css("display", "block");
                switch(setting_info[val].type)
                {
                    case "textarea":
                        $("#settings_edit_ta").css("display", "block").val("");
                        $("#edit_settings_div").css("visibility", "visible");
                        break;

                    default:
                        break;
                }
                $(".settings_save_btn").off("click");
                $(".settings_save_btn").on("click", function()
                {
                    setting_info[val].save();
                });
                setting_info[val].restore(setting_data);

            }
            function manageUtilityProviders()
            {
                var app_area = $("#app_area");
                var spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");
                var main_div = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10");
                var spacer_clone = spacer.clone();

                var save = function()
                {
                    var ret_early = false;
                    var data = [];                    
                    $(".util_provider_tbl").find("tr").each(function(i, e)
                    {
                        if(i > 0)
                        {
                            var obj = {};
                            obj["value"] = $(e).data("key");
                            obj["value_friendly"] = $(e).find("td").first().text();
                            
                            var dollar_amount = null;
                            var dollar_text = $.trim($(e).find("td").eq(1).find("input").first().val());
                            while(dollar_text.indexOf("$") > -1)
                            {
                                dollar_text = dollar_text.replace("$", "");
                            }
                            while(dollar_text.indexOf(",") > -1)
                            {
                                dollar_text = dollar_text.replace(",", "");
                            }
                            var parsed = parseFloat(dollar_text);
                            if(Number.isNaN(parsed))
                            {
                                ret_early = true;
                            }
                            var minimum_amount = null;
                            var minimum_text = $.trim($(e).find("td").eq(2).find("input").first().val());
                            while(minimum_text.indexOf("$") > -1)
                            {
                                minimum_text = minimum_text.replace("$", "");
                            }
                            while(minimum_text.indexOf(",") > -1)
                            {
                                minimum_text = minimum_text.replace(",", "");
                            }
                            var parsed2 = parseInt(minimum_text);
                            if(Number.isNaN(parsed2))
                            {
                                ret_early = true;
                            }

                            if(!ret_early)
                            {
                                obj["care_threshold"] = parsed.toFixed(2);
                                obj["active"] = $(e).find("td").last().find("input").first()[0].checked;
                                obj["minimum_annual_kwhs"] = parsed2 + '';
                                data.push(obj);
                            }
                        }
                    });
                    if(ret_early)
                    {
                        window.alert("There was an input error.");
                        return;
                    }
                    $(".util_provider_tbl").prevAll(".btn-primary").first().remove();
                    $.post("/data", {"fn": "write_setting", "value": "utility_providers", "data": JSON.stringify(data)}).done(function(r)
                    {
                        clearApp(function()
                        {
                            manageUtilityProviders();
                        });
                    });
                };

                $.post("/data", {"fn": "read_setting", "value": "utility_providers"}).done(function(providers)
                {
                    providers = providers.data;
                    $.each(providers, function(i, provider)
                    {
                        provider.active *= 1;
                    });
                    providers = bubbleSortArrayOfObjectsByKey(providers, "active");
                    providers.reverse();

                    var table = $("<table></table>").addClass("util_provider_tbl");
                    var tbody = $("<tbody></tbody>");
                    $("<tr></tr>")
                    .append
                    (
                        $("<th></th>").text("Name")
                    )
                    .append
                    (
                        $("<th></th>").text("Assumed CARE per kw price")
                    )
                    .append
                    (
                        $("<th></th>").text("Minimum Annual KHWs for AB")
                    )
                    .append
                    (
                        $("<th></th>").text("Active")
                    )
                    .appendTo(tbody);


                    $.each(providers, function(i, provider)
                    {
                        var tr = $("<tr></tr>");
                        tr.attr("data-key", provider.value);
                        $("<td></td>").text(provider.value_friendly).appendTo(tr);
                        $("<td></td>")
                        .append
                        (
                            $("<input />").attr("type", "text").addClass("care_input").attr("value", provider.care_threshold)
                        )
                        .appendTo(tr);
                        $("<td></td>")
                        .append
                        (
                            $("<input />").attr("type", "text").addClass("kwhs_input").attr("value", provider.minimum_annual_kwhs + '')
                        )
                        .appendTo(tr);
                        var cb = $("<input />").attr("type", "checkbox");
                        if(provider.active)
                        {
                            cb.attr("checked", "checked");
                        }
                        $("<td></td>")
                        .append
                        (
                            cb
                        )
                        .appendTo(tr);

                        tr.appendTo(tbody);
                    });
                    tbody.appendTo(table);
                    table.appendTo(main_div);

                    $("<br />").prependTo(main_div);
                    $("<br />").prependTo(main_div);
                    $("<button></button>").addClass("btn").addClass("btn-primary").text("Save")
                    .click(function()
                    {
                        save();
                    }).prependTo(main_div);

                    $("<br />").appendTo(main_div);
                    $("<br />").appendTo(main_div);

                    $("<button></button>").addClass("btn").addClass("btn-warning").text("Add New Provider")
                    .click(function()
                    {
                        var html = $("<div></div>");
                        $("<p></p>").text("Please enter the name of the utility provider:").appendTo(html);
                        $("<input />").attr("type", "text").addClass("add_util_provider_text_input").appendTo(html);

                        BootstrapDialog.show
                        (
                            {
                                "title": "Adding a new provider",
                                "message": html.html(),
                                "buttons":
                                [
                                    {
                                        "label": "Cancel",
                                        "cssClass": "btn-danger",
                                        "action": function(d)
                                        {
                                            d.close();
                                        }
                                    },
                                    {
                                        "label": "Add it!",
                                        "cssClass": "btn-primary",
                                        "action": function(d)
                                        {
                                            var new_provider = $.trim($(".add_util_provider_text_input").val());
                                            var new_provider_key = new_provider.toLowerCase().split(" ").join("_");
                                            var existing_keys = [];
                                            $(".util_provider_tbl").find("tr").each(function(i, e)
                                            {
                                                if(i > 0)
                                                {
                                                    existing_keys.push($(e).data("key"));
                                                }
                                            });
                                            if(existing_keys.indexOf(new_provider_key) > -1)
                                            {
                                                window.alert("This utility provider already exists.");
                                                return;
                                            }
                                            var new_tr = $("<tr></tr>");
                                            new_tr.attr("data-key", new_provider_key);
                                            $("<td></td>").text(new_provider).appendTo(new_tr);
                                            $("<td></td>")
                                            .append
                                            (
                                                $("<input />").attr("type", "text").attr("value", "0.01")
                                            )                                            
                                            .appendTo(new_tr);
                                            $("<td></td>")
                                            .append
                                            (
                                                $("<input />").attr("type", "text").attr("value", 0)
                                            )
                                            .appendTo(new_tr);
                                            $("<td></td>")
                                            .append
                                            (
                                                $("<input />").attr("type", "checkbox").attr("checked", "checked")
                                            )
                                            .appendTo(new_tr);
                                            new_tr.appendTo($(".util_provider_tbl").find("tbody").first());
                                            d.close();
                                            save();
                                        }
                                    }
                                ]
                            }
                        );
                    })
                    .appendTo(main_div);

                    $.each([spacer, main_div, spacer_clone], function(i, e)
                    {
                        e.appendTo(app_area);
                    });
                                        
                });
            }
            function editCustomerEmails()
            {
                var app_area = $("#app_area");
                var spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");
                var main_div = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10");
                var spacer_clone = spacer.clone();
                
                $("<h2></h2>").text("Loading...").appendTo(app_area);
                $.post("/data", {"fn": "list_customer_email_templates"}).done(function(r)
                {
                    var dropdown_div = $("<div></div>").addClass("dropdown");
                    dropdown_div.append
                    (
                        $("<button></button>").text(r[0]).addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("type", "button").attr("data-toggle", "dropdown")
                        .append
                        (
                            $("<span></span>").addClass("caret")
                        )

                    )
                    .append
                    (
                        $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu")
                    );
                    $.each(r, function(i, template)
                    {
                        $("<li></li>").attr("role", "presentation").css("cursor", "pointer")
                        .append
                        (
                            $("<a></a>").attr("role", "menuitem").text(template)
                        )
                        .click(function()
                        {
                            $("#customer_email_template_subject").css("opacity", "0.2");
                            $("#customer_email_template_ta").css("opacity", "0.2");
                            var that = $(this);
                            var btn = that.parent().prevAll("button").first();
                            btn.text(that.text());
                            $("<span></span>").addClass("caret").appendTo(btn);
                            $.post("/data", {"fn": "read_customer_email_template", "name": $(this).text()}).done(function(rr)
                            {                                                                
                                $("#customer_email_template_subject").val(rr.subject);
                                $("#customer_email_template_ta").val(rr.message);

                                if($("#customer_email_template_save").length === 0)
                                {
                                    $("<button></button>").addClass("btn").addClass("btn-primary").text("Save").attr("id", "customer_email_template_save")
                                    .click(function()
                                    {
                                        $("#customer_email_template_subject").css("opacity", "0.2");
                                        $("#customer_email_template_ta").css("opacity", "0.2");
                                        $.post("/data", {"fn": "write_customer_email_template", "name": dropdown_div.find("button").first().text(), "subject": $.trim($("#customer_email_template_subject").val()), "message": $.trim($("#customer_email_template_ta").val())}).done(function(rrr)
                                        {
                                            $("#customer_email_template_subject").css("opacity", "1.0");
                                        $("#customer_email_template_ta").css("opacity", "1.0");                                            
                                        });
                                    })
                                    .insertAfter(dropdown_div);
                                }
                                $("#customer_email_template_subject").css("opacity", "1.0");
                                $("#customer_email_template_ta").css("opacity", "1.0");
                            });
                        })
                        .appendTo(dropdown_div.find("ul").first());
                    });

                    dropdown_div.appendTo(main_div);

                    $("<input />").attr("type", "text").attr("id", "customer_email_template_subject").appendTo(main_div);
                    $("<textarea></textarea>").attr("id", "customer_email_template_ta").appendTo(main_div);
                    $.each([spacer, main_div, spacer_clone], function(i, e)
                    {
                        e.appendTo(app_area);
                    });

                    dropdown_div.find("li").first().trigger("click");
                });
            }
            function editTaxBrackets()
            {
                $.post("/data", {"fn": "read_setting", "value": "tax_brackets"}).done(function(r)
                {
                    var matrices = r.data;

                    var spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");
                    var main_div = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10");
                    var spacer_clone = spacer.clone();

                    $("<button></button>").addClass("btn-primary").addClass("btn").text("Add New Matrix")
                    .click(function()
                    {
                        var html = $("<div></div>");
                        $("<p></p>").text("Please enter the tax status name for this bracket (ex: single, married, etc.)").appendTo(html);
                        $("<input />").attr("type", "text").appendTo(html);
                        BootstrapDialog.show
                        (
                            {
                                "message": html.html(),
                                "title": "Name of Tax Status",
                                "buttons":
                                [
                                    {
                                        "label": "Cancel",
                                        "cssClass": "btn-danger",
                                        "action": function(d)
                                        {
                                            d.close();
                                        }
                                    },
                                    {
                                        "label": "Save",
                                        "cssClass": "btn-primary",
                                        "action": function(d)
                                        {
                                            var val = $.trim($(".bootstrap-dialog-body").find("input").first().val());
                                            if(val.length > 0)
                                            {                                                
                                                $.post("/data", {"fn": "add_tax_bracket_matrix", "name": val}).done(function(rr)
                                                {
                                                    d.close();
                                                    clearApp(function()
                                                    {
                                                        editTaxBrackets();
                                                    });
                                                });
                                            }
                                            else
                                            {
                                                window.alert("Please provide a name");
                                            }
                                        }
                                    }
                                ]
                            }
                        );
                    }).appendTo(main_div);
                    $("<hr />").appendTo(main_div);

                    $.each(matrices, function(i, matrix)
                    {
                        $("<h3></h3>").text(matrix.name).appendTo(main_div);
                        $("<hr />").appendTo(main_div);
                        $("<h4></h4>").text("Federal").appendTo(main_div);
                        var table = $("<table></table>").attr("data-name", matrix.name).addClass("tax_bracket_matrix");
                        var tbody = $("<tbody></tbody>");

                        $("<tr></tr>")
                        .append
                        (
                            $("<td></td>").append
                            (
                                $("<b></b>").text("Floor")
                            )
                        )
                        .append
                        (
                            $("<td></td>").append
                            (
                                $("<b></b>").text("Ceiling")
                            )
                        )
                        .append
                        (
                            $("<td></td>").append
                            (
                                $("<b></b>").text("Percentage")
                            )
                        )
                        .append
                        (
                            $("<td></td>").append
                            (
                                $("<b></b>").text("Remove")
                            )
                        )
                        .appendTo(tbody);

                        $.each(matrix.federal.brackets, function(ii, bracket)
                        {
                            $("<tr></tr>")
                            .append
                            (
                                $("<td></td>").addClass("floor").text(bracket.floor)
                            )
                            .append
                            (
                                $("<td></td>").addClass("ceiling").text(bracket.ceiling)
                            )
                            .append
                            (
                                $("<td></td>").addClass("percentage").text(bracket.percentage)
                            )
                            .append
                            (
                                $("<td></td>")
                                .append
                                (
                                    $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove")
                                )
                            )
                            .appendTo(tbody)
                        });
                        $("<tr></tr>")
                        .append
                        (
                            $("<td></td>").attr("colspan", "4")
                            .append
                            (
                                $("<button></button>").addClass("btn").addClass("btn-primary").text("Add Row")
                                .click(function()
                                {
                                    $("<tr></tr>")
                                    .append
                                    (
                                        $("<td></td>").addClass("floor").text("$0")                                    
                                    )
                                    .append
                                    (
                                        $("<td></td>").addClass("ceiling").text("$1")
                                    )
                                    .append
                                    (
                                        $("<td></td>").addClass("percentage").text("0%")
                                    )
                                    .append
                                    (
                                        $("<td></td>")
                                        .append
                                        (
                                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove")
                                        )
                                    )
                                    .insertBefore($(this).parent().parent());
                                })
                            )
                        ).appendTo(tbody);

                        tbody.appendTo(table);

                        var table2 = $("<table></table>").attr("data-name", matrix.name).addClass("tax_bracket_matrix");
                        var tbody2 = $("<tbody></tbody>");

                        $("<tr></tr>")
                        .append
                        (
                            $("<td></td>").append
                            (
                                $("<b></b>").text("Floor")
                            )
                        )
                        .append
                        (
                            $("<td></td>").append
                            (
                                $("<b></b>").text("Ceiling")
                            )
                        )
                        .append
                        (
                            $("<td></td>").append
                            (
                                $("<b></b>").text("Percentage")
                            )
                        )
                        .append
                        (
                            $("<td></td>").append
                            (
                                $("<b></b>").text("Remove")
                            )
                        )
                        .appendTo(tbody2);
                        

                        $.each(matrix.state.brackets, function(ii, bracket)
                        {
                            $("<tr></tr>")
                            .append
                            (
                                $("<td></td>").addClass("floor").text(bracket.floor)
                            )
                            .append
                            (
                                $("<td></td>").addClass("ceiling").text(bracket.ceiling)
                            )
                            .append
                            (
                                $("<td></td>").addClass("percentage").text(bracket.percentage)
                            )
                            .append
                            (
                                $("<td></td>")
                                .append
                                (
                                    $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove")
                                )
                            )
                            .appendTo(tbody2)
                        });
                        $("<tr></tr>")
                        .append
                        (
                            $("<td></td>").attr("colspan", "4")
                            .append
                            (
                                $("<button></button>").addClass("btn").addClass("btn-primary").text("Add Row")
                                .click(function()
                                {
                                    $("<tr></tr>")
                                    .append
                                    (
                                        $("<td></td>").addClass("floor").text("$0")                                    
                                    )
                                    .append
                                    (
                                        $("<td></td>").addClass("ceiling").text("$1")
                                    )
                                    .append
                                    (
                                        $("<td></td>").addClass("percentage").text("0%")
                                    )
                                    .append
                                    (
                                        $("<td></td>")
                                        .append
                                        (
                                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove")
                                        )
                                    )
                                    .insertBefore($(this).parent().parent());
                                })
                            )
                        ).appendTo(tbody2);

                        tbody.appendTo(table);
                        tbody2.appendTo(table2);



                        $.each([table, table2], function(iii, tbl)
                        {
                            tbl.on("click", ".floor, .ceiling", function()
                            {
                                var that = $(this);
                                that.off("blur");
                                that.attr("contenteditable", "true");
                                that.on("blur", function()
                                {
                                    var val = that.text().digits();
                                    if(val !== null && val.length > 0)
                                    {
                                        if(val[0] !== "$")
                                        {
                                            val = "$" + val;
                                        }
                                        that.text(val);                                
                                        saveTaxBrackets(false);                                    
                                    }                                
                                });
                            });
                            tbl.on("click", ".percentage", function()
                            {
                                var that = $(this);
                                that.off("blur");
                                that.attr("contenteditable", "true");
                                that.on("blur", function()
                                {
                                    var val = that.text().decimal();
                                    if(val !== null && val.length > 0)
                                    {
                                        if(val[val.length - 1] !== "%")
                                        {
                                            val = val + "%";
                                        }
                                        that.text(val);                                
                                        saveTaxBrackets(false);                                    
                                    }                                
                                });
                            });
                            tbl.on("click", ".glyphicon-remove", function()
                            {
                                $(this).closest("tr").remove();
                                saveTaxBrackets(false);
                            });
                        });
                        

                        table.appendTo(main_div);
                        $("<br />").appendTo(main_div);
                        $("<h4></h4>").text("State").appendTo(main_div);
                        table2.appendTo(main_div);

                        $("<br />").appendTo(main_div);
                        $("<button></button>").addClass("btn").addClass("btn-danger").text("Drop the Above Two Matrices")
                        .click(function()
                        {
                            table.remove();
                            table2.remove();
                            saveTaxBrackets(true);
                        }).appendTo(main_div);
                        $("<hr />").appendTo(main_div)
                    });

                    $.each([spacer, main_div, spacer_clone], function(i, e)
                    {
                        e.appendTo($("#app_area"));
                    });
                });
            }
            function saveTaxBrackets(reload)
            {
                $("body").css("opacity", "0.2");

                var data = [];
                var error = false;
                $(".tax_bracket_matrix").each(function(i ,e)
                {
                    if(i % 2 === 1)
                    {
                        return;
                    }
                    var len = $(e).find("tr").length;
                    var name = $(e).prevAll("h3").first().text();
                    var fed_brackets = [];
                    var state_brackets = [];
                    $(e).find("tr").each(function(ii, ee)
                    {                        
                        if(ii !== 0 && ii !== len - 1)
                        {                            
                            var floor = $(ee).find(".floor").first().text();
                            var ceiling = $(ee).find(".ceiling").first().text();
                            var percentage = $(ee).find(".percentage").first().text();

                            var floor_val = floor.digits();
                            if(floor_val === null || floor_val.length < 1 || floor[0] !== "$")
                            {
                                error = true;
                            }

                            var ceiling_val = ceiling.digits();
                            if(ceiling_val === null || ceiling_val.length < 1 || ceiling[0] !== "$")
                            {
                                error = true;
                            }

                            var percentage_val = percentage.decimal();
                            if(percentage_val === null || percentage_val.length < 1 || percentage[percentage.length - 1] !== "%")
                            {
                                error = true;
                            }
                            fed_brackets.push({"floor": floor, "ceiling": ceiling, "percentage": percentage});                            
                        }
                    });

                    var tbl2 = $(".tax_bracket_matrix").eq(i + 1);
                    var len2 = tbl2.find("tr").length;
                    tbl2.find("tr").each(function(ii, ee)
                    {                        
                        if(ii !== 0 && ii !== len2 - 1)
                        {                            
                            var floor = $(ee).find(".floor").first().text();
                            var ceiling = $(ee).find(".ceiling").first().text();
                            var percentage = $(ee).find(".percentage").first().text();

                            var floor_val = floor.digits();
                            if(floor_val === null || floor_val.length < 1 || floor[0] !== "$")
                            {
                                error = true;
                            }

                            var ceiling_val = ceiling.digits();
                            if(ceiling_val === null || ceiling_val.length < 1 || ceiling[0] !== "$")
                            {
                                error = true;
                            }

                            var percentage_val = percentage.decimal();
                            if(percentage_val === null || percentage_val.length < 1 || percentage[percentage.length - 1] !== "%")
                            {
                                error = true;
                            }
                            state_brackets.push({"floor": floor, "ceiling": ceiling, "percentage": percentage});                            
                        }
                    });

                    data.push({"name": name, "federal": {"brackets": fed_brackets}, "state": {"brackets": state_brackets}});
                });

                if(!error)
                {
                    $.post("/data", {"fn": "write_setting", "value": "tax_brackets", "data": JSON.stringify(data)}).done(function(r)
                    {
                        console.log(data);
                        $("body").css("opacity", "1.0");
                        if(reload)
                        {
                            clearApp(function()
                            {
                                editTaxBrackets();
                            });
                        }                    
                    });
                }      
                else
                {
                    $("body").css("opacity", "1.0");
                }          
            }
            function showFormulaTestDialog(formula, funding_list)
            {
                var html = $("<html></html>");

                $("<h2></h2>").text("Enter some test data...").appendTo(html);
                $("<hr />").appendTo(html);
                var div = $("<div></div>").addClass("formulas_testing_input");
                $("<input />").attr("type", "text").attr("placeholder", "System Size (ex. 4.55)").attr("id", "formulas_testing_ss").appendTo(div);
                $("<input />").attr("type", "text").attr("placeholder", "Highest Monthly Bill (ex: 422.75)").attr("id", "formulas_testing_hmb").appendTo(div);
                $("<input />").attr("type", "text").attr("placeholder", "Total Kilowatt Hours (ex: 1325.21").attr("id", "formulas_testing_tkwhs").appendTo(div);
                $("<input />").attr("type", "text").attr("placeholder", "Total Dollars (ex: 1244.50").attr("id", "formulas_testing_td").appendTo(div);
                $("<input />").attr("type", "text").attr("placeholder", "Usage Months (ex: 12)").attr("id", "formulas_testing_um").appendTo(div);

                var sel = $("<select></select>");
                $("<option />").attr("value", "n/a").text("Select a State").appendTo(sel);
                $("<option />").attr("value", "CA").text("California").appendTo(sel);
                $("<option />").attr("value", "UT").text("Utah").appendTo(sel);
                $("<option />").attr("value", "TX").text("Texas").appendTo(sel);

                sel.appendTo(div);

                var sel2 = $("<select></select>");
                $("<option />").attr("value", "n/a").text("Choose a Fund").appendTo(sel2);
                $.each(funding_list, function(i, fund)
                {
                    $("<option></option>").attr("value", fund.value).text(fund.value_friendly).appendTo(sel2);
                });
                sel2.appendTo(div);

                var sel3 = $("<select></select>");
                $("<option />").attr("value", "A").text("Tier A").appendTo(sel3);
                $("<option />").attr("value", "B").text("Tier B").appendTo(sel3);
                $("<option />").attr("value", "C").text("Tier C").appendTo(sel3);
                $("<option />").attr("value", "D").text("Tier D").appendTo(sel3);
                $("<option />").attr("value", "E").text("Tier E").appendTo(sel3);
                sel3.appendTo(div);

                div.appendTo(html);

                BootstrapDialog.show
                (
                    {
                        "title": "Provide test input...",
                        "message": html.html(),
                        "buttons":
                        [
                            {
                                "label": "Nevermind",
                                "action": function(dialog)
                                {
                                    dialog.close();
                                },
                                "cssClass": "btn-danger"
                            },
                            {
                                "label": "Apply data to formula",
                                "action": function(dialog)
                                {
                                    var data = {};
                                    var ret_early = false;
                                    $.each(["hmb", "tkwhs", "td", "ss", "um"], function(i, e)
                                    {
                                        var el = $("#formulas_testing_" + e);
                                        if($.trim(el.val()) === "")
                                        {
                                            ret_early = true;
                                        }
                                        data[e] = $.trim(el.val());
                                    });

                                    var state_val = $(".formulas_testing_input").find("select").first().val();
                                    var fund_val = $(".formulas_testing_input").find("select").eq(1).val();
                                    var tier_option = $(".formulas_testing_input").find("select").eq(2).val();
                                    if(!ret_early)
                                    {
                                        ret_early = (state_val === "n/a" || fund_val === "n/a");
                                    }
                                    if(ret_early)
                                    {
                                        window.alert("One or more fields were not provided.");
                                        return;
                                    }
                                    data["state"] = state_val;
                                    data["fund"] = fund_val;
                                    data["tier_option"] = tier_option;

                                    dialog.close();
                                    applyFormula(data, formula, funding_list);
                                },
                                "cssClass": "btn-primary"
                            }
                        ],
                        "onshown": function(dialog)
                        {
                            $.each(["hmb", "tkwhs", "td", "ss"], function(i, e)
                            {
                                $.each(["keyup", "blur"], function(k, ee)
                                {
                                    $("#formulas_testing_" + e).on(ee, function(ev)
                                    {
                                        var allowed_chars = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "."];
                                        var found_period = false;
                                        var new_val = "";
                                        $.each($(this).val().split(""), function(j, char)
                                        {
                                            if(allowed_chars.indexOf(char) > -1)
                                            {
                                                if(char === "." && !found_period)
                                                {
                                                    new_val += char;
                                                    found_period = true;
                                                }
                                                else if(char !== ".")
                                                {
                                                    new_val += char;
                                                }
                                            }
                                        });
                                        $(this).val(new_val);
                                    });
                                });
                            });

                            $.each(["blur", "keyup"], function(i, e)
                            {
                                $("#formulas_testing_um").on(e, function(ev)
                                {
                                    var allowed_chars = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"];

                                    var new_val = "";
                                    $.each($(this).val().split(""), function(k, char)
                                    {
                                        if(allowed_chars.indexOf(char) > -1)
                                        {
                                           new_val += char;
                                        }
                                    });
                                    $(this).val(new_val);
                                });
                            });


                        }
                    }
                );
            }
            function applyFormula(formula_data, formula, funding_list)
            {
                $.post("./data", {"fn": "formula_to_js", "formula": formula}).done(function(resp)
                {
                    var formula_str = resp.formula;
                    while(formula_str.indexOf("proposal_dict[\"system_size\"]") > -1)
                    {
                        formula_str = formula_str.replace("proposal_dict[\"system_size\"]", formula_data["ss"]);
                    }
                    while(formula_str.indexOf("app_entry.highest_amount") > -1)
                    {
                        formula_str = formula_str.replace("app_entry.highest_amount", formula_data["hmb"]);
                    }
                    while(formula_str.indexOf("app_entry.total_kwhs") > -1)
                    {
                        formula_str = formula_str.replace("app_entry.total_kwhs", formula_data["tkwhs"]);
                    }
                    while(formula_str.indexOf("app_entry.total_dollars") > -1)
                    {
                        formula_str = formula_str.replace("app_entry.total_dollars", formula_data["td"]);
                    }
                    while(formula_str.indexOf("parseFloat(app_entry.usage_months)") > -1)
                    {
                        formula_str = formula_str.replace("parseFloat(app_entry.usage_months)", formula_data["um"]);
                    }
                    while(formula_str.indexOf("float(proposal_dict[\"additional_amount\"])") > -1)
                    {
                        formula_str = formula_str.replace("float(proposal_dict[\"additional_amount\"])", "1.0");
                    }

                    var is_ca_str = ((formula_data["state"] === "CA") * 1) + '';
                    while(formula_str.indexOf("parseFloat((app_entry.customer_state == 'CA' * 1))") > -1)
                    {
                        formula_str = formula_str.replace("parseFloat((app_entry.customer_state == 'CA' * 1))", is_ca_str);
                    }

                    var is_ut_str = ((formula_data["state"] === "UT") * 1) + '';
                    while(formula_str.indexOf("parseFloat((app_entry.customer_state == 'UT' * 1))") > -1)
                    {
                        formula_str = formula_str.replace("parseFloat((app_entry.customer_state == 'UT' * 1))", is_ut_str);
                    }

                    $.each(["A", "B", "C", "D", "E"], function(i, char)
                    {
                        var tier_str = ((formula_data["tier_option"] == char) * 1) + '';
                        while(formula_str.indexOf("app_entry.tier_option == '" + char + "'") > -1)
                        {
                            formula_str = formula_str.replace("app_entry.tier_option == '" + char + "'", tier_str);
                        }
                    });

                    while(formula_str.indexOf("parseFloat((booking.fund") > -1)
                    {
                        $.each(funding_list, function(i, fund)
                        {
                            var fund_str = ((formula_data["fund"] === fund["value"]) * 1) + '';
                            formula_str = formula_str.replace("parseFloat((booking.fund == '" + fund["value"] + "' * 1))", fund_str);

                        });
                    }

                    var html = $("<div></div>");
                    $("<div></div>").text
                    (
                        formula_str
                    ).appendTo(html);
                    $("<hr />").appendTo(html);
                    var x = (0.1 + eval(formula_str) - 0.1);
                    $("<div></div>").text
                    (
                        x + ''
                    ).appendTo(html);
                    BootstrapDialog.show
                    (
                        {
                            "title": "KK",
                            "message": html.html()
                        }
                    );

                });

            }
            function editDataExportWhitelist()
            {
                var app_area = $("#app_area");
                $("<h2></h2>").text("Loading...").appendTo(app_area);
                $.post("/data", {"fn": "read_setting", "value": "data_export_ips"}).done(function(r)
                {
                    app_area.find("h2").remove();
                    $("<p></p>").text("Enter whitelisted IP addresses, one IP address per line").appendTo(app_area);
                    $("<textarea></textarea>").addClass("export_whitelist_ta").appendTo(app_area);
                    app_area.find(".export_whitelist_ta").first().val(r.data.join("\n"));
                    $("<button></button>").addClass("export_whitelist_save_btn").addClass("btn").addClass("btn-primary").text("Save")
                    .click(function()
                    {
                        $(".export_whitelist_ta").css("opacity", "0.2");
                        $.post("/data", {"fn": "write_setting", "value": "data_export_ips", "data": JSON.stringify($(".export_whitelist_ta").val().split("\n"))}).done(function(rr)
                        {
                            $(".export_whitelist_ta").css("opacity", "1.0");
                        });
                    })
                    .appendTo(app_area);
                });
            }
            function editProjectManagementCheckoffs(funds, utility_providers)
            {
                var app_area = $("#app_area");
                if(app_area.find("h2").size() === 0)
                {
                    $("<h2></h2>").text("Loading...").appendTo(app_area);
                }                
                 if(typeof(funds) === "undefined")
                {
                    $.post("./data", {"fn": "list_funding_sources"}).done(function(resp)
                    {
                        editProjectManagementCheckoffs(resp);
                    });
                    return;
                }
                if(typeof(utility_providers) === "undefined")
                {
                    $.post("./data", {"fn": "read_setting", "value": "utility_providers"}).done(function(resp)
                    {
                        editProjectManagementCheckoffs(funds, resp.data);
                    });
                    return
                }
                $.post("./data", {"fn": "read_setting", "value": "project_management_additional_checkoffs"}).done(function(r)
                {

                    app_area.find("h2").remove();
                    var checkoffs = r.data;
                    var opts = [];
                    $.post("/data", {"fn": "read_setting", "value": "project_management_checkoffs"}).done(function(rrr)
                    {
                        $.each(rrr.data.checklist_1, function(i, item)
                        {
                            opts.push($("<option></option>").attr("value", item.key).text(item.name));
                        });
                        $.each(rrr.data.checklist_2, function(i, item)
                        {
                            opts.push($("<option></option>").attr("value", item.key).text(item.name));
                        });

                        var main_div = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10").attr("id", "additional_pm_checkoffs_editor");
                        var ul = $("<ul></ul>");
                        var save_data = function()
                        {
                            main_div.css("opacity", "0.2");
                            var new_data = [];
                            ul.find("li").each(function(i, e)
                            {
                                var el = $(e);
                                var p = el.find("> p").first();
                                var new_item = {"value_friendly": p.first().text()};
                                var split = new_item["value_friendly"].toLowerCase().split(" ");                            
                                new_item["value"] = split.join("_");
                                new_item["description"] = el.first().attr("data-description");
                                new_item["formula"] = el.first().attr("data-formula");
                                new_item["appears_after"] = el.find("select").first().val();
                                new_data.push(new_item);
                            });
                            $.post("./data", {"fn": "write_setting", "value": "project_management_additional_checkoffs", "data": JSON.stringify(new_data)}).done(function(rr)
                            {
                                main_div.css("opacity", "1.0");
                            });
                        };
                        
                        $("<h2></h2>")
                        .text("Additional Checkoff Items")
                        .append
                        (
                            $("<button></button>")
                            .addClass("btn")
                            .addClass("btn-success")
                            .addClass("pm_add_checkoff_item_btn")
                            .text("+ New Additional Item")
                            .click(function()
                            {
                                var li = $("<li></li>");
                                li.attr("data-formula", "cstPostal = '90704'");
                                li.attr("data-description", "Avalon, CA (Catalina Island)");
                                $("<p></p>").text("Added Item").appendTo(li);
                                $("<span></span>").addClass("glyphicon").addClass("glyphicon-pencil").appendTo(li);
                                $("<span></span>").addClass("glyphicon").addClass("glyphicon-cog").appendTo(li);
                                $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove").appendTo(li);
                                $("<span></span>").addClass("appears_after_msg").text("Appears After").appendTo(li);
                                var sel = $("<select></select>").addClass("appears_after_sel")
                                .append
                                (
                                    $("<option></option>").attr("value", "n/a").text("Choose One")
                                );
                                $.each(opts, function(ii, opt)
                                {
                                    opt.appendTo(sel);
                                });
                                sel.appendTo(li);
                                li.appendTo(ul);
                                li[0].scrollIntoView();
                                li.find(".glyphicon-pencil").trigger("click");
                            })
                        )
                        .appendTo(main_div);
                        
                        ul.on("click", ".glyphicon-pencil", function(ev)
                        {
                            ev.stopPropagation();
                            var that = $(this);
                            var p = that.parent().find("p");
                            p.attr("contenteditable", "true");
                            p.off("blur");
                            p.on("blur", function(ev)
                            {
                                var txt = $.trim(p.text());
                                if(txt.length > 0)
                                {
                                    p.removeAttr("contenteditable");
                                    save_data();
                                }
                                else
                                {
                                    p[0].focus();
                                }
                            });
                            p[0].focus();
                        });
                        ul.on("click", ".glyphicon-remove",function(ev)
                        {
                            ev.stopPropagation();
                            var that = $(this);
                            if(window.confirm("Are you sure you would like to remove " + that.parent().find("p").first().text()))
                            {
                                that.parent().remove();
                                save_data();
                            }
                        });
                        ul.on("click", ".glyphicon-cog", function(ev)
                        {
                            ev.stopPropagation();
                            var that = $(this);
                            var html = $("<div></div>");
                            $("<p></p>").text("Formula Description:").appendTo(html);
                            $("<textarea></textarea>").attr("id", "doc_description").appendTo(html);
                            $("<p></p>").text("Formula: ").appendTo(html);
                            $("<textarea></textarea>").attr("id", "doc_formula").appendTo(html);

                            var dd = $("<div></div>").addClass("dropdown");
                            $("<button></button>").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("data-toggle", "dropdown").text("Insert a variable/expression").append($("<span></span>").addClass("caret")).appendTo(dd);
                            var ul = $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu");

                            var vars =
                            [
                                "cstPostal",
                                "cstCounty",
                                "cstState",
                                "cstFund",
                                "cstUtility",
                                "cstMarket"
                            ];
                            vars.push("---");
                            vars.push("AND");
                            vars.push("OR");
                            vars.push("NOT");
                            vars.push("IN");
                            vars.push("---");
                            $.each(utility_providers, function(i, e)
                            {
                                vars.push(e.value);
                            });
                            vars.push("---");
                            $.each(funds, function(i, e)
                            {
                                if(i === 0 || i === funds.length - 1)
                                {
                                    return;
                                }
                                vars.push(e.value);
                            });

                            spacer_cnt = 0;
                            $.each(vars, function(i, varr)
                            {
                                $("<li></li>").attr("role", "presentation")
                                .attr("data-group", spacer_cnt + '')
                                .append
                                (
                                    $("<a></a>").attr("role", "menuitem").attr("href", "javascript:void(0);").attr("tabindex", "-1").text(varr)
                                ).appendTo(ul);
                                if(varr === "---")
                                {
                                    spacer_cnt += 1;
                                }
                            });

                            ul.addClass("criteria_vars_ul");
                            ul.appendTo(dd);
                            dd.appendTo(html);

                            BootstrapDialog.show
                            (
                                {
                                    "title": "Define the Inclusion Criteria",
                                    "message": html.html(),
                                    "buttons":
                                    [
                                        {
                                            "label": "Save",
                                            "cssClass": "btn-primary",
                                            "action": function(d)
                                            {
                                                if(validateCriteria($("#doc_formula").val(), funds, utility_providers, ""))
                                                {
                                                    that.closest("li").attr("data-formula", $.trim($("#doc_formula").val()));
                                                    that.closest("li").attr("data-description", $.trim($("#doc_description").val()));
                                                    d.close();
                                                    save_data();                                                
                                                }
                                                else
                                                {
                                                    window.alert("The formula could not be evaluated");
                                                }
                                            }
                                        },
                                        {
                                            "label": "Cancel",
                                            "cssClass": "btn-danger",
                                            "action": function(d)
                                            {
                                                d.close();
                                            }
                                        }
                                    ],
                                    "onshown": function(d)
                                    {
                                        $("#doc_description").val(that.closest("li").attr("data-description"));
                                        $("#doc_formula").val(that.closest("li").attr("data-formula"));

                                        $(".criteria_vars_ul li").each(function(i, e)
                                        {
                                            $(e).click(function()
                                            {
                                                if($(e).text() === "---")
                                                {
                                                    return;
                                                }
                                                var v = $("#doc_formula").val();
                                                var txt = $(e).text();
                                                if(parseInt($(e).data("group")) > 1)
                                                {
                                                    txt = "'" + txt + "'";
                                                }
                                                if(txt === "salesRep" || txt === "asstManager" || txt === "coManager" || txt === "salesDistrictManager" || txt === "regionalManager")
                                                {
                                                    txt = "'" + txt + "'";
                                                }
                                                v += txt;
                                                $("#doc_formula").val(v);
                                            });
                                        });
                                    }
                                }
                            );

                        });
                        
                        var appears_after_list = [];
                        $.each(r.data, function(i, data)
                        {
                            appears_after_list.push(data.appears_after);
                            //$("<hr></hr>").appendTo(main_div);
                            
                            var li = $("<li></li>");
                            li.attr("data-formula", data.formula);
                            li.attr("data-description", data.description);
                            li.attr("data-value", data.value);
                            $("<p></p>").text(data.value_friendly).appendTo(li);
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-pencil").appendTo(li);
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-cog").appendTo(li);
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove").appendTo(li);
                            $("<span></span>").addClass("appears_after_msg").text("Appears After").appendTo(li);
                            $("<select></select>").addClass("appears_after_sel")
                            .append
                            (
                                $("<option></option>").attr("value", "n/a").text("Choose One")
                            )
                            .change(function()
                            {
                                var that = $(this);
                                var value = that.val();
                                var key = that.parent().data("value");
                                that.css("opacity", "0.2");
                                $.post("/data", {"fn": "update_additional_checkoff_appears_after", "value": value, "val": key}).done(function(r)
                                {
                                    that.css("opacity", "1.0");
                                });
                            })
                            .appendTo(li);
                            li.appendTo(ul);
                            
                        });
                        ul.appendTo(main_div);
                        $.post("/data", {"fn": "read_setting", "value": "project_management_checkoffs"}).done(function(rrr)
                        {
                            var standard_checkoffs = rrr.data;
                            $("<h2></h2>").text("Standard Checkoff Items:").appendTo(main_div);

                            var inner_div = $("<div></div>").attr("id", "standard_checkoff_items_div");
                            var left_ul = $("<ul></ul>").addClass("standard_checkoff_items_left");
                            var right_ul = $("<ul></ul>").addClass("standard_checkoff_items_right");
                            $.each(standard_checkoffs.checklist_1, function(i, e)
                            {
                                ul.find(".appears_after_sel").each(function(ii, ee)
                                {
                                    var opt = $("<option></option>").attr("value", e.key).text(e.name);
                                    if(appears_after_list[ii] === e.key)
                                    {
                                        opt.attr("selected", "selected");
                                    }
                                    opt.appendTo($(ee));
                                });                            
                                var li = $("<li></li>").addClass("standard_checkoff_li").append($("<span></span>").text(e.name)).attr("data-key", e.key);
                                li.appendTo(left_ul);
                            });
                            $.each(standard_checkoffs.checklist_2, function(i, e)
                            {
                                ul.find(".appears_after_sel").each(function(ii, ee)
                                {
                                    var opt = $("<option></option>").attr("value", e.key).text(e.name);
                                    if(appears_after_list[ii] === e.key)
                                    {
                                        opt.attr("selected", "selected");
                                    }
                                    opt.appendTo($(ee));
                                });       
                                var li = $("<li></li>").addClass("standard_checkoff_li").append($("<span></span>").text(e.name)).attr("data-key", e.key);
                                li.appendTo(right_ul);
                            });

                            left_ul.appendTo(inner_div);
                            right_ul.appendTo(inner_div);                        

                            inner_div.appendTo(main_div);
                            main_div.appendTo(app_area);
                            placeStandardCheckOffIcons();
                        });
                    });                                        
                });
            }
            function placeStandardCheckOffIcons()
            {
                var save = function()
                {
                    var obj = {};
                    obj["checklist_1"] = [];
                    obj["checklist_2"] = [];
                    $(".standard_checkoff_items_left").first().find("li").each(function(i, e)
                    {
                        var item = {};
                        item["name"] = $.trim($(e).find("span").first().text());
                        while(item["name"].indexOf("  ") > -1)
                        {
                            item["name"] = item["name"].replace("  ", " ");
                        }
                        while(item["name"].indexOf("\r") > -1)
                        {
                            item["name"] = item["name"].replace("\r", "");
                        }
                        while(item["name"].indexOf("\n") > -1)
                        {
                            item["name"] = item["name"].replace("\n", "");
                        }
                        item["key"] = item["name"].toLowerCase().split(" ").join("_");
                        item["type"] = "checkbox";
                        obj["checklist_1"].push(item);
                    });
                    $(".standard_checkoff_items_right").first().find("li").each(function(i, e)
                    {
                        var item = {};
                        item["name"] = $.trim($(e).find("span").first().text());
                        while(item["name"].indexOf("  ") > -1)
                        {
                            item["name"] = item["name"].replace("  ", " ");
                        }
                        item["key"] = item["name"].toLowerCase().split(" ").join("_");
                        item["type"] = "checkbox";
                        obj["checklist_2"].push(item);
                    });
                    
                    $("#standard_checkoff_items_div").css("opacity", "0.2");
                    $.post("/data", {"fn": "write_setting", "value": "project_management_checkoffs", "data": JSON.stringify(obj)}).done(function(rrrrr)
                    {
                        $("#standard_checkoff_items_div").css("opacity", "1.0");
                        placeStandardCheckOffIcons();
                    });
                }
                var protected_keys =
                [
                    "panel_assessment",
                    "permit_status",
                    "received_pto",
                    "plan_set_ordered",
                    "plan_set_received",
                    "welcome_call_completed",
                    "final_payment_requested_received",
                    "install"
                ];


                $("#standard_checkoff_items_div").find("span").each(function(i, e)
                {
                    if($(e).hasClass("glyphicon"))
                    {
                        $(e).remove();
                    }
                });                
                $("#standard_checkoff_items_div").find("ul").each(function(i, ul)
                {
                    var cnt = $(ul).find("li").length;
                    $(ul).find("li").each(function(ii, li)
                    {
                        if(ii !== 0)
                        {
                            $("<span></span>").addClass("standard_checkoff_up").addClass("glyphicon").html("&uarr;").appendTo($(li));
                        }
                        if(ii !== cnt - 1)
                        {
                            $("<span></span>").addClass("standard_checkoff_down").addClass("glyphicon").html("&darr;").appendTo($(li));
                        }
                        if(i === 0)
                        {
                            $("<span></span>").addClass("standard_checkoff_right").addClass("glyphicon").html("&rarr;").appendTo($(li));
                        }
                        if(i === 1)
                        {
                            $("<span></span>").addClass("standard_checkoff_left").addClass("glyphicon").html("&larr;").appendTo($(li));
                        }
                        if(protected_keys.indexOf($(li).data("key")) === -1)
                        {
                            $("<span></span>").addClass("standard_checkoff_pencil").addClass("glyphicon").addClass("glyphicon-pencil").appendTo($(li));
                            $("<span></span>").addClass("standard_checkoff_remove").addClass("glyphicon").addClass("glyphicon-remove").appendTo($(li));
                        }

                    });
                });
                $("#standard_checkoff_items_div").find("ul").each(function(i, ul)
                {
                    $(ul).off("click");
                    $(ul).on("click", ".glyphicon-pencil", function(ev)
                    {
                        var that = $(this);
                        var span = that.parent().find("span").first();
                        span.attr("contenteditable", "true");
                        span.off("blur");
                        span.on("blur", function(ev)
                        {
                            span.removeAttr("contenteditable");
                            span.off("blur");
                            span.text(span.text());
                            save();
                        });
                        span[0].focus();
                    });
                    $(ul).on("click", ".standard_checkoff_up", function(ev)
                    {
                        var that = $(this);
                        that.parent().insertBefore(that.parent().prev());
                        save();
                    });
                    $(ul).on("click", ".standard_checkoff_down", function(ev)
                    {
                        var that = $(this);
                        that.parent().insertAfter(that.parent().next());
                        save();
                    });
                    $(ul).on("click", ".standard_checkoff_left", function(ev)
                    {
                        var that = $(this);
                        that.parent().appendTo($(".standard_checkoff_items_left").first());
                        save();
                    });
                    $(ul).on("click", ".standard_checkoff_right", function(ev)
                    {
                        var that = $(this);
                        that.parent().appendTo($(".standard_checkoff_items_right").first());
                        save();
                    });
                    $(ul).on("click", ".glyphicon-remove", function(ev)
                    {
                        var that = $(this);
                        if(window.confirm("Are you sure you would like to drop " + that.parent().find("span").first().text() + " from the standard checklist?"))
                        {
                            that.parent().remove();
                            save();
                        }
                    });
                });
            }
            function lockFormula(formula)
            {
                if(window.confirm("Are you sure you would like to lock \"" + formula.split("_").join(" ") + "\"? Renaming and deletion will be unavailable, but the formula will still be editable..."))
                {
                    $("#app_area").css("opacity", "0.2");
                    window.proposal_locks.push(formula);
                    $.post("./data", {"fn": "write_setting", "value": "proposal_locks", "data": JSON.stringify(proposal_locks)}).done(function(resp)
                    {
                        $("#app_area").css("opacity", "1.0");
                        $("#setting_value_of_proposal_formulas").trigger("click");
                    });
                }
            }
            function unlockFormula(formula)
            {
                var new_arr = [];
                $.each(window.proposal_locks, function(i, lock)
                {
                    if(lock !== formula)
                    {
                        new_arr.push(lock);
                    }
                });
                window.proposal_locks = new_arr;
                $("#app_area").css("opacity", "0.2");
                $.post("./data", {"fn": "write_setting", "value": "proposal_locks", "data": JSON.stringify(proposal_locks)}).done(function(resp)
                {
                    $("#app_area").css("opacity", "1.0");
                    $("#setting_value_of_proposal_formulas").trigger("click");
                });
            }
            function renameFormula(formula)
            {
                var qualifier = formula.split("_").join(" ");
                $(".formulas_ul").find("li").each(function(i, e)
                {
                    var clone = $(e).clone();
                    clone.find("span").remove();
                    if($.trim($(e).text()) === qualifier)
                    {
                        var new_name = window.prompt("Please enter the new formula name:");
                        if(new_name !== null)
                        {
                            var potential_formula_name = $.trim(new_name);
                            if(potential_formula_name.length === 0)
                            {
                                window.alert("A name is required...");
                                return;
                            }
                            while(potential_formula_name.indexOf("\t") > - 1)
                            {
                                potential_formula_name = potential_formula_name.replace("\t", "");
                            }
                            while(potential_formula_name.indexOf("\r") > -1)
                            {
                                potential_formula_name = potential_formula_name.replace("\r", "");
                            }
                            while(potential_formula_name.indexOf("\n") > -1)
                            {
                                potential_formula_name = potential_formula_name.replace("\n", "");
                            }
                            while(potential_formula_name.indexOf("  ") > -1)
                            {
                                potential_formula_name = potential_formula_name.replace("  ", " ");
                            }

                            var split_vals = potential_formula_name.split(" ");
                            var new_vals = [];
                            for(var cnt = 0; cnt < split_vals.length; cnt++)
                            {
                                new_vals.push(split_vals[cnt][0].toUpperCase() + split_vals[cnt].substring(1));
                            }
                            potential_formula_name = new_vals.join("_");
                            potential_formula_name = "fx_" + potential_formula_name;

                            if(Object.keys(window.proposal_formula_data).indexOf(potential_formula_name) === -1)
                            {
                                $("#app_area").css("opacity", "0.5");
                                window.proposal_formula_data[potential_formula_name] = "";
                                $.each(Object.keys(window.proposal_formula_data), function(k, key)
                                {
                                    eval("window.proposal_formula_data[\"" + key + "\"] = window.proposal_formula_data[\"" + key + "\"].replace(/" + formula + "/g, \"" + potential_formula_name + "\");");
                                });
                                delete window.proposal_formula_data[formula];
                                $.post("./data", {"fn": "write_setting", "value": "proposal_formulas", "data": JSON.stringify(window.proposal_formula_data)}).done(function(resp)
                                {
                                    $("#app_area").css("opacity", "1.0");
                                    $("#setting_value_of_proposal_formulas").trigger("click");
                                });
                            }
                            else
                            {
                                window.alert("A formula with the same name already exists, so it cannot be created...");

                            }
                        }
                    }
                });
            }
            function tryFormulaDeletion(formula)
            {
                if(window.confirm("Are you sure you would like to delete " + formula.split("_").join(" ") + "?"))
                {
                    var exit = false;
                    $.each(Object.keys(window.proposal_formula_data), function(i, key)
                    {
                        if($.trim(window.proposal_formula_data[key].replace("|||", " ")).split(" ").indexOf(formula) > -1)
                        {
                            if(!exit)
                            {
                                window.alert(key.split("_").join(" ") + " contains a reference to " + formula.split("_").join(" ") + ". Therefore, it cannot be deleted until the reference is removed.");
                                exit = true;
                            }
                        }
                    });
                    if(exit)
                    {
                        return;
                    }
                    delete window.proposal_formula_data[formula];
                    $.post("./data", {"fn": "write_setting", "value": "proposal_formulas", "data": JSON.stringify(window.proposal_formula_data)}).done(function(resp)
                    {
                        $("#setting_value_of_proposal_formulas").trigger("click");
                    });
                }
            }
            function showFormulaEditor(formula, funding_list)
            {
                var html = $("<div></div>");
                var descrip = "";
                var definition = window.proposal_formula_data[formula];
                if(definition.indexOf("|||") > -1)
                {
                    descrip = definition.split("|||")[1];
                    definition = definition.split("|||")[0];
                }
                $("<textarea></textarea>").val(descrip).html(descrip).addClass("formula_synopsis").attr("placeholder", "Description of the formula...").appendTo(html);
                $("<p></p>").text("Configure the formula...").appendTo(html);
                $("<textarea></textarea>").val(definition).html(definition).addClass("formula_def").appendTo(html);

                var calc_container = $("<div></div>").addClass("calc_container");

                var six_through_period_row = $("<div></div>").addClass("s_t_p");
                $.each(["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "."], function(i, num)
                {
                    $("<span></span>").addClass("badge").addClass("badge-default").text(num).appendTo(six_through_period_row);
                });
                six_through_period_row.appendTo(calc_container);

                var arith_row = $("<div></div>").addClass("arith_row");
                $.each(["+", "-", "*", "/", "AND", "OR", "NOT"], function(i, operator)
                {
                    $("<span></span>").addClass("badge").addClass("badge-default").text(operator).appendTo(arith_row);
                });
                arith_row.appendTo(calc_container);

                var other_row = $("<div></div>").addClass("otr_row");
                $.each(["^", "(", ")"], function(i, item)
                {
                    $("<span></span>").addClass("badge").addClass("badge-default").text(item).appendTo(other_row);
                });
                other_row.appendTo(calc_container);
                $("<br />").appendTo(calc_container);
                $("<br />").appendTo(calc_container);

                var variable_dropdown = $("<div></div>").addClass("dropdown");
                $("<button></button>").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("type", "button").attr("aria-expanded", "true").attr("data-toggle", "dropdown")
                .text("Insert a Variable")
                .append
                (
                    $("<span></span>").addClass("caret")
                )
                .appendTo(variable_dropdown);

                var ul = $("<ul></ul>").addClass("vars_ul").attr("role", "menu").addClass("dropdown-menu");

                var variables =
                [
                    {
                        "nick": "SS",
                        "name": "System Size",
                    },
                    {
                        "nick": "HMB",
                        "name": "Highest Montly Bill"
                    },
                    {
                        "nick": "TKWHRS",
                        "name": "Total Kilowatt Hours"
                    },
                    {
                        "nick": "TD",
                        "name": "Total Dollars"
                    },
                    {
                        "nick": "UM",
                        "name": "Usage Months"
                    },
                    {
                        "nick": "ADDCST",
                        "name": "Additional Costs"
                    },
                    {
                        "nick": "--",
                        "name": "--"
                    },
                    {
                        "nick": "stCA",
                        "name": "State is California"
                    },
                    {
                        "nick": "stUT",
                        "name": "State is Utah"
                    },
                    {
                        "nick": "stUT",
                        "name": "State is Texas"
                    },
                    {
                        "nick": "--",
                        "name": "--"
                    },
                    {
                        "nick": "tierA",
                        "name": "Tier A"
                    },
                    {
                        "nick": "tierB",
                        "name": "Tier B"
                    },
                    {
                        "nick": "tierC",
                        "name": "Tier C"
                    },
                    {
                        "nick": "tierD",
                        "name": "Tier D"
                    },
                    {
                        "nick": "tierE",
                        "name": "Tier E"
                    },
                    {
                        "nick": "--",
                        "name": "--"
                    }
                ];
                $.each(funding_list, function(i, fund)
                {
                    if(i === funding_list.length - 1 || i === 0)
                    {
                        return;
                    }
                    variables.push
                    (
                        {
                            "nick": "fnd" + constanticize(fund.value),
                            "name": "Fund is " + fund.value_friendly
                        }
                    );
                });

                $.each(variables, function(i, variable)
                {
                    var li = $("<li></li>");
                    li.attr("role", "presentation");

                    $("<a></a>").attr("role", "menuitem")
                    .attr("tabindex", "-1")
                    .attr("href", "javascript:void(0);")
                    .text(variable.nick + " => " + variable.name)
                    .appendTo(li);

                    li.appendTo(ul);
                });

                ul.appendTo(variable_dropdown);
                variable_dropdown.appendTo(calc_container);

                var formula_dropdown = $("<div></div>").addClass("dropdown");
                $("<button></button>").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("type", "button").attr("aria-expanded", "true").attr("data-toggle", "dropdown")
                .text("Insert a Formula")
                .append
                (
                    $("<span></span>").addClass("caret")
                )
                .appendTo(formula_dropdown);
                var ref_ul = $("<ul></ul>").addClass("formulas_ref_ul").attr("role", "menu").addClass("dropdown-menu");

                var curr_formula = formula;
                $.each(Object.keys(window.proposal_formula_data), function(i, formula)
                {
                    if(formula === curr_formula)
                    {
                        return;
                    }
                    var li = $("<li></li>");
                    li.attr("role", "presentation");

                    $("<a></a>").attr("role", "menuitem")
                    .attr("tabindex", "-1")
                    .attr("href", "javascript:void(0);")
                    .text(formula + " => " + formula.split("_").join(" ").replace("fx ", ""))
                    .appendTo(li);

                    li.appendTo(ref_ul);
                });
                ref_ul.appendTo(formula_dropdown);
                $("<br />").appendTo(calc_container);
                formula_dropdown.appendTo(calc_container);

                $("<button></button>").addClass("btn").addClass("btn-danger").addClass("formula_back").html("&larr;").appendTo(calc_container);

                calc_container.appendTo(html);

                BootstrapDialog.show
                (
                    {
                        "title": "Editing Formula for \"" + formula.split("_").join(" ") + "\"",
                        "message": html.html(),
                        "onshown": function(dialog)
                        {
                            $(".z_t_f, .s_t_p, .otr_row").each(function(i, e)
                            {
                                $(e).find(".badge").each(function(k, ee)
                                {
                                    $(ee).click(function()
                                    {
                                        var curr_val = $(".formula_def").val();
                                        curr_val += ($(this).text());
                                        $(".formula_def").val($.trim(curr_val));
                                    });
                                });
                            });

                            $(".arith_row").find(".badge").each(function(i, e)
                            {
                                $(e).click(function()
                                {
                                    var curr_val = $(".formula_def").val();
                                    curr_val += (' ' + $(this).text() + ' ');
                                    $(".formula_def").val(curr_val);
                                });
                            });

                            $(".vars_ul").find("li").each(function(i, e)
                            {
                                $(e).click(function()
                                {
                                    if($(e).text().indexOf("--") > -1)
                                    {
                                        return;
                                    }
                                    var curr_val = $(".formula_def").val();
                                    curr_val += $(e).text().split(" ")[0];
                                    $(".formula_def").val(curr_val);
                                });
                            });

                            $(".formulas_ref_ul").find("li").each(function(i, e)
                            {
                                $(e).click(function()
                                {
                                    var curr_val = $(".formula_def").val();
                                    curr_val += $(e).text().split(" ")[0];
                                    $(".formula_def").val(curr_val);
                                });
                            });

                            $(".formula_back").click(function()
                            {
                                var v = $.trim($(".formula_def").val());
                                var words = v.split(" ");
                                var arr = ["SS", "HMB", "TKWHRS", "TD", "ADDCST", "stCA", "stUT", "AND", "OR", "NOT"];
                                $.each(funding_list, function(i, fund)
                                {
                                    arr.push("fnd" + constanticize(fund.value));
                                });
                                $.each(Object.keys(window.proposal_formula_data), function(i, formula)
                                {
                                    arr.push(formula);
                                });
                                if(arr.indexOf(words[words.length - 1]) > -1)
                                {
                                    var new_words = [];
                                    for(var i = 0; i < words.length - 1; i++)
                                    {
                                        new_words.push(words[i]);
                                    }
                                    var new_str = new_words.join(" ");
                                    $(".formula_def").val($.trim(new_str));
                                }
                                else
                                {
                                    v = v.substring(0, v.length - 1);
                                    v = $.trim(v);
                                    $(".formula_def").val(v);
                                }
                            });

                        },
                        "buttons":
                        [
                            {
                                "label": "Cancel",
                                "cssClass": "btn-danger",
                                "action": function(dialog)
                                {
                                    dialog.close();
                                }
                            },
                            {
                                "label": "Update Formula",
                                "cssClass": "btn-success",
                                "action": function(dialog)
                                {
                                    if(formulaIsValid($.trim($(".formula_def").val()), funding_list))
                                    {
                                        window.proposal_formula_data[formula] = $.trim($(".formula_def").val());
                                        if($.trim($(".formula_synopsis").val()).length > 0)
                                        {
                                            window.proposal_formula_data[formula] = window.proposal_formula_data[formula] + "|||" + $.trim($(".formula_synopsis").val());
                                        }
                                        $(".settings_save_btn").trigger("click");
                                        dialog.close();
                                    }
                                    else
                                    {
                                        window.alert("The formula could not be evaulated as a proper experession");

                                    }
                                }
                            }
                        ]
                    }
                );
            }
            function formulaIsValid(definition, funding_list)
            {
                var fund_vars = [];
                $.each(funding_list, function(i, fund)
                {
                    fund_vars.push("fnd" + constanticize(fund.value));
                });

                var cpy = definition + '';
                while(cpy.indexOf("AND") > -1)
                {
                    cpy = cpy.replace("AND", "&&");
                }
                while(cpy.indexOf("OR") > -1)
                {
                    cpy = cpy.replace("OR", "||");
                }
                while(cpy.indexOf("NOT") > -1)
                {
                    cpy = cpy.replace("NOT", "!");
                }
                var while_cnt = 0;
                while(cpy.indexOf("^") > -1 && while_cnt < 500)
                {
                    var match = cpy.match(/([0-9]+)\^([0-9]+)/);
                    if(match !== null)
                    {
                        cpy = cpy.replace(match[0], "Math.pow(" + match[0] + ", " + match[1] + ")");
                        while_cnt += 1;
                    }
                }

                $.each(Object.keys(window.proposal_formula_data), function(i, key)
                {
                    while(cpy.indexOf(key) > -1)
                    {
                        cpy = cpy.replace(key, "fn()");
                    }
                });

                $.each(fund_vars, function(i, fund)
                {
                    while(cpy.indexOf(fund) > -1)
                    {
                        cpy = cpy.replace(fund, "1");
                    }
                });

                $.each(["SS", "HMB", "TKWHRS", "TD", "UM", "ADDCST", "stCA", "stUT"], function(i, item)
                {
                    while(cpy.indexOf(item) > -1)
                    {
                        cpy = cpy.replace(item, "5.0");
                    }
                });

                $.each(["tierA", "tierB", "tierC", "tierD", "tierE"], function(i, item)
                {
                    while(cpy.indexOf(item) > -1)
                    {
                        cpy = cpy.replace(item, "1");
                    }
                });

                var x = null;
                var fn = function() {return 5};
                try
                {
                    x = eval(cpy);
                }
                catch(e)
                {
                }

                return x !== null;
            }
            function constanticize(wrd)
            {
                while(wrd.indexOf("a") + wrd.indexOf("A") > -2)
                {
                    wrd = wrd.replace("a", "").replace("A", "");
                }
                while(wrd.indexOf("e") + wrd.indexOf("E") > -2)
                {
                    wrd = wrd.replace("e", "").replace("E", "");
                }
                while(wrd.indexOf("i") + wrd.indexOf("I") > -2)
                {
                    wrd = wrd.replace("i", "").replace("I", "");
                }
                while(wrd.indexOf("o") + wrd.indexOf("O") > -2)
                {
                    wrd = wrd.replace("o", "").replace("O", "");
                }
                while(wrd.indexOf("u") + wrd.indexOf("U") > -2)
                {
                    wrd = wrd.replace("u", "").replace("U", "");
                }
                while(wrd.indexOf("y") + wrd.indexOf("Y") > -2)
                {
                    wrd = wrd.replace("y", "").replace("Y", "");
                }
                while(wrd.indexOf("_") > -1)
                {
                    wrd = wrd.replace("_", "");
                }
                return wrd.toUpperCase();
            }
            function reloadTextArea(notification)
            {
                $("#email_list, .notification_save_btn").css("visibility", "visible");
                $(".utility_provider_div").css("visibility", "hidden");
                $(".proposal_formulas_div").css("visibility", "hidden").css("display", "none");
                $("#settings_edit_ta").css("display", "none");
                $(".settings_save_btn").css("display", "none");
                if($(".notificationrow").find("h4").size() === 0)
                {
                    $("<h4></h4>").text("Please enter a list of email addresses, one per line").insertBefore($(".notificationrow").find("textarea").eq(0));
                }
                else
                {
                    $(".notificationrow").find("h4").text("Please enter a list of email addresses, one per line");
                }
                var new_values = "";
                $.each(notification.notification_list, function(i, list_item)
                {
                    if($.trim(list_item) !== "")
                    {
                        new_values += list_item.email_address + "\n";
                    }
                });
                new_values = new_values.substring(0, new_values.length - 1);
                $("textarea").eq(0).html(new_values).val(new_values);
                $(".notification_save_btn").replaceWith($(".notification_save_btn").clone());
                $(".notification_save_btn").click(function()
                {
                    if($(this).css("visibility") === "hidden")
                    {
                        return;
                    }
                    $(".notification_save_btn").remove();
                    var textarea_values = $.trim($("textarea").eq(0).val());
                    while(textarea_values.indexOf("\r") !== -1)
                    {
                        textarea_values = textarea_values.replace("\r", "\n");
                    }
                    while(textarea_values.indexOf("\n\n") !== -1)
                    {
                        textarea_values = textarea_values.replace("\n\n", "\n");
                    }
                    textarea_values = $.trim(textarea_values);
                    $.post("/data", {"fn": "save_notification_list", "identifier": notification.identifier, "values": textarea_values}).done(function(resp)
                    {
                        BootstrapDialog.alert
                        (
                            {
                                "title": "Success!",
                                "message": "The notification list has succesfully been updated"
                            }
                        );
                        setTimeout(function()
                        {
                            $(".bootstrap-dialog-footer-buttons").find(".btn").click(function()
                            {
                                clearApp(function()
                                {
                                    window.location.reload();
                                });
                            });
                        }, 250);
                    });
                });
            }
            function hint_at_users(p_el, hint_dictionary)
            {
                var rem = function()
                {
                    $(".hinted_user").remove();
                };
                var hint_at_yousers = function(p_el, hint_dictionary)
                {
                    var possible_match = $.trim(p_el.text()).toLowerCase();
                    if(typeof(hint_dictionary[possible_match]) + '' !== "undefined")
                    {
                        $.each(hint_dictionary[possible_match], function(i, match)
                        {
                            if(i > 4)
                            {
                                return;
                            }
                            var hinted_user_div = $("<div></div>").addClass("hinted_user").attr("id", "compose_to_" + match.identifier);
                            $("<img />").attr("src", "//storage.googleapis.com/" + window.app_bucket + "/Images/ProfilePictures/Thumb/" + match.identifier + ".jpg")
                            .addClass("img")
                            .addClass("img-responsive")
                            .appendTo(hinted_user_div);

                            hinted_user_div.click(function()
                            {
                                var img = $(this).find("img");
                                img.attr("id", "recipient_of_" + $(this).attr("id").replace("compose_to_", "")).appendTo($(".recipients_div"));
                                img.attr("title", $(this).find("p").text());
                                rem();
                                $(".hinted_users").css("display", "none");

                                $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove").click(function()
                                {
                                    var prev_count = $(this).prevAll("span").size();
                                    $(".recipients_div").find("img").eq(prev_count).remove();
                                    $(this).remove();
                                }).appendTo($(".remove_recipients"));

                                $(".to_box").text("");
                                $(".recipients_div").eq(0)[0].scrollIntoView();
                            });

                            $("<p></p>").text(match.name).appendTo(hinted_user_div);

                            if($("#compose_to_" + match.identifier).size() + $("#recipient_of_" + match.identifier).size() === 0)
                            {
                                hinted_user_div.appendTo($(".hinted_users"));
                            }
                        });
                    }
                };
                if($(".hinted_user").size() > 0)
                {
                    $(".hinted_user").animate({opacity: 0.0}, 200, function()
                    {
                        rem();
                        hint_at_yousers(p_el, hint_dictionary);
                    });
                }
                else
                {
                    hint_at_yousers(p_el, hint_dictionary);
                }

                if($(".hinted_user").size() === 0)
                {
                    $(".hinted_users").css("display", "none");
                }
                else
                {
                    $(".hinted_users").css("display", "table");
                }
            }
            function hint_at_users2(p_el, hint_dictionary)
            {
                var rem = function()
                {
                    $(".hinted_user").remove();
                };
                var hint_at_yousers = function(p_el, hint_dictionary)
                {
                    var possible_match = $.trim(p_el.text()).toLowerCase();
                    if(typeof(hint_dictionary[possible_match]) + '' !== "undefined")
                    {
                        $.each(hint_dictionary[possible_match], function(i, match)
                        {
                            if(i > 4)
                            {
                                return;
                            }
                            var hinted_user_div = $("<div></div>").addClass("hinted_user").attr("id", "reassign_to_" + match.identifier).addClass("reassign_to_" + match.rep_id);
                            $("<img />").attr("src", "//storage.googleapis.com/" + window.app_bucket + "/Images/ProfilePictures/Thumb/" + match.identifier + ".jpg")
                            .addClass("img")
                            .addClass("img-responsive")
                            .appendTo(hinted_user_div);

                            hinted_user_div.click(function()
                            {
                                if(window.confirm("Are you sure you would like to reassign the automatic override payment to:\n\n" + hinted_user_div.text() + "?"))
                                {
                                    var u_identifier = p_el.closest(".override_row").attr("id").replace("override_row_for_", "");
                                    $.post("./data", {"fn": "reassign_automatic_override_designee", "identifier": u_identifier, "designee": match.rep_id}).done(function(resp)
                                    {
                                        $("#override_row_for_" + u_identifier).find(".col-xs-4").find("> span").eq(0).text(match.rep_id);
                                        p_el.closest(".override_row").find(".btn-danger").eq(0).trigger("click");
                                    });
                                }
                            });

                            $("<p></p>").text(match.name).appendTo(hinted_user_div);

                            if($("#reassign_to_" + match.identifier).size() + $("#recipient_of_" + match.identifier).size() === 0)
                            {
                                hinted_user_div.appendTo($(".hinted_users"));
                            }
                        });
                    }
                };
                if($(".hinted_user").size() > 0)
                {
                    $(".hinted_user").animate({opacity: 0.0}, 200, function()
                    {
                        rem();
                        hint_at_yousers(p_el, hint_dictionary);
                    });
                }
                else
                {
                    hint_at_yousers(p_el, hint_dictionary);
                }

                if($(".hinted_user").size() === 0)
                {
                    $(".hinted_users").css("display", "none");
                }
                else
                {
                    $(".hinted_users").css("display", "table");
                }
            }

            function hint_at_users3(p_el, hint_dictionary, optional_cb)
            {
                if(typeof(optional_cb) + '' === "undefined")
                {
                    optional_cb = function(id){};
                }
                var rem = function()
                {
                    $(".hinted_user").remove();
                };
                var hint_at_yousers = function(p_el, hint_dictionary)
                {
                    var possible_match = $.trim(p_el.val()).toLowerCase();
                    if(typeof(hint_dictionary[possible_match]) + '' !== "undefined")
                    {
                        $.each(hint_dictionary[possible_match], function(i, match)
                        {
                            if(i > 4)
                            {
                                return;
                            }
                            var hinted_user_div = $("<div></div>").addClass("hinted_user").attr("id", "compose_to_" + match.identifier);
                            $("<img />").attr("src", "//storage.googleapis.com/" + window.app_bucket + "/Images/ProfilePictures/Thumb/" + match.identifier + ".jpg")
                            .addClass("img")
                            .addClass("img-responsive")
                            .appendTo(hinted_user_div);

                            hinted_user_div.click(function()
                            {
                                $(".transaction_user_match, .hidden_identifier_for_transaction_match").remove();
                                var img = $(this).find("img");
                                var cloned = img.clone();
                                cloned.addClass("transaction_user_match");
                                cloned.appendTo($(".bootstrap-dialog-body"));
                                $("<p><p>").attr("data-identifier", match.identifier).attr("data-rep_id", match.rep_id).addClass("hidden_identifier_for_transaction_match").text(match.name).appendTo($(".bootstrap-dialog-body"));
                                rem();
                                $(".hinted_users").find("span").trigger("click");
                                var dels = [];
                                $(".hidden_identifier_for_transaction_match").each(function(iii, eee)
                                {
                                    if(iii > 0)
                                    {
                                        dels.push($(eee));
                                    }
                                });
                                $.each(dels, function(iii, eee)
                                {
                                    eee.remove();
                                });
                                p_el.val("");
                                optional_cb(match.identifier);
                            });

                            $("<p></p>").text(match.name).appendTo(hinted_user_div);

                            if($("#compose_to_" + match.identifier).size() + $("#recipient_of_" + match.identifier).size() === 0)
                            {
                                hinted_user_div.appendTo($(".hinted_users"));
                            }
                        });
                    }
                };
                if($(".hinted_user").size() > 0)
                {
                    $(".hinted_user").animate({opacity: 0.0}, 200, function()
                    {
                        rem();
                        hint_at_yousers(p_el, hint_dictionary);
                    });
                }
                else
                {
                    hint_at_yousers(p_el, hint_dictionary);
                }

                if($(".hinted_user").size() === 0)
                {
                    $(".hinted_users").css("display", "none");
                }
                else
                {
                    $(".hinted_users").css("display", "table");
                }
            }
            function composeMessage()
            {
                $(".inbox_inner_row").animate({"height": "0px"}, 350, function()
                {
                    $(".compose_row").removeAttr("style").css("display", "block");
                });
            }
            function loadInbox(contacts, offset, thread_data)
            {
                window.check_for_unread_threads = false;
                if(typeof(contacts) + '' === "undefined" && typeof(offset) + '' === "undefined" && typeof(thread_data) + '' === "undefined")
                {
                    $("<h2></h2>").addClass("tmp_h2").text("Loading inbox...").appendTo($("#app_area"));
                }
                if(typeof(contacts) + '' === "undefined")
                {
                    $.post("./data", {"fn": "list_all_users"}).done(function(resp)
                    {
                        loadInbox(resp.contacts);
                    });
                    return;
                }
                if(typeof(offset) + '' === "undefined")
                {
                    offset = 0;
                }

                if(typeof(thread_data) + '' === "undefined")
                {
                    $.post("./data", {"fn": "get_threads_for_user", "offset": (offset + '')}).done(function(resp)
                    {
                        loadInbox(contacts, offset, resp.threads);
                    });
                    return;
                }
                //contacts.push({"last_name": "Everyone", "first_name": "", "name": "Everyone", "identifier": "everyone"});


                $(".msg_file").remove();
                $(".tmp_h2").remove();

                // build the contacts dictionary and the identifier => name map
                var hint_dictionary = {};
                var ident_name_map = {};

                // do the first name hints
                $.each(contacts, function(i, contact)
                {
                    ident_name_map[contact.identifier] = contact.name;

                    var fname = contact.first_name.toLowerCase();
                    for(var k = 0; k < fname.length; k++)
                    {
                        var hint = fname.substring(0, k + 1);
                        if(typeof(hint_dictionary[hint]) + '' === "undefined")
                        {
                            hint_dictionary[hint] = [];
                        }
                        hint_dictionary[hint].push
                        (
                            {
                                "name": contact.name,
                                "identifier": contact.identifier
                            }
                        );
                    }

                    var lname = contact.last_name.toLowerCase();
                    for(var k = 0; k < lname.length; k++)
                    {
                        var hint = lname.substring(0, k + 1);
                        if(typeof(hint_dictionary[hint]) + '' === "undefined")
                        {
                            hint_dictionary[hint] = [];
                        }
                        hint_dictionary[hint].push
                        (
                            {
                                "name": contact.name,
                                "identifier": contact.identifier
                            }
                        );
                    }

                    var name = contact.name.toLowerCase();
                    for(var k = 0; k < name.length; k++)
                    {
                        var hint = name.substring(0, k + 1);
                        if(typeof(hint_dictionary[hint]) + '' === "undefined")
                        {
                            hint_dictionary[hint] = [];
                        }
                        hint_dictionary[hint].push
                        (
                            {
                                "name": contact.name,
                                "identifier": contact.identifier
                            }
                        );
                    }
                });

                var app_area = $("#app_area");
                var inbox_spacer = $("<div></div>").addClass("col-xs-0").addClass("col-sm-0").addClass("col-md-1").addClass("col-lg-1");
                var inbox_row = $("<div></div>").addClass("col-xs-12").addClass("col-sm-12").addClass("col-md-10").addClass("col-lg-10").css("margin-bottom", "1em").addClass("inboxrow");
                var compose_row = $("<div></div>").addClass("col-xs-12").addClass("col-sm-12").addClass("col-md-12").addClass("col-lg-12").addClass("compose_row");
                var inner_compose_row = $("<div></div>");
                var recipients_div = $("<div></div>").addClass("recipients_div");
                var remove_recipients_div = $("<div></div>").addClass("remove_recipients");

                recipients_div.appendTo(inner_compose_row);
                remove_recipients_div.appendTo(inner_compose_row);

                var to_box = $("<p></p>").text("Enter someone's name...").attr("contenteditable", "true").addClass("to_box");

                to_box
                .focus(function()
                {
                    if($(this).text() === "Enter someone's name...")
                    {
                        $(this).text("");
                    }
                })
                .blur(function()
                {
                    if($.trim($(this).text()) === "")
                    {
                        $(this).text("Enter someone's name...");
                    }
                })
                .on("keyup", function()
                {
                    if($.trim($(this).text()).length > 0)
                    {
                        hint_at_users($(this), hint_dictionary);
                    }
                }).appendTo(inner_compose_row);

                inner_compose_row.appendTo(compose_row);

                var hinted_users_div = $("<div></div>").addClass("hinted_users");
                $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove").on("click", function()
                {
                    $(".hinted_users").css("display", "none");
                    $(".hinted_user").remove();
                    $(".to_box").text("").trigger("keyup");
                }).appendTo(hinted_users_div);

                hinted_users_div.appendTo(inner_compose_row);
                $("<textarea></textarea>").attr("placeholder", "Your message...").appendTo(inner_compose_row);

                $("<button></button>")
                .addClass("btn")
                .addClass("btn-primary")
                .text(" Attach file")
                .prepend
                (
                    $("<span></span>")
                    .addClass("glyphicon")
                    .addClass("glyphicon-paperclip")
                )
                .click(function()
                {
                    var idx = $(".msg_file").size() + '';
                    $("<input />")
                    .attr("type", "file")
                    .addClass("msg_file")
                    .attr("id", "msg_file_" + idx)
                    .css("display", "none")
                    .on("change", function()
                    {
                        var val = $(this).val();
                        while(val.indexOf("/") > -1)
                        {
                            val = val.replace("/", "\\");
                        }
                        paths = val.split("\\");

                        var filename = "File #" + ((parseInt(idx) + 1) + '');
                        try
                        {
                            filename = paths[paths.length - 1];
                        }
                        catch(eeeeeeee)
                        {
                        }

                        $("<p></p>")
                        .text(" " + filename)
                        .prepend
                        (
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-paperclip")
                        )
                        .appendTo(".msg_file_list");
                    }).appendTo($("body"));
                    $("#msg_file_" + idx).trigger("click");
                }).appendTo(inner_compose_row);

                $("<button></button>")
                .addClass("btn")
                .addClass("btn-success")
                .text(" Send")
                .prepend($("<span></span>").addClass("glyphicon").addClass("glyphicon-send"))
                .click(function()
                {
                    sendNPMessage(undefined, thread_data);
                }).appendTo(inner_compose_row);

                $("<button></button>")
                .addClass("btn")
                .addClass("btn-danger")
                .html("&larr; Back")
                .click(function()
                {
                    $(".recipients_div").empty();
                    $(".msg_file_list").empty();
                    $(".remove_recipients").empty();
                    $(".msg_file").remove();
                    $(".compose_row").find(".btn-success").text(" Send").prepend($("<span></span>").addClass("glyphicon").addClass("glyphicon-send"));
                    $(".compose_row").animate({"height": "0px"}, 300, function()
                    {
                        $(".inbox_inner_row").removeAttr("style");
                    });
                }).appendTo(inner_compose_row);

                $("<div></div>").addClass("msg_file_list").appendTo(inner_compose_row)

                var inbox_spacer2 = inbox_spacer.clone();

                var title = $("<h2></h2>");
                title.addClass("clist_title").text("Inbox").prepend($("<span></span>").html("&nbsp;").addClass("glyphicon glyphicon-envelope")).appendTo(inbox_row);
                $("<hr/>").appendTo(inbox_row);

                var inner_row = $("<div></div>").addClass("row").addClass("inbox_inner_row");

                $("<span></span>").addClass("glyphicon").addClass("glyphicon-pencil").attr("title", "Compose New Message").click(function()
                {
                    composeMessage();
                }).appendTo(inbox_row);
                compose_row.appendTo(inbox_row);

                $.each(thread_data, function(i, thread)
                {
                    thread.messages.reverse()
                    var thread_div = $("<div></div>").addClass("thread").addClass("col-xs-12").addClass("col-sm-12").addClass("col-md-12").addClass("col-lg-12");
                    var inner_thread_div = $("<div></div>").addClass("row").addClass("inbox_thread_item");
                    inner_thread_div.attr("id", "thread_" + thread.identifier);
                    inner_thread_div.click(function()
                    {
                        loadConversationInline(thread, thread_data, contacts);
                    });
                    var first_message = thread.messages[0];
                    var words = first_message.content.split(" ");
                    synopsis = "";
                    try
                    {
                        for(var k = 0; (k < 10 && k < words.length); k++)
                        {
                            synopsis += words[k] + " ";
                        }
                    }
                    catch(e)
                    {
                    }

                    var user_pic_div = $("<div></div>").addClass("col-xs-2").addClass("col-sm-2").addClass("col-md-1").addClass("col-lg-1");
                    if(window.user_identifier === first_message.sender_identifier)
                    {
                        user_pic_div.attr("title", "You");
                    }
                    else
                    {
                        user_pic_div.attr("title", ident_name_map[first_message.sender_identifier]);
                    }
                    $("<img />").addClass("img").addClass("img-responsive").attr("src", "//storage.googleapis.com/" + window.app_bucket + "/Images/ProfilePictures/Thumb/" + first_message.sender_identifier + ".jpg").addClass("inbox_profile_thumb").appendTo(user_pic_div);

                    var msg_div = $("<div></div>").addClass("col-xs-6").addClass("col-sm-6").addClass("col-md-7").addClass("col-lg-7").addClass("thread_synopsis");
                    msg_div.text($.trim(synopsis + "..."));

                    var date_div = $("<div></div>").addClass("col-xs-2").addClass("col-sm-2").addClass("xol-md-2").addClass("col-lg-2").addClass("thread_date");
                    var dayte = new Date(1970, 0, 1);
                    dayte = moment(dayte);
                    dayte.utc();
                    dayte.add(first_message.send_time, "milliseconds");
                    dayte.local();

                    var dayte2 = new Date();
                    var mins = dayte2.getTimezoneOffset();
                    dayte.subtract(mins, "minutes");
                    date_div.append
                    (
                        $("<p></p>").addClass("thread_date").text(dayte.format("MMM DD, hA"))
                    );

                    var icons_div = $("<div></div>").addClass("row").addClass("msg_icons");
                    var exclam_div = $("<div></div>").addClass("col-xs-12").addClass("col-sm-12").addClass("col-md-6").addClass("col-lg-6");
                    var attach_div = $("<div></div>").addClass("col-xs-12").addClass("col-sm-12").addClass("col-md-6").addClass("col-lg-6");

                    var exclam = $("<span></span>").addClass("glyphicon").addClass("glyphicon-exclamation-sign").attr("title", "Message is unread");
                    if(first_message.read_by_recipient || first_message.recipient_identifier !== window.user_identifier)
                    {
                        exclam.css("visibility", "hidden");
                    }
                    else
                    {
                        inner_thread_div.addClass("unread_thread_item");
                    }
                    exclam.appendTo(exclam_div);

                    var attach = $("<span></span>").addClass("glyphicon").addClass("glyphicon-paperclip").attr("title", "Most recent message includes attachments");
                    if(first_message.blob_count === 0)
                    {
                        attach.css("visibility", "hidden");
                    }
                    attach.appendTo(attach_div);

                    exclam_div.appendTo(icons_div);
                    attach_div.appendTo(icons_div);

                    $.each([user_pic_div, msg_div, date_div, icons_div], function(k, div)
                    {
                        div.appendTo(inner_thread_div);
                    });
                    inner_thread_div.appendTo(thread_div);


                    thread_div.appendTo(inner_row);
                });
                inner_row.appendTo(inbox_row);
                if(offset > 0)
                {
                    $("<button></button>").addClass("btn").addClass("btn-primary").text("Previous").css("margin-top", "1em").click(function()
                    {
                        clearApp(function()
                        {
                            loadInbox(contacts, offset - 50);
                        });                        
                    }).appendTo(inbox_row);
                }
                if(thread_data.length === 50)
                {
                    $("<button></button>").addClass("btn").addClass("btn-primary").text("Next").css("margin-top", "1em").css("margin-left", "1em").click(function()
                    {
                        clearApp(function()
                        {
                            loadInbox(contacts, offset + 50);
                        });                        
                    }).appendTo(inbox_row);
                }


                inbox_spacer.appendTo(app_area);
                inbox_row.appendTo(app_area);
                inbox_spacer2.appendTo(app_area);
            }
            function loadConversationInline(thread, thread_data, contacts)
            {
                $(".msg_row").remove();
                $(".msg_file").remove();

                identifier_name_map = {};
                $.each(contacts, function(i, contact)
                {
                    identifier_name_map[contact.identifier] = contact.name;
                });

                var first_message = thread.messages[0];
                if(!first_message.read_by_recipient && first_message.recipient_identifier === window.user_identifier)
                {
                    $.post("./data", {"fn": "read_message", "identifier": first_message.identifier, "thread_identifier": thread.identifier}).done(function(resp)
                    {
                        thread.messages[0].read_by_recipient = true;
                        $("#thread_" + thread.identifier).removeClass("unread_thread_item");
                        loadConversationInline(thread, thread_data, contacts);
                    });
                    return;
                }

                var messages_row = $("<div></div>").addClass("msg_row");
                var reply_to_identifier = "-1"
                if(window.user_identifier === thread.original_sender_identifier)
                {
                    reply_to_identifier = thread.original_recipient_identifier;
                }
                else
                {
                    reply_to_identifier = thread.original_sender_identifier;
                }
                messages_row.addClass("reply_to_" + reply_to_identifier);

                var inner_messages_row = $("<div></div>").addClass("col-xs-12").addClass("col-sm-12").addClass("col-md-12").addClass("col-lg-12");
                $.each(JSON.parse(JSON.stringify(thread.messages)).reverse(), function(i, message)
                {
                    var spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");

                    var msg_pic_div = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1").addClass("msg_pic_div");
                    if(message.sender_identifier === window.user_identifier)
                    {
                        msg_pic_div.attr("title", "You");
                    }
                    else
                    {
                        msg_pic_div.attr("title", identifier_name_map[message.sender_identifier]);
                    }
                    msg_pic_div.append
                    (
                        $("<img />")
                        .addClass("img")
                        .addClass("img-responsive")
                        .attr("src", "//storage.googleapis.com/" + window.app_bucket + "/Images/ProfilePictures/Thumb/" + message.sender_identifier + ".jpg")
                    );

                    var dayte = new Date(1970, 0, 1);
                    dayte = moment(dayte);
                    dayte.utc();
                    dayte.add(message.send_time, "milliseconds");
                    dayte.local();
                    var dayte2 = new Date();
                    var mins = dayte2.getTimezoneOffset();
                    dayte.subtract(mins, "minutes");

                    var content_div = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-md-10").addClass("msg_content");
                    content_div.append
                    (
                        $("<pre></pre>").html(identifier_name_map[message.sender_identifier] + " &#8658; " + dayte.format("MMM DD, hA") + ":   &#8665;\n\n" + message.content)
                    );
                    if(message.blob_count > 0)
                    {
                        $("<hr />").appendTo(content_div);
                        $("<p></p>").text("Attachments:").appendTo(content_div);
                        for(var k = 0; k < message.blob_count; k++)
                        {
                            var file_name = message.blob_names[k];
                            var file_parts = file_name.split(".");
                            var extension = file_parts[file_parts.length - 1];

                            $("<p></p>").addClass("msg_attachment")
                            .append
                            (
                                $("<a></a>")
                                .attr("download", message.blob_names[k])
                                .attr("target", "_blank")
                                .text(" " + file_name)
                                .attr("href", "//storage.googleapis.com/" + window.app_bucket + "/MessageBlobs/" + message.identifier + "_" + (k + '') + "." + extension)
                            )
                            .prepend
                            (
                                $("<span></span>").addClass("glyphicon").addClass("glyphicon-paperclip")
                            )
                            .appendTo(content_div);
                        }
                        $("<hr />").appendTo(content_div);
                    }

                    if(i === thread.messages.length - 1)
                    {
                        $("<textarea></textarea>").addClass("inline_content_box").attr("placeholder", "Your reply...").appendTo(content_div);

                        $("<button></button>")
                        .addClass("btn")
                        .addClass("btn-primary")
                        .text(" Attach file")
                        .prepend
                        (
                            $("<span></span>")
                            .addClass("glyphicon")
                            .addClass("glyphicon-paperclip")
                        )
                        .click(function()
                        {
                            var idx = $(".msg_file").size() + '';

                            $("<input />")
                            .attr("type", "file")
                            .addClass("msg_file")
                            .attr("id", "msg_file_" + idx)
                            .css("display", "none")
                            .on("change", function()
                            {
                                var val = $(this).val();
                                while(val.indexOf("/") > -1)
                                {
                                    val = val.replace("/", "\\");
                                }
                                paths = val.split("\\");

                                var filename = "File #" + ((parseInt(idx) + 1) + '');
                                try
                                {
                                    filename = paths[paths.length - 1];
                                }
                                catch(eeeeeeee)
                                {
                                }

                                $("<p></p>")
                                .text(" " + filename)
                                .prepend
                                (
                                    $("<span></span>").addClass("glyphicon").addClass("glyphicon-paperclip")
                                )
                                .appendTo(".inline_msg_file_list");
                            }).appendTo($("body"));

                            $("#msg_file_" + idx).trigger("click");
                        }).appendTo(content_div);

                        $("<button></button>")
                        .addClass("btn")
                        .addClass("btn-success")
                        .text(" Reply")
                        .prepend
                        (
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-share-alt")
                        )
                        .click(function()
                        {
                            var identifier = thread.identifier;
                            var msg_row = $("#thread_" + identifier).nextAll(".msg_row").first();
                            var len = msg_row.find(".msg_content").length;
                            if(len >= 30)
                            {
                                window.alert("This conversation is growing too large. Please start a new message instead of replying.");
                                return;
                            }

                            sendNPMessage(thread.identifier, thread_data);
                        }).appendTo(content_div);

                        $("<button></button>")
                        .addClass("btn")
                        .addClass("btn-danger")
                        .html("&larr; Back")
                        .click(function()
                        {
                            $(".msg_row").remove();
                            $(".msg_file").remove();
                        }).appendTo(content_div);

                        $("<div></div>").addClass("inline_msg_file_list").appendTo(content_div);
                    }

                    var inner_inner = $("<div></div>").addClass("row");
                    if(window.user_identifier === message.original_sender_identifier)
                    {
                        msg_pic_div.appendTo(inner_inner);
                        content_div.appendTo(inner_inner);
                        spacer.appendTo(inner_inner);
                    }
                    else
                    {
                        spacer.appendTo(inner_inner);
                        msg_pic_div.appendTo(inner_inner);
                        content_div.appendTo(inner_inner);
                    }
                    inner_inner.appendTo(inner_messages_row);
                });
                inner_messages_row.appendTo(messages_row);
                messages_row.insertAfter($("#thread_" + thread.identifier));
                messages_row.find(".msg_content").last()[0].scrollIntoView();
            }
            function sendNPMessage(identifier, thread_data)
            {
                if
                (
                    (
                        $(".compose_row").find("textarea").size() > 0               &&
                        $.trim($(".compose_row").find("textarea").val()).length < 1 &&
                        $(".msg_content").size() === 0
                    )

                    ||

/*                    (
                        $(".msg_content").find("textarea").size() > 0            &&
                        $.trim($(".msg_content").find("textarea").val()).length < 1
                    )*/
                    false

                )
                {
                    window.alert("The message cannot be empty!");
                    return;
                }

                var new_thread = false;
                if(typeof(identifier) + '' === "undefined")
                {
                    identifier = "-1"
                    new_thread = true;
                }

                var new_message = (identifier === "-1")

                var pre_completion_fn = function()
                {
                    if(new_message)
                    {
                        $(".compose_row").find(".btn-success").text("Sending...");
                    }
                    else
                    {
                        $(".msg_content").find(".btn-success").text("Sending...");
                    }
                };

                var post_completion_fn = function(resp)
                {
                    if(new_message)
                    {
                        $("#inbox").trigger("click");
                    }
                    else
                    {
                        var cont = true;
                        var thing_to_step_through = thread_data;
                        if(typeof(thread_data["threads"]) + '' !== "undefined")
                        {
                            thing_to_step_through = thread_data.threads;
                        }
                        $.each(thing_to_step_through, function(i, thread)
                        {
                            if(!cont)
                            {
                                return;
                            }
                            if(thread.identifier === identifier)
                            {
                                thread.messages.unshift(resp.threads[0].messages[resp.threads[0].messages.length - 1]);
                                cont = false;
                            }
                        });
                        $(".msg_content").find(".btn-danger").trigger("click");
                        $("#thread_" + identifier).trigger("click");
                    }
                };

                var textarea_parent = $(".compose_row");
                var textarea_parent_class = "compose_row";
                var recipients = [];
                if(new_thread)
                {
                    $(".recipients_div").find("img").each(function(i, e)
                    {
                        recipients.push
                        (
                            $(e).attr("id").replace("recipient_of_", "")
                        );
                    });
                }
                else
                {
                    textarea_parent = $(".msg_row");
                    textarea_parent_class = "msg_row";
                    recipients.push($.trim($(".msg_row").attr("class").replace("msg_row", "").replace("reply_to_", "")));
                }

                if(recipients.length + $(".msg_content").size() === 0)
                {
                    window.alert("You must choose at least one recipient");
                    return;
                }

                if($(".msg_file").size() === 0)
                {
                    pre_completion_fn();
                    $.post("./data", {"fn": "send_message", "identifier": identifier, "has_files": "0", "file_count": "0", "txt": $.trim(textarea_parent.find("textarea").eq(0).val()), "recipients": JSON.stringify(recipients)}).done(function(resp)
                    {
                        post_completion_fn(resp);
                    });
                }
                else
                {
                    var formData = new FormData();

                    formData.append("fn", "send_message");
                    formData.append("identifier", identifier);
                    formData.append("has_files", "1");
                    formData.append("txt", $.trim(textarea_parent.find("textarea").eq(0).val()));
                    formData.append("recipients", JSON.stringify(recipients));
                    formData.append("file_count", ($(".msg_file").size() + ''));

                    $(".msg_file").each(function(i, e)
                    {
                        formData.append($(e).attr("id"), $(e)[0].files[0]);
                    });

                    var xhr = new XMLHttpRequest();
                    (xhr.upload || xhr).addEventListener("progress", function(e)
                    {
                        var done = e.position || e.loaded
                        var total = e.totalSize || e.total;
                        var completion_percentage = (Math.round(done/total*100) + '') + "%";
                        $("." + textarea_parent_class + " .glyphicon-success").html("&nbsp;&nbsp;&nbsp;&nbsp;" + completion_percentage);

                    });
                    xhr.addEventListener("load", function(e)
                    {
                        post_completion_fn($.parseJSON(e.target.responseText));
                    });
                    xhr.open("POST", "./data");
                    xhr.send(formData);
                }
            }
            function manageChecklists()
            {
                var app_area = $("#app_area");
                var manage_clist_spacer = $("<div></div>").addClass("col-xs-0").addClass("col-sm-0").addClass("col-md-1").addClass("col-lg-1");
                var manage_clist_row = $("<div></div>").addClass("col-xs-12").addClass("col-sm-12").addClass("col-md-10").addClass("col-lg-10").css("margin-bottom", "1em").addClass("manageclistrow");
                var manage_clist_spacer2 = manage_clist_spacer.clone();

                var title = $("<h2></h2>");
                title.addClass("clist_title").text("Checklist Builder - ").prepend($("<span></span>").html("&nbsp;").addClass("glyphicon glyphicon-th-list")).append($("<span></span>").addClass("ctitle_action").text("Active Checklists")).appendTo(manage_clist_row);

                var inner_row = $("<div></div>").addClass("row").addClass("checklist_inner_view_main");

                // get all the surveys/checklists
                $.post("./data", {"fn": "enumerate_surveys"}).done(function(resp)
                {
                    if(resp.surveys.length === 0)
                    {
                        $("<hr />").insertAfter(title);
                        $("<p></p>").addClass("no_surveys").addClass("label").text("You have no checklists").insertAfter(title.next());
                    }
                    else
                    {
                        $.each(resp.surveys, function(i, survey)
                        {
                            if(i === 0)
                            {
                                $("<hr />").appendTo(manage_clist_row);
                            }
                            $("<p></p>").addClass("edit_checklist_name").addClass("checklist_with_identifier_of_" + survey.identifier).text(survey.name).appendTo(manage_clist_row);

                            var actions_p = $("<p></p>").addClass("edit_checklist_actions_btns");

                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-pencil").attr("title", "Edit Name").click(function()
                            {
                                var identifier = $(this).parent().prevAll(".edit_checklist_name").eq(0).attr("class").replace("edit_checklist_name", "").replace("checklist_with_identifier_of_", "");
                                identifier = $.trim(identifier);
                                $(this).parent().find(".glyphicon").addClass("hidden_btns");
                                $(this).parent().prevAll(".edit_checklist_name").eq(0).attr("contenteditable", "true").blur(function()
                                {
                                    updateSurveyName(identifier, $.trim($(this).text()));
                                    $(".hidden_btns").removeClass("hidden_btns");
                                });
                                $(this).parent().prevAll(".edit_checklist_name")[0].focus();

                            }).appendTo(actions_p);

                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-bell").attr("title", "Manage Triggers").click(function()
                            {
                                var identifier = $(this).parent().prevAll(".edit_checklist_name").eq(0).attr("class").replace("edit_checklist_name", "").replace("checklist_with_identifier_of_", "");
                                identifier = $.trim(identifier);
                                editTriggersForSurvey(identifier);
                            }).appendTo(actions_p);
                            if(!survey.activated)
                            {
                                $("<span></span>").addClass("glyphicon").addClass("glyphicon-bullhorn").attr("title", "Activate Checklist").click(function()
                                {
                                    $.post("./data", {"fn": "publish_survey", "identifier": survey.identifier}).done(function(resp)
                                    {
                                        localStorage.setItem("button_to_click", "checklist_builder");
                                        window.location.reload();
                                    });
                                }).appendTo(actions_p);
                            }
                            else
                            {
                                $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove-sign").attr("title", "Deactivate Checklist").click(function()
                                {
                                    $.post("./data", {"fn": "unpublish_survey", "identifier": survey.identifier}).done(function(resp)
                                    {
                                        localStorage.setItem("button_to_click", "checklist_builder");
                                        window.location.reload();
                                    });
                                }).appendTo(actions_p);
                            }

                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-edit").attr("title", "Manage Questions").click(function()
                            {
                                var identifier = $(this).parent().prevAll(".edit_checklist_name").eq(0).attr("class").replace("edit_checklist_name", "").replace("checklist_with_identifier_of_", "");
                                identifier = $.trim(identifier);
                                clearApp(function()
                                {
                                    editQuestionsForSurvey(identifier);
                                });
                            }).appendTo(actions_p);

                            var cls_name_map = {"0": "glyphicon-eye-close", "1": "glyphicon-eye-open"};
                            var cls_fn_map = {"0": anonymizeSurvey, "1": deAnonymizeSurvey};

                            var key_to_use = (survey.anonymous * 1) + '';
                            $("<span></span>").addClass("glyphicon").addClass(cls_name_map[key_to_use]).attr("title", "Change Anonymity").click(function()
                            {
                                var identifier = $(this).parent().prevAll(".edit_checklist_name").eq(0).attr("class").replace("edit_checklist_name", "").replace("checklist_with_identifier_of_", "");
                                identifier = $.trim(identifier);

                                cls_fn_map[key_to_use](identifier);
                            }).appendTo(actions_p);

                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-play-circle").attr("title", "Preview Checklist").click(function()
                            {
                                previewSurvey(survey);
                            }).appendTo(actions_p);

                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-trash").attr("title", "Delete Checklist").click(function()
                            {
                                var identifier = $(this).parent().prevAll(".edit_checklist_name").eq(0).attr("class").replace("edit_checklist_name", "").replace("checklist_with_identifier_of_", "");
                                identifier = $.trim(identifier);

                                promptForChecklistDelete(identifier);
                            }).appendTo(actions_p);

                            actions_p.appendTo(manage_clist_row);

                            $("<hr />").appendTo(manage_clist_row);
                        });
                    }

                    var btn_menu = $("<div></div>").attr("id", "checklist_button_menu_main");
                    var add_survey_btn = $("<button type='button'></button>").addClass("btn").addClass("btn-success").text("+ New Checklist");
                    add_survey_btn.click(function()
                    {
                        showAddNewSurvey();
                    });
                    add_survey_btn.appendTo(btn_menu);

                    inner_row.appendTo(manage_clist_row);

                    btn_menu.appendTo(manage_clist_row);

                    manage_clist_spacer.appendTo(app_area);
                    manage_clist_row.appendTo(app_area);
                    manage_clist_spacer2.appendTo(app_area);
                });
            }
            function previewSurvey(survey)
            {
                $.post("./data", {"fn": "list_triggers_for_survey", "identifier": survey.identifier}).done(function(resp)
                {
                    var reqd_entities = [];
                    for(var key in resp)
                    {
                        if((key === "field" || key === "survey") && (reqd_entities.indexOf("FieldApplicationEntry") === -1 && reqd_entities.indexOf("SurveyBooking") === -1))
                        {
                            reqd_entities.push("FieldApplicationEntry");
                            reqd_entities.push("SurveyBooking");
                        }
                    }

                    if(reqd_entities.length > 0)
                    {
                        fetchRequiredEntities(survey, resp, reqd_entities);
                    }
                });
            }
            function fetchRequiredEntities(survey, triggers, entity_list)
            {
                var html = $("<div></div>");
                var after_dialog_launch_fns = [];

                if(entity_list.indexOf("FieldApplicationEntry") > -1 || entity_list.indexOf("SurveyBooking") > -1)
                {
                    $("<p></p>").text("Because a trigger associated with the field rep and/or surveyor was chosen, you must first choose a test value for the SurveyBooking entity in order to continue with the preview...").appendTo(html);
                    $("<hr />").appendTo(html);
                    $("<input />").attr("type", "text").attr("placeholder", "Customer First Name").attr("id", "search_cust_first").appendTo(html);
                    $("<input />").attr("type", "text").attr("placeholder", "Customer Last Name").attr("id", "search_cust_last").appendTo(html);
                    $("<input />").attr("type", "text").attr("placeholder", "Customer Zip Code").attr("id", "search_cust_postal").appendTo(html);
                    $("<br />").appendTo(html);

                    $("<button></button>").attr("type", "button").addClass("btn").addClass("btn-info").addClass("form-control").text("Search").attr("id", "search_search_btn").appendTo(html);

                    after_dialog_launch_fns.push(function()
                    {
                        $("#search_search_btn").click(function()
                        {
                            $("#search_search_btn").text("Searching...");
                            setTimeout(function()
                            {
                                $.post("./data", {"fn": "search_booking_for_survey_preview", "cust_first": $.trim($("#search_cust_first").val()), "cust_last": $.trim($("#search_cust_last").val()), "cust_postal": $.trim($("#search_cust_postal").val())}).done(function(resp)
                                {
                                    var result = resp.result;
                                    if(resp.result !== null)
                                    {
                                        $("#search_cust_first").css("display", "none");
                                        $("#search_cust_last").css("display", "none");
                                        $("#search_cust_postal").css("display", "none");
                                        $("#search_search_btn").css("display", "none");

                                        $("<a></a>").attr("target", "_blank").attr("href", "./preview_survey?identifier=" + survey.identifier + "&b_identifier=" + result).text("Goto Preview").insertAfter($("#search_search_btn"));
                                    }
                                    else
                                    {
                                        window.alert("No customer with such information could be found.");
                                        $("#search_search_btn").text("Search again?");
                                    }
                                });
                            }, 500);
                        });
                    });
                }

                BootstrapDialog.show
                (
                    {
                        "title": "Choose a Test Value",
                        "message": html.html()
                    }
                );

                setTimeout(function()
                {
                    $.each(after_dialog_launch_fns, function(i, fn)
                    {
                        fn();
                    });
                }, 250);
            }
            function promptForChecklistDelete(identifier)
            {
                var html = $("<div></div>");
                $("<center></center>").append(
                    $("<button></button>").addClass("btn").addClass("btn-danger").attr("id", "confirm_checklist_delete_cancel").text("Cancel")
                ).prepend(
                    $("<p></p>").text("Delete responses as well?")
                ).appendTo(html);

                BootstrapDialog.show
                (
                    {
                        "title": "Confirm Deletion",
                        "message": html.html(),
                        "buttons":
                        [
                            {
                                "label": "With Responses",
                                "action": function(dialog)
                                {
                                    dialog.setTitle("Deleting...");
                                    deleteChecklist(identifier, true);
                                }
                            },
                            {
                                "label": "Without Responses",
                                "action": function(dialog)
                                {
                                    dialog.setTitle("Deleting...");
                                    deleteChecklist(identifier, false);
                                }
                            }
                        ]
                    }
                );

                setTimeout(function()
                {
                    $("#confirm_checklist_delete_cancel").click(function()
                    {
                        $.each(BootstrapDialog.dialogs, function(i, dialog)
                        {
                            dialog.close();
                        });
                    });
                }, 200);
            }
            function deleteChecklist(identifier, with_content)
            {
                var with_content_str = (with_content * 1) + '';

                setTimeout(function()
                {
                    $.post("./data", {"fn": "delete_survey", "identifier": identifier, "with_content": with_content_str}).done(function(resp)
                    {
                        $.each(BootstrapDialog.dialogs, function(i, dialog)
                        {
                            dialog.close();
                            localStorage.setItem("button_to_click", "checklist_builder");
                            window.location.reload();
                        });
                    });
                }, 250);
            }
            function showAddNewSurvey()
            {
                $(".checklist_inner_view_main").prevAll("*").each(function(i, e)
                {
                    if(!$(e).hasClass("clist_title"))
                    {
                        $(e).css("display", "none");
                    }
                });
                var show_add_cb_fn_1 = function()
                {
                    $(".checklist_inner_view_main").css("display", "none");
                    $(".checklist_inner_view_add").remove();

                    window.is_first_end_click = true;
                    window.is_first_start_click = true;

                    var inner_row_add = $("<div></div>").addClass("row").addClass("checklist_inner_view_add");

                    var form = $("<div></div>");
                    $("<input class='form-control' />").attr("type", "text").addClass("show_add_new_survey_name").attr("placeholder", "Name the checklist...").appendTo(form);
                    $("<br />").appendTo(form);

                    var trigger_div = $("<div></div>").addClass("create_clist_triggers");

                    var trigger_dropdown = $("<div></div>").addClass("dropdown trigger_filter_dropdown");
                    $("<button></button>").attr("class", "btn btn-default dropdown-toggle").attr("type", "button").attr("id", "dropdownActionFilter").attr("data-toggle", "dropdown").attr("aria-expanded", "true").text("Trigger Types").append($("<span class='caret'></span>"))
                    .appendTo(trigger_dropdown);

                    var filter_ul = $("<ul class='dropdown-menu' role='menu' aria-labelledby='dropdownMenu2'></ul>");
                    var field_li = $("<li role='presentation' id='filter_field'></li>");
                    $("<a role='menuitem' tabindex='-1' href='javascript:void(0);'></a>").text("Field Rep").appendTo(field_li);

                    var survey_li = $("<li role='presentation' id='filter_survey'></li>");
                    $("<a role='menuitem' tabindex='-1' href='javascript:void(0);'></a>").text("Surveyor").appendTo(survey_li);

                    field_li.appendTo(filter_ul);
                    survey_li.appendTo(filter_ul);

                    filter_ul.appendTo(trigger_dropdown);

                    $("<span></span>").html("&nbsp;&nbsp;&nbsp;Anonymous? ").append($("<input />").attr("type", "checkbox").attr("id", "anonymous_checklist")).appendTo(trigger_dropdown);
                    trigger_dropdown.appendTo(trigger_div);

                    $("<ul></ul>").addClass("create_clist_triggers_list").appendTo(trigger_div);

                    trigger_div.appendTo(form);

                    $.post("/data", {"fn": "list_survey_triggers"}).done(function(resp)
                    {
                        window.filter_state_checklist = {};
                        for(var key in resp)
                        {
                            window.filter_state_checklist[key] = {}
                            for(var key2 in resp[key])
                            {
                                window.filter_state_checklist[key][key2] = false;
                            }
                        }
                        filter_ul.find("li").each(function(i, e)
                        {
                            $(e).click(function()
                            {
                                $(".create_clist_triggers_list").find("li").remove();
                                var filter_id = $(e).attr("id").replace("filter_", "");

                                $("#dropdownActionFilter").text($(e).text());
                                $("<span></span>").addClass("caret").appendTo($("#dropdownActionFilter"));

                                for(var key in resp[filter_id])
                                {
                                    var li = $("<li></li>").addClass("filter_li_item");
                                    li.text(resp[filter_id][key]);
                                    li.attr("id", "apply_filter_for_" + filter_id + "_" + key);

                                    var cbox = $("<input />").attr("type", "checkbox");
                                    if(window.filter_state_checklist[filter_id][key])
                                    {
                                        cbox[0].checked = true;
                                    }
                                    cbox.change(function()
                                    {
                                        var clsname = $(this).parent().attr("id").replace("apply_filter_for_", "");
                                        var names = clsname.split("_");
                                        var filter_id2 = names[0];

                                        clsname2 = clsname.replace("apply_filter_for_", "");
                                        clsname2 = clsname2.replace(names[0] + "_", "");

                                        var filter_id3 = clsname2;

                                        window.filter_state_checklist[filter_id2][filter_id3] = $(this)[0].checked;
                                    });
                                    cbox.appendTo(li);

                                    li.appendTo($(".create_clist_triggers_list"));

                                }
                            });
                        });
                    });

                    var enable_div = $("<div></div>").attr("id", "enable_time_config").html("Configure Start/End Times&nbsp;&nbsp;&nbsp;");
                    $("<input />").attr("type", "checkbox").attr("id", "enable_time_config_cb").change(function()
                    {
                        if($(this)[0].checked)
                        {
                            $("#enable_time_config").css("display", "none");
                            $(".end-clock, .start-clock, .optional_time_span, #cancel_time_config").css("display", "block");

                            datepickers["show_add_et"].setDate(new Date());
                            datepickers["show_add_st"].setDate(new Date());

                            $(this)[0].checked = false;
                        }
                    }).appendTo(enable_div);
                    enable_div.appendTo(form);

                    var st_clock = $("<span></span>").addClass("glyphicon").addClass("glyphicon-time").addClass("start-clock").click(function()
                    {
                        if($(".popover_for_end-time").size() > 0)
                        {
                            $(".popover_for_end-time").css("display", "none");
                        }
                        if(window.is_first_start_click)
                        {
                            $(".start-time")[0].focus();
                            $(".start-time")[0].blur();
                            setTimeout(function()
                            {
                                $(".start-time").trigger("click");
                            }, 20);
                            return;
                            window.is_first_start_click = false;
                        }
                        if(!window.is_first_start_click)
                        {
                            setTimeout(function()
                            {
                                if($(".popover_for_start-time").css("display").toLowerCase() === "block")
                                {
                                    $(".popover_for_start-time").css("display", "none");
                                }
                                else if($(".popover_for_start-time").css("display").toLowerCase() === "none")
                                {
                                    $(".popover_for_start-time").css("display", "block");
                                }
                            }, 50);
                        }
                    });

                    var et_clock = $("<span></span>").addClass("glyphicon").addClass("glyphicon-time").addClass("end-clock").click(function()
                    {
                        if($(".popover_for_start-time").size() > 0)
                        {
                            $(".popover_for_start-time").css("display", "none");
                        }
                        if(window.is_first_end_click)
                        {
                            $(".end-time")[0].focus();
                            $(".end-time")[0].blur();
                            setTimeout(function()
                            {
                                $(".end-time").trigger("click");
                            }, 20);
                            return;
                            window.is_first_end_click = false;
                        }
                        if(!window.is_first_end_click)
                        {
                            setTimeout(function()
                            {
                                if($(".popover_for_end-time").css("display").toLowerCase() === "block")
                                {
                                    $(".popover_for_end-time").css("display", "none");
                                }
                                else if($(".popover_for_end-time").css("display").toLowerCase() === "none")
                                {
                                    $(".popover_for_end-time").css("display", "block");
                                }
                            }, 50);
                        }
                    });

                    var start_time_input = $("<input />").attr("type", "text").attr("value", "00:00").addClass("start-time")
                    .keyup(function(ev)
                    {
                        ev.preventDefault();
                    }).keydown(function(ev)
                    {
                        ev.preventDefault();
                    }).on("keypress", function(ev)
                    {
                        ev.preventDefault();
                    }).clockpicker();


                    var end_time_input = $("<input />").attr("type", "text").attr("value", "00:00").addClass("end-time")
                    .keyup(function(ev)
                    {
                        ev.preventDefault();
                    }).keydown(function(ev)
                    {
                        ev.preventDefault();
                    }).on("keypress", function(ev)
                    {
                        ev.preventDefault();
                    }).clockpicker();

                    end_time_input.appendTo(form);
                    start_time_input.appendTo(form);

                    et_clock.appendTo(form);
                    st_clock.appendTo(form);

                    $("<div></div>").attr("id", "show_add_et_dt").attr("class", "input-append date").attr("data-date", "01-01-3014").attr("data-date-format", "dd-mm-yyyy")
                    .append(
                        $("<input />").addClass("span2").attr("type", "text").attr("value", "01-01-3014").attr("id", "show_add_et")
                        .keyup(function(ev)
                        {
                            ev.preventDefault();
                        })
                        .keydown(function(ev)
                        {
                            ev.preventDefault();
                        })
                        .on("keypress", function(ev)
                        {
                            ev.preventDefault();
                        }).datepicker
                        (
                            {
                                format: "mm-dd-yyyy",
                                autoClose: true
                            }
                        )
                    )
                    .append(
                        $("<span></span>").append($("<i></i>").addClass("icon-th")).addClass("add-on")
                    )
                    .appendTo(form);


                    $("<div></div>").attr("id", "show_add_st_dt").attr("class", "input-append date").attr("data-date", "01-01-1970").attr("data-date-format", "dd-mm-yyyy")
                    .append(
                        $("<input />").addClass("span2").attr("type", "text").attr("value", "01-01-1970").attr("id", "show_add_st")
                        .keyup(function(ev)
                        {
                            ev.preventDefault();
                        })
                        .keydown(function(ev)
                        {
                            ev.preventDefault();
                        })
                        .on("keypress", function(ev)
                        {
                            ev.preventDefault();
                        })
                        .datepicker
                        (
                            {
                                format: "mm-dd-yyyy",
                                autoClose: true
                            }
                        )
                    )
                    .append(
                        $("<span></span>").append($("<i></i>").addClass("icon-th")).addClass("add-on")
                    )
                    .appendTo(form);


                    var st_span = $("<span></span>").text("Optional Start Date ").addClass("optional_time_span").addClass("label").addClass("label-primary");
                    st_span.click(function()
                    {
                        if(typeof(datepickers["show_add_et"]) + '' !== "undefined")
                        {
                            datepickers["show_add_et"].picker.hide()
                        }
                        $("#show_add_st")[0].focus();
                    });

                    var et_span = $("<span></span>").text("Optional End Date").addClass("optional_time_span").addClass("label").addClass("label-primary").css("clear", "both");
                    et_span.click(function()
                    {
                        if(typeof(datepickers["show_add_st"]) + '' !== "undefined")
                        {
                            datepickers["show_add_st"].picker.hide()
                        }
                        $("#show_add_et")[0].focus();
                    });

                    et_span.appendTo(form);
                    st_span.appendTo(form);

                    var cancel_time_config = $("<div></div>").attr("id", "cancel_time_config").html("Cancel Start/End Time&nbsp;&nbsp;&nbsp;");
                    $("<input />").attr("id", "cancel_time_config_cb").attr("type", "checkbox").change(function()
                    {
                        if($(this)[0].checked)
                        {
                            $("#enable_time_config").css("display", "block");
                            $(".end-clock, .start-clock, .optional_time_span, #cancel_time_config").css("display", "none");

                            datepickers["show_add_et"].setDate(new Date(3014, 0, 1));
                            datepickers["show_add_st"].setDate(new Date(1970, 0, 1));

                            $(".start-time").val("00:00");
                            $(".end-time").val("00:00");

                            $(this)[0].checked = false;
                        }
                    }).appendTo(cancel_time_config);
                    cancel_time_config.appendTo(form);

                    var inner_inner_row = $("<div></div>").addClass("inner_buttons_add").addClass("row");

                    var left_col = $("<div></div>").addClass("col-xs-6").addClass("col-sm-6").addClass("col-md-6").addClass("col-lg-6");
                    var right_col = left_col.clone();

                    $("<button />").attr("type", "button").addClass("btn").addClass("btn-danger").html("&#8592;&nbsp;Back").click(function()
                    {
                        $("#checklist_builder").trigger("click");
                    }).appendTo(left_col);

                    $("<button />").attr("type", "button").addClass("btn").addClass("btn-success").html("<span class='glyphicon glyphicon-ok'></span>&nbsp;Save").click(function()
                    {
                        // validate the data
                        var name = $.trim($(".show_add_new_survey_name").val());
                        if(name.length < 1)
                        {
                            window.alert("You must provide a name for this checklist");
                            return;
                        }

                        var true_count = 0;
                        for(var key in window.filter_state_checklist)
                        {
                            for(var key2 in window.filter_state_checklist[key])
                            {
                                true_count += (window.filter_state_checklist[key][key2] === true) * 1;
                            }
                        }
                        if(true_count < 1)
                        {
                            window.alert("At least one trigger is required for a checklist");
                            return;
                        }

                        var start_time = moment($("#show_add_st").val().replace(/-/g, ""), "MMDDYYYY");
                        var start_time_clock_val = $(".start-time").val();

                        start_time.add(parseInt(start_time_clock_val.split(":")[0]), "hour");
                        start_time.add(parseInt(start_time_clock_val.split(":")[1]), "minute");
                        if($("#show_add_st").val().indexOf("1970") === -1)
                        {
                            if(start_time.fromNow().indexOf("ago") !== -1)
                            {
                                window.alert("The start time must begin in the future")
                                return;
                            }
                        }

                        var end_time = moment($("#show_add_et").val().replace(/-/g, ""), "MMDDYYYY");
                        var end_time_clock_val = $(".end-time").val();

                        end_time.add(parseInt(end_time_clock_val.split(":")[0]), "hour");
                        end_time.add(parseInt(end_time_clock_val.split(":")[1]), "minute");
                        if($("#show_add_et").val().indexOf("3014") === -1)
                        {
                            if(end_time.fromNow().indexOf("ago") !== -1)
                            {
                                window.alert("The end time must begin in the future");
                                return;
                            }
                        }

                        var time_diff = end_time - start_time;
                        if(time_diff < 1)
                        {
                            window.alert("The end time must be later than the start time");
                            return;
                        }

                        saveNewSurvey();

                    }).appendTo(right_col);

                    left_col.appendTo(inner_inner_row);
                    right_col.appendTo(inner_inner_row);

                    form.appendTo(inner_row_add);
                    inner_inner_row.appendTo(inner_row_add);

                    inner_row_add.insertAfter($(".checklist_inner_view_main"));


                };
                window.show_add_cb_cnt1 = 0;
                $(".checklist_inner_view_main, #checklist_button_menu_main, .no_surveys").animate({opacity: 0.0}, 250, function()
                {
                    window.show_add_cb_cnt1++;
                });

                window.show_add_temp_interval_1 = setInterval(function()
                {
                    if(window.show_add_cb_cnt1 === 2 + $(".no_surveys").size())
                    {
                        $(".ctitle_action").text("Creating a Checklist")
                        show_add_cb_fn_1();
                        window.clearInterval(window.show_add_temp_interval_1);
                    }
                }, 20);


            }
            function saveNewSurvey()
            {
                var html = $("<div></div>");
                $("<p>The following checklist will be created:</p>").appendTo(html);
                $("<hr />").appendTo(html);
                $("<p></p>").appendTo(html);
                $("<p></p>").html("<b>Name: </b>" + $.trim($(".show_add_new_survey_name").val())).appendTo(html);

                var anonymity_map = {"0": "Off", "1": "On"};
                var our_anon = anonymity_map[($("#anonymous_checklist")[0].checked * 1) + ''];
                $("<p></p>").html("<b>Anonymity: </b>" + our_anon).appendTo(html);
                $("<p></p>").html("<b>Applied Triggers: </b>").appendTo(html);

                var ul = $("<ul></ul>").css("list-style-type", "none");
                for(var key in window.filter_state_checklist)
                {
                    for(var key2 in window.filter_state_checklist[key])
                    {
                        if(window.filter_state_checklist[key][key2] === true)
                        {
                            $("<li></li>").html("&#10003;&nbsp;" + $("#apply_filter_for_" + key + "_" + key2).text()).appendTo(ul);
                        }
                    }
                }
                ul.appendTo(html);
                $("<p></p>").appendTo(html);

                var start_time = "Upon publication";
                var end_time = "Until Removed";

                if($("#show_add_st").val().indexOf("1970") < 0)
                {
                    var st = moment($("#show_add_st").val().replace(/-/g, ""), "MMDDYYYY");
                    var st_time = $(".start-time").val();
                    st.add(st_time.split(":")[0], "hour");
                    st.add(st_time.split(":")[1], "minute");
                    start_time = st.format("dddd, MMMM Do YYYY, h:mm:ss a");

                    var et = moment($("#show_add_et").val().replace(/-/g, ""), "MMDDYYYY");
                    var et_time = $(".end-time").val();
                    et.add(et_time.split(":")[0], "hour");
                    et.add(et_time.split(":")[1], "minute");
                    end_time = et.format("dddd, MMMM Do YYYY, h:mm:ss a");
                }
                $("<p><b>Start Date: </b>" + start_time + "</p>").appendTo(html);
                $("<p><b>End Date: &nbsp;&nbsp;</b>" + end_time + "</p>").appendTo(html);
                $("<p></p>").appendTo(html);
                $("<center><button class='btn btn-danger' id='button66'>Cancel</button></center>").click(function()
                {

                }).appendTo(html);

                $("<p></p>").appendTo(html);

                BootstrapDialog.alert(
                    {
                        "title": "Confirm Checklist Creation",
                        "message": html.html()
                    }
                );

                setTimeout(function()
                {
                    $("#button66").click(function()
                    {
                        $.each(BootstrapDialog.dialogs, function(i, dialog)
                        {
                            dialog.close();
                        });
                    });

                    $(".bootstrap-dialog-footer-buttons").find("button").click(function()
                    {
                        var payload = {};
                        payload["fn"] = "create_survey";
                        payload["name"] = $.trim($(".show_add_new_survey_name").val());
                        payload["start_time"] = $("#show_add_st").val() + "-" + $(".start-time").val().split(":")[0] + "-" + $(".start-time").val().split(":")[1];
                        payload["end_time"] = $("#show_add_et").val() + "-" + $(".end-time").val().split(":")[0] + "-" + $(".end-time").val().split(":")[1];
                        payload["anonymous"] = ($("#anonymous_checklist")[0].checked * 1) + '';

                        var trigger_obj = {};
                        for(var key in window.filter_state_checklist)
                        {
                            for(var key2 in window.filter_state_checklist[key])
                            {
                                if(window.filter_state_checklist[key][key2] === true)
                                {
                                    if(typeof(trigger_obj[key]) + '' === "undefined")
                                    {
                                        trigger_obj[key] = [];
                                    }
                                    trigger_obj[key].push(key2);
                                }
                            }
                        }

                        payload["triggers"] = JSON.stringify(trigger_obj);

                        $.post("/data", payload).done(function(resp)
                        {
                            $(".no_surveys label").remove();
                            $("#checklist_builder").trigger("click");
                        });
                    });
                }, 250);

            }
            function updateSurveyName(identifier, new_name)
            {
                $.post("./data", {"fn": "update_survey_name", "identifier": identifier, "name": new_name}).done(function(resp)
                {
                    $(".checklist_with_identifier_of_" + identifier)[0].blur();
                    $(".checklist_with_identifier_of_" + identifier).removeAttr("contenteditable");
                });
            }
            function editTriggersForSurvey(identifier)
            {
                $(".checklist_with_identifier_of_" + identifier).nextAll(".edit_checklist_actions_btns").eq(0).find(".glyphicon").addClass("hidden_btns");
                $(".checklist_with_identifier_of_" + identifier).nextAll(".edit_checklist_actions_btns").eq(0).nextAll("*").each(function(i, e)
                {
                    $(e).attr("style", "display: none");
                });
                var hit_first = false;
                var first_item_class = $(".edit_checklist_name").eq(0).attr("class");
                $(".checklist_with_identifier_of_" + identifier).prevAll("*").each(function(i, e)
                {
                    if(!hit_first)
                    {
                        if($(e).attr("class") === first_item_class)
                        {
                            hit_first = true;
                        }
                        $(e).attr("style", "display: none;");
                    }
                });
                $.post("/data", {"fn": "list_triggers_for_survey", "identifier": identifier}).done(function(resp)
                {
                    var current_triggers = resp;
                    console.log(resp);
                    $.post("/data", {"fn": "list_survey_triggers"}).done(function(resp2)
                    {
                        keys_to_remove = [];
                        all_triggers = resp2;

                        for(var key in all_triggers)
                        {
                            if(typeof(current_triggers[key]) + '' !== "undefined")
                            {
                                for(var i = 0; i < current_triggers[key].length; i++)
                                {
                                    var key2 = current_triggers[key][i];
                                    keys_to_remove.push(key + "|" + key2);

                                }
                            }
                        }
                        potential_triggers = JSON.parse(JSON.stringify(all_triggers));
                        $.each(keys_to_remove, function(i, key_to_remove)
                        {
                            var keyy1 = key_to_remove.split("|")[0];
                            var keyy2 = key_to_remove.split("|")[1];

                            delete potential_triggers[keyy1][keyy2];

                            if (Object.keys(potential_triggers[keyy1]).length === 0)
                            {
                                delete potential_triggers[keyy1];
                            }

                        });

                        var active_div = $("<div></div>").addClass("edit_filters").addClass("edit_filters_active");
                        $("<p></p>").text("Active Triggers").appendTo(active_div);

                        var active_ul = $("<ul></ul>").addClass("edit_active_filters_ul");

                        for(var key3 in current_triggers)
                        {
                            for(var i = 0; i < current_triggers[key3].length; i++)
                            {
                                var current_trigger = current_triggers[key3][i];
                                var li = $("<li></li>").addClass("edit_active_trigger_li");
                                li.click(function()
                                {
                                    if($(this).hasClass("active"))
                                    {
                                        $(this).removeClass("active");
                                    }
                                    else
                                    {
                                        $(this).addClass("active");
                                    }
                                });
                                li.text(getPrettyTriggerName(key3, current_trigger));
                                li.attr("data-trigger_name", key3 + "|" + current_trigger);

                                li.appendTo(active_ul);
                            }
                        }

                        active_ul.appendTo(active_div);

                        active_div.insertAfter($(".checklist_with_identifier_of_" + identifier).nextAll(".edit_checklist_actions_btns").eq(0));

                        var potential_div = $("<div></div>").addClass("edit_filters").addClass("edit_filters_potential");
                        $("<p></p>").text("Inactive Triggers").appendTo(potential_div);

                        var potential_ul = $("<ul></ul>").addClass("edit_potential_filters_ul");

                        for(var key3 in potential_triggers)
                        {
                            for(var key4 in potential_triggers[key3])
                            {
                                var potential_trigger = potential_triggers[key3][key4];

                                var li = $("<li></li>").addClass("edit_potential_trigger_li");
                                li.click(function()
                                {
                                    if($(this).hasClass("active"))
                                    {
                                        $(this).removeClass("active");
                                    }
                                    else
                                    {
                                        $(this).addClass("active");
                                    }
                                });
                                li.text(getPrettyTriggerName(key3, key4));
                                li.attr("data-trigger_name", key3 + "|" + key4);

                                li.appendTo(potential_ul);
                            }
                        }

                        potential_ul.appendTo(potential_div);
                        potential_div.insertAfter(active_div);

                        var manage_triggers_save_div = $("<div></div>").addClass("edit_triggers_save_btns");
                        $("<button></button").attr("type", "button").text("Cancel").addClass("btn").addClass("btn-danger").click(function()
                        {
                            $(this).parent().prevAll(".edit_filters").eq(0).remove();
                            $(this).parent().prevAll(".edit_filters").eq(0).remove();
                            $(this).parent().remove();

                            $(".checklist_with_identifier_of_" + identifier).nextAll(".edit_checklist_actions_btns").eq(0).nextAll("*").each(function(i, e)
                            {
                                $(e).removeAttr("style");
                            });
                            $(".checklist_with_identifier_of_" + identifier).prevAll("*").each(function(i, e)
                            {
                                $(e).removeAttr("style");
                            });

                            $(".hidden_btns").removeClass("hidden_btns");
                        }).appendTo(manage_triggers_save_div);
                        $("<button></button").attr("type", "button").text("Save").addClass("btn").addClass("btn-success").click(function()
                        {
                            updateTriggers(identifier);
                        }).appendTo(manage_triggers_save_div);
                        $("<button></button>").attr("type", "button").html("&#8679;").addClass("btn").addClass("btn-info").attr("title", "Active selected triggers").click(function()
                        {
                            $(".edit_filters_potential li").each(function(i, e)
                            {
                                if($(e).hasClass("active"))
                                {
                                    $(e).appendTo($(".edit_filters_active").find("ul").eq(0));
                                }
                            });
                            $(".active").removeClass("active");
                        }).appendTo(manage_triggers_save_div);
                        $("<button></button").attr("type", "button").html("&#8681;").addClass("btn").addClass("btn-info").attr("title", "Deactivate selected triggers").click(function()
                        {
                            $(".edit_filters_active li").each(function(i, e)
                            {
                                if($(e).hasClass("active"))
                                {
                                    $(e).appendTo($(".edit_filters_potential").find("ul").eq(0));
                                }
                            });
                            $(".active").removeClass("active");
                        }).appendTo(manage_triggers_save_div);

                        manage_triggers_save_div.insertAfter(potential_div);
                    });
                });
            }
            function updateTriggers(identifier)
            {
                $(".edit_filters_active ul").animate({opacity: 0.2}, 250, function()
                {
                    var triggers = {};
                    $(".edit_filters_active li").each(function(i, e)
                    {
                        var keys = $(e).attr("data-trigger_name").split("|");
                        var key1 = keys[0];
                        var key2 = keys[1];

                        if(typeof(triggers[key1]) + '' === "undefined")
                        {
                            triggers[key1] = [];
                        }
                        triggers[key1].push(key2);
                    });
                    triggers_json = JSON.stringify(triggers);
                    $.post("/data", {"fn": "set_triggers_for_survey", "identifier": identifier, "triggers": triggers_json}).done(function(resp)
                    {
                        $(".edit_filters_active ul").animate({opacity: 1.0}, 250);
                        $(".edit_triggers_save_btns").find(".btn-danger").trigger("click");
                    });
                });
            }
            function getPrettyTriggerName(trigger_name, trigger2_name)
            {
                if(typeof(trigger2_name) + '' === "undefined" || !trigger2_name)
                {
                    if(trigger_name ===- "field")
                    {
                        return "Field Rep User";
                    }
                    if(trigger_name === "survey")
                    {
                        return "Surveyor User";
                    }
                }
                else
                {
                    if(trigger_name === "field")
                    {
                        if(trigger2_name == "before_rep_completes_survey")
                        {
                            return "Before Field Rep Completes Survey";
                        }
                        if(trigger2_name == "after_rep_completes_survey")
                        {
                            return "After Field Rep Completes Survey";
                        }
                        if(trigger2_name == "after_rep_completes_sp2")
                        {
                            return "After Field Rep Completes SP2 Appointment";
                        }
                    }
                    if(trigger_name === "survey")
                    {
                        if(trigger2_name == "before_surveyor_updates_status_in_view")
                        {
                            return "Before Surveyor Provides Status Update";
                        }
                        if(trigger2_name == "after_surveyor_updates_status_in_view")
                        {
                            return "After Surveyor Provides Status Update";
                        }
                    }
                 }
            }
            function editQuestionsForSurvey(identifier, data, funding_list)
            {
                window.curr_survey_identifier_edit_mode = identifier;
                var cb_fns = [];
                if((typeof(data) + '') === "undefined")
                {
                    $.post("./data", {"fn": "get_questions_for_survey", "identifier": identifier}).done(function(resp)
                    {
                        editQuestionsForSurvey(identifier, resp);
                    });
                    return;
                }
                if((typeof(funding_list) + '') === "undefined")
                {
                    $.post("./data", {"fn": "list_funding_sources"}).done(function(resp)
                    {
                        editQuestionsForSurvey(identifier, data, resp)
                    });
                }
                window.funding_list = funding_list;


                $(".edit_questions_spacer, .manageclistrow").remove();
                var app_area = $("#app_area");

                var edit_questions_spacer = $("<div></div>").addClass("col-xs-0").addClass("col-sm-0").addClass("col-md-1").addClass("col-lg-1").addClass("edit_row_spacer");
                var edit_questions_row = $("<div></div>").addClass("col-xs-12").addClass("col-sm-12").addClass("col-md-10").addClass("col-lg-10").css("margin-bottom", "1em").addClass("manageclistrow");
                var edit_questions_spacer2 = edit_questions_spacer.clone();

                var title = $("<h2></h2>");
                title.addClass("clist_title").text("Checklist Builder - ").prepend($("<span></span>").html("&nbsp;").addClass("glyphicon glyphicon-th-list")).append($("<span></span>").addClass("ctitle_action").text("Edit Questions for \"" + data.survey_name + "\"")).appendTo(edit_questions_row);

                var clist_labels_row = $("<div></div>").addClass("row").addClass("clist_labels_row");

                $("<div></div>").addClass("col-xs-6").addClass("col-sm-6").addClass("col-md-6").addClass("col-lg-6").text("Question Text").appendTo(clist_labels_row);
                $("<div></div>").addClass("col-xs-3").addClass("col-sm-3").addClass("col-md-3").addClass("col-lg-3").text("Question Type").appendTo(clist_labels_row);
                $("<div></div>").addClass("col-xs-3").addClass("col-sm-3").addClass("col-md-3").addClass("col-lg-3").css("text-align", "center").text("Actions").appendTo(clist_labels_row);

                clist_labels_row.appendTo(edit_questions_row);

                var inner_row = $("<div></div>").addClass("row").addClass("questioneditor_inner_view_main");

                if(data.questions.length === 0)
                {
                    $("<hr />").insertAfter(title);
                    $("<p></p>").addClass("no_questions").addClass("label").text("You have no questions").insertAfter(title.next());
                }
                $.each(data.questions, function(i, question)
                {
                    var question_row = $("<div></div>").addClass("row").addClass("question_row");
                    question_row.attr("id", "question_" + question.identifier);
                    if(question.dependent_value !== "n/a")
                    {
                        question_row.addClass("branched");
                    }
                    if(question.dependency_type === "prev_q")
                    {
                        question_row.addClass("branched_beneath");
                    }
                    if(question.dependency_type === "entity_info")
                    {
                        question_row.addClass("branched_by_entity");
                    }

                    var text_row = $("<div></div>").addClass("col-xs-6").addClass("col-sm-6").addClass("col-md-6").addClass("col-lg-6").addClass("q_text_row");
                    $("<p></p>").text(question.question_text).on("click", function()
                    {
                        var q_identifier = $(this).parent().parent().attr("id").replace("question_", "");
                        $(this).attr("contenteditable", "true");

                        $(this).off("blur");
                        var that = $(this);
                        $(this).on("blur", function()
                        {
                            $.post("./data", {"fn": "set_question_text", "text": $.trim(that.text()), "identifier": q_identifier}).done(function(resp)
                            {
                                that.removeAttr("contenteditable");
                            });
                        });
                        $(this)[0].focus();
                    }).appendTo(text_row);

                    text_row.appendTo(question_row);

                    var config_row = $("<div></div>").addClass("col-xs-3").addClass("col-sm-3").addClass("col-md-3").addClass("col-lg-3").addClass("q_config_row");

                    var question_type_dropdown_div = $("<div></div>").addClass("dropdown").addClass("question_type_dropdown");
                    var question_type_dropdown_btn = $("<button></button>").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("data-toggle", "dropdown").addClass("sel_q_type");

                    question_type_dropdown_btn.text("Choose a Type");
                    $("<span></span>").addClass("caret").appendTo(question_type_dropdown_btn);

                    var question_type_ul = $("<ul class='dropdown-menu' role='menu' aria-labelledby='dropdownMenu2'></ul>");
                    var q_types_friendly = ["Yes/No", "Text Entry", "Multiple Choice"];
                    var q_types = ["yes_or_no", "text", "mult_choice"];
                    $.each(q_types, function(k, q_type)
                    {
                        var li = $("<li></li>");
                        li.attr("role", "presentation").attr("class", "q_type_of_" + q_type);

                        var a = $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text(q_types_friendly[k]);
                        a.appendTo(li);

                        li.click(function()
                        {
                            $("#question_" + question.identifier).find(".sel_q_type").text($(this).text());
                            $("<span></span>").addClass("caret").appendTo($("#question_" + question.identifier).find(".sel_q_type"));
                            $("#hidden_question_type_for_" + question.identifier).val($(this).attr("class").replace("q_type_of_", ""));
                            updateLayoutOptions(question, $(this).attr("class").replace("q_type_of_", ""));
                            qTypeChange(question.identifier);
                        });

                        li.appendTo(question_type_ul);
                    });

                    question_type_dropdown_btn.appendTo(question_type_dropdown_div);
                    question_type_ul.appendTo(question_type_dropdown_div);
                    $("<input />").attr("type", "hidden").attr("value", "n/a").attr("id", "hidden_question_type_for_" + question.identifier).appendTo(question_type_dropdown_div);

                    var update_layout_options = question.question_type !== "n/a";
                    if(question.question_type !== "n/a")
                    {
                        question_type_ul.find("li").each(function(k, e)
                        {
                            var q_typ = $(e).attr("class").replace("q_type_of_", "");
                            if(question.question_type === q_typ)
                            {
                                question_type_dropdown_div.find("#hidden_question_type_for_" + question.identifier).val(q_typ).attr("value", q_typ);
                                question_type_dropdown_btn.text($(e).text());
                                $("<span></span>").addClass("caret").appendTo(question_type_dropdown_btn);
                            }
                        });
                    }

                    var question_layout_dropdown_div = $("<div></div>").addClass("dropdown").addClass("question_layout_dropdown");
                    var question_layout_dropdown_btn = $("<button></button>").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("data-toggle", "dropdown").addClass("sel_q_layout");

                    question_layout_dropdown_btn.text("Choose a Format");
                    if(question.question_type === "n/a")
                    {
                        question_layout_dropdown_btn.attr("disabled", "disabled");
                    }
                    $("<span></span>").addClass("caret").appendTo(question_layout_dropdown_btn);

                    var question_layout_ul = $("<ul class='dropdown-menu' role='menu' aria-labelledby='dropdownMenu2'></ul>");



                    question_layout_dropdown_btn.appendTo(question_layout_dropdown_div);
                    question_layout_ul.appendTo(question_layout_dropdown_div);

                    $("<input />").attr("type", "hidden").attr("value", "n/a").attr("id", "hidden_question_format_for_" + question.identifier).appendTo(question_layout_dropdown_div);
                    if(question.question_layout !== "n/a")
                    {
                        question_layout_dropdown_div.find("#hidden_question_format_for_" + question.identifier).attr("value", question.question_layout).val(question.question_layout);

                    }



                    question_type_dropdown_div.appendTo(config_row);
                    question_layout_dropdown_div.appendTo(config_row);

                    var icons_row = $("<div></div>").addClass("col-xs-3").addClass("col-sm-3").addClass("col-md-3").addClass("col-lg-3").addClass("q_icons_row");
                    var icon_wrapper = $("<div></div>").addClass("q_icon_wrapper");

                    config_row.appendTo(question_row);

                    $("<span></span>").addClass("glyphicon").addClass("glyphicon-pencil").attr("title", "Edit Question Text").click(function()
                    {
                        var question_row = $(this).closest(".question_row");
                        question_row.find(".q_text_row").find("> p").eq(0).trigger("click");
                    }).appendTo(icon_wrapper);


                    var indent_span = $("<span></span>").addClass("glyphicon").addClass("glyphicon-share-alt").attr("title", "Branch Question");
                    if(question.question_idx > 0)
                    {
                        if(question.dependent_value === "n/a")
                        {
                            indent_span.click(function()
                            {
                                configureDependencies(question.identifier, $("#question_" + question.identifier).prevAll(".question_row").eq(0).attr("id").replace("question_", ""), data.has_active_entity_triggers);
                            });
                        }
                        else if(question.dependent_value !== "n/a")
                        {
                            indent_span.removeClass("glyphicon-share-alt");
                            indent_span.addClass("glyphicon-info-sign");
                            indent_span.attr("title", "Show Branching Info");
                            indent_span.click(function()
                            {
                                showBranchingInfo(question, $(this));
                            });
                        }
                    }
                    else
                    {
                        indent_span.removeClass("glyphicon-share-alt");
                        indent_span.addClass("glyphicon-ban-circle").attr("title", "Sorry, but the first question cannot be branched, as there would be no previous question value upon which to be dependent");
                    }
                    indent_span.appendTo(icon_wrapper);

                    $("<span></span>").addClass("glyphicon").addClass("glyphicon-cog").attr("title", "Question Settings").click(function()
                    {
                        var question_row = $(this).closest(".question_row");
                        var question_id = question_row.attr("id").replace("question_", "");
                        manageSettingsForQuestion(question_id);
                    }).appendTo(icon_wrapper);

                    $("<span></span>").addClass("glyphicon").addClass("glyphicon-trash").attr("title", "Delete Question").click(function()
                    {
                        if(window.confirm("Are you sure you would like to delete this question?"))
                        {
                            var question_row = $(this).closest(".question_row");
                            question_row.animate({opacity: 0.2}, 250, function()
                            {
                                var question_id = question_row.attr("id").replace("question_", "");
                                $.post("./data", {"fn": "delete_survey_question", "identifier": question_id}).done(function(resp)
                                {
                                    question_row.remove();
                                });
                            });
                        }
                    }).appendTo(icon_wrapper);

                    icon_wrapper.appendTo(icons_row);
                    icons_row.appendTo(question_row);
                    question_row.appendTo(inner_row);

                    if(update_layout_options)
                    {
                        cb_fns.push(function()
                        {
                            updateLayoutOptions(question, question.question_type);
                            $("#question_" + question.identifier).find(".question_layout_dropdown").find("li").each(function(k, e)
                            {
                                var layout_opt = $(e).attr("class").replace("q_layout_option_", "");
                                if(layout_opt === question.question_layout)
                                {
                                    $("#question_" + question.identifier).find(".sel_q_layout").text($(e).text());
                                    $("<span></span>").addClass("caret").appendTo($("#question_" + question.identifier).find(".sel_q_layout"));
                                }
                            });
                        });
                    }

                });

                var plus_question_div = $("<div></div>").attr("class", "add_new_question");
                var plus_question_btn = $("<button></button>").attr("id", "plus_new_q").attr("type", "button").attr("class", "btn btn-success").text("+ New Question");
                plus_question_btn.click(function()
                {
                    $.post("./data", {"fn": "create_blank_question", "survey_identifier": identifier}).done(function(resp)
                    {
                        editQuestionsForSurvey(identifier);
                    });
                }).appendTo(plus_question_div);
                $("<button></button>").html("&larr; Back").addClass("btn").addClass("btn-danger").attr("type", "button").click(function()
                {
                    $("#checklist_builder").trigger("click");
                }).appendTo(plus_question_div);

                plus_question_div.appendTo(inner_row);
                inner_row.appendTo(edit_questions_row);

                edit_questions_spacer.appendTo(app_area);
                edit_questions_row.appendTo(app_area);
                edit_questions_spacer2.appendTo(app_area);

                $(".questioneditor_inner_view_main").sortable
                (
                    {
                        "items": ".question_row",
                        "stop": function(ev, ui)
                        {
                        }
                    }
                );

                $.each(cb_fns, function(i, fn)
                {
                    fn();
                });
            }
            function manageSettingsForQuestion(identifier, data, data2, question_type)
            {
                if(typeof(data) + '' === "undefined")
                {
                    $.post("./data", {"fn": "get_settings_for_question", "identifier": identifier}).done(function(resp)
                    {
                        manageSettingsForQuestion(identifier, resp.settings, resp);
                    });
                    return;
                }

                if(typeof(question_type) + '' === "undefined")
                {
                    $.post("./data", {"fn": "get_question_type", "identifier": identifier}).done(function(resp)
                    {
                        manageSettingsForQuestion(identifier, data, data2, resp.type);
                    });
                    return;
                }

                var after_dialog_launch_fns = [];

                var html = $("<div></div>");
                $("<h4></h4>").text("Question Settings").appendTo(html);
                $("<br />").appendTo(html);

                $("<a></a>").attr("id", "add_popup_setting").attr("href", "javascript:void(0);").text("Add Value-Dependent Popup Message").appendTo(html);
                if(question_type === "mult_choice")
                {
                    $("<br />").appendTo(html);
                    $("<a></a>").attr("id", "set_choice_options").attr("href", "javascript:void(0);").text("Set Choices").appendTo(html);
                }
                if(data2.dependency_type == "entity_info")
                {
                    $("<br />").appendTo(html);
                    $("<a></a>").attr("id", "adjust_dependency_values").attr("href", "javascript:void(0);").text("Adjust dependency values").appendTo(html);
                }
                $("<hr /><br />").appendTo(html);
                after_dialog_launch_fns.push(function()
                {
                    $("#add_popup_setting").click(function()
                    {

                        $("#add_popup_setting").css("display", "none");
                        switch(question_type)
                        {
                            case "yes_or_no":
                                var dropdown_div = $("<div></div>").addClass("dropdown");
                                var btn = $("<button></button>").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("data-toggle", "dropdown").text("Choose a Predicate Value").attr("id", "temp_popup_val_sel_yes_no");
                                $("<span></span>").addClass("caret").appendTo(btn);

                                var ul = $("<ul><ul>").attr("role", "menu").addClass("dropdown-menu").attr("aria-labelledby", "temp_popup_val_sel_yes_no");

                                var checkbox_opts = ["1", "0"];
                                var checkbox_opts_friendly = ["Yes", "No"]

                                $.each(checkbox_opts, function(i, checkbox_opt)
                                {
                                    var li = $("<li></li>");
                                    li.attr("role", "presentation").attr("id", "value_predicate_of_" + checkbox_opt);

                                    var a = $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);");
                                    a.text(checkbox_opts_friendly[i]);

                                    a.appendTo(li);
                                    li.appendTo(ul);
                                });

                                btn.appendTo(dropdown_div);
                                ul.appendTo(dropdown_div);

                                $("<input />").attr("type", "hidden").attr("value", "n/a").val("n/a").attr("id", "temp_val_predicate").appendTo(dropdown_div);
                                dropdown_div.insertAfter($("#add_popup_setting"));
                                $("#temp_popup_val_sel_yes_no").nextAll("ul").find("li").each(function(k, e)
                                {
                                    $(e).click(function()
                                    {
                                        $("#temp_popup_val_sel_yes_no").text($(e).text());
                                        $("<span></span>").addClass("caret").appendTo($("#temp_popup_val_sel_yes_no"));

                                        $("#temp_val_predicate").val($(e).attr("id").replace("value_predicate_of_", ""));
                                        $(".temp_popup_msg").remove();

                                        $("<textarea></textarea>").attr("placeholder", "Enter the desired message...").addClass("temp_popup_msg").insertAfter($("#temp_val_predicate"));
                                    });
                                });
                                break;

                            case "mult_choice":
                                var dropdown_div = $("<div></div>").addClass("dropdown");
                                var btn = $("<button></button>").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("data-toggle", "dropdown").text("Choose a Predicate Value").attr("id", "temp_popup_val_sel_mult_choice");
                                $("<span></span>").addClass("caret").appendTo(btn);

                                var ul = $("<ul><ul>").attr("role", "menu").addClass("dropdown-menu").attr("aria-labelledby", "temp_popup_val_sel_mult_choice");

                                var checkbox_opts = [];
                                var checkbox_opts_friendly = [];

                                $.each(data.multi_choices, function(i, choice_item)
                                {
                                    checkbox_opts.push(choice_item.choice);
                                    checkbox_opts_friendly.push(choice_item.choice);
                                });

                                $.each(checkbox_opts, function(i, checkbox_opt)
                                {
                                    var li = $("<li></li>");
                                    li.attr("role", "presentation").attr("id", "value_predicate_of_" + checkbox_opt.split(" ").join("_____"));

                                    var a = $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);");
                                    a.text(checkbox_opts_friendly[i]);

                                    a.appendTo(li);
                                    li.appendTo(ul);
                                });

                                btn.appendTo(dropdown_div);
                                ul.appendTo(dropdown_div);

                                $("<input />").attr("type", "hidden").attr("value", "n/a").val("n/a").attr("id", "temp_val_predicate").appendTo(dropdown_div);
                                dropdown_div.insertAfter($("#add_popup_setting"));
                                $("#temp_popup_val_sel_mult_choice").nextAll("ul").find("li").each(function(k, e)
                                {
                                    $(e).click(function()
                                    {
                                        $("#temp_popup_val_sel_mult_choice").text($(e).text());
                                        $("<span></span>").addClass("caret").appendTo($("#temp_popup_val_sel_mult_choice"));

                                        $("#temp_val_predicate").val($(e).attr("id").replace("value_predicate_of_", "").split(" ").join("_____"));
                                        $(".temp_popup_msg").remove();

                                        $("<textarea></textarea>").attr("placeholder", "Enter the desired message...").addClass("temp_popup_msg").insertAfter($("#temp_val_predicate"));
                                    });
                                });
                                break;

                            default:
                                break;
                        }
                    });
                    $("#set_choice_options").click(function()
                    {
                        switch(question_type)
                        {
                            case "mult_choice":
                                $("#add_popup_setting").css("display", "none");
                                $("#set_choice_options").css("display", "none");
                                $("#add_popup_settings").css("display", "none");
                                $("#set_choice_options").css("display", "none");
                                $("#adjust_dependency_values").css("display", "none");
                                var textarea = $("<textarea></textarea").attr("placeholder", "Enter a choice, one per line...").addClass("temp_set_choices");
                                if(typeof(data["multi_choices"]) + '' !== "undefined")
                                {
                                    var choices_str = "";
                                    $.each(data["multi_choices"], function(i, choice_item)
                                    {
                                        choices_str += choice_item.choice + "\n";
                                    });
                                    choices_str = $.trim(choices_str);
                                    textarea.html(choices_str).val(choices_str)
                                }
                                textarea.insertAfter($("#set_choice_options"));
                                break;

                            default:
                                break;
                        }
                    });

                    $("#adjust_dependency_values").click(function()
                    {
                        $("#add_popup_settings").css("display", "none");
                        $("#set_choice_options").css("display", "none");
                        $("#adjust_dependency_values").css("display", "none");

                        var textarea = $("<textarea></textarea").attr("placeholder", "Enter dependency, one item line...").addClass("temp_set_dependency_values");

                        textarea.val(data2.dependent_values.join("\n"));

                        textarea.html(data2.dependent_values.join("\n"));

                        textarea.insertAfter($("#adjust_dependency_values"));
                    });
                });
                if(typeof(data["popup_info"]) + '' !== "undefined")
                {
                    var checkbox_opts = ["1", "0"];
                    var checkbox_opts_friendly = ["Yes", "No"]

                    $("<p></p>").text("Existing Pop-Up Messages:").appendTo(html);
                    var existing_popups_ul = $("<ul><ul>").addClass("existing_popups_ul");

                    $.each(data.popup_info, function(i, popup_item)
                    {
                        switch(question_type)
                        {
                            case "yes_or_no":
                                var li = $("<li></li>").text("When value is '" + checkbox_opts_friendly[checkbox_opts.indexOf(popup_item.dependent_value)] + "'").attr("id", "popup_item_at_index_" + (i + ''));
                                $("<p></p>").addClass("existing_popup_msg_preview").text(popup_item.message).appendTo(li);
                                var mini_icons_div = $("<div></div>").addClass("mini_popup_preview_icons");
                                $("<span></span>").addClass("glyphicon").addClass("glyphicon-pencil").appendTo(mini_icons_div);
                                $("<span></span>").addClass("glyphicon").addClass("glyphicon-trash").appendTo(mini_icons_div);
                                mini_icons_div.appendTo(li);
                                li.appendTo(existing_popups_ul);
                                break;

                            case "mult_choice":
                                var friendlify = function(word)
                                {
                                    var words = word.split(" ");
                                    var new_words = [];
                                    $.each(words, function(i, word)
                                    {
                                        if(word.length === 1)
                                        {
                                            new_words.push(word.toUpperCase());
                                        }
                                        else
                                        {
                                            new_words.push(word[0].toUpperCase() + word.substring(1));
                                        }
                                    });

                                    return new_words.join(" ");
                                }
                                var li = $("<li></li>").text("When value is '" + friendlify(popup_item.dependent_value) + "'").attr("id", "popup_item_at_index_" + (i + ''));
                                $("<p></p>").addClass("existing_popup_msg_preview").text(popup_item.message).appendTo(li);
                                var mini_icons_div = $("<div></div>").addClass("mini_popup_preview_icons");
                                $("<span></span>").addClass("glyphicon").addClass("glyphicon-pencil").appendTo(mini_icons_div);
                                $("<span></span>").addClass("glyphicon").addClass("glyphicon-trash").appendTo(mini_icons_div);
                                mini_icons_div.appendTo(li);
                                li.appendTo(existing_popups_ul);
                                break;

                            default:
                                break;
                        }
                    });

                    existing_popups_ul.appendTo(html);

                    after_dialog_launch_fns.push(function()
                    {
                        $(".existing_popups_ul").find("li").each(function(i, e)
                        {
                            $(e).find(".glyphicon-pencil").click(function()
                            {
                                var idx = $(e).attr("id").replace("popup_item_at_index_", "");
                                $(e).find(".existing_popup_msg_preview").attr("contenteditable", "true");
                                $(e).find(".existing_popup_msg_preview")[0].focus();
                                $(e).find(".existing_popup_msg_preview").blur(function()
                                {
                                    $.post("./data", {"fn": "update_popup_text_for_question", "identifier": identifier, "idx": idx, "text": $.trim($(e).find(".existing_popup_msg_preview").text())}).done(function(resp3)
                                    {
                                        $(e).find(".existing_popup_msg_preview").removeAttr("contenteditable");
                                    });
                                });
                            });

                            $(e).find(".glyphicon-trash").click(function()
                            {
                                var idx = $(e).attr("id").replace("popup_item_at_index_", "");
                                $.post("./data", {"fn": "remove_popup_for_question", "identifier": identifier, "idx": idx}).done(function(resp)
                                {
                                    $(e).remove();
                                });
                            });
                        });
                    });
                }

                BootstrapDialog.show
                (
                    {
                        "title": "Question Settings",
                        "message": html.html(),
                        "buttons":
                        [
                            {
                                "label": "Cancel",
                                "action": function(dialog)
                                {
                                    dialog.close();
                                }
                            },
                            {
                                "label": "Save",
                                "action": function(dialog)
                                {
                                    if($(".temp_popup_msg").size() > 0)
                                    {
                                        if($.trim($(".temp_popup_msg").val()).length === 0)
                                        {
                                            window.alert("A message is required");
                                            return;
                                        }
                                    }
                                    if($("#temp_val_predicate").val() === "n/a")
                                    {
                                        window.alert("You must first choose a dependent value");
                                        return;
                                    }

                                    if($(".temp_set_dependency_values").size() > 0)
                                    {
                                        if($.trim($(".temp_set_dependency_values").val()).length === 0)
                                        {
                                            window.alert("Values are required");
                                            return;
                                        }
                                    }
                                    if($(".temp_set_dependency_values").size() > 0)
                                    {
                                        $.post("./data", {"fn": "adjust_dependent_values", "identifier": identifier, "new_values": JSON.stringify($.trim($(".temp_set_dependency_values").val()).split("\n"))}).done(function(resp3)
                                        {
                                            dialog.close();
                                        });
                                    }

                                    if($(".temp_popup_msg").size() > 0)
                                    {
                                        $.post("./data", {"fn": "add_value_dependent_popup_to_question", "identifier": identifier, "dependent_value": $("#temp_val_predicate").val(), "message": $.trim($(".temp_popup_msg").val())}).done(function(resp2)
                                        {
                                            dialog.close();
                                        });
                                    }
                                    else if($(".temp_set_choices").size() > 0)
                                    {
                                        if($.trim($(".temp_set_choices").val()).length === 0)
                                        {
                                            window.alert("You must first provide at least one valid choice");
                                            return;
                                        }
                                        $.post("./data", {"fn": "set_choices_for_multi_choice_question", "identifier": identifier, "choices": $.trim($(".temp_set_choices").val())}).done(function(resp)
                                        {
                                            dialog.close();
                                        });
                                    }
                                    else
                                    {
                                        dialog.close();
                                    }
                                }
                            }
                        ]
                    }
                );
                setTimeout(function()
                {
                    $.each(after_dialog_launch_fns, function(i, fn)
                    {
                        fn();
                    });
                }, 250);
            }
            function showBranchingInfo(question, el)
            {
                var info_items =
                [
                    {
                        "source": "FieldApplicationEntry",
                        "field": "customer_postal",
                        "field_friendly": "Customer Zip Code",
                        "type": "string",
                        "open_ended": true
                    },
                    {
                        "source": "SurveyBooking",
                        "field": "trust_docs",
                        "field_friendly": "Trust Documents",
                        "type": "string",
                        "open_ended": false,
                        "options":
                        [
                            {
                                "value": "n/a",
                                "value_friendly": "Not Sure"
                            },
                            {
                                "value": "yes",
                                "value_friendly": "Not Required",
                            },
                            {
                                "value": "no",
                                "value_friendly": "Required"
                            }
                        ]
                    },
                    {
                        "source": "SurveyBooking",
                        "field": "fund",
                        "field_friendly": "Funding Source",
                        "type": "string",
                        "open_ended": false,
                        "options": window.funding_list
                    }
                ];


                var off = el.offset();
                var left = off.left;
                left = left + '';
                left = left.replace("px", "");
                left = parseInt(left);
                left -= 200;
                left += '';
                left += 'px';

                var top = off.top;
                top = top + '';
                top = top.replace("px", "");
                top = parseInt(top);
                top += '';
                top += 'px';


                var popup_div = $("<div></div>").addClass("dependency_popup");
                $("<h4></h4>").text("Branching Info").appendTo(popup_div);
                $("<hr />").appendTo(popup_div);
                $("<p><b>Dependency Type:</b></p>").appendTo(popup_div);

                var mode_map = {"equal": "Equal To", "not_equal": "Not Equal To"};

                switch(question.dependency_type)
                {
                    case "prev_q":
                        $("<p></p>").text("Previous Question Value").appendTo(popup_div);
                        $("<br />").appendTo(popup_div);

                        switch(question.dependency_value_type)
                        {
                            case "yes_or_no":
                                var bool_map = {"0": "No", "1": "Yes"};
                                $("<p><b>Value Comparison Mode:</b></p>").appendTo(popup_div);
                                $("<p></p>").text(mode_map[question.dependency_value_comp_mode]).appendTo(popup_div);
                                $("<p><b>Value Predicate:</b></p>").appendTo(popup_div);
                                $("<p></p>").text(bool_map[question.dependent_value]).appendTo(popup_div);
                                $("<br />").appendTo(popup_div);
                                break;

                            case "mult_choice":
                                $("<p><b>Value Comparison Mode:</b></p>").appendTo(popup_div);
                                $("<p></p>").text(mode_map[question.dependency_value_comp_mode]).appendTo(popup_div);
                                $("<p><b>Value Predicate:</b></p>").appendTo(popup_div);
                                $("<p></p>").text(question.dependent_value).appendTo(popup_div);
                                $("<br />").appendTo(popup_div);
                                break;

                            default:
                                break;
                        }
                        break;

                    case "entity_info":
                        var q_source = question.dependency_value_type.split("|")[0];
                        var q_field = question.dependency_value_type.split("|")[1];

                        $.each(info_items, function(i, info_item)
                        {
                            if(info_item.source === q_source && info_item.field === q_field)
                            {
                                $("<p></p>").text(info_item.source + ": " + info_item.field_friendly).appendTo(popup_div);
                                $("<br />").appendTo(popup_div);
                                switch(info_item.type)
                                {
                                    case "string":
                                        $("<p><b>Value Comparison Mode:</b></p>").appendTo(popup_div);
                                        $("<p></p>").text(mode_map[question.dependency_value_comp_mode]).appendTo(popup_div);
                                        $("<p><b>Value Predicate(s):</b></p>").appendTo(popup_div);
                                        if(!info_item.open_ended)
                                        {
                                            $.each(question.dependent_value.split("|||||"), function(k, dependent_value)
                                            {
                                                $.each(info_item.options, function(j, option)
                                                {
                                                    if(option.value === dependent_value)
                                                    {
                                                        $("<p></p>").text(option.value_friendly).appendTo(popup_div);
                                                    }
                                                });
                                            });
                                        }
                                        else
                                        {
                                            $.each(question.dependent_value.split("|||||"), function(k, dependent_value)
                                            {
                                                $("<p></p>").text(dependent_value).appendTo(popup_div);
                                            });
                                        }
                                        $("<br />").appendTo(popup_div);
                                        break;

                                    default:
                                        break;
                                }
                            }
                        });
                        break;

                    default:
                        break;
                }
                $("<center></center>").append
                (
                    $("<button></button>")
                    .text("Remove Branching")
                    .attr("type", "button")
                    .addClass("btn")
                    .addClass("btn-danger")
                    .click(function()
                    {
                        $.post("./data", {"fn": "clear_branching", "identifier": question.identifier}).done(function(resp)
                        {
                            clearApp(function()
                            {
                                popup_div.animate({opacity: 0.0}, 500, function()
                                {
                                    editQuestionsForSurvey(window.curr_survey_identifier_edit_mode);
                                });
                            });
                        });
                    })
                ).appendTo(popup_div);
                popup_div.css("position", "absolute").css("left", left).css("top", top).appendTo($("body"));
                setTimeout(function()
                {
                    popup_div.animate({opacity: 0.0}, 850 * 2, function()
                    {
                        popup_div.remove();
                    });
                }, 5000);

            }
            function configureDependencies(child_identifier, parent_identifier, has_active_entity_triggers, opt_dep_val)
            {
                var html = $("<div></div>");
                $("<h4></h4>").text("Configure Dependencies").appendTo(html);
                $("<hr />").appendTo(html);
                var dropdown_div = $("<div></div>").addClass("dropdown").addClass("dependency_type_dropdown");
                var dropdown_btn = $("<button></button>").attr("type", "button").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("id", "question_dependency_type_selector").attr("data-toggle", "dropdown");
                dropdown_btn.text("Dependency Type");
                $("<span></span>").addClass("caret").appendTo(dropdown_btn);

                var dependency_type_selector_ul = $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu").attr("aria-labelledby", "question_dependency_type_selector");
                var dependency_opts =
                {
                    "prev_q": "Previous Question Value",
                    "entity_info": "Information from Entity"
                };
                if(!has_active_entity_triggers)
                {
                    delete dependency_opts["entity_info"];
                }

                for(var dependency_opt in dependency_opts)
                {
                    var li = $("<li></li>").attr("role", "presentation");
                    li.attr("id", "dependency_type_of_" + dependency_opt);
                    var a = $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);");
                    a.text(dependency_opts[dependency_opt]).appendTo(li);
                    li.appendTo(dependency_type_selector_ul);
                }

                dropdown_btn.appendTo(dropdown_div);
                dependency_type_selector_ul.appendTo(dropdown_div);

                $("<input />").attr("type", "hidden").attr("id", "temp_dependency_type").val("n/a").attr("value", "n/a").appendTo(dropdown_div);

                dropdown_div.appendTo(html);

                BootstrapDialog.show(
                {
                    "title": "Branching Questions",
                    "message": html.html(),
                    "buttons":
                    [
                        {
                            "label": "Cancel",
                            "action": function(dialog)
                            {
                                dialog.close();
                            }
                        },
                        {
                            "label": "Next Step",
                            "action": function(dialog)
                            {
                                if($("#temp_dependency_type").val() === "n/a")
                                {
                                    window.alert("You must first select a dependency type");
                                    return;
                                }
                                var dep_val = $("#temp_dependency_type").val();
                                var dep_txt = dependency_opts[dep_val];
                                dialog.close();
                                dependencyStep2(dep_val, dep_txt, child_identifier, parent_identifier, has_active_entity_triggers);

                            }
                        }
                    ]
                });
                setTimeout(function()
                {
                    $("#question_dependency_type_selector").nextAll("ul").eq(0).find("li").each(function(i, e)
                    {
                        $(e).click(function()
                        {
                            var dep_type = $(e).attr("id").replace("dependency_type_of_", "");
                            $("#temp_dependency_type").val(dep_type).attr("value", dep_type);

                            $("#question_dependency_type_selector").text($(e).text());
                            $("<span></span>").addClass("caret").appendTo($("#question_dependency_type_selector"));
                        });
                    });

                    if(typeof(opt_dep_val) + '' !== "undefined")
                    {
                        $("#question_dependency_type_selector").nextAll("ul").eq(0).find("li").each(function(i, e)
                        {
                            if($(e).attr("id").replace("dependency_type_of_", "") === opt_dep_val)
                            {
                                $(e).trigger("click");
                            }
                        });
                    }
                }, 250);
            }
            function dependencyStep2(dep_val, dep_txt, child_identifier, parent_identifier, has_active_entity_triggers, opt_parent_type, opt_triggers_list, opt_info_obj)
            {
                $.post("./data", {"fn": "list_utility_providers"}).done(function(util_providers)
                {
                    var info_items =
                    [
                        {
                            "source": "FieldApplicationEntry",
                            "field": "customer_postal",
                            "field_friendly": "Customer Zip Code",
                            "type": "string",
                            "open_ended": true
                        },
                        {
                            "source": "FieldApplicationEntry",
                            "field": "utility_provider",
                            "field_friendly": "Utility Provider",
                            "type": "string",
                            "open_ended": false,
                            "options": util_providers
                        },
                        {
                            "source": "SurveyBooking",
                            "field": "trust_docs",
                            "field_friendly": "Trust Documents",
                            "type": "string",
                            "open_ended": false,
                            "options":
                            [
                                {
                                    "value": "n/a",
                                    "value_friendly": "Not Sure"
                                },
                                {
                                    "value": "yes",
                                    "value_friendly": "Not Required",
                                },
                                {
                                    "value": "no",
                                    "value_friendly": "Required"
                                }
                            ]
                        },
                        {
                            "source": "SurveyBooking",
                            "field": "fund",
                            "field_friendly": "Funding Source",
                            "type": "string",
                            "open_ended": false,
                            "options": window.funding_list
                        }
                    ];

                    var html = $("<div></div>");
                    $("<h4></h4>").text("Configure " + dep_txt).appendTo(html);

                    var after_dialog_launch_fns = [];
                    window.wait_for_callback = false;
                    switch(dep_val)
                    {
                        case "prev_q":
                            if(typeof(opt_parent_type) + '' === "undefined")
                            {
                                $.post("./data", {"fn": "get_question_type", "identifier": parent_identifier}).done(function(resp)
                                {
                                    console.log(resp);
                                    dependencyStep2(dep_val, dep_txt, child_identifier, parent_identifier, has_active_entity_triggers, resp.type, opt_info_obj)
                                });
                                return;
                            }
                            var dropdown_div = $("<div></div>").addClass("dropdown");
                            var dropdown_div2 = $("<div></div>").addClass("dropdown");
                            switch(opt_parent_type)
                            {
                                case "yes_or_no":
                                    var btn = $("<button></button>").attr("type", "button").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("id", "checkbox_value_selector").attr("data-toggle", "dropdown");
                                    btn.text("Value Predicate");
                                    $("<span></span>").addClass("caret").appendTo(btn);

                                    var cb_ul = $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu").attr("aria-labelledby", "checkbox_value_selector");

                                    var checkbox_opts = ["1", "0"];
                                    var checkbox_opts_friendly = ["Yes", "No"]

                                    $.each(checkbox_opts, function(i, checkbox_opt)
                                    {
                                        var li = $("<li></li>");
                                        li.attr("role", "presentation").attr("id", "value_predicate_of_" + checkbox_opt);

                                        var a = $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);");
                                        a.text(checkbox_opts_friendly[i]);

                                        a.appendTo(li);
                                        li.appendTo(cb_ul);

                                        after_dialog_launch_fns.push(function()
                                        {
                                            $("#checkbox_value_selector").nextAll("ul").find("li").each(function(k, e)
                                            {
                                                $(e).click(function()
                                                {
                                                    $("#checkbox_value_selector").text($(e).text());
                                                    $("<span></span>").addClass("caret").appendTo($("#checkbox_value_selector"));

                                                    $("#temp_value_predicate_for_" + parent_identifier).val($(e).attr("id").replace("value_predicate_of_", ""));
                                                });
                                            });
                                        });
                                    });

                                    btn.appendTo(dropdown_div);
                                    cb_ul.appendTo(dropdown_div);

                                    $("<input />").attr("type", "hidden").attr("id", "temp_value_predicate_for_" + parent_identifier).attr("value", "n/a").val("n/a").appendTo(dropdown_div);


                                    var btn2 = $("<button></button>").attr("type", "button").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("id", "value_comp_mode_selector").attr("data-toggle", "dropdown");
                                    btn2.text("Comparison Mode");
                                    $("<span></span>").addClass("caret").appendTo(btn2);

                                    var comp_opts = ["equal", "not_equal"];
                                    var comp_opts_friendly = ["Equal To", "Not Equal To"];

                                    var comp_ul = $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu").attr("aria-labeledby", "value_comp_mode_selector");

                                    $.each(comp_opts, function(i, comp_opt)
                                    {
                                        var li = $("<li></li>");
                                        li.attr("role", "presentation").attr("id", "comp_mode_of_" + comp_opt);

                                        var a = $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);");
                                        a.text(comp_opts_friendly[i]);

                                        a.appendTo(li);
                                        li.appendTo(comp_ul);
                                    });

                                    dropdown_div2.append(btn2);
                                    comp_ul.appendTo(dropdown_div2);

                                    $("<input />").attr("type", "hidden").attr("id", "temp_value_comp_mode").attr("value", "n/a").val("n/a").appendTo(dropdown_div2);

                                    after_dialog_launch_fns.push(function()
                                    {
                                        $("#value_comp_mode_selector").nextAll("ul").find("li").each(function(i, e)
                                        {
                                            $(e).click(function()
                                            {
                                                $("#value_comp_mode_selector").text($(e).text());
                                                $("<span></span>").addClass("caret").appendTo($("#value_comp_mode_selector"));

                                                var comp_mode = $(e).attr("id").replace("comp_mode_of_", "");

                                                $("#temp_value_comp_mode").attr("value", comp_mode).val(comp_mode);
                                            });
                                        });
                                    });
                                    break;

                                case "mult_choice":
                                    wait_for_callback = true;
                                    $.post("./data", {"fn": "get_settings_for_question", "identifier": parent_identifier}).done(function(response)
                                    {
                                        var data = response.settings;
                                        var btn = $("<button></button>").attr("type", "button").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("id", "checkbox_value_selector").attr("data-toggle", "dropdown");
                                        btn.text("Value Predicate");
                                        $("<span></span>").addClass("caret").appendTo(btn);

                                        var cb_ul = $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu").attr("aria-labelledby", "checkbox_value_selector");

                                        var checkbox_opts = [];
                                        var checkbox_opts_friendly = [];

                                        $.each(data.multi_choices, function(i, m_c)
                                        {
                                            checkbox_opts.push(m_c.choice);
                                            checkbox_opts_friendly.push(m_c.choice);
                                        });

                                        $.each(checkbox_opts, function(i, checkbox_opt)
                                        {
                                            var li = $("<li></li>");
                                            li.attr("role", "presentation").attr("id", "value_predicate_of_" + checkbox_opt);

                                            var a = $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);");
                                            a.text(checkbox_opts_friendly[i]);

                                            a.appendTo(li);
                                            li.appendTo(cb_ul);
                                        });

                                        var d_div = $("<div></div>").addClass("dropdown");
                                        var d_div2 = $("<div></div>").addClass("dropdown");

                                        btn.appendTo(d_div);
                                        cb_ul.appendTo(d_div);

                                        $("<input />").attr("type", "hidden").attr("id", "temp_value_predicate_for_" + parent_identifier).attr("value", "n/a").val("n/a").appendTo(d_div);


                                        var btn2 = $("<button></button>").attr("type", "button").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("id", "value_comp_mode_selector").attr("data-toggle", "dropdown");
                                        btn2.text("Comparison Mode");
                                        $("<span></span>").addClass("caret").appendTo(btn2);

                                        var comp_opts = ["equal", "not_equal"];
                                        var comp_opts_friendly = ["Equal To", "Not Equal To"];

                                        var comp_ul = $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu").attr("aria-labeledby", "value_comp_mode_selector");

                                        $.each(comp_opts, function(i, comp_opt)
                                        {
                                            var li = $("<li></li>");
                                            li.attr("role", "presentation").attr("id", "comp_mode_of_" + comp_opt);

                                            var a = $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);");
                                            a.text(comp_opts_friendly[i]);

                                            a.appendTo(li);
                                            li.appendTo(comp_ul);
                                        });

                                        d_div2.append(btn2);
                                        comp_ul.appendTo(d_div2);

                                        $("<input />").attr("type", "hidden").attr("id", "temp_value_comp_mode").attr("value", "n/a").val("n/a").appendTo(d_div2);

                                        setTimeout(function()
                                        {
                                            $(".bootstrap-dialog-message").append(d_div).append(d_div2);
                                            $("#checkbox_value_selector").nextAll("ul").find("li").each(function(k, e)
                                            {
                                                $(e).click(function()
                                                {
                                                    $("#checkbox_value_selector").text($(e).text());
                                                    $("<span></span>").addClass("caret").appendTo($("#checkbox_value_selector"));

                                                    $("#temp_value_predicate_for_" + parent_identifier).val($(e).attr("id").replace("value_predicate_of_", ""));
                                                });
                                            });
                                            $("#value_comp_mode_selector").nextAll("ul").find("li").each(function(i, e)
                                            {
                                                $(e).click(function()
                                                {
                                                    $("#value_comp_mode_selector").text($(e).text());
                                                    $("<span></span>").addClass("caret").appendTo($("#value_comp_mode_selector"));

                                                    var comp_mode = $(e).attr("id").replace("comp_mode_of_", "");

                                                    $("#temp_value_comp_mode").attr("value", comp_mode).val(comp_mode);
                                                });
                                            });
                                        }, 250);

                                        window.call_back_complete = true;
                                    });
                                    break;

                                default:
                                    break;
                            }
                            if(!wait_for_callback)
                            {
                                dropdown_div2.appendTo(html);
                                dropdown_div.appendTo(html);
                            }
                            break;

                        case "entity_info":
                            if(typeof(opt_triggers_list) + '' === "undefined")
                            {
                                $.post("./data", {"fn": "list_triggers_for_survey", "identifier": window.curr_survey_identifier_edit_mode}).done(function(resp)
                                {
                                    dependencyStep2(dep_val, dep_txt, child_identifier, parent_identifier, has_active_entity_triggers, null, resp, opt_info_obj)
                                });
                                return;
                            }

                            if (Object.keys(opt_triggers_list).length > 0)
                            {
                                if(typeof(opt_triggers_list["field"]) + '' !== "undefined" || typeof(opt_triggers_list["survey"]) + '' !== "undefined")
                                {

                                    var dropdown_div = $("<div></div>").addClass("dropdown");
                                    var btn = $("<button></button>").attr("type", "button").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("id", "entity_field_selector").attr("data-toggle", "dropdown");
                                    btn.text("Choose a Field");
                                    $("<span></span>").addClass("caret").appendTo(btn);

                                    var dd_ul = $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu").attr("aria-labelledby", "entity_field_selector");



                                    $.each(info_items, function(i, info_item)
                                    {
                                        var li = $("<li></li>").attr("role", "presentation").attr("id", "entity_field_of_" + info_item.source + "|" + info_item.field);
                                        var a = $("<a></a>").attr("href", "javascript:void(0);").attr("tabindex", "-1").attr("role", "menuitem");
                                        a.text(info_item.field_friendly);
                                        a.appendTo(li);
                                        li.appendTo(dd_ul);
                                    });

                                    btn.appendTo(dropdown_div);
                                    dd_ul.appendTo(dropdown_div);
                                    $("<input />").attr("type", "hidden").attr("value", "n/a").val("n/a").attr("id", "temp_entity_field_choice").appendTo(dropdown_div);

                                    after_dialog_launch_fns.push(function()
                                    {
                                        $("#entity_field_selector").nextAll("ul").eq(0).find("li").each(function(i, e)
                                        {
                                            $(e).click(function()
                                            {
                                                $("#entity_field_selector").text($(e).text());
                                                $("<span></span>").addClass("caret").appendTo($("#entity_field_selector"));
                                                $("#temp_entity_field_choice").val($(e).attr("id").replace("entity_field_of_", ""));
                                            });
                                        });
                                    });

                                    if((typeof(opt_info_obj) + '') !== "undefined")
                                    {
                                        after_dialog_launch_fns.push(function()
                                        {
                                            $("#entity_field_selector").nextAll("ul").eq(0).find("li").each(function(i, e)
                                            {
                                                var vals = $(e).attr("id").replace("entity_field_of_", "").split("|");
                                                if(opt_info_obj["source"] === vals[0] && opt_info_obj["field"] === vals[1])
                                                {
                                                    $(e).trigger("click");
                                                }
                                            });
                                        });
                                    }
                                }
                            }

                            dropdown_div.appendTo(html);
                            break;

                        default:
                            break;
                    }

                    var btns =
                    [
                        {
                            "label": "Back",
                            "action": function(dialog)
                            {
                                dialog.close();
                                configureDependencies(child_identifier, parent_identifier, has_active_entity_triggers, dep_val);
                            }
                        }
                    ];
                    if((typeof(opt_parent_type) + '').toLowerCase() === "string")
                    {
                        btns.push
                        (
                            {
                                "label": "Finish",
                                "action": function(dialog)
                                {
                                    if($("#temp_value_predicate_for_" + parent_identifier).val() === "n/a")
                                    {
                                        window.alert("You must first select a value predicate");
                                        return;
                                    }
                                    if($("#temp_value_comp_mode").val() === "n/a")
                                    {
                                        window.alert("You must first select a value comparison mode");
                                        return;
                                    }
                                    $.post("./data", {"fn": "branch_question", "identifier": child_identifier, "parent_identifier": parent_identifier, "dependency_type": dep_val, "dependency_value": $("#temp_value_predicate_for_" + parent_identifier).val(), "dependency_value_type": opt_parent_type, "dependency_value_comp_mode": $("#temp_value_comp_mode").val()}).done(function(resp)
                                    {
                                        dialog.close();
                                        clearApp(function()
                                        {
                                            editQuestionsForSurvey(window.curr_survey_identifier_edit_mode);
                                        });
                                    });
                                }
                            }
                        );
                    }
                    if(typeof(opt_triggers_list) + '' !== "undefined")
                    {
                        btns.push
                        (
                            {
                                "label": "Next Step",
                                "action": function(dialog)
                                {
                                    if($("#temp_entity_field_choice").val() === "n/a")
                                    {
                                        window.alert("You must first select a field");
                                        return;
                                    }

                                    var info_obj = {};
                                    var src = $("#temp_entity_field_choice").val().split("|")[0];
                                    var field = $("#temp_entity_field_choice").val().split("|")[1];
                                    for(var k = 0; k < info_items.length; k++)
                                    {
                                        if(info_items[k].source === src && info_items[k].field === field)
                                        {
                                            info_obj = info_items[k];
                                        }
                                    }
                                    dialog.close();
                                    dependencyStep3(dep_val, dep_txt, child_identifier, parent_identifier, has_active_entity_triggers, opt_parent_type, opt_triggers_list, info_obj);
                                }
                            }
                        );
                    }

                    BootstrapDialog.show
                    (
                        {
                            "title": "Step 2",
                            "message": html.html(),
                            "buttons":btns

                        }
                    );
                    var fn = function()
                    {
                        $.each(after_dialog_launch_fns, function(i, after_dialog_launch_fn)
                        {
                            after_dialog_launch_fn();
                        });
                    };
                    window.temp_branch_interval = setInterval(function()
                    {
                        if(!window.wait_for_callback)
                        {
                            fn();
                            window.wait_for_callback = false;
                            window.call_back_complete = false;
                            window.clearInterval(window.temp_branch_interval);
                        }
                    }, 250);
                });
            }
            function dependencyStep3(dep_val, dep_txt, child_identifier, parent_identifier, has_active_entity_triggers, opt_parent_type, opt_triggers_list, info_obj)
            {
                var html = $("<html></html>");
                $("<h4></h4>").text("Set Value Dependency for " + info_obj["field_friendly"]);

                after_dialog_launch_fns = [];

                var btns =
                [
                    {
                        "label": "Back",
                        "action": function(dialog)
                        {
                            dialog.close();
                            dependencyStep2(dep_val, dep_txt, child_identifier, parent_identifier, has_active_entity_triggers, opt_parent_type, opt_triggers_list, info_obj);
                        }
                    }
                ];

                switch(info_obj["type"])
                {
                    case "string":
                        if(info_obj.open_ended)
                        {
                            var dropdown = $("<div></div>").addClass("dropdown");
                            var btn = $("<button></button>").attr("type", "button").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("data-toggle", "dropdown").attr("id", "entity_info_comp_mode");
                            btn.text("Value Comparison Mode");
                            $("<span></span>").addClass("caret").appendTo(btn);
                            var ul = $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu").attr("aria-labeledby", "entity_info_comp_mode");

                            var comp_opts = ["equal", "not_equal"];
                            var comp_opts_friendly = ["Equal To", "Not Equal To"];

                            $.each(comp_opts, function(i, comp_opt)
                            {
                                var li = $("<li></li>");
                                li.attr("role", "presentation").attr("id", "comp_mode_of_" + comp_opt);

                                var a = $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);");
                                a.text(comp_opts_friendly[i]);

                                a.appendTo(li);
                                li.appendTo(ul);
                            });

                            btn.appendTo(dropdown);
                            ul.appendTo(dropdown);
                            $("<input />").attr("type", "hidden").attr("id", "entity_info_value_comp_mode").attr("value", "n/a").val("n/a").appendTo(dropdown);
                            dropdown.appendTo(html);
                            $("<br />").appendTo(html);


                            var textarea = $("<textarea></textarea>").addClass("form-control").addClass("open_ended_dep_vals");
                            textarea.attr("placeholder", "Enter the dependent value(s), one item per line");
                            textarea.appendTo(html);

                            btns.push
                            (
                                {
                                    "label": "Finish",
                                    "action": function(dialog)
                                    {
                                        if($.trim($(".open_ended_dep_vals").val()).length === 0)
                                        {
                                            window.alert("You must first provide a dependent value");
                                            return;
                                        }
                                        if($("#entity_info_value_comp_mode").val() === "n/a")
                                        {
                                            window.alert("You must choose a value comparison mode");
                                            return;
                                        }

                                        $.post("./data",
                                        {
                                            "fn": "branch_question",
                                            "identifier": child_identifier,
                                            "parent_identifier": "n/a",
                                            "dependency_value": $(".open_ended_dep_vals").val().split("\n").join("|||||"),
                                            "dependency_value_type": info_obj["source"] + "|" + info_obj["field"],
                                            "dependency_value_comp_mode": $("#entity_info_value_comp_mode").val(),
                                            "dependency_type": dep_val
                                        }).done(function(resp)
                                        {
                                            clearApp(function()
                                            {
                                                editQuestionsForSurvey(window.curr_survey_identifier_edit_mode);
                                            });
                                        });
                                        dialog.close();
                                    }
                                }
                            );
                        }
                        else
                        {
                            $("<h4></h4>").text("Choose values for: " + info_obj.source + " - " + info_obj.field_friendly).appendTo(html);
                            $("<br />").appendTo(html);

                            var dropdown = $("<div></div>").addClass("dropdown");
                            var btn = $("<button></button>").attr("type", "button").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("data-toggle", "dropdown").attr("id", "entity_info_comp_mode");
                            btn.text("Value Comparison Mode");
                            $("<span></span>").addClass("caret").appendTo(btn);
                            var ul = $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu").attr("aria-labeledby", "entity_info_comp_mode");

                            var comp_opts = ["equal", "not_equal"];
                            var comp_opts_friendly = ["Equal To", "Not Equal To"];

                            $.each(comp_opts, function(i, comp_opt)
                            {
                                var li = $("<li></li>");
                                li.attr("role", "presentation").attr("id", "comp_mode_of_" + comp_opt);

                                var a = $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);");
                                a.text(comp_opts_friendly[i]);

                                a.appendTo(li);
                                li.appendTo(ul);
                            });

                            btn.appendTo(dropdown);
                            ul.appendTo(dropdown);
                            $("<input />").attr("type", "hidden").attr("id", "entity_info_value_comp_mode").attr("value", "n/a").val("n/a").appendTo(dropdown);
                            dropdown.appendTo(html);
                            $("<br />").appendTo(html);

                            var checklist_table = $("<table></table>").addClass("entity_info_clist_tbl");
                            var checklist_tbody = $("<tbody></tbody>");
                            $.each(info_obj.options, function(i, option)
                            {
                                var tr = $("<tr></tr>");
                                var label_td = $("<td></td>").text(option.value_friendly);
                                label_td.appendTo(tr);

                                var cbox_td = $("<td></td>");
                                $("<input />").attr("type", "checkbox").attr("id", "checkbox_value_of_" + option.value).appendTo(cbox_td);
                                cbox_td.appendTo(tr);

                                tr.appendTo(checklist_tbody);
                            });
                            checklist_tbody.appendTo(checklist_table);

                            checklist_table.appendTo(html);

                            btns.push
                            (
                                {
                                    "label": "Finish",
                                    "action": function(dialog)
                                    {
                                        if($("#entity_info_value_comp_mode").val() === "n/a")
                                        {
                                            window.alert("You must choose a value comparison mode");
                                            return;
                                        }

                                        var cb_count = 0;
                                        var values = [];
                                        $(".entity_info_clist_tbl").find("input").each(function(i, e)
                                        {
                                            cb_count += ($(e)[0].checked * 1);
                                            if($(e)[0].checked)
                                            {
                                                values.push($(e).attr("id").replace("checkbox_value_of_", ""));
                                            }
                                        });
                                        if(cb_count < 1)
                                        {
                                            window.alert("At least one value must be selected");
                                            return false;
                                        }

                                        $.post("./data",
                                        {
                                            "fn": "branch_question",
                                            "identifier": child_identifier,
                                            "parent_identifier": "n/a",
                                            "dependency_value": values.join("|||||"),
                                            "dependency_value_type": info_obj["source"] + "|" + info_obj["field"],
                                            "dependency_value_comp_mode": $("#entity_info_value_comp_mode").val(),
                                            "dependency_type": dep_val
                                        }).done(function(resp)
                                        {
                                            clearApp(function()
                                            {
                                                editQuestionsForSurvey(window.curr_survey_identifier_edit_mode);
                                            });
                                        });
                                        dialog.close();
                                    }
                                }
                            );
                        }

                        after_dialog_launch_fns.push(function()
                        {
                            $("#entity_info_comp_mode").nextAll("ul").find("li").each(function(i, e)
                            {
                                $(e).click(function()
                                {
                                    var comp_mode = $(e).attr("id").replace("comp_mode_of_", "");
                                    $("#entity_info_comp_mode").text($(e).text());
                                    $("<span></span>").addClass("caret").appendTo($("#entity_info_comp_mode"));

                                    $("#entity_info_value_comp_mode").val(comp_mode).attr("value", comp_mode);
                                });
                            });
                        });
                        break;

                    default:
                        break;
                }


                BootstrapDialog.show
                (
                    {
                        "title": "Setting Entity Value Dependency",
                        "message": html.html(),
                        "buttons": btns
                    }
                );
                setTimeout(function()
                {
                    $.each(after_dialog_launch_fns, function(i, fn)
                    {
                        fn();
                    });
                }, 250);
            }
            function qTypeChange(identifier)
            {
                $("#question_" + identifier).find(".question_type_dropdown").find("button").animate({opacity: 0.2}, 250, function()
                {
                    $.post("./data", {"fn": "set_question_type", "identifier": identifier, "type": $("#hidden_question_type_for_" + identifier).val()}).done(function(resp)
                    {
                        $("#question_" + identifier).find(".question_layout_dropdown").find("button").removeAttr("disabled");
                        $("#question_" + identifier).find(".question_type_dropdown").find("button").animate({opacity: 1.0}, 250, function()
                        {
                        });
                    });
                });
            }
            function deAnonymizeSurvey(identifier)
            {
                var html = $("<div></div>");
                $("<p></p>").text("Are you sure you would like to remove anonymity from this item?").appendTo(html);
                $("<p><b>Disclaimer: </b>(This will not retro-actively provide access to responders' identities.)</p>").appendTo(html);
                $("<center></center>").append($("<button></button>").attr("type", "button").attr("class", "btn btn-danger").attr("id", "button666").text("Cancel")).appendTo(html);

                BootstrapDialog.alert(
                    {
                        "title": "Remove Anonymity",
                        "message": html.html()
                    }
                );
                setTimeout(function()
                {
                   $(".bootstrap-dialog-footer-buttons").find("button").click(function()
                    {
                        $.post("./data", {"fn": "deanonymize_survey", "identifier": identifier}).done(function(resp)
                        {
                            localStorage.setItem("button_to_click", "checklist_builder");
                            window.location.reload();
                        });
                    });
                    $("#button666").click(function()
                    {
                        $.each(BootstrapDialog.dialogs, function(i, dialog)
                        {
                            dialog.close();
                        });
                    });
                }, 250);
            }
            function anonymizeSurvey(identifier)
            {
                var html = $("<div></div>");
                $("<p></p>").text("Are you sure you would like to change this item to anonymous?").appendTo(html);
                $("<center></center>").append($("<button></button>").attr("type", "button").attr("class", "btn btn-danger").attr("id", "button666").text("Cancel")).appendTo(html);

                BootstrapDialog.alert(
                    {
                        "title": "Enable Anonymity",
                        "message": html.html()
                    }
                );
                setTimeout(function()
                {
                    $(".bootstrap-dialog-footer-buttons").find("button").click(function()
                    {
                        $.post("./data", {"fn": "anonymize_survey", "identifier": identifier}).done(function(resp)
                        {
                            localStorage.setItem("button_to_click", "checklist_builder");
                            window.location.reload();
                        });
                    });
                    $("#button666").click(function()
                    {
                        $.each(BootstrapDialog.dialogs, function(i, dialog)
                        {
                            dialog.close();
                        });
                    });
                }, 250);
            }
            function updateLayoutOptions(question, question_type)
            {
                var identifier = question.identifier;
                var items = {};
                items["code_names"] = [];
                items["friendly_names"] = [];

                if(question_type === "yes_or_no")
                {
                    items["code_names"] = ["dropdown"];
                    items["friendly_names"] = ["Dropdown Menu"];
                }
                if(question_type === "text")
                {
                    items["code_names"] = ["single", "multiple"];
                    items["friendly_names"] = ["Single-Line", "Multi-Line"];
                }
                if(question_type === "mult_choice")
                {
                    items["code_names"] = ["dropdown"]
                    items["friendly_names"] = ["Dropdown Menu"];
                }

                var ul = $("#question_" + identifier).find(".question_layout_dropdown").find("ul");
                ul.find("li").remove();

                $.each(items["code_names"], function(i, code_name)
                {
                    var li = $("<li></li>");
                    li.attr("role", "presentation").attr("class", "q_layout_option_" + code_name);

                        var a = $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text(items["friendly_names"][i]);
                        a.appendTo(li);

                        li.click(function()
                        {
                            $("#question_" + identifier).find(".sel_q_layout").text($(this).text());
                            $("<span></span>").addClass("caret").appendTo($("#question_" + identifier).find(".sel_q_layout"));
                            $("#hidden_question_format_for_" + identifier).val($(this).attr("class").replace("q_layout_option_", ""));

                            $("#question_" + identifier).find(".sel_q_layout").animate({opacity: 0.2}, 250, function()
                            {
                                $.post("./data", {"fn": "set_format_for_question", "identifier": identifier, "format": code_name}).done(function(resp)
                                {
                                    $("#question_" + identifier).find(".sel_q_layout").animate({opacity: 1.0}, 250, function()
                                    {
                                    });
                                });
                            });

                        });

                        li.appendTo(ul);
                });
                $("#hidden_question_format_for_" + identifier).val("n/a");
                $("#question_" + identifier).find(".sel_q_layout").text("Choose a Format");
                $("<span></span>").addClass("caret").appendTo($("#question_" + identifier).find(".sel_q_layout"));
                qTypeChange(identifier);
            }
            window.save_changes_pending = false;
            function editFundingSources()
            {
                var copy_down = function(jqBtn)
                {
                    if(jqBtn.closest(".fund_group_div").find(".pending_selected").size() === 0)
                    {
                        return;
                    }
                    if(!window.save_changes_pending)
                    {
                        initPendingChangesBubble();
                    }
                    window.save_changes_pending = true;
                    jqBtn.parent().prevAll("ul").eq(0).find(".pending_selected").each(function(i, e)
                    {
                        $(e).removeClass("pending_selected").appendTo(jqBtn.closest(".fund_group_div").nextAll(".fund_group_div").eq(0).find("ul"));
                    });
                    if(jqBtn.parent().prevAll("ul").eq(0).find("li").size() === 0 && jqBtn.closest(".fund_group_div").find("> h5").find(".glyphicon-trash").size() === 0)
                    {
                        if(jqBtn.closest(".fund_group_div").attr("id").replace("fund_group_code_value_of_", "") !== "unassigned")
                        {
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-trash").click(function()
                            {
                                dropFundGroup($(this));
                            }).appendTo(jqBtn.closest(".fund_group_div").find("> h5"));
                        }
                    }

                    if
                    (
                        jqBtn.closest(".fund_group_div").nextAll(".fund_group_div").find("ul").find("li").size() > 0 &&
                        jqBtn.closest(".fund_group_div").nextAll(".fund_group_div").find(".glyphicon-trash").size() > 0
                    )
                    {
                        jqBtn.closest(".fund_group_div").nextAll(".fund_group_div").find(".glyphicon-trash").remove();
                    }
                };

                var copy_up = function(jqBtn)
                {
                    if(jqBtn.closest(".fund_group_div").find(".pending_selected").size() === 0)
                    {
                        return;
                    }
                    if(!window.save_changes_pending)
                    {
                        initPendingChangesBubble();
                    }
                    window.save_changes_pending = true;
                    if(jqBtn.closest(".fund_group_div").prevAll(".fund_group_div").attr("id").replace("fund_group_code_value_of_", "") === "unassigned")
                    {
                        jqBtn.parent().prevAll("ul").eq(0).find(".pending_selected").each(function(i, e)
                        {
                            if(jqBtn.closest(".fund_group_div").prevAll(".fund_group_div").eq(0).find("#fund_code_name_of_n\\/a").size() > 0)
                            {
                                if(jqBtn.closest(".fund_group_div").prevAll(".fund_group_div").eq(0).find("#fund_code_name_of_fail").size() > 0)
                                {
                                    $(e).removeClass("pending_selected").insertBefore(jqBtn.closest(".fund_group_div").prevAll(".fund_group_div").eq(0).find("ul").find("li").last());
                                }
                                else
                                {
                                    $(e).removeClass("pending_selected").insertAfter(jqBtn.closest(".fund_group_div").prevAll(".fund_group_div").eq(0).find("ul").find("li").last());
                                }
                            }
                            else if(jqBtn.closest(".fund_group_div").prevAll(".fund_group_div").eq(0).find("#fund_code_name_of_fail").size() > 0)
                            {
                                $(e).removeClass("pending_selected").insertBefore(jqBtn.closest(".fund_group_div").prevAll(".fund_group_div").eq(0).find("ul").find("li").last());
                            }
                            else
                            {
                                $(e).removeClass("pending_selected").appendTo(jqBtn.closest(".fund_group_div").prevAll(".fund_group_div").eq(0).find("ul").eq(0));
                            }

                        });

                        if(jqBtn.parent().find(".glyphicon-trash").size() === 0 && jqBtn.parent().prevAll("ul").eq(0).find("li").size() === 0)
                        {
                            if(jqBtn.closest(".fund_group_div").attr("id").replace("fund_group_code_value_of_", "") !== "unassigned")
                            {
                                $("<span></span>").addClass("glyphicon").addClass("glyphicon-trash").click(function()
                                {
                                    dropFundGroup($(this));
                                }).appendTo(jqBtn.closest(".fund_group_div").find("> h5"));
                            }
                        }
                    }
                    else
                    {
                        jqBtn.parent().prevAll("ul").eq(0).find(".pending_selected").each(function(i, e)
                        {
                            $(e).removeClass("pending_selected").appendTo(jqBtn.closest(".fund_group_div").prevAll(".fund_group_div").eq(0).find("ul"));
                        });

                        if(jqBtn.parent().find(".glyphicon-trash").size() === 0 && jqBtn.parent().prevAll("ul").eq(0).find("li").size() === 0)
                        {
                            if(jqBtn.closest(".fund_group_div").attr("id").replace("fund_group_code_value_of_", "") !== "unassigned")
                            {
                                $("<span></span>").addClass("glyphicon").addClass("glyphicon-trash").click(function()
                                {
                                    dropFundGroup($(this));
                                }).appendTo(jqBtn.closest(".fund_group_div").find("> h5"));
                            }
                        }
                    }

                    if
                    (
                        jqBtn.closest(".fund_group_div").prevAll(".fund_group_div").find("ul").find("li").size() > 0 &&
                        jqBtn.closest(".fund_group_div").prevAll(".fund_group_div").find(".glyphicon-trash").size() > 0
                    )
                    {
                        jqBtn.closest(".fund_group_div").prevAll(".fund_group_div").find(".glyphicon-trash").remove();
                    }
                };

                var app_area = $("#app_area");
                var edit_funding_spacer = $("<div></div>").addClass("col-xs-0").addClass("col-sm-0").addClass("col-md-1").addClass("col-lg-1").addClass("edit_row_spacer");
                var edit_funding_row = $("<div></div>").addClass("col-xs-12").addClass("col-sm-12").addClass("col-md-10").addClass("col-lg-10").css("margin-bottom", "1em").addClass("managefundingsourcesrow");
                var edit_funding_spacer2 = edit_funding_spacer.clone();
                $.post("./data", {"fn": "list_funding_sources", "include_grouping_info": "1"}).done(function(resp)
                {
                    $("<h3></h3>").text("Current funding source types:")
                    /*.append
                    (
                        $("<span></span>").addClass("ca_annotation").text("CA")
                    )
                    .append
                    (
                        $("<span></span>").addClass("ut_annotation").text("UT")
                    )
                    .append
                    (
                        $("<span></span>").addClass("tx_annotation").text("TX")
                    )
                    .append
                    (
                        $("<span></span>").addClass("co_annotation").text("CO")
                    )*/
                    .append
                    (
                        $("<span></span>").addClass("active_annotation").text("Active")
                    )
                    .appendTo(edit_funding_row);
                    var ul = $("<ul></ul>").addClass("temp_list_of_funds_ul");

                    $.each(resp.funding_list, function(i, item)
                    {
                        var li = $("<li></li>");
                        li.attr("id", "funding_value_of_" + item.value);
                        li.append($("<span></span>").text(item.value_friendly));

                        if(item.value !== "n/a" && item.value !== "fail" && item.value !== "failed")
                        {
                            /*var ca_cb = $("<input />").attr("type", "checkbox").addClass("ca_exposed").attr("title", "CA Reps Exposure");
                            if(item.ca_exposed)
                            {
                                ca_cb.attr("checked", "checked");
                            }

                            var ut_cb = $("<input />").attr("type", "checkbox").addClass("ut_exposed").attr("title", "UT Reps Exposure");
                            if(item.ut_exposed)
                            {
                                ut_cb.attr("checked", "checked");
                            }

                            var tx_cb = $("<input />").attr("type", "checkbox").addClass("tx_exposed").attr("title", "TX Reps Exposure");
                            if(item.tx_exposed)
                            {
                                tx_cb.attr("checked", "checked");
                            }

                            var co_cb = $("<input />").attr("type", "checkbox").addClass("co_exposed").attr("title", "CO Reps Exposure");
                            if(item.co_exposed)
                            {
                                co_cb.attr("checked", "checked");
                            }*/

                            var active_cb = $("<input />").attr("type", "checkbox").addClass("cb_active").attr("title", "Active (admins can use this fund");
                            if(item.active)
                            {
                                active_cb.attr("checked", "checked");
                            }

                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-pencil").click(function()
                            {
                                editFundName(li);
                            }).appendTo(li);
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-cog").attr("title", "Funding Floor/Ceiling").click(function()
                            {
                                editFundFloorCeiling(item);
                            }).appendTo(li);

                            active_cb.change(function()
                            {
                                $.post("./data", {"fn": "activate_deactivate_fund", "fund": item.value, "active": ((active_cb[0].checked * 1) + '')});
                            }).appendTo(li);

                            /*$.each([co_cb, tx_cb, ut_cb, ca_cb], function(k, ee)
                            {
                                ee.change(function()
                                {
                                    $.post("./data", {"fn": "change_fund_exposure_to_rep", "fund": item.value, "exposed": ((ee[0].checked * 1) + ''), "state": ee.attr("class").split("_")[0]});
                                });
                                ee.appendTo(li);
                            });*/
                        }
                        li.appendTo(ul);
                    });

                    ul.appendTo(edit_funding_row);

                    $("<p></p>").text("Add a new funding source type:").appendTo(edit_funding_row);
                    $("<input />").attr("type", "text").attr("id", "temp_add_new_fund_name").attr("placeholder", "Funding Name...").appendTo(edit_funding_row);
                    $("<br />").appendTo(edit_funding_row);
                    $("<button></button>").addClass("add_fund_continue_btn").attr("type", "button").addClass("btn").addClass("btn-success").text("Add New Funding Type").click(function()
                    {
                        if($.trim($("#temp_add_new_fund_name").val()).length === 0)
                        {
                            window.alert("You must add a valid funding name");
                            return;
                        }

                        var value_friendly = $.trim($("#temp_add_new_fund_name").val());
                        var value = value_friendly.toLowerCase();
                        while(value.indexOf(" ") > -1)
                        {
                            value = value.replace(" ", "_");
                        }

                        $.post("./data", {"fn": "add_funding_source_type", "value": value, "value_friendly": value_friendly}).done(function(resp)
                        {
                            if(resp.success)
                            {
                                clearApp(function()
                                {
                                    editFundingSources();
                                });
                                /*
                                var li = $("<li></li>");
                                li.attr("id", "funding_value_of_" + value);
                                li.append($("<span></span>").text(value_friendly));
                                $("<span></span>").addClass("glyphicon").addClass("glyphicon-pencil").click(function()
                                {
                                    editFundName(li);
                                }).appendTo(li);
                                li.insertAfter($(".temp_list_of_funds_ul").find("li").last().prev());

                                var li2 = $("<li></li>");
                                li2.attr("id", "fund_code_name_of_" + value);

                                li2.text(value_friendly);
                                li2.click(function()
                                {
                                    if($(this).hasClass("pending_selected"))
                                    {
                                        $(this).removeClass("pending_selected")
                                    }
                                    else
                                    {
                                        $(this).addClass("pending_selected");
                                    }
                                });

                                var n_a_unassigned = $(".fund_group_ul").eq(0).find("#fund_code_name_of_n\\/a").size() > 0;
                                var fail_unassigned = $(".fund_group_ul").eq(0).find("#fund_code_name_of_fail").size() > 0;
                                if(!n_a_unassigned && !fail_unassigned)
                                {
                                    li2.appendTo($(".fund_group_ul").eq(0));
                                }
                                if(!n_a_unassigned && fail_unassigned)
                                {
                                    li2.insertBefore($(".fund_group_ul").eq(0).find("li").last());
                                }
                                if(n_a_unassigned && !fail_unassigned)
                                {
                                    li2.appendTo($(".fund_group_ul").eq(0));
                                }
                                if(n_a_unassigned && fail_unassigned)
                                {
                                    li2.insertBefore($(".fund_group_ul").eq(0).find("li").last());
                                }


                                $("#temp_add_new_fund_name").val("");
                                placeFundingSourceArrows();*/

                            }
                            else
                            {
                                BootstrapDialog.alert
                                (
                                    {
                                        "title": "Could not Add Fund",
                                        "message": "A fund with the provide name could not be added, since the same name already exists"
                                    }
                                );
                            }
                        });
                    }).appendTo(edit_funding_row);

                    $("<br /><br />").appendTo(edit_funding_row);
                    $("<h3></h3>").addClass("curr_funding_group_header").text("Current Funding Groups:").appendTo(edit_funding_row);

                    var keys = [];
                    $.each(resp.group_info.group_names, function(i, group_name)
                    {
                        keys.push(group_name["value"]);
                    });
                    keys = keys.sort();
                    if(keys.length > 1 && keys.indexOf("unassigned") !== 0)
                    {
                        var idx = keys.indexOf("unassigned");
                        var new_arr = [];
                        new_arr.push("unassigned");

                        for(var i = 0; i < keys.length; i++)
                        {
                            if(i !== idx)
                            {
                                new_arr.push(keys[i]);
                            }
                        }
                        keys = new_arr;
                    }
                    $.each(keys, function(i, key)
                    {
                        var group_div = $("<div></div>").addClass("fund_group_div");
                        var ul = $("<ul></ul>").addClass("fund_group_ul");
                        var group_name = key;
                        var group_name_friendly = "";
                        $.each(resp.group_info.group_names, function(k, obj)
                        {
                            if(obj["value"] === group_name)
                            {
                                group_name_friendly = obj["value_friendly"];
                            }
                        });
                        group_div.attr("id", "fund_group_code_value_of_" + key);
                        var h5 = $("<h5></h5>")
                        .append
                        (
                            $("<span></span>").text(group_name_friendly).addClass("fund_group_label")
                        );
                        if(key !== "unassigned")
                        {
                            h5.append
                            (
                                $("<span></span>").addClass("glyphicon").addClass("glyphicon-pencil").click(function()
                                {
                                    editGroupLabelName($(this));
                                })
                            );
                        }
                        $.each(resp.group_info.group_items[group_name], function(kk, fund_code_name)
                        {
                            var li = $("<li></li>");
                            li.attr("id", "fund_code_name_of_" + fund_code_name);

                            $.each(resp.funding_list, function(m, funding_list_item)
                            {
                                if(funding_list_item.value === fund_code_name)
                                {
                                    li.text(funding_list_item.value_friendly);
                                }
                            });
                            li.click(function()
                            {
                                if($(this).hasClass("pending_selected"))
                                {
                                    $(this).removeClass("pending_selected")
                                }
                                else
                                {
                                    $(this).addClass("pending_selected");
                                }
                            });
                            li.appendTo(ul);
                        });
                        if(ul.find("li").size() === 0 && group_name !== "unassigned")
                        {
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-trash").click(function()
                            {
                                dropFundGroup($(this));
                            }).appendTo(h5);
                        }
                        h5.appendTo(group_div);
                        ul.appendTo(group_div);

                        var btns_div = $("<div></div>").addClass("fund_group_up_down_btns");

                        // the up buttons
                        if(i !== 0)
                        {
                            $("<button></button>").attr("type", "button").addClass("btn").addClass("btn-info").html("&#8679;").attr("title", "Move selected items(s) upward").click(function()
                            {
                                copy_up($(this));
                            }).appendTo(btns_div);
                        }

                        // the down buttons
                        if(i === 0 && keys.length > 1)
                        {
                            $("<button></button>").attr("type", "button").addClass("btn").addClass("btn-info").html("&#8681;").attr("title", "Move selected items(s) downward").click(function()
                            {
                                copy_down($(this));
                            }).appendTo(btns_div);

                        }
                        else if(i !== 0 && i !== keys.length - 1)
                        {
                            $("<button></button>").attr("type", "button").addClass("btn").addClass("btn-info").html("&#8681;").attr("title", "Move selected item(s) downward").click(function()
                            {
                                copy_down($(this));
                            }).appendTo(btns_div);
                        }

                        if(btns_div.find("button").size() > 0)
                        {
                            btns_div.appendTo(group_div);
                        }
                        group_div.appendTo(edit_funding_row);
                    });
                    $("<br /><br />").appendTo(edit_funding_row);
                    $("<p></p>").text("Add a new funding group:").appendTo(edit_funding_row);
                    $("<input />").attr("type", "text").attr("id", "temp_add_new_fund_group").attr("placeholder", "Name of Group...").appendTo(edit_funding_row);
                    $("<br /><br />").appendTo(edit_funding_row);
                    $("<button></button>").addClass("add_fund_group_continue_btn").attr("type", "button").addClass("btn").addClass("btn-success").text("Add New Funding Group").click(function()
                    {
                        if($.trim($("#temp_add_new_fund_group").val()).length === 0)
                        {
                            window.alert("You must add a valid funding name");
                            return;
                        }

                        var value_friendly = $.trim($("#temp_add_new_fund_group").val());
                        var chars = value_friendly.split("");
                        var ret_early = false;
                        $.each(chars, function(i, char)
                        {
                            var ascii = char.charCodeAt(0);
                            var good = (  (ascii >= 65 && ascii <= 90) || (ascii >= 97 && ascii <= 122) || (ascii === 32) || (ascii >= 48 && ascii <= 57)  );
                            if(!good)
                            {
                                if(ret_early === false)
                                {
                                    ret_early = true;
                                }
                            }
                        });
                        var value = value_friendly.toLowerCase();
                        while(value.indexOf(" ") > -1)
                        {
                            value = value.replace(" ", "_");
                        }

                        if(!ret_early)
                        {
                            $(".fund_group_div").each(function(i, e)
                            {
                                if($(e).attr("id").replace("fund_group_code_value_of_", "") === value)
                                {
                                    ret_early = true;
                                }
                            });
                        }
                        if(ret_early)
                        {
                            window.alert("A valid funding group name should only contains letters a-z, A-Z, the numbers 0-9, and optionally space characters. Additionally, it should not already exist.");
                            return;
                        }

                        $.post("./data", {"fn": "create_funding_group", "value": value, "value_friendly": value_friendly}).done(function(resp)
                        {
                            if(resp.success)
                            {
                                var group_fund_div = $("<div></div>").addClass("fund_group_div").attr("id", "fund_group_code_value_of_" + value);
                                $("<h5></h5>").append
                                (
                                    $("<span></span>").addClass("fund_group_label").text(value_friendly)
                                ).appendTo(group_fund_div);
                                $("<ul></ul>").addClass("fund_group_ul").appendTo(group_fund_div);

                                var dropdown_btns = $("<div></div>").addClass("fund_group_up_down_btns");

                                $("<button></button>").attr("type", "button").addClass("btn").addClass("btn-info").attr("title", "Move selected items(s) upward").html("&#8679;").click(function()
                                {
                                    copy_up($(this));
                                }).appendTo(dropdown_btns);

                                dropdown_btns.appendTo(group_fund_div);

                                group_fund_div.insertAfter($(".fund_group_div").last());

                                if($(".fund_group_div").last().prev().find(".fund_group_up_down_btns").size() === 0)
                                {
                                    dropdown_btns.clone(true).appendTo($(".fund_group_div").last().prev());
                                }

                                var prev_div_has_down_btn = false;
                                $(".fund_group_div").last().prev().find(".fund_group_up_down_btns").find(".btn").each(function(i, e)
                                {
                                    if($(e).attr("title").toLowerCase().indexOf("downward") > -1)
                                    {
                                        prev_div_has_down_btn = true;
                                    }
                                });
                                if(!prev_div_has_down_btn)
                                {
                                    $("<button></button>").attr("type", "button").addClass("btn").addClass("btn-info").attr("title", "Move selected items(s) downward").html("&#8681;").click(function()
                                    {
                                        copy_down($(this));
                                    }).appendTo($(".fund_group_div").last().prev().find(".fund_group_up_down_btns"));
                                }
                                $("#temp_add_new_fund_group").val("");
                            }
                            else
                            {
                                BootstrapDialog.alert
                                (
                                    {
                                        "title": "Could not Add Fund",
                                        "message": "A fund with the provide name could not be added, since the same name already exists"
                                    }
                                );
                            }
                        });
                    }).appendTo(edit_funding_row);


                    edit_funding_spacer.appendTo(app_area);
                    edit_funding_row.appendTo(app_area);
                    edit_funding_spacer2.appendTo(app_area);

                    placeFundingSourceArrows();
                });
            }
            function placeFundingSourceArrows()
            {
                $(".fund_up_arrow, .fund_down_arrow").remove();
                var lis = $(".temp_list_of_funds_ul").find("li");
                lis.each(function(i, e)
                {
                    var el = $(e);
                    var up_arrow = $("<span></span>").html("&uarr;").addClass("fund_up_arrow");
                    var down_arrow = $("<span></span>").html("&darr;").addClass("fund_down_arrow");

                    if(i !== 0 && i !== 1 && i !== lis.length - 1)
                    {
                        up_arrow.appendTo(el);
                    }
                    if(i !== 0 && i !== lis.length - 1 && i !== lis.length - 2)
                    {
                        down_arrow.appendTo(el);
                    }
                });
                $(".fund_up_arrow").off("click").on("click", function()
                {
                    var that = $(this);
                    that.parent().insertBefore(that.parent().prev());
                    placeFundingSourceArrows();
                    saveFundingIndexes();
                });
                $(".fund_down_arrow").off("click").on("click", function()
                {
                    var that = $(this);
                    that.parent().insertAfter(that.parent().next());
                    placeFundingSourceArrows();
                    saveFundingIndexes();
                });
            }
            function saveFundingIndexes()
            {
                $(".temp_list_of_funds_ul").css("opacity", "0.1");
                var index_map = {};
                var lis = $(".temp_list_of_funds_ul").find("li");
                lis.each(function(i, li)
                {
                    if(i > 0 && i !== lis.length - 1)
                    {
                        index_map[$(li).attr("id").replace("funding_value_of_", "")] = i - 1;
                    }
                });
                $.post("/data", {"fn": "update_funding_order", "index_map": JSON.stringify(index_map)}).done(function(r)
                {
                    $(".temp_list_of_funds_ul").css("opacity", "1.0");
                });
            }
            function editFundFloorCeiling(item)
            {
                var html = $("<div></div>").addClass("floor_ceiling_body");
                $("<h2></h2>").text("'Great Criteria':").appendTo(html);
                $("<p></p>").text("Credit Floor (Inclusive, >=) :").appendTo(html);
                $("<input />").attr("type", "text").attr("placeholder", "200").attr("value", item.credit_floor_great + '').addClass("floor").addClass("floor_great").appendTo(html);
                $("<p></p>").text("Credit Ceiling (Inclusive, <=) :").appendTo(html);
                $("<input />").attr("type", "text").attr("placeholder", "300").attr("value", item.credit_ceiling_great + '').addClass("ceiling").addClass("ceiling_great").appendTo(html);
                $("<textarea>" + item.match_message_great + "</textarea>").addClass("match_msg").addClass("match_msg_great").appendTo(html);
                $("<hr />").appendTo(html);
                $("<h2></h2>").text("'Good Criteria':").appendTo(html);
                $("<p></p>").text("Credit Floor (Inclusive, >=) :").appendTo(html);
                $("<input />").attr("type", "text").attr("placeholder", "200").attr("value", item.credit_floor_good + '').addClass("floor").addClass("floor_good").appendTo(html);
                $("<p></p>").text("Credit Ceiling (Inclusive <=) :").appendTo(html);
                $("<input />").attr("type", "text").attr("placeholder", "300").attr("value", item.credit_ceiling_good + '').addClass("ceiling").addClass("ceiling_good").appendTo(html);
                $("<textarea>" + item.match_message_good + "</textarea>").addClass("match_msg").addClass("match_msg_good").appendTo(html);
                $("<p></p>").text("Discount Percentage:").appendTo(html);
                $("<input />").attr("type", "text").addClass("d_percentage").attr("value", item.discount_percentage).appendTo(html);
                $("<p></p>").text("Promotional Billing Period in Months:").appendTo(html);
                $("<input />").attr("type", "text").addClass("promo_period").attr("value", item.promo_period + '').appendTo(html);
                $("<p></p>").text("Promo Factor:").appendTo(html);
                $("<input />").attr("type", "text").addClass("promo_factor").attr("value", item.promo_factor).appendTo(html);
                $("<p></p>").text("After Promo Factor:").appendTo(html);
                $("<input />").attr("type", "text").addClass("after_promo_factor").attr("value", item.after_promo_factor).appendTo(html);
                $("<p></p>").text("Downpayment Percentage:").appendTo(html);
                $("<input />").attr("type", "text").addClass("downpayment_amount").attr("value", item.downpayment_amount).appendTo(html);
                $("<p></p>").text("Milestone One Percentage").appendTo(html);
                $("<input />").attr("type", "text").addClass("milestone_1_percentage").attr("value", item.milestone_1_percentage).appendTo(html);
                $("<p></p>").text("Milestone Two Percentage").appendTo(html);
                $("<input />").attr("type", "text").addClass("milestone_2_percentage").attr("value", item.milestone_2_percentage).appendTo(html);
               
                $("<p></p>").text("Requires Proposal?").appendTo(html);
                var requires_proposal_cb = $("<input />").attr("type", "checkbox").addClass("requires_proposal_cb");
                if(item.requires_proposal)
                {
                    requires_proposal_cb.attr("checked", "checked");
                }
                requires_proposal_cb.appendTo(html);

                $("<p></p>").text("Dealer Fee Percentage").appendTo(html);
                $("<input />").attr("type", "text").addClass("dealer_fee_percentage").attr("value", item.dealer_fee_percentage).appendTo(html);
               
                $("<p></p>").text("Tier Enabled?").appendTo(html);
                var sel = $("<select></select>").addClass("fund_tier_enabled_sel");
                var no_opt = $("<option></option>").attr("value", "0").text("No");
                var yes_opt = $("<option></option>").attr("value", "1").text("Yes");
                if(item.tier_enabled)
                {
                    yes_opt.attr("selected", "selected");
                }
                no_opt.appendTo(sel);
                yes_opt.appendTo(sel);

                sel.appendTo(html);                


                $("<hr />").appendTo(html);

                var table = $("<table></table>").addClass("fund_tier_table");
                var tbody = $("<tbody></tbody>");
                $("<tr></tr>")
                .append
                (
                    $("<th></th>").text("Tier Name")
                )
                .append
                (
                    $("<th></th>").text("Promo Factor")
                )
                .append
                (
                    $("<th></th>").text("After Promo Factor")
                ).appendTo(tbody);
                $.each(item.tier_data, function(i, tier)
                {
                    var tr = $("<tr></tr>");
                    
                    $("<td></td>")
                    .append
                    (
                        $("<input />").attr("type", "text").attr("value", tier.name).attr("disabled", "disabled")
                    )
                    .appendTo(tr);
                    
                    $("<td></td>")
                    .append
                    (
                        $("<input />").attr("type", "text").attr("value", tier.promo_factor)
                    )
                    .appendTo(tr);

                    $("<td></td>")
                    .append
                    (
                        $("<input />").attr("type", "text").attr("value", tier.after_promo_factor)
                    )
                    .appendTo(tr);
                    tr.appendTo(tbody);
                });
                $("<tr></tr>")
                .append
                (
                    $("<td></td>")
                    .append
                    (
                        $("<button></button>").addClass("btn").addClass("btn-success").text("Add new Tier").attr("id", "add_fund_tier_btn")                        
                    )
                )
                .append
                (
                    $("<td></td>").html("&nbsp;")
                )
                .append
                (
                    $("<td></td>").html("&nbsp;")
                )
                .appendTo(tbody);

                tbody.appendTo(table);
                table.appendTo(html);

                BootstrapDialog.show
                (
                    {
                        "title": "Floors/Ceilings for " + item.value_friendly,
                        "message": html.html(),
                        "buttons":
                        [
                            {
                                "label": "Cancel",
                                "cssClass": "btn-danger",
                                "action": function(d)
                                {
                                    d.close();
                                }
                            },
                            {
                                "label": "Update",
                                "cssClass": "btn-primary",
                                "action": function(d)
                                {
                                    var ret = false;
                                    if($(".fund_tier_enabled_sel").val() === "1")
                                    {
                                        $(".fund_tier_table").find("input").each(function(i, e)
                                        {
                                            if(ret)
                                            {
                                                return;
                                            }
                                            if($.trim($(e).val()).length === 0)
                                            {
                                                $(".fund_tier_table").css("display", "table");
                                                $(e)[0].focus();
                                                ret = true;
                                            }
                                        });
                                    }                                    
                                    if(ret)
                                    {
                                        return;
                                    }
                                    var tier_data = [];
                                    if($(".fund_tier_enabled_sel").val() === "1")
                                    {
                                        $(".fund_tier_table").find("tr").each(function(i, e)
                                        {
                                            if(i !== 0 && i !== $(".fund_tier_table").find("tr").length - 1)
                                            {
                                                var obj = 
                                                {
                                                    "name": $.trim($(e).find("input").eq(0).val()),
                                                    "promo_factor": $.trim($(e).find("input").eq(1).val()),
                                                    "after_promo_factor": $.trim($(e).find("input").eq(2).val())
                                                };
                                                tier_data.push(obj);
                                            }
                                        });
                                    }
                                    $.post("./data",
                                    {
                                        "fn": "update_funding_credit_ceiling",
                                        "floor_great": $.trim($(".floor_great").val()),
                                        "ceiling_great": $.trim($(".ceiling_great").val()),
                                        "message_great": $.trim($(".match_msg_great").val()),
                                        "floor_good": $.trim($(".floor_good").val()),
                                        "ceiling_good": $.trim($(".ceiling_good").val()),
                                        "message_good": $.trim($(".match_msg_good").val()),
                                        "discount_percentage": $.trim($(".d_percentage").val()),
                                        "promo_period": $.trim($(".promo_period").val()),
                                        "promo_factor": $.trim($(".promo_factor").val()),
                                        "after_promo_factor": $.trim($(".after_promo_factor").val()),
                                        "downpayment_amount": $.trim($(".downpayment_amount").val()),
                                        "milestone_1_percentage": $.trim($(".milestone_1_percentage").val()),
                                        "milestone_2_percentage": $.trim($(".milestone_2_percentage").val()),
                                        "fund": item.value,
                                        "tier_enabled": (($(".fund_tier_enabled_sel").val() === "1") * 1) + '',
                                        "tier_data": JSON.stringify(tier_data),
                                        "requires_proposal": ($(".requires_proposal_cb").first()[0].checked * 1) + '',
                                        "dealer_fee_percentage": $.trim($(".dealer_fee_percentage").first().val())
                                    }).done(function(resp)
                                    {
                                        item.credit_floor_great = parseInt($.trim($(".floor_great").val()));
                                        item.credit_ceiling_great = parseInt($.trim($(".ceiling_great").val()));
                                        item.match_message_great = $.trim($(".match_msg_great").val());
                                        item.credit_floor_good = parseInt($.trim($(".floor_good").val()));
                                        item.credit_ceiling_good = parseInt($.trim($(".ceiling_good").val()));
                                        item.match_message_good = $.trim($(".match_msg_good").val());
                                        item.discount_percentage = $.trim($(".d_percentage").val());
                                        item.promo_period = parseInt($.trim($(".promo_period").val()));
                                        item.promo_factor = $.trim($(".promo_factor").val());
                                        item.after_promo_factor = $.trim($(".after_promo_factor").val());
                                        item.downpayment_amount = $.trim($(".downpayment_amount").val());
                                        item.milestone_1_percentage = $.trim($(".milestone_1_percentage").val());
                                        item.milestone_2_percentage = $.trim($(".milestone_2_percentage").val());
                                        item.tier_enabled = ($(".fund_tier_enabled_sel").val() === "1");
                                        item.tier_data = tier_data
                                        item.requires_proposal = $(".requires_proposal_cb").first()[0].checked;
                                        item.dealer_fee_percentage = $.trim($(".dealer_fee_percentage").first().val());
                                        d.close();
                                    });
                                }
                            }
                        ],
                        "onshown": function(d)
                        {
                            $(".fund_tier_enabled_sel").change(function()
                            {
                                var display_props = ["none", "table"];
                                $(".fund_tier_table").css("display", display_props[parseInt($(this).val())]);
                            })
                            .trigger("change");
                            $("#add_fund_tier_btn").click(function()
                            {
                                var tr = $("<tr></tr>");
                                $("<td></td>")
                                .append
                                (
                                    $("<input />").attr("type", "text")
                                )
                                .appendTo(tr);
                                
                                $("<td></td>")
                                .append
                                (
                                    $("<input />").attr("type", "text")
                                )
                                .appendTo(tr);

                                $("<td></td>")
                                .append
                                (
                                    $("<input />").attr("type", "text")
                                )
                                .appendTo(tr);

                                tr.insertBefore($(".fund_tier_table").find("tr").last());
                            });
                        }
                    }
                );
            }
            function editFundName(jqLI)
            {
                var orig_txt = jqLI.find("span").eq(0).text();
                jqLI.find("span").eq(0).attr("contenteditable", "true");
                jqLI.find("span").eq(0).off("blur");
                var ret_early = false;
                jqLI.find("span").eq(0).on("blur", function()
                {
                    var idx = jqLI.prevAll("li").size();
                    var txt = $.trim(jqLI.find("span").eq(0).text());
                    
                    if(ret_early)
                    {
                        window.alert("A valid name should only contains letter a-z, A-Z, and optionally space characters");
                        return;
                    }
                    $.post("./data", {"fn": "set_friendly_name_for_fund", "name": $.trim(jqLI.find("span").eq(0).text()), "index": idx}).done(function(resp)
                    {
                        jqLI.find("span").eq(0).removeAttr("contenteditable");
                        if(!resp.success)
                        {
                            window.alert("A fund with the same name already exists, so the new name cannot be applied.");
                            jqLI.find("span").eq(0).text(orig_txt);
                        }
                        else
                        {
                            $(".fund_group_ul").each(function(i, e)
                            {
                                $(e).find("li").each(function(k, ee)
                                {
                                    if($(ee).attr("id").replace("fund_code_name_of_", "") === jqLI.attr("id").replace("funding_value_of_", ""))
                                    {
                                        $(ee).text($.trim(jqLI.find("span").eq(0).text()));
                                    }
                                });
                            });
                        }
                    });
                });
                jqLI.find("span").eq(0)[0].focus();
            }
            function editGroupLabelName(jqGlyph)
            {
                jqGlyph.prev().off("blur");
                jqGlyph.prev().attr("contenteditable", "true");
                jqGlyph.prev().on("blur", function()
                {
                    var txt = $.trim(jqGlyph.prev().text()).toLowerCase();
                    var exists_already = false;
                    jqGlyph.parent().parent().prevAll(".fund_group_div").each(function(i, e)
                    {
                        if($.trim($(e).find("h5").find(".fund_group_label").text()).toLowerCase() === txt)
                        {
                            exists_already = true;
                        }
                    });
                    jqGlyph.parent().parent().nextAll(".fund_group_div").each(function(i, e)
                    {
                        if($.trim($(e).find("h5").find(".fund_group_label").text()).toLowerCase() === txt)
                        {
                            exists_already = true;
                        }
                    });

                    if(exists_already)
                    {
                        window.alert("The new name could not be saved because the same name is already present with another group.");
                        return;
                    }
                    $.post("./data", {"fn": "update_fund_group_name", "value": jqGlyph.parent().parent().attr("id").replace("fund_group_code_value_of_", ""), "value_friendly": $.trim(jqGlyph.prev().text())}).done(function(resp)
                    {
                        jqGlyph.prev().removeAttr("contenteditable");
                    });
                });
                jqGlyph.prev()[0].focus();
            }
            function initPendingChangesBubble()
            {
                var bubble = $("<div></div>").addClass("pending_changes_bubble");
                bubble.text("Confirm Pending Changes");
                bubble.click(function()
                {
                    group_info = {};
                    $(".fund_group_div").each(function(i, e)
                    {
                        if($(e).attr("id").replace("fund_group_code_value_of_", "") !== "unassigned")
                        {
                            var arr = [];
                            $(e).find("ul").find("li").each(function(ii, ee)
                            {
                                var val = $(ee).attr("id").replace("fund_code_name_of_", "");
                                arr.push(val);
                            });
                            group_info[$(e).attr("id").replace("fund_group_code_value_of_", "")] = arr;
                        }
                    });
                    $(".pending_changes_bubble").css("opacity", "0.4").text("Saving...");
                    $.post("./data", {"fn": "adjust_funding_group_info", "info": JSON.stringify(group_info)}).done(function(resp)
                    {
                        window.save_changes_pending = false;
                        $(".pending_changes_bubble").css("opacity", "0.0");
                        setTimeout(function()
                        {
                            $(".pending_changes_bubble").remove();
                        });
                    });
                }).appendTo($("body"));
                setTimeout(function()
                {
                    $(".pending_changes_bubble").css("opacity", "1.0");
                }, 1000);

            }
            function dropFundGroup(jqTrashIcon)
            {
                if(window.save_changes_pending)
                {
                    window.alert("There are pending changes which must first be committed before dropping the group.");
                    return;
                }
                if(window.confirm("Are you sure you would like to delete this group?"))
                {
                    $.post("./data", {"fn": "drop_fund_group", "value": jqTrashIcon.closest(".fund_group_div").attr("id").replace("fund_group_code_value_of_", "")}).done(function(resp)
                    {
                        jqTrashIcon.closest(".fund_group_div").remove();
                    });
                }
            }
            function editPayscales(apps_script_url, user_data)
            {
                if(typeof(apps_script_url) + '' === "undefined")
                {
                    $.post("/data", {"fn": "get_apps_script_url", "label": "payscale_audit"}).done(function(resp)
                    {
                        editPayscales(resp);
                    });
                    return;
                }
                if(typeof(user_data) + '' === "undefined")
                {
                    $.post("./data", {"fn": "list_all_users"}).done(function(resp)
                    {
                        editPayscales(apps_script_url, resp.contacts)
                    });
                    return;
                }

                // build the contacts dictionary and the identifier => name map
                var hint_dictionary = {};
                var ident_name_map = {};

                // do the first name hints
                $.each(user_data, function(i, contact)
                {
                    ident_name_map[contact.identifier] = contact.name;

                    var fname = contact.first_name.toLowerCase();
                    for(var k = 0; k < fname.length; k++)
                    {
                        var hint = fname.substring(0, k + 1);
                        if(typeof(hint_dictionary[hint]) + '' === "undefined")
                        {
                            hint_dictionary[hint] = [];
                        }
                        hint_dictionary[hint].push
                        (
                            {
                                "name": contact.name,
                                "identifier": contact.identifier,
                                "rep_id": contact.rep_id
                            }
                        );
                    }

                    var lname = contact.last_name.toLowerCase();
                    for(var k = 0; k < lname.length; k++)
                    {
                        var hint = lname.substring(0, k + 1);
                        if(typeof(hint_dictionary[hint]) + '' === "undefined")
                        {
                            hint_dictionary[hint] = [];
                        }
                        hint_dictionary[hint].push
                        (
                            {
                                "name": contact.name,
                                "identifier": contact.identifier,
                                "rep_id": contact.rep_id
                            }
                        );
                    }

                    var name = contact.name.toLowerCase();
                    for(var k = 0; k < name.length; k++)
                    {
                        var hint = name.substring(0, k + 1);
                        if(typeof(hint_dictionary[hint]) + '' === "undefined")
                        {
                            hint_dictionary[hint] = [];
                        }
                        hint_dictionary[hint].push
                        (
                            {
                                "name": contact.name,
                                "identifier": contact.identifier,
                                "rep_id": contact.rep_id
                            }
                        );
                    }
                });


                var app_area = $("#app_area");
                var edit_payscale_spacer = $("<div></div>").addClass("col-xs-0").addClass("col-sm-0").addClass("col-md-1").addClass("col-lg-1").addClass("edit_row_spacer");
                var edit_payscale_row = $("<div></div>").addClass("col-xs-12").addClass("col-sm-12").addClass("col-md-10").addClass("col-lg-10").css("margin-bottom", "1em").addClass("managepayscalesrow");
                var edit_payscale_spacer2 = edit_payscale_spacer.clone();

                $.post("./data", {"fn": "list_payscales", "include_naming_map": "1", "include_override_data": "1"}).done(function(resp)
                {
                    var scales = resp.scales;
                    var fund_names = resp.fund_names;

                    $("<h3></h3>").text("Current Payscales:").append($("<span></span>").append($("<a></a>").attr("target", "_blank").addClass("audit_link").attr("href", apps_script_url).text("Audit"))).appendTo(edit_payscale_row);

                    $.each(scales, function(i, scale)
                    {
                        var inner_row = $("<div></div>").addClass("scale_row").addClass("row").attr("id", "scale_row_for_" + scale.value);
                        var glyph = $("<span></span>").addClass("glyphicon").addClass("glyphicon-scale");
                        var div = $("<div></div>").addClass("col-xs-12").addClass("col-sm-12").addClass("col-md-12").addClass("col-lg-12");
                        //glyph.appendTo(div);
                        $("<span></span>").attr("title", "Rename Payscale").addClass("glyphicon").addClass("glyphicon-pencil").click(function()
                        {
                            var ps_title = $(this).nextAll(".payscale_title").eq(0).find(".actual");

                            ps_title.off("blur");
                            ps_title.on("blur", function()
                            {
                                var new_name = $.trim(ps_title.text());
                                $.post("./data", {"fn": "rename_payscale", "value": scale.value, "new_name": new_name}).done(function(resp2)
                                {

                                });
                                ps_title.removeAttr("contenteditable");
                            });
                            ps_title.attr("contenteditable", "true");
                            ps_title[0].focus();
                        }).appendTo(div);
                        $("<span></span>").attr("title", "(Un)assign users to this scale").addClass("glyphicon").addClass("glyphicon-user").click(function()
                        {
                            manageUsersForPayscale(scale);
                        }).appendTo(div);
                        $("<span></span>").attr("title", "Configure payment schedule for scale").addClass("glyphicon").addClass("glyphicon-edit").click(function()
                        {
                            configureScaleInfo(scale);
                        }).appendTo(div);

                        $("<p></p>").addClass("payscale_title").append($("<span></span>").addClass("actual").text(scale.value_friendly)).appendTo(div);
                        $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove").addClass("drop_payscale").attr("title", "Delete Payscale")
                        .click(function()
                        {
                            var that = $(this);
                            if(window.confirm("Are you sure you would like to delete this payscale?"))
                            {
                                $.post("./data", {"fn": "delete_payscale", "value": scale.value}).done(function(respy)
                                {
                                    that.parent().parent().remove();
                                });
                            }
                        }).appendTo(div);

                        div.appendTo(inner_row);

                        inner_row.appendTo(edit_payscale_row);
                    });
                    $("<br />").appendTo(edit_payscale_row);
                    $("<br />").appendTo(edit_payscale_row);
                    $("<p></p>").text("Add a new payscale:").appendTo(edit_payscale_row);
                    $("<input />").attr("type", "text").attr("id", "temp_add_new_payscale").attr("placeholder", "Name of payscale...").appendTo(edit_payscale_row);
                    $("<br />").appendTo(edit_payscale_row);
                    $("<br />").appendTo(edit_payscale_row);
                    $("<button></button>").addClass("add_payscale_continue_btn").attr("type", "button").addClass("btn").addClass("btn-success").text("Add New Payscale").click(function()
                    {
                        var value = $("#temp_add_new_payscale").val();
                        value = value.toLowerCase();
                        while(value.indexOf(" ") > -1)
                        {
                            value = value.replace(" ", "_");
                        }

                        var value_friendly = $("#temp_add_new_payscale").val();
                        $.post("./data", {"fn": "create_payscale", "value": value, "value_friendly": value_friendly}).done(function(resp2)
                        {
                            $("#temp_add_new_payscale").val("");
                            $("#payscale_editor").trigger("click");
                        });
                    }).appendTo(edit_payscale_row);

                    $("<hr />").appendTo(edit_payscale_row);
                    $("<h3></h3>").text("Automatic Overrides for Construction Complete:").appendTo(edit_payscale_row);
                    $("<hr />").appendTo(edit_payscale_row);
                    $("<br />").appendTo(edit_payscale_row);

                    $("<div></div>").addClass("override_titlerow").addClass("row").append
                    (
                        $("<div><div>").addClass("col-xs-12").addClass("col-sm-12").addClass("col-md-12").addClass("col-lg-12")
                        .append
                        (
                            $("<div></div>").addClass("col-xs-4").addClass("col-sm-4").addClass("col-md-4").addClass("col-lg-4")
                            .text
                            (
                                "Rep"
                            )
                        )
                        .append
                        (
                            $("<div></div>").addClass("col-xs-4").addClass("col-sm-4").addClass("col-md-4").addClass("col-lg-4")
                            .text
                            (
                                "Recipient"
                            )
                        )
                        .append
                        (
                            $("<div></div>").addClass("col-xs-2").addClass("col-sm-2").addClass("col-md-2").addClass("col-lg-2")
                            .text
                            (
                                "Amount"
                            )
                        )
                        .append
                        (
                            $("<div></div>").addClass("col-xs-2").addClass("col-sm-2").addClass("col-md-2").addClass("col-lg-2")
                            .text
                            (
                                "Enabled"
                            )
                        )
                    ).appendTo(edit_payscale_row);

                    $.each(resp.overrides, function(i, override)
                    {
                        var inner_row = $("<div></div>").addClass("override_row").addClass("row").attr("id", "override_row_for_" + override.identifier);

                        var div = $("<div></div>").addClass("col-xs-12").addClass("col-sm-12").addClass("col-md-12").addClass("col-lg-12");
                        $("<div></div>").addClass("col-xs-4").addClass("col-sm-4").addClass("col-md-4").addClass("col-lg-4")
                        .text
                        (
                            override.name
                        )
                        .appendTo(div);

                        var txt = override.automatic_override_designee;
                        var glyph_cls = "standard_ml";
                        if(txt === "AZ0230")
                        {
                            txt = "NO PAYOUT";
                            glyph_cls = "alternate_ml";
                        }
                        $("<div></div>").addClass("col-xs-4").addClass("col-sm-4").addClass("col-md-4").addClass("col-lg-4")
                        .append
                        (
                            $("<span></span>").css("font-family", "monospace, Monospace, \"Monospace\", \"monospace\"").text(txt)
                        )
                        .append
                        (
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-user").attr("title", "Change Override Payment Designee").addClass(glyph_cls)
                            .on("click", function()
                            {
                                $("<button></button>").addClass("btn").addClass("btn-danger").text("Cancel")
                                .click(function()
                                {
                                    $("#override_row_for_" + override.identifier).find(".col-xs-4").eq(1).find("p").remove();
                                    $("#override_row_for_" + override.identifier).find(".col-xs-4").eq(1).find(".hinted_users").remove();
                                    $(this).next().remove();
                                    $(this).remove();

                                }).appendTo($("#override_row_for_" + override.identifier).find(".col-xs-4").eq(0));

                                $("<button></button>").addClass("btn").addClass("btn-danger").text("Set to NO PAYOUT")
                                .click(function()
                                {
                                    if(window.confirm("Are you sure you would like to set " + override.name + " to NO PAYOUT?"))
                                    {
                                        $.post("./data", {"fn": "reassign_automatic_override_designee", "identifier": override.identifier, "designee": "AZ0230"}).done(function(resp)
                                        {
                                            $("#override_row_for_" + override.identifier).find(".col-xs-4").find("> span").eq(0).text("NO PAYOUT");
                                            $("#override_row_for_" + override.identifier).find(".btn-danger").eq(0).trigger("click");
                                        });
                                    }
                                }).appendTo($("#override_row_for_" + override.identifier).find(".col-xs-4").eq(0));

                                $("<p></p>").text("Enter someone's name...").addClass("change_usr_box").attr("contenteditable", "true")
                                .focus(function()
                                {
                                    if($(this).text() === "Enter someone's name...")
                                    {
                                        $(this).text("");
                                    }
                                })
                                .blur(function()
                                {
                                    if($.trim($(this).text()) === "")
                                    {
                                        $(this).text("Enter someone's name...");
                                    }
                                })
                                .on("keyup", function()
                                {
                                    if($.trim($(this).text()).length > 0)
                                    {
                                        hint_at_users2($(this), hint_dictionary);
                                    }
                                }).appendTo($("#override_row_for_" + override.identifier).find(".col-xs-4").eq(1));

                                $("<div></div>").addClass("hinted_users")
                                .append
                                (
                                    $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove").click(function()
                                    {
                                         $(".hinted_users").css("display", "none");
                                         $(".hinted_user").remove();
                                         $(".change_usr_box").text("").trigger("keyup");
                                    })
                                ).appendTo($("#override_row_for_" + override.identifier).find(".col-xs-4").eq(1));
                            })
                        )
                        .append
                        (
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-info-sign").attr("title", "Who's this?").on("click", function()
                            {
                                $("#override_row_for_" + override.identifier).find(".col-xs-4").eq(1).children().animate({opacity: 0.0}, 250, function()
                                {
                                    if(override.automatic_override_designee === "AZ0230")
                                    {
                                        if($("#override_row_for_" + override.identifier).find(".temp_span_override").size() === 0)
                                        {
                                            $("<span></span>").addClass("temp_span_override").css("font-size", "0.8").text("Recruited by Shaffer family").appendTo($("#override_row_for_" + override.identifier).find(".col-xs-4").eq(1));
                                            setTimeout(function()
                                            {
                                                $("#override_row_for_" + override.identifier).find(".col-xs-4").eq(1).find("span").last().remove();
                                                $("#override_row_for_" + override.identifier).find(".col-xs-4").eq(1).children().animate({opacity: 1.0}, 250, function()
                                                {
                                                });

                                            }, 2000);
                                        }
                                    }
                                    else
                                    {
                                        window.temp_override_cnt = 0;
                                        $("#override_row_for_" + override.identifier).find(".col-xs-4").eq(1).children().animate({opacity: 0.0}, 250, function()
                                        {
                                            window.temp_override_cnt++;
                                            if(window.temp_override_cnt === 1)
                                            {
                                                $.post("./data", {"fn": "rep_id_to_name", "rep_id": txt}).done(function(resp)
                                                {
                                                    $("<span></span>").addClass("temp_span_override").css("font-size", "0.8").text(resp.name).appendTo($("#override_row_for_" + override.identifier).find(".col-xs-4").eq(1));
                                                    setTimeout(function()
                                                    {
                                                        $("#override_row_for_" + override.identifier).find(".col-xs-4").eq(1).find("span").last().remove();
                                                        $("#override_row_for_" + override.identifier).find(".col-xs-4").eq(1).children().animate({opacity: 1.0}, 250, function()
                                                        {
                                                        });
                                                    }, 2000);
                                                });
                                            }
                                        });

                                    }
                                });
                            })
                        )
                        .appendTo(div);

                        var amount_str = override.automatic_override_amount + '';
                        if(amount_str.indexOf(".") === -1)
                        {
                            amount_str = amount_str + ".00";
                        }

                        $("<div></div>").addClass("col-xs-2").addClass("col-sm-2").addClass("col-md-2").addClass("col-lg-2")
                        .append
                        (
                            $("<span></span>").text("$")
                        )
                        .append
                        (
                            $("<input />").attr("type", "number").attr("size", "6").attr("min", "0").attr("max", "10").attr("step", "0.25").attr("value", amount_str)
                            .on("change", function()
                            {
                                var v = $(this).val();
                                var change = false;
                                if(v.indexOf(".") === -1)
                                {
                                    v = v + ".00";
                                    change = true;
                                }
                                else
                                {
                                    var vs = v.split(".");
                                    if(vs[vs.length - 1].length === 1)
                                    {
                                        v = v + "0";
                                        change = true;
                                    }
                                    else if(vs[vs.length - 1].length > 2)
                                    {
                                        v = vs[0] + "." + vs[1].substring(0, 2);
                                        change = true;
                                    }

                                }
                                if(parseFloat(v) > 10.00)
                                {
                                    v = "10.00";
                                    change = true;
                                }
                                if(change)
                                {
                                    $(this).val(v);
                                }

                                $.post("./data", {"fn": "set_automatic_override_amount", "identifier": override.identifier, "amount": v}).done(function(resp2)
                                {

                                });
                            })
                        )
                        .appendTo(div);

                        var cb = $("<input />").attr("type", "checkbox");
                        if(override.automatic_override_enabled)
                        {
                            cb.attr("checked", "checked");
                        }
                        cb.on("change", function()
                        {
                            var cee_bee = $(this);
                            cee_bee.css("opacity", "0.2");
                            $.post("./data", {"fn": "enable_disable_automatic_overrides", "identifier": override.identifier, "flag": ((cee_bee[0].checked * 1) + '')}).done(function(resp)
                            {
                                cee_bee.css("opacity", "1.0");
                            });
                        });
                        $("<div></div>").addClass("col-xs-2").addClass("col-sm-2").addClass("col-md-2").addClass("col-lg-2")
                        .append
                        (
                            cb
                        )
                        .appendTo(div);

                        div.appendTo(inner_row);
                        inner_row.appendTo(edit_payscale_row);
                    });

                    edit_payscale_spacer.appendTo(app_area);
                    edit_payscale_row.appendTo(app_area);
                    edit_payscale_spacer2.appendTo(app_area);

                });
            }
            function manageUsersForPayscale(scale)
            {
                $(".manage_users_row").remove();
                $(".configure_scale_row").remove();
                var inner_row = $("<div></div>").addClass("row").addClass("manage_users_row").attr("id", "manage_users_for_" + scale.value);
                var spacer = $("<div></div>").addClass("col-xs-2").addClass("col-sm-2").addClass("col-md-2").addClass("col-lg-2");
                spacer.appendTo(inner_row);

                var div = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10").addClass("manage_users_right_aligned_col");
                $("<p></p>").text("Filter:").appendTo(div);
                $("<input />").attr("type", "text").attr("placeholder", "First Name").attr("id", "ps_filter_fname").appendTo(div);
                $("<input />").attr("type", "text").attr("placeholder", "Last Name").attr("id", "ps_filter_lname").appendTo(div);
                $("<input />").attr("type", "text").attr("placeholder", "Rep ID").attr("id", "ps_filter_rid").appendTo(div);
                $("<span></span>").addClass("glyphicon").addClass("glyphicon-resize-vertical").click(function()
                {
                    toggleActiveInactiveSort();
                }).appendTo(div);
                div.find("input").each(function(i, e)
                {
                    $.each(["keydown", "keyup", "keypress"], function(k, ev)
                    {
                        div.on(ev, function()
                        {
                            onPayscaleUserFilterInputReceived();
                        });
                    });
                });
                var inner_users_div = $("<div></div>").addClass("inner_users_div");

                $.post("./data", {"fn": "get_user_info_for_payscales"}).done(function(resp)
                {
                    $.each(resp.users, function(i, user)
                    {
                        var user_div = $("<div></div>").addClass("payscale_user_div");
                        $("<p></p>").text(user.first_name + " " + user.last_name + " (" + user.rep_id + ")").appendTo(user_div);
                        var cb = $("<input />").attr("type", "checkbox").addClass("cb_for_user_" + user.identifier);
                        if(user.payscale_key === scale.value)
                        {
                            cb.attr("checked", "checked");
                        }
                        cb.change(function()
                        {
                            setPayscaleKeyForUser($(this));
                        }).appendTo(user_div.find("> p"));
                        user_div.appendTo(inner_users_div);
                    });
                    console.log(resp);
                    inner_users_div.appendTo(div);
                    div.appendTo(inner_row);
                    inner_row.insertAfter($("#scale_row_for_" + scale.value));
                });
            }
            function onPayscaleUserFilterInputReceived()
            {
                var predicates =
                {
                    "fname": function(jqUserDiv)
                    {
                        var fname = $.trim($("#ps_filter_fname").val());
                        var txt = jqUserDiv.text();
                        return $.trim(txt.split(" ")[0]).toLowerCase().indexOf($.trim(fname.toLowerCase())) === 0;
                    },
                    "lname": function(jqUserDiv)
                    {
                        var lname = $.trim($("#ps_filter_lname").val());
                        var txt = jqUserDiv.text();
                        return $.trim(txt.split(" ")[1]).toLowerCase().indexOf($.trim(lname.toLowerCase())) === 0;
                    },
                    "repid": function(jqUserDiv)
                    {
                        var repid = $.trim($("#ps_filter_rid").val());
                        var txt = jqUserDiv.text();
                        return $.trim(txt.split(" ")[2]).toLowerCase().replace("(", "").replace(")", "").indexOf($.trim(repid.toLowerCase())) === 0;
                    }
                };

                var predicate_fn = function(div)
                {
                    return true;
                };
                if($.trim($("#ps_filter_fname").val()).length > 0)
                {
                    var curr_predicate_fn1 = predicate_fn;
                    predicate_fn = function(div)
                    {
                        return curr_predicate_fn1(div) && predicates["fname"](div);
                    };
                }
                if($.trim($("#ps_filter_lname").val()).length > 0)
                {
                    var curr_predicate_fn2 = predicate_fn;
                    predicate_fn = function(div)
                    {
                        return curr_predicate_fn2(div) && predicates["lname"](div);
                    };
                }
                if($.trim($("#ps_filter_rid").val()).length > 0)
                {
                    var curr_predicate_fn3 = predicate_fn;
                    predicate_fn = function(div)
                    {
                        return curr_predicate_fn3(div) && predicates["repid"](div);
                    };
                }

                $(".payscale_user_div").each(function(i, d)
                {
                    if(predicate_fn($(d)))
                    {
                        $(d).css("display", "block");
                    }
                    else
                    {
                        $(d).css("display", "none");
                    }
                });
            }
            function setPayscaleKeyForUser(jqCB)
            {
                jqCB.parent().animate({opacity: 0.2}, 250, function()
                {
                    var val = $(".manage_users_row").attr("id").replace("manage_users_for_", "");
                    if(!jqCB[0].checked)
                    {
                        val = "n/a";
                    }

                    $.post("./data", {"fn": "set_payscale_key_for_user", "key": val, "user_id": jqCB.attr("class").replace("cb_for_user_", "")}).done(function(resp)
                    {
                        jqCB.parent().animate({opacity: 1.0}, 250, function()
                        {
                        });
                    });
                });
            }
            function toggleActiveInactiveSort()
            {
                var has_unchecked = false;
                var has_checked = false;
                $(".payscale_user_div").each(function(i, e)
                {
                    if($(e).find("input").eq(0)[0].checked)
                    {
                        has_checked = true;
                    }
                    else
                    {
                        has_unchecked = true;
                    }
                });

                if(!(has_unchecked && has_checked))
                {
                    return;
                }

                var actives_at_top = true;
                if($(".payscale_user_div").eq(0).find("input").eq(0)[0].checked)
                {
                    actives_at_top = false;
                }
                var dt = new Date().getTime();
                if(actives_at_top)
                {
                    window["temp_sort_" + dt] = function()
                    {
                        var skip = false;
                        var swaps = [];
                        $(".payscale_user_div").each(function(i, e)
                        {
                            if(!skip)
                            {
                                var cb = $(e).find("input").eq(0);
                                if(cb[0].checked)
                                {
                                    $(e).prevAll(".payscale_user_div").each(function(k, ee)
                                    {
                                        if(!$(ee).find("input").eq(0)[0].checked && swaps.length === 0)
                                        {
                                            swaps.push($(ee));
                                            swaps.push($(e));
                                        }
                                    });
                                    if(swaps.length === 2)
                                    {
                                        skip = true;
                                    }

                                }
                            }
                        });
                        if(skip && swaps.length === 2)
                        {
                            swaps[1].insertBefore(swaps[0]);
                            window["temp_sort_" + dt]();
                            return;
                        }
                        delete window["temp_sort_" + dt];
                    };
                }
                else
                {
                    window["temp_sort_" + dt] = function()
                    {
                        var skip = false;
                        var swaps = [];
                        $(".payscale_user_div").each(function(i, e)
                        {
                            if(!skip)
                            {
                                var cb = $(e).find("input").eq(0);
                                if(!cb[0].checked)
                                {
                                    $(e).prevAll(".payscale_user_div").each(function(k, ee)
                                    {
                                        if($(ee).find("input").eq(0)[0].checked && swaps.length === 0)
                                        {
                                            swaps.push($(ee));
                                            swaps.push($(e));
                                        }
                                    });
                                    if(swaps.length === 2)
                                    {
                                        skip = true;
                                    }

                                }
                            }
                        });
                        if(skip && swaps.length === 2)
                        {
                            swaps[1].insertBefore(swaps[0]);
                            window["temp_sort_" + dt]();
                            return;
                        }
                        delete window["temp_sort_" + dt];
                    };
                }
                window["temp_sort_" + dt]();
            }

            function configureScaleInfo(scale, groups)
            {
                if(typeof(groups) + '' === "undefined")
                {
                    $.post("./data", {"fn": "list_funding_groups"}).done(function(resp)
                    {
                        configureScaleInfo(scale, resp.groups);
                    });
                    return;
                }

                var app_area = $("#app_area");

                $(".manage_users_row").remove();
                $(".configure_scale_row").remove();


                var inner_row = $("<div></div>").addClass("row").addClass("configure_scale_row").attr("id", "configure_scale_values_for_" + scale.value);
                var spacer = $("<div></div>").addClass("col-xs-2").addClass("col-sm-2").addClass("col-md-2").addClass("col-lg-2");
                spacer.appendTo(inner_row);

                var div = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10").addClass("configure_scale_values_right_aligned_col");
                $("<p></p>").text("Configuration for '" + scale.value_friendly + "'").addClass("scale_config_mini_header").appendTo(div);
                $("<hr />").appendTo(div);

                var inner_payment_schedule_div = $("<div></div>").addClass("inner_users_div");

                var table = $("<table></table>").addClass("payscale_config_tbl");
                var tbody = $("<tbody></tbody>");

                var header_tr = $("<tr></tr>").addClass("header_tr_payscale");
                $("<td></td>").text("Tier").appendTo(header_tr);
                $.each(groups.group_names, function(i, group_name)
                {
                    if(group_name.value !== "unassigned")
                    {
                        $("<td></td>").text(group_name.value_friendly).appendTo(header_tr);
                    }
                });
                header_tr.appendTo(tbody);

                $.each(["A", "B", "C", "D", "E"], function(i, tier)
                {
                    var tr = $("<tr></tr>");
                    var price_td = $("<td></td>").addClass("kwh_price_td");
                    price_td.html("Tier " + tier);

                    price_td.appendTo(tr);

                    $.each(groups.group_names, function(k, group_name)
                    {
                        if(group_name.value === "unassigned")
                        {
                            return;
                        }
                        var td = $("<td></td>").addClass("cell_cursor").attr("id", "group_" + group_name.value + "|" + tier);
                        td.text("$");

                        var val_txt = "0.00";
                        $.each(scale.scales, function(j, scale_item)
                        {
                            if(scale_item.funding_group === group_name.value && scale_item.tier === tier)
                            {
                                val_txt = parseFloat(scale_item.price).toFixed(2) + '';
                            }
                        });
                        var price_span = $("<span></span>").addClass("payscale_edit_cell_price_span").text(val_txt);

                        td.click(function()
                        {
                            var orig_txt = price_span.text();
                            price_span.off("blur");
                            price_span.attr("contenteditable", "true");
                            price_span.on("blur", function()
                            {
                                var p_val = $.trim(price_span.text());
                                var good = true;
                                $.each(p_val.split(""), function(j, char)
                                {
                                    var ascii = char.charCodeAt(0);
                                    if(ascii === 46 || (ascii >= 48 && ascii <= 57))
                                    {
                                        // good
                                    }
                                    else
                                    {
                                        good = false;
                                    }
                                });
                                if(!good)
                                {
                                    price_span.text(orig_txt);
                                    return;
                                }
                                $.post("./data", {"fn": "set_price_for_scale_at_group", "scale": scale.value, "group": group_name.value, "tier": tier, "price": price_span.text()}).done(function(resp)
                                {

                                });
                                price_span.removeAttr("contenteditable");
                            });
                            price_span[0].focus();
                        });
                        price_span.appendTo(td);
                        $("<span></span>").addClass("payscale_ignore").text("/kw").appendTo(td);
                        td.appendTo(tr);
                    });
                    tr.appendTo(tbody);
                });
                tbody.appendTo(table);
                table.appendTo(inner_payment_schedule_div);

                inner_payment_schedule_div.appendTo(div);

                div.appendTo(inner_row);

                inner_row.insertAfter($("#scale_row_for_" + scale.value));
            }
            function showCustomerProgress(step_item, rejected_packets)
            {
                if(typeof(step_item) + '' === "undefined")
                {
                    step_item = step_info[0];
                    initCustomerProgressLayout();
                }

                if(typeof(rejected_packets) + '' === "undefined" && ((parseInt(step_item.step_no) === 1) || parseInt(step_item.step_no) === 2))
                {
                    $.post("./data", {"fn": "list_rejected_perfect_packets"}).done(function(resp)
                    {
                        showCustomerProgress(step_item, resp.packets);
                    });
                    return;
                }

                $(".customer_progress_outer").find("> .col-xs-12").find("> *").each(function(i, e)
                {
                    if(i > 1)
                    {
                        $(e).remove();
                    }
                });
                $(".archived_cust_search_filters").remove();
                var step = step_item.step_no;
                $(".customer_progress_outer row").addClass("step_" + step);

                var days_threshold_classname_fn_map =
                {
                    "pp_sub": function(days, util)
                    {
                        if(days <= 2)
                        {
                            return "in_the_green";
                        }
                        if(days <= 6)
                        {
                            return "in_the_yellow";
                        }
                        return "in_the_red";
                    },
                    "pp_rejected_pending_resubmission": function(days, util)
                    {
                        if(days <= 2)
                        {
                            return "in_the_green";
                        }
                        if(days <= 6)
                        {
                            return "in_the_yellow";
                        }
                        return "in_the_red";
                    },
                    "pp_pending_approval": function(days, util)
                    {
                        if(days <= 3)
                        {
                            return "in_the_green";
                        }
                        if(days <= 6)
                        {
                            return "in_the_yellow";
                        }
                        return "in_the_red";
                    },
                    "perm_sub_pending": function(days, util)
                    {
                        if(days <= 5)
                        {
                            return "in_the_green";
                        }
                        if(days <= 11)
                        {
                            return "in_the_yellow";
                        }
                        return "in_the_red";
                    },
                    "pending_perm_approved": function(days, util)
                    {
                        if(days <= 13)
                        {
                            return "in_the_green";
                        }
                        if(days <= 27)
                        {
                            return "in_the_yellow";
                        }
                        return "in_the_red";
                    },
                    "perm_rejected_pending_resubmission": function(days, util)
                    {
                        if(days <= 3)
                        {
                            return "in_the_green";
                        }
                        if(days <= 6)
                        {
                            return "in_the_yellow";
                        }
                        return "in_the_red";
                    },
                    "perm_approved_pending_scheduling": function(days, util)
                    {
                        if(days <= 2)
                        {
                            return "in_the_green";
                        }
                        if(days <= 4)
                        {
                            return "in_the_yellow";
                        }
                        return "in_the_red";
                    },
                    "panel_work_needed": function(days, util)
                    {
                        if(days <= 6 + (7 * (util === "san_diego_gas_&_electric" * 1)))
                        {
                            return "in_the_green";
                        }
                        if(days <= 13 + (14 * (util === "san_diego_gas_&_electric" * 1)))
                        {
                            return "in_the_yellow";
                        }
                        return "in_the_red";
                    },
                    "panel_work_scheduled": function(days, util)
                    {
                        return "in_the_nothing";
                    },
                    "construction_start_scheduled": function(days, util)
                    {
                        return "in_the_nothing";
                    },
                    "construction_completed": function(days, util)
                    {
                        if(days <= 20)
                        {
                            return "in_the_green";
                        }
                        if(days <= 27)
                        {
                            return "in_the_yellow";
                        }
                        return "in_the_red";
                    },
                    "operation_perm": function(days, util)
                    {
                        return "in_the_nothing"
                    }
                };

                var days_threshold_classname_fn_map2 =
                {
                    "pp_sub": function(days, util)
                    {
                        if(days <= 2)
                        {
                            return "forty_five_percent";
                        }
                        if(days <= 6)
                        {
                            return "sixty_percent";
                        }
                        return "seventy_five_percent";
                    },
                    "pp_rejected_pending_resubmission": function(days, util)
                    {
                        if(days <= 2)
                        {
                            return "forty_five_percent";
                        }
                        if(days <= 6)
                        {
                            return "sixty_percent";
                        }
                        return "seventy_five_percent";
                    },
                    "pp_pending_approval": function(days, util)
                    {
                        if(days <= 3)
                        {
                            return "forty_five_percent";
                        }
                        if(days <= 6)
                        {
                            return "sixty_percent";
                        }
                        return "seventy_five_percent";
                    },
                    "perm_sub_pending": function(days, util)
                    {
                        if(days <= 5)
                        {
                            return "forty_five_percent";
                        }
                        if(days <= 11)
                        {
                            return "sixty_percent";
                        }
                        return "seventy_five_percent";
                    },
                    "pending_perm_approved": function(days, util)
                    {
                        if(days <= 13)
                        {
                            return "forty_five_percent";
                        }
                        if(days <= 27)
                        {
                            return "sixty_percent";
                        }
                        return "seventy_five_percent";
                    },
                     "perm_rejected_pending_resubmission": function(days, util)
                    {
                        if(days <= 3)
                        {
                            return "forty_five_percent";
                        }
                        if(days <= 6)
                        {
                            return "sixty_percent";
                        }
                        return "seventy_five_percent";
                    },
                    "perm_approved_pending_scheduling": function(days, util)
                    {
                        if(days <= 2)
                        {
                            return "forty_five_percent";
                        }
                        if(days <= 4)
                        {
                            return "sixty_percent";
                        }
                        return "seventy_five_percent";
                    },
                    "panel_work_needed": function(days, util)
                    {
                        if(days <= 6 + (7 * (util === "san_diego_gas_&_electric" * 1)))
                        {
                            return "forty_five_percent";
                        }
                        if(days <= 13 + (14 * (util === "san_diego_gas_&_electric" * 1)))
                        {
                            return "sixty_percent";
                        }
                        return "seventy_five_percent";
                    },
                    "panel_work_scheduled": function(days, util)
                    {
                        return "sixty_percent";
                    },
                    "construction_start_scheduled": function(days, util)
                    {
                        return "sixty_percent";
                    },
                    "construction_completed": function(days, util)
                    {
                        if(days <= 20)
                        {
                            return "forty_five_percent";
                        }
                        if(days <= 27)
                        {
                            return "sixty_percent";
                        }
                        return "seventy_five_percent";
                    },
                    "operation_perm": function(days, util)
                    {
                        return "sixty_percent";
                    }
                };
                $(".cust_prog_main_lbl").text("Loading...");
                $.post("./data", {"fn": "get_customer_progress_info_admin", "step": step_item.step_key}).done(function(resp)
                {
                    $(".cust_prog_main_lbl").text("Step " + (((step * 1) + 1) + '') + " - " + step_info[step * 1].description + ":");
                    if(resp.items.length === 0)
                    {
                        var h3 = $("<h3></h3>");
                        h3.text("No customers are currently in this step.");
                        h3.css("text-align", "center").css("margin-right", "10%");

                        h3.insertAfter($(".cust_prog_main_lbl"));
                    }
                    $.each(resp.items, function(i, item)
                    {
                        var y1 = item.date.year + '';
                        var m1 = item.date.month + '';
                        if(m1.length === 1)
                        {
                            m1 = "0" + m1;
                        }
                        var d1 = item.date.day + '';
                        if(d1.length === 1)
                        {
                            d1 = "0" + d1;
                        }
                        var date1 = moment(y1 + m1 + d1, "YYYYMMDD");
                        var ago = date1.fromNow();

                        var days_ago = parseInt((date1.diff(moment()) * -1) / (60 * 60 * 24 * 1000));

                        var div = $("<div></div>").addClass("cust_prog_cust_name").addClass("entity_identifier_of_" + item.identifier);
                        div.attr("id", "cust_prog_field_app_id_" + item.field_app_identifier);
                        div.append
                        (
                            $("<input />").attr("type", "hidden").attr("value", item.booking_identifier).addClass("booking_identifier_of_" + item.booking_identifier)
                        )
                        .append(
                            $("<span></span>")
                            .text(item.name)
                            .addClass("cust_prog_cust_name_actual")
                            /*.addClass(days_threshold_classname_fn_map2[step_item.step_key](days_ago, item["utility_provider"] + ''))*/
                            .addClass("sixty_percent")
                            .click(function()
                            {
                                if($(this).nextAll(".progression_arrow").size() > 0)
                                {
                                    $(this).nextAll(".progression_arrow").eq(0).trigger("click");
                                }
                            })
                        );

                        var days_span = $("<span></span>").addClass("badge").addClass("cust_prog_days_since");
                        days_span.click(function()
                        {
                            $(this).nextAll(".progression_arrow").eq(0).trigger("click");
                        });

                        if(date1.fromNow().indexOf("second") > -1 || date1.fromNow().indexOf("minute") > 0 || date1.fromNow().indexOf("hour") > 0)
                        {
                            date1.fromNow = function()
                            {
                                return "Sometime today";
                            };
                        }
                        var padding = "";
                        if(parseInt(days_ago) < 10)
                        {
                            padding += "0";
                        }
                        days_span.text(padding + (days_ago + ''));
                        var txt_part2 = (m1 + "-" + d1 + "-" + y1);
                        var txt_part3 = (m1 + "-" + d1 + "-" + y1);
                        if(days_ago === 0)
                        {
                            txt_part2 = "today";
                        }
                        days_span.attr("title", date1.fromNow() + ", " + txt_part2);
                        days_span.addClass(days_threshold_classname_fn_map[step_item.step_key](days_ago, item["utility_provider"] + ''));

                        if(step_item.step_key !== "panel_work_scheduled" && step_item.step_key !== "construction_start_scheduled" && step_item.step_key !== "operation_perm")
                        {
                            days_span.appendTo(div);
                        }
                        else
                        {
                            var d_span = $("<span></span>").addClass("date-scheduled").text(date1.format("MM-DD-YYYY")).attr("title", "Date work is scheduled for");
                            if(step_item.step_key === "operation_perm")
                            {
                                d_span.attr("title", "Date permission to operate was granted")
                            }
                            d_span.appendTo(div);
                        }


                        if(step_item.step_key === "perm_rejected_pending_resubmission")
                        {
                            var rej_count_span = $("<span></span>").addClass("badge").addClass("permit_rej_cnt");
                            rej_count_span.text(item.rejection_count + '');
                            rej_count_span.attr("title", "This permit has been rejected " + (item.rejection_count + '') + " times by the city.");
                            if(item.rejection_count === 1)
                            {
                                rej_count_span.attr("title", rej_count_span.attr("title").replace("times", "time"));
                            }
                            rej_count_span.appendTo(div);
                        }

                        if(step_item.step_key === "panel_work_needed")
                        {
                            $("<span></span>").addClass("panel_cp_util_provider").text("  " + item["utility_provider"]).prepend($("<span></span>").addClass("glyphicon").addClass("glyphicon-flash")).appendTo(div);
                        }

                        if(item.step_key == "perm_approved_pending_scheduling")
                        {
                            var tytle = "No info on whether " + item.name + "'s  permit required panel work.";
                            if(item["extras"]["panel_work_suggestion"] === "no")
                            {
                                tytle = "No panel work required for " + item.name + "'s job.";
                            }
                            else if(item["extras"]["panel_work_suggestion"] === "yes")
                            {
                                tytle = item.name + "'s job requires panel work.'"
                            }
                            var info_glyph = $("<span></span>").addClass("glyphicon").addClass("glyphicon-info-sign").attr("title", tytle);
                            info_glyph.appendTo(div);
                        }

                        var note_span = $("<span></span>").addClass("note_ico").addClass("glyphicon").addClass("glyphicon-list-alt");
                        note_span.attr("title", "Show Notes for " + item.name);
                        note_span.click(function(ev)
                        {
                            try
                            {
                                ev.stopPropagation();
                            }
                            catch(e1)
                            {

                            }
                            try
                            {
                                ev.canceBubble = true;
                            }
                            catch(e2)
                            {

                            }
                            loadNotesForCustomer2($(this));
                        });
                        // the hold button
                        var hold_icon = $("<span></span>").addClass("glyphicon").addClass("glyphicon-ban-circle").addClass("hold_from_cust_progress").attr("title", "Place hold on " + item.name).click(function()
                                        {
                                            promptForHolding(item.field_app_identifier, item.name);
                                        });

                        var save_me_icon = $("<span></span>").addClass("glyphicon").addClass("save_me_ico").attr("title", "Annotate " + item.name + " as \"Save Me\"");
                        save_me_icon.append
                        (
                            $("<i></i>").addClass("fa").addClass("fa-life-ring")
                        )
                        .click(function()
                        {
                            saveCustomer(item.field_app_identifier, div, item.name);
                        });
                        if(div.find(".cust_prog_days_since").size() > 0)
                        {
                            note_span.insertBefore(div.find(".cust_prog_days_since"));
                            hold_icon.insertAfter(div.find(".note_ico"));
                            save_me_icon.insertAfter(hold_icon);
                        }
                        else
                        {
                            note_span.insertBefore(div.find(".cust_prog_cust_name_actual").eq(0));
                            hold_icon.insertAfter(div.find(".note_ico"));
                            save_me_icon.insertAfter(hold_icon);
                        }

                        if(step_item.step_key === "construction_start_scheduled")
                        {
                            div.find(".date-scheduled").click(function()
                            {
                                changeCPDate(item);
                            });
                        }

                        div.appendTo($(".customer_progress_outer").find("> .col-xs-12").eq(0));
                    });

                    var add_progress_button_fn = function()
                    {
                       $.each(resp.items, function(i, item)
                        {
                            var progression_arrow = $("<button></button>").addClass("progression_arrow").addClass("btn").addClass("btn-primary");
                            progression_arrow.html("&rarr;").attr("title", "Progress to next step");
                            progression_arrow.css("display", "none");
                            progression_arrow.click(function()
                            {
                                var arg_2 = undefined;
                                if(parseInt(step) === 1 || parseInt(step) === 2)
                                {
                                    arg_2 = rejected_packets;
                                }
                                progressItem(item, arg_2);
                            });

                            progression_arrow.appendTo($(".cust_prog_cust_name").eq(i));
                        });
                    };

                    var hint_at_rejections_fn = function()
                    {
                        $.each(resp.items, function(i, item)
                        {
                            if(item.rejected === true)
                            {
                                var rejection_hint_span = $("<span></span>").addClass("glyphicon").addClass("glyphicon-exclamation-sign").attr("title", "This packet is currently in a rejected state with outstanding items");
                                rejection_hint_span.appendTo($(".cust_prog_cust_name").eq(i));
                            }
                        });
                    };

                    if(parseInt(step) > 0 && parseInt(step) !== step_info.length - 1)
                    {
                        add_progress_button_fn();
                    }

                    if(parseInt(step) === 1)
                    {
                        //hint_at_rejections_fn();
                    }
                });
            }
            function changeCPDate(item)
            {
                var mom = moment();
                mom.year(item.date.year);
                mom.month(item.date.month - 1);
                mom.date(item.date.day);

                var html = $("<div></div>");
                $("<h4></h4>").text("Provide a new date:").appendTo(html);
                var div = $("<div></div>").addClass("dt_6219286").addClass("input-append").addClass("date").attr("data-date", mom.format("DD-MM-YYYY")).attr("data-date-format", "dd-mm-yyyy");
                div.append
                (
                    $("<input />").attr("type", "text").attr("id", "new_cp_date").attr("value", mom.format("MM-DD-YYYY")).attr("size", "16").addClass("span2")
                );
                div.append
                (
                    $("<span></span>").addClass("add-on")
                    .append
                    (
                        $("<i></i>").addClass("icon-th")
                    )
                );
                div.appendTo(html);

                BootstrapDialog.show
                (
                    {
                        "title": "Updating date for " + item.name + "...",
                        "message": html.html(),
                        "buttons":
                        [
                            {
                                "label": "Cancel",
                                "cssClass": "btn-danger",
                                "action": function(dialog)
                                {
                                    dialog.close();
                                }
                            },
                            {
                                "label": "Update Date",
                                "cssClass": "btn-success",
                                "action": function(dialog)
                                {
                                    $(".modal-footer").find("btn-success").text("Updating...");
                                    $.post("./data", {"fn": "update_customer_progress_item_date", "new_date": $("#new_cp_date").val(), "identifier": item.field_app_identifier, "step_key": item.step_key}).done(function(resp)
                                    {
                                        var dayte_vals = $("#new_cp_date").val();
                                        item.date.year = parseInt(dayte_vals[2]);
                                        item.date.month = parseInt(dayte_vals[0]);
                                        item.date.day = parseInt(dayte_vals[1]);
                                        $("#cust_prog_field_app_id_" + item.field_app_identifier).find(".date-scheduled").text($("#new_cp_date").val());
                                        dialog.close();

                                    });
                                }
                            }
                        ],
                        "onshown": function(dialog)
                        {
                            $("#new_cp_date").datepicker
                            (
                                {
                                    format: "mm-dd-yyyy",
                                    autoClose: true
                                }
                            );
                        }
                    }
                )
            }
            function promptForHolding(field_app_identifier, name)
            {
                var html =
                html += "<hr />";
                var hold_items_wrapper = $("<div></div>").addClass("hold_items_wrapper");
                hold_items_wrapper.append
                (
                    $("<p></p>").text("Please specify outstanding issues for " + name)
                );
                hold_items_wrapper.append($("<hr />"));
                $("<button></button>").addClass("btn").addClass("btn-success").text("Add Item").appendTo(hold_items_wrapper);

                BootstrapDialog.show
                (
                    {
                        "title": "Placing hold(s) for " + name,
                        "message": $("<div></div>").append(hold_items_wrapper).html(),
                        "onshown": function()
                        {
                            var btn = $(".hold_items_wrapper").find("button").eq(0);
                            btn.click(function()
                            {
                                var curr_num = ($(".hold_items_wrapper").find("input").size() + 1) + '';
                                $("<div></div>").addClass("hold_line_item")
                                .append
                                (
                                    $("<input />")
                                    .attr("type", "text")
                                    .attr("placeholder", "Issue #" + curr_num + " for " + name)
                                )
                                .append
                                (
                                    $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove")
                                    .on("click", function()
                                    {
                                        $(this).parent().remove();
                                        $(".hold_items_wrapper").find("input").each(function(i, e)
                                        {
                                            var placeholder = "Issue #" + ((i + 1) + '') + " for " + name;
                                            $(e).attr("placeholder", placeholder);
                                        });
                                    }).attr("title", "Remove this item")
                                ).insertBefore(btn);

                            });
                            btn.trigger("click");
                        },
                        buttons:
                        [
                            {
                                "label": "Cancel",
                                "action": function(dialog)
                                {
                                    dialog.close();
                                },
                                "cssClass": "btn-danger"
                            },
                            {
                                "label": "Place hold(s)",
                                "cssClass": "btn-success",
                                "action": function(dialog)
                                {
                                    var found_error = false;
                                    $(".hold_items_wrapper").find("input").each(function(i, e)
                                    {
                                        if(found_error)
                                        {
                                            return;
                                        }
                                        if($.trim($(e).val()).length < 1)
                                        {
                                            $(e).val("You must describe the issue...");
                                            $(e)[0].scrollIntoView();
                                            $(e)[0].focus();
                                            setTimeout(function()
                                            {
                                                $(e).val("");
                                            }, 1000);
                                            found_error = true;
                                        }
                                    });
                                    if(!found_error)
                                    {
                                        var hold_items = [];
                                        var hold_items_wrapper = $(".hold_items_wrapper");
                                        hold_items_wrapper.find("input").each(function(i, e)
                                        {
                                            hold_items.push($.trim($(e).val()));
                                        });
                                        if(hold_items.length === 0)
                                        {
                                            var orig_txt = hold_items_wrapper.find("p").eq(0).text();
                                            hold_items_wrapper.find("p").attr("style", "color: red;").text("At least one item is required...");
                                            setTimeout(function()
                                            {
                                                hold_items_wrapper.find("p").eq(0).text(orig_txt).removeAttr("style");
                                            }, 3000);
                                            return;
                                        }
                                        $.post("./data", {"fn": "set_holds_for_customer", "holds": JSON.stringify(hold_items), "identifier": field_app_identifier}).done(function(resp)
                                        {
                                            dialog.close();
                                            $("#cust_prog_field_app_id_" + field_app_identifier).remove();
                                        });
                                    }
                                }
                            }
                        ]
                    }
                );


            }
            function promptForArchive(field_app_identifier, name, cb)
            {
                if(typeof(cb) + '' === "undefined")
                {
                    cb = function(){};
                }
                var html =
                $("<div></div>").append
                (
                    $("<p></p>").text("In a few words, please explain why " + name + " is being archived...")
                )
                .append
                (
                    $("<textarea></textarea>").addClass("archiving_reason").attr("placeholder", "Archiving " + name + " because...")
                );

                BootstrapDialog.show
                (
                    {
                        "title": "Archiving " + name,
                        "message": html.html(),
                        "buttons":
                        [
                            {
                                "label": name.split(" ")[0],
                                "action": function(dialog)
                                {
                                    if($.trim($(".archiving_reason").eq(0).val()).length < 5)
                                    {
                                        window.alert("A descriptive reason must be provided.");
                                        return;
                                    }
                                    var ok_btn = $(".bootstrap-dialog-footer").find(".btn");
                                    ok_btn.text("Archiving...");
                                    $.post("./data", {"fn": "archive_customer", "identifier": field_app_identifier, "reason": $.trim($(".archiving_reason").eq(0).val())}).done(function(resp)
                                    {
                                        dialog.close();
                                        $(".sv_me_" + field_app_identifier).remove();
                                        $(".field_app_identifier_of_" + field_app_identifier).remove();
                                        cb();

                                    });
                                }
                            }
                        ]
                    }
                );
            }
            function loadNotesForCustomer2(span)
            {
                $(".prompt_for_progression").remove();
                $(".new_note_actual_content").remove();
                var field_app_identifier = span.closest(".cust_prog_cust_name").attr("id").replace("cust_prog_field_app_id_", "");
                var customer_name = span.closest(".cust_prog_cust_name").find(".cust_prog_cust_name_actual").text();

                var insertion_fn = function(div)
                {
                    div.appendTo(span.closest(".cust_prog_cust_name"));
                }

                var on_post_completion_fn = function()
                {
                    setTimeout(function()
                    {
                        $("#cust_prog_field_app_id_" + field_app_identifier).find(".note_ico").trigger("click");
                    }, 250);
                };

                var cust_notes_div = loadNotesForCustomer(field_app_identifier, customer_name, true, insertion_fn, insertion_fn, on_post_completion_fn);

            }
            function progressItem(item, optional_rejected_packets)
            {
                $(".cust_note_details").remove();
                var date_prompt_messages =
                {
                    "pp_pending_approval": "Date for packet approval",
                    "perm_sub_pending": "Date permit was submitted to city",
                    "pending_perm_approved": "Date permit was rejected or approved by city",
                    "perm_rejected_pending_resubmission": "Date permit was approved after initial rejection, or rejected an additional time",
                    "perm_approved_pending_scheduling": "Date it was determined that panel work was needed, or date for start of construction",
                    "panel_work_needed": "Date Panel upgrade will be done",
                    "panel_work_scheduled": "Date for start of construction",
                    "construction_start_scheduled": "Date when construction was complete",
                    "construction_completed": "Date customer received permission to operate"
                };
                $(".prompt_for_progression").remove();

                var new_div = $("<div></div>").addClass("prompt_for_progression");

                if(item.step_key === "perm_approved_pending_scheduling")
                {
                    if(item["extras"]["panel_work_suggestion"] + '' === "no")
                    {
                        date_prompt_messages["perm_approved_pending_scheduling"] = "Date for start of construction";
                    }
                    else if(item["extras"]["panel_work_suggestion"] + '' === "yes")
                    {
                        date_prompt_messages["perm_approved_pending_scheduling"] = "Date when panel upgrade was determined to be required"
                    }
                }

                $("<h5></h5>").text(date_prompt_messages[item.step_key] + ":").appendTo(new_div);

                if(item.step_key === "pending_perm_approved" || item.step_key === "perm_rejected_pending_resubmission")
                {
                    var dropdown_div = $("<div></div>").addClass("dropdown");
                    dropdown_div.append
                    (
                        $("<button></button>").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("type", "button").attr("id", "dropdownMenuCityRejectApprovePermit").attr("data-toggle", "dropdown").attr("aria-expanded", "true")
                        .text
                        (
                            "Select one "
                        )
                        .append
                        (
                            $("<span></span>").addClass("caret")
                        )
                    );

                    var ul = $("<ul class='dropdown-menu' role='menu' aria-labelledby='dropdownMenuCityRejectApprovePermit'></ul>");
                    var li1 = $("<li></li>").attr("role", "presentation").attr("id", "choice_of_approved");
                    var a1 = $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text("Approved");

                    var li2 = $("<li></li>").attr("role", "presentation").attr("id", "choice_of_rejected");
                    var a2 = $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text("Rejected");

                    a1.appendTo(li1);
                    a2.appendTo(li2);

                    li1.appendTo(ul);
                    li2.appendTo(ul);

                    ul.find("li").each(function(i, e)
                    {
                        $(e).click(function()
                        {
                            $("#dropdownMenuCityRejectApprovePermit").text($(e).text());
                            $("<span></span>").addClass("caret").appendTo($("#dropdownMenuCityRejectApprovePermit"));
                            var n_val = $(e).attr("id").replace("choice_of_", "");
                            $("#permit_reject_or_approve_hidden_input").attr("value", n_val).val(n_val);

                            if(n_val === "approved")
                            {
                                $("#p_work_or_no_p_work").css("display", "block");
                            }
                            else
                            {
                                $("#p_work_or_no_p_work").css("display", "none");
                            }
                        });
                    });

                    ul.appendTo(dropdown_div);

                    $("<input />").attr("type", "hidden").attr("id", "permit_reject_or_approve_hidden_input").attr("value", "n/a").val("n/a").appendTo(dropdown_div);

                    dropdown_div.appendTo(new_div);

                    if(item.step_key === "pending_perm_approved" || item.step_key === "perm_rejected_pending_resubmission")
                    {
                        dropdown_div2 = $("<div></div>").addClass("dropdown").css("display", "none").attr("id", "p_work_or_no_p_work");
                        $("<h5></h5>").text("Is panel work needed?").appendTo(dropdown_div2);
                        dropdown_div2.append
                        (
                            $("<button></button>").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("type", "button").attr("id", "dropdownMenuPanelWorkRequiredOrNot").attr("data-toggle", "dropdown").attr("aria-expanded", "true")
                            .text
                            (
                                "Select one "
                            )
                            .append
                            (
                                $("<span></span>").addClass("caret")
                            )
                        );

                        var ul2 = $("<ul class='dropdown-menu' role='menu' aria-lablledby='dropdownMenuPanelWorkRequiredOrNot'></ul>");
                        var li11 = $("<li></li>").attr("role", "presentation").attr("id", "choice_of_yes");
                        var a11 = $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text("Yes");

                        var li22 = $("<li></li>").attr("role", "presentation").attr("id", "choice_of_no");
                        var a22 = $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text("No");

                        var li33 = $("<li></li>").attr("role", "presentation").attr("id", "choice_of_not_sure");
                        var a33 = $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text("Not Sure");

                        a11.appendTo(li11);
                        a22.appendTo(li22);
                        a33.appendTo(li33);

                        li11.appendTo(ul2);
                        li22.appendTo(ul2);
                        //li33.appendTo(ul2);

                        ul2.find("li").each(function(i, e)
                        {
                            $(e).click(function()
                            {
                                $("#dropdownMenuPanelWorkRequiredOrNot").text($(e).text());
                                $("<span></span>").addClass("caret").appendTo($("#dropdownMenuPanelWorkRequiredOrNot"));
                                var n_val = $(e).attr("id").replace("choice_of_", "");
                                $("#panel_work_required_or_not_hidden_input").attr("value", n_val).val(n_val);
                            });
                        });

                        ul2.appendTo(dropdown_div2);

                        $("<input />").attr("type", "hidden").attr("id", "panel_work_required_or_not_hidden_input").attr("value", "n/a").val("n/a").appendTo(dropdown_div2);

                        dropdown_div2.appendTo(new_div);

                    }
                }
                else if(item.step_key == "perm_approved_pending_scheduling")
                {
                    var dropdown_div = $("<div></div>").addClass("dropdown").css("display", "none");
                    dropdown_div.append
                    (
                        $("<button></button>").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("type", "button").attr("id", "dropdownMenuDelegateConstructionOrPanelUpgrade").attr("data-toggle", "dropdown").attr("aria-expanded", "true")
                        .text
                        (
                            "Delegate to "
                        )
                        .append
                        (
                            $("<span></span>").addClass("caret")
                        )
                    );

                    var ul = $("<ul class='dropdown-menu' role='menu' aria-labelledby='dropdownMenuDelegateConstructionOrPanelUpgrade'></ul>");
                    var li1 = $("<li></li>").attr("role", "presentation").attr("id", "choice_of_panel_upgrade");
                    var a1 = $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text("Panel Work");

                    var li2 = $("<li></li>").attr("role", "presentation").attr("id", "choice_of_construction");
                    var a2 = $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text("Construction");

                    a1.appendTo(li1);
                    a2.appendTo(li2);

                    li1.appendTo(ul);
                    li2.appendTo(ul);

                    ul.find("li").each(function(i, e)
                    {
                        $(e).click(function()
                        {
                            $("#dropdownMenuDelegateConstructionOrPanelUpgrade").text($(e).text());
                            $("<span></span>").addClass("caret").appendTo($("#dropdownMenuDelegateConstructionOrPanelUpgrade"));
                            var n_val = $(e).attr("id").replace("choice_of_", "");
                            $("#panel_or_construction_choice").attr("value", n_val).val(n_val);
                        });
                    });

                    ul.appendTo(dropdown_div);

                    $("<input />").attr("type", "hidden").attr("id", "panel_or_construction_choice").attr("value", "n/a").val("n/a").appendTo(dropdown_div);

                    if(item["extras"]["panel_work_suggestion"] + '' === "yes" || item["extras"]["panel_work_suggestion"] + '' === "no")
                    {
                        dropdown_div.css("display", "none");
                    }
                    if(new_div.find("h5").text().toLowerCase() === "date it was determined that panel work was needed, or date for start of construction:")
                    {
                        dropdown_div.css("display", "block");
                    }

                    dropdown_div.appendTo(new_div);
                }
                else
                {
                    // yield
                }

                var datepicker_div = $("<div></div>").addClass("dt_4").addClass("input-append").addClass("date").attr("data-date", moment().format("MM-DD-YYYY")).attr("data-date-format", "dd-mm-yyyy");
                $("<input />").attr("type", "text").attr("value", moment().format("MM-DD-YYYY")).attr("id", "progression_date").attr("size", "16").addClass("span2").appendTo(datepicker_div);
                $("<span></span>").addClass("add-on").append($("<i></i>").addClass("icon-th")).appendTo(datepicker_div);

                if(new_div.find("#dropdownMenuCityRejectApprovePermit").size() === 0)
                {
                    datepicker_div.appendTo(new_div);
                }
                else
                {
                    datepicker_div.insertBefore(new_div.find("#dropdownMenuCityRejectApprovePermit"));
                }

                if(item.step_key === "construction_start_scheduled")
                {

                    var subtotal_update = function()
                    {
                        subtotal = 0.00;
                        $(".override_mgr_amt").each(function(i, e)
                        {
                            subtotal += parseFloat($.trim($(e).find("> span").first().text()));
                        });
                        $(".override_subtotal_amt").text(subtotal.toFixed(2));


                    };
                    $("<p></p>").html("&#8659; Manager Overrides &#8659;").addClass("mgr_override_annotation").appendTo(new_div);

                    var override_div = $("<div></div>").addClass("mgr_override_div");
                    $("<div></div>").addClass("current_mgr_override_items").appendTo(override_div);
                    $("<div></div>").html("&nbsp;").css("clear", "both").appendTo(override_div.find(".current_mgr_override_items"));
                    $.ajax
                    (
                        "/data",
                        {
                            "data":
                            {
                                "fn": "get_override_data",
                                "identifier": item.field_app_identifier
                            },
                            "async": true,
                            "method": "POST",
                            "success": function(override_data)
                            {
                                $("<p></p>").addClass("mgr_override_lbl").html("Overrides:&nbsp;&nbsp;&nbsp;" + "( Sale belongs to " + override_data.rep_name + " )").prependTo(override_div);
                                var dropdown_div_mgr = $("<div></div>").addClass("dropdown").addClass("dropdown_div_mgr");
                                dropdown_div_mgr.append
                                (
                                    $("<button></button>").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("type", "button").attr("id", "dropdownMenuAddMgr").attr("data-toggle", "dropdown").attr("aria-expanded", "true")
                                    .text
                                    (
                                        "Add Override for Manager"
                                    )
                                    .append
                                    (
                                        $("<span></span>").addClass("caret")
                                    )
                                );
                                var add_mgr_ul = $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu").attr("aria-labelledby", "dropdownMenuAddMgr");

                                $.each(override_data.managers, function(i, manager)
                                {
                                    var add_mgr_li = $("<li></li>").attr("role", "presentation").attr("id", "choice_of_" + manager.identifier);
                                    var add_mgr_a = $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text(manager.name);

                                    add_mgr_a.appendTo(add_mgr_li);
                                    add_mgr_li.click(function()
                                    {
                                        var d = $("<div></div>").addClass("current_mgr_override_item").attr("id", "mgr_override_item_person_" + manager.identifier);

                                        d.append
                                        (
                                            $("<div><div>").addClass("override_mgr_name").text(manager.name)
                                        )
                                        .append
                                        (
                                            $("<input />").attr("type", "hidden").addClass("override_item_mgr_identifier").attr("value", manager.identifier).val(manager.identifier)
                                        )
                                        .append
                                        (
                                            $("<input />").attr("type", "hidden").addClass("override_item_mgr_name").attr("value", manager.name).val(manager.name)
                                        )
                                        .append
                                        (
                                            $("<input />").attr("type", "hidden").addClass("override_item_mgr_repid").attr("value", manager.rep_id).val(manager.rep_id)
                                        );

                                        d.append
                                        (
                                            $("<div></div>").addClass("override_mgr_amt").text("$").append
                                            (
                                                $("<span></span>").attr("contenteditable", "true").text("0.00").on("blur", function(ev)
                                                {
                                                    var amt = 0.00;
                                                    try
                                                    {
                                                        var whitelisted_chars = [".", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9"];
                                                        var txt = $.trim($(this).text());
                                                        while(txt.indexOf("..") > -1)
                                                        {
                                                            txt = txt.replace("..", ".");
                                                        }
                                                        var new_txt = "";
                                                        for(var k = 0; k < txt.length; k++)
                                                        {
                                                            if(whitelisted_chars.indexOf(txt[k]) > -1)
                                                            {
                                                                new_txt += txt[k];
                                                            }
                                                        }
                                                        $(this).text(new_txt);
                                                        var amt = parseFloat($.trim($(this).text()));
                                                        if((typeof(amt) + '').toLowerCase() !== "number")
                                                        {
                                                            amt = 0.00;
                                                        }
                                                        else if(Number.isNaN(amt))
                                                        {
                                                            amt = 0.00;
                                                        }
                                                    }
                                                    catch(e)
                                                    {
                                                    }

                                                    $(this).text(amt.toFixed(2));

                                                    subtotal_update();
                                                })
                                            ).on("click", function(ev)
                                            {
                                                ev.cancelBubble = true;
                                                ev.stopPropagation();
                                            })
                                        );

                                        d.append
                                        (
                                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove").click(function()
                                            {
                                                $("#choice_of_" + manager.identifier).css("display", "list-item");
                                                $("#mgr_override_item_person_" + manager.identifier).remove();
                                                subtotal_update();

                                            })
                                        );

                                        if($(".current_mgr_override_item").size() === 0)
                                        {
                                            d.prependTo($(".current_mgr_override_items").eq(0))
                                        }
                                        else
                                        {
                                            d.insertAfter($(".current_mgr_override_item").eq(0));
                                        }
                                        $(this).css("display", "none");
                                    });

                                    add_mgr_li.appendTo(add_mgr_ul);
                                });

                                $("<p></p>").addClass("override_subtotal_lbl").text("Subtotal: $")
                                .append
                                (
                                    $("<span></span>").addClass("override_subtotal_amt").text("0.00")
                                )
                                .append
                                (
                                    $("<span></span>").addClass("add_anybody").text("Add Anybody")
                                    .prepend
                                    (
                                        $("<span></span>").addClass("glyphicon").addClass("glyphicon-plus")
                                    )
                                    .click(function()
                                    {
                                        var rep_id = window.prompt("Please enter the Rep ID of the person you would like to add...");
                                        if((typeof(rep_id) + '').toLowerCase() === "string")
                                        {
                                            $.post("./data", {"fn": "get_rep_by_rep_id", "rep_id": rep_id}).done(function(response)
                                            {
                                                if(response.success)
                                                {
                                                    if($("#mgr_override_item_person_" + response.identifier).size() > 0)
                                                    {
                                                        window.alert("It looks like " + response.name + " is already a part of this transaction");
                                                        return;
                                                    }
                                                    if(window.confirm("You'd like to add " + response.name + " to this transaction, yeah?"))
                                                    {
                                                        var d = $("<div></div>").addClass("current_mgr_override_item").attr("id", "mgr_override_item_person_" + response.identifier);

                                                        d.append
                                                        (
                                                            $("<div><div>").addClass("override_mgr_name").text(response.name)
                                                        )
                                                        .append
                                                        (
                                                            $("<input />").attr("type", "hidden").addClass("override_item_mgr_identifier").attr("value", response.identifier).val(response.identifier)
                                                        )
                                                        .append
                                                        (
                                                            $("<input />").attr("type", "hidden").addClass("override_item_mgr_name").attr("value", response.name).val(response.name)
                                                        )
                                                        .append
                                                        (
                                                            $("<input />").attr("type", "hidden").addClass("override_item_mgr_repid").attr("value", response.rep_id).val(response.rep_id)
                                                        );

                                                        d.append
                                                        (
                                                            $("<div></div>").addClass("override_mgr_amt").text("$").append
                                                            (
                                                                $("<span></span>").attr("contenteditable", "true").text("0.00").on("blur", function(ev)
                                                                {
                                                                    var amt = 0.00;
                                                                    try
                                                                    {
                                                                        var whitelisted_chars = [".", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9"];
                                                                        var txt = $.trim($(this).text());
                                                                        while(txt.indexOf("..") > -1)
                                                                        {
                                                                            txt = txt.replace("..", ".");
                                                                        }
                                                                        var new_txt = "";
                                                                        for(var k = 0; k < txt.length; k++)
                                                                        {
                                                                            if(whitelisted_chars.indexOf(txt[k]) > -1)
                                                                            {
                                                                                new_txt += txt[k];
                                                                            }
                                                                        }
                                                                        $(this).text(new_txt);
                                                                        var amt = parseFloat($.trim($(this).text()));
                                                                        if((typeof(amt) + '').toLowerCase() !== "number")
                                                                        {
                                                                            amt = 0.00;
                                                                        }
                                                                        else if(Number.isNaN(amt))
                                                                        {
                                                                            amt = 0.00;
                                                                        }
                                                                    }
                                                                    catch(e)
                                                                    {
                                                                    }

                                                                    $(this).text(amt.toFixed(2));

                                                                    subtotal_update();
                                                                })
                                                            ).on("click", function(ev)
                                                            {
                                                                ev.cancelBubble = true;
                                                                ev.stopPropagation();
                                                            })
                                                        );

                                                        d.append
                                                        (
                                                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove").click(function()
                                                            {
                                                                $("#mgr_override_item_person_" + response.identifier).remove();
                                                                subtotal_update();
                                                            })
                                                        );

                                                        if($(".current_mgr_override_item").size() === 0)
                                                        {
                                                            d.prependTo($(".current_mgr_override_items").eq(0))
                                                        }
                                                        else
                                                        {
                                                            d.insertAfter($(".current_mgr_override_item").eq(0));
                                                        }
                                                    }
                                                }
                                                else
                                                {
                                                    window.alert("No rep could be found with a rep id value of '" + rep_id + "'");
                                                }

                                            });
                                        }
                                    })
                                )
                                .appendTo(override_div);

                                add_mgr_ul.appendTo(dropdown_div_mgr);
                                dropdown_div_mgr.appendTo(override_div);

                                if(override_data.has_previous_data === true)
                                {
                                    $("<button></button>")
                                    .attr("type", "button")
                                    .addClass("btn")
                                    .addClass("btn-warning")
                                    .addClass("btn-prev-override")
                                    .text("Use last time's override")
                                    .click(function()
                                    {
                                        $(".current_mgr_override_item").remove();
                                        $(".dropdown_div_mgr").find("li").each(function(i, e)
                                        {
                                            $(e).css("display", "list-item");
                                        });
                                        $.each(override_data.previous_data, function(i, transaction)
                                        {
                                            var d = $("<div></div>").addClass("current_mgr_override_item").attr("id", "mgr_override_item_person_" + transaction.identifier);

                                            d.append
                                            (
                                                $("<div><div>").addClass("override_mgr_name").text(transaction.name)
                                            )
                                            .append
                                            (
                                                $("<input />").attr("type", "hidden").addClass("override_item_mgr_identifier").attr("value", transaction.identifier).val(transaction.identifier)
                                            )
                                            .append
                                            (
                                                $("<input />").attr("type", "hidden").addClass("override_item_mgr_name").attr("value", transaction.name).val(transaction.name)
                                            )
                                            .append
                                            (
                                                $("<input />").attr("type", "hidden").addClass("override_item_mgr_repid").attr("value", transaction.rep_id).val(transaction.rep_id)
                                            );
                                            d.append
                                            (
                                                $("<div></div>").addClass("override_mgr_amt").text("$").append
                                                (
                                                    $("<span></span>").attr("contenteditable", "true").text(transaction.amount).on("blur", function(ev)
                                                    {
                                                        var amt = 0.00;
                                                        try
                                                        {
                                                            var whitelisted_chars = [".", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9"];
                                                            var txt = $.trim($(this).text());
                                                            while(txt.indexOf("..") > -1)
                                                            {
                                                                txt = txt.replace("..", ".");
                                                            }
                                                            var new_txt = "";
                                                            for(var k = 0; k < txt.length; k++)
                                                            {
                                                                if(whitelisted_chars.indexOf(txt[k]) > -1)
                                                                {
                                                                    new_txt += txt[k];
                                                                }
                                                            }
                                                            $(this).text(new_txt);
                                                            var amt = parseFloat($.trim($(this).text()));
                                                            if((typeof(amt) + '').toLowerCase() !== "number")
                                                            {
                                                                amt = 0.00;
                                                            }
                                                            else if(Number.isNaN(amt))
                                                            {
                                                                amt = 0.00;
                                                            }
                                                        }
                                                        catch(e)
                                                        {
                                                        }

                                                        $(this).text(amt.toFixed(2));

                                                        subtotal_update();
                                                    })
                                                ).on("click", function(ev)
                                                {
                                                    ev.cancelBubble = true;
                                                    ev.stopPropagation();
                                                })
                                             );

                                            d.append
                                            (
                                                $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove").click(function()
                                                {
                                                    $("#choice_of_" + transaction.identifier).css("display", "list-item");
                                                    $("#mgr_override_item_person_" + transaction.identifier).remove();
                                                    subtotal_update();

                                                })
                                            );

                                            if($(".current_mgr_override_item").size() === 0)
                                            {
                                                d.prependTo($(".current_mgr_override_items").eq(0))
                                            }
                                            else
                                            {
                                                d.insertAfter($(".current_mgr_override_item").eq(0));
                                            }

                                            if($("#choice_of_" + transaction.identifier).size() > 0)
                                            {
                                                $("#choice_of_" + transaction.identifier).css("display", "none");
                                            }
                                            subtotal_update();
                                        });
                                    }).appendTo(override_div);
                                }
                            }
                        }
                    );

                    override_div.appendTo(new_div);
                }
                if(item.step_key !== "pp_rejected_pending_resubmission")
                {
                    $("<button></button>").addClass("btn").addClass("btn-success").text("Update").click(function()
                    {
                        var transaction_data = undefined;
                        if($(".current_mgr_override_items").size() > 0)
                        {
                            transaction_data = [];
                            var ret_early = false;
                            $(".current_mgr_override_item").each(function(i, e)
                            {
                                if($.trim($(e).find(".override_mgr_amt").find("> span").eq(0).text()) === "0.00")
                                {
                                    window.alert("It's superfluous to have " + $(e).find(".override_mgr_name").text() + " as an override designee when the payout amount is $0.00. Please remove him/her from the transaction before submitting the update.");
                                    ret_early = true;
                                }
                            });
                            if(ret_early)
                            {
                                return;
                            }
                            $(".current_mgr_override_item").each(function(i, e)
                            {
                                var transaction = {}
                                transaction["identifier"] = $(e).find(".override_item_mgr_identifier").val();
                                transaction["amount"] = $.trim($(e).find(".override_mgr_amt").find("> span").eq(0).text());
                                transaction["rep_id"] = $.trim($(e).find(".override_item_mgr_repid").val());
                                transaction["name"] = $.trim($(e).find(".override_item_mgr_name").val());
                                transaction_data.push(transaction);
                            });

                            if(transaction_data.length === 0)
                            {
                                var cont = window.confirm("No override transactions were delegated to the rep's manager(s). Are you sure you would like to proceed?");
                                if(!cont)
                                {
                                    return;
                                }
                            }
                        }

                        recordItemProgress(item, transaction_data);
                    }).appendTo(new_div);
                }
                $("<button></button>").addClass("btn").addClass("btn-danger").text("Cancel").click(function()
                {
                    $(".prompt_for_progression").remove();
                }).appendTo(new_div);
                new_div.appendTo($(".entity_identifier_of_" + item.identifier));

                $(".dt_4").find("input").each(function(i, e)
                {
                    $(e).datepicker
                    (
                        {
                            format: "mm-dd-yyyy",
                            autoClose: true
                        }
                    );
                });

                if(item.step_key === "perm_approved_pending_scheduling")
                {
                    var choices_map = {"panel_upgrade": "yes", "construction": "no"};

                    if(item["extras"]["panel_work_suggestion"] + '' === "yes" || item["extras"]["panel_work_suggestion"] + '' === "no")
                    {
                        $("#panel_or_construction_choice").prevAll("ul").eq(0).find("li").each(function(i, e)
                        {
                            var choyce = $(e).attr("id").replace("choice_of_", "");
                            if(item["extras"]["panel_work_suggestion"] + '' === choices_map[choyce])
                            {
                                $(e).trigger("click");
                            }
                        });
                    }
                }

                if(item.step_key === "pp_pending_approval" || item.step_key === "pp_rejected_pending_resubmission")
                {
                    if(item.step_key === "pp_rejected_pending_resubmission")
                    {
                        new_div.find(".date").remove();
                        new_div.find("h5").text("");
                    }
                    else
                    {
                        new_div.find(".date").css("display", "none");
                        new_div.find("h5").css("display", "none");

                        var ddown_div = $("<div></div>").addClass("dropdown");
                        ddown_div.append
                        (
                            $("<button></button>").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("type", "button").attr("id", "dropdownMenuCPRejectOrApprove").attr("data-toggle", "dropdown").attr("aria-expanded", "true")
                            .text
                            (
                                "Select one "
                            )
                            .append
                            (
                                $("<span></span>").addClass("caret")
                            )
                        );

                        var ddown_ul = $("<ul class='dropdown-menu' role='menu' aria-labelledby='dropdownMenuCPRejectOrApprove'></ul>");

                        var li1 = $("<li></li>").attr("role", "presentation").attr("id", "choice_of_approve");
                        var a1 = $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text("Approve");

                        var li2 = $("<li></li>").attr("role", "presentation").attr("id", "choice_of_reject");
                        var a2 = $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text("Reject");

                        a1.appendTo(li1);
                        a2.appendTo(li2);

                        li1.appendTo(ddown_ul);
                        li2.appendTo(ddown_ul);

                        window.add_rejection_reason = function(div_to_append_to)
                        {
                            var cp_rej_reason_div = $("<div></div>").addClass("cp_rej_reason_div");
                            $("<textarea></textarea>").addClass("cp_rejection_reason").attr("placeholder", "Reason for rejection...").appendTo(cp_rej_reason_div);

                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove").attr("title", "Remove")
                            .click(function()
                            {
                                if(div_to_append_to.find(".cp_rejection_reason").size() > 1)
                                {
                                    $(this).parent().remove();
                                }
                                else
                                {
                                    BootstrapDialog.alert
                                    (
                                        {
                                            "title": "Cannot remove",
                                            "message": "At least one reason is required, therefore the reason could not be removed"
                                        }
                                    );

                                }
                            }).appendTo(cp_rej_reason_div);

                            var el_to_insert_after = div_to_append_to.find("h5");
                            if(div_to_append_to.find(".cp_rej_reason_div").size() > 0)
                            {
                                el_to_insert_after = div_to_append_to.find(".cp_rej_reason_div").last();
                            }

                            $(".add_cp_rej_reason").remove();

                            cp_rej_reason_div.insertAfter(el_to_insert_after);

                            if($(".add_cp_rej_reason").size() === 0)
                            {
                                $("<button></button>").addClass("btn").addClass("btn-primary").text("Add Reason").attr("type", "button").addClass("add_cp_rej_reason").click(function()
                                {
                                    add_rejection_reason(div_to_append_to);
                                }).insertAfter($(".prompt_for_progression").find(".btn-danger"));
                            }
                        };

                        ddown_ul.find("li").each(function(i, e)
                        {
                            $(e).click(function()
                            {
                                var n_val = $(e).attr("id").replace("choice_of_", "");
                                $("#cp_reject_or_approve_hidden_input").val(n_val).attr("value", n_val);

                                $("#dropdownMenuCPRejectOrApprove").text($(e).text());
                                $("<span></span>").addClass("caret").appendTo($("#dropdownMenuCPRejectOrApprove"));

                                $(".cp_rej_reason_div").remove();
                                $("#cp_system_size").remove();
                                if(n_val === "approve")
                                {
                                    new_div.find(".date").css("display", "block");
                                    new_div.find("h5").css("display", "block");
                                    $("<input />").attr("type", "text").attr("placeholder", "System Size, Ex: 5.52").attr("id", "cp_system_size").attr("size", "16").insertAfter($(".prompt_for_progression").find(".date"));
                                    $(".add_cp_rej_reason").remove();
                                }
                                else
                                {
                                    new_div.find(".date").css("display", "none");
                                    new_div.find("h5").css("display", "none");

                                    $(".cp_rejection_reason").remove();

                                    add_rejection_reason(new_div);
                                }
                            });
                        });

                        ddown_ul.appendTo(ddown_div);

                        $("<input />").attr("type", "hidden").attr("value", "n/a").val("n/a").attr("id", "cp_reject_or_approve_hidden_input").appendTo(ddown_div);

                        ddown_div.prependTo(new_div);

                        if(typeof(item.extra_info["docs_link"]) + '' !== "undefined")
                        {
                            $("<p></p>").addClass("cp_shared_link").text("Link to customer's docs:").append
                            (
                                $("<a></a>").attr("target", "_blank").text(item.extra_info["docs_link"]).attr("href", item.extra_info["docs_link"])
                            ).appendTo(new_div);
                        }
                    }

                    packet = null;
                    $.each(optional_rejected_packets, function(i, rejected_packet)
                    {
                        if(rejected_packet.packet_entry_identifier === item.identifier)
                        {
                            packet = rejected_packet;
                        }
                    });
                    var post_fn = "NaFn";
                    if(packet === null)
                    {
                        post_fn = "list_rejection_history_for_packet_by_entry_identifier";
                    }
                    $.post("./data", {"fn": post_fn, "identifier": item.identifier}).done(function(maybe_packet)
                    {
                        if(post_fn === "list_rejection_history_for_packet_by_entry_identifier")
                        {
                            packet = maybe_packet;
                        }
                        var glyphicon_span = $("<span></span>").addClass("glyphicon").addClass("glyphicon-time");
                        glyphicon_span.click(function()
                        {
                            if(packet.rejection_reasons.reasons.length > 0)
                            {
                                $(".prompt_for_progression .rejection_history_row").toggle();
                                $(this).remove();
                            }
                        });
                        if(packet.rejection_reasons.reasons.length === 0)
                        {
                            glyphicon_span.attr("title", "No rejection history for this packet");
                        }
                        else
                        {
                            glyphicon_span.attr("title", "View Rejection History");
                        }
                        showRejectionHistory(packet, -1, true).appendTo(new_div);
                        if(item.step_key === "pp_pending_approval")
                        {
                            glyphicon_span.appendTo(new_div);
                        }
                        else
                        {
                            $(".prompt_for_progression .rejection_history_row").css("display", "block");
                            new_div.find(".btn-danger").text("Close");
                        }
                    });
                }
            }
            function approveOrRejectItem(item)
            {
                var approve = $("#cp_reject_or_approve_hidden_input").val().toLowerCase() === "approve";
                if(approve)
                {
                    var sys_size = parseFloat($("#cp_system_size").val());
                    if(Number.isNaN(sys_size))
                    {
                        BootstrapDialog.alert("The system size did not pass validation. Please input a real number such as 5.62, 7.50, etc.");
                        return;
                    }
                    sys_size = sys_size + '';

                    $.post("./data", {"fn": "approve_perfect_packet", "identifier": item.submission_identifier, "system_size": sys_size, "approval_date": $("#progression_date").val()}).done(function(resp)
                    {
                        if(resp.success)
                        {
                            $(".entity_identifier_of_" + item.identifier).remove();
                        }
                        else
                        {
                            if(resp.reason === "missing_payscale")
                            {
                                rep_name_txt = $(".pp_value").eq(1).text();
                                BootstrapDialog.show
                                (
                                    {
                                        type: BootstrapDialog.TYPE_WARNING,
                                        message: "The packet could not be approved. The rep (" + rep_name_txt + ") has not been assigned to a payscale.<br /><br /><a target='_blank' href='./super'><button type='button' class='btn btn-primary' id='tmp_btn_rejected_bc_of_payscale'>Fix it &rarr;</button></a>"
                                    }
                                );
                                setTimeout(function()
                                {
                                    $(".prompt_for_progession").find(".btn-success").text("Try again");

                                    $("#tmp_btn_rejected_bc_of_payscale").click(function()
                                    {
                                        localStorage.setItem("button_to_click", "payscale_editor");
                                    });
                                }, 250);
                            }
                            else if(resp.reason === "missing_fund")
                            {
                                $.post("./data", {"fn": "list_funding_sources"}).done(function(resp2)
                                {
                                    var html = "The packet could not be approved. The customer's fund was never set during the time when it was available in the upcoming view.<br /><br />";

                                    html += "<div class='dropdown'>";

                                    html += "<button class='btn btn-default dropdown-toggle' type='button' id='btnFixFund' data-toggle='dropdown' aria-expanded='false'>Select a Fund<span class='caret'></span></button>";

                                    html += "<ul id='ul_for_updating_fund_when_missing' class='dropdown-menu' role='menu' aria-labelledby='btnAccRejPp'>";

                                    $.each(resp2, function(i, fund_item)
                                    {
                                        if(i > 0 && i !== resp2.length - 1)
                                        {
                                            var li_html = "<li role='presentation' id='fund_value_of_" + fund_item.value + "'>";
                                            li_html += "<a role='menuitem' tabindex='-1' href='javascript:void(0);'>";
                                            li_html += fund_item.value_friendly
                                            li_html += "</a></li>";

                                            html += li_html;
                                        }
                                    });

                                    html += "</ul>";

                                    html += "<input type='hidden' value='n/a' id='temp_hidden_fix_fund' />";

                                    html += "</div>";

                                    html += "<div>&nbsp;</div>";

                                    html += "<button type='button' class='btn btn-primary' id='tmp_btn_rejected_bc_of_fund'>Update Fund</button>";

                                    BootstrapDialog.show
                                    (
                                        {
                                            type: BootstrapDialog.TYPE_WARNING,
                                            message: html
                                        }
                                    );
                                    setTimeout(function()
                                    {
                                        $(".prompt_for_progession").find(".btn-success").text("Try again");

                                        $("#ul_for_updating_fund_when_missing").find("li").each(function(i, e)
                                        {
                                            $(e).click(function()
                                            {
                                                var new_val = $(e).attr("id").replace("fund_value_of_", "");
                                                $("#btnFixFund").text($(e).text());
                                                $("<span></span>").addClass("caret").appendTo($("#btnFixFund"));
                                                $("#temp_hidden_fix_fund").attr("value", new_val).val(new_val);
                                            });
                                        });

                                        $("#tmp_btn_rejected_bc_of_fund").click(function()
                                        {
                                            if($("#temp_hidden_fix_fund").val() === "n/a")
                                            {
                                                window.alert("You must select a fund in order to update the fund.");
                                                return;
                                            }

                                            $("#tmp_btn_rejected_bc_of_fund").animate({opacity: 0.5}, 250, function()
                                            {
                                                var new_fund = $("#temp_hidden_fix_fund").val();

                                                $.post("/data", {"fn": "set_fund_for_booking", "fund": new_fund, "identifier": item.booking_identifier}).done(function(resp)
                                                {
                                                    $("#tmp_btn_rejected_bc_of_fund").animate({opacity: 1.0}, 250, function()
                                                    {
                                                        $.each(BootstrapDialog.dialogs, function(idx, dialog)
                                                        {
                                                            dialog.close();
                                                        });
                                                    });
                                                });
                                            });
                                        });

                                    }, 250);
                                });
                            }
                            else
                            {
                                BootstrapDialog.show
                                (
                                    {
                                        type: BootstrapDialog.TYPE_WARNING,
                                        message: "The packet could not be approved. Most likely, rep's payscale and/or the customer's fund has been deprecated."
                                    }
                                );
                            }
                        }
                    });
                }
                else
                {
                    var rej_reasons = [];
                    var ret_early = false;
                    $(".cp_rejection_reason").each(function(i, e)
                    {
                        rej_reasons.push($.trim($(e).val()));
                        if($.trim($(e).val()).length < 1)
                        {
                            ret_early = true;
                        }
                    });

                    if(ret_early)
                    {
                        BootstrapDialog.alert
                        (
                            {
                                "title": "A reason cannot be empety",
                                "message": "One or more reason(s) you provided were blank. If no longer desired, please remove them."
                            }
                        );
                        return;
                    }
                    if(rej_reasons.length > 0)
                    {
                        $.post("./data", {"fn": "reject_perfect_packet", "identifier": item.submission_identifier, "reasons": JSON.stringify(rej_reasons), "json": "1"}).done(function(resp3)
                        {
                            $(".entity_identifier_of_" + item.identifier).remove();
                        });
                    }
                }

            }
            function recordItemProgress(item, transaction_data)
            {
                var has_transactions = ((typeof(transaction_data) + '').toLowerCase() !== "undefined");
                s_key = item.step_key;
                if(s_key === "pp_pending_approval")
                {
                    approveOrRejectItem(item);
                    return;
                }
                if(s_key === "pending_perm_approved" || s_key === "perm_rejected_pending_resubmission")
                {
                    if($("#permit_reject_or_approve_hidden_input").val() === "n/a")
                    {
                        BootstrapDialog.alert
                        (
                            {
                                "title": "Your choice is required.",
                                "message": "You must choose whether the date applies to an approval or to a rejection."
                            }
                        );

                        return;
                    }

                    if($("#permit_reject_or_approve_hidden_input").val() === "approved")
                    {
                        if($("#panel_work_required_or_not_hidden_input").val() === "n/a")
                        {
                            BootstrapDialog.alert
                            (
                                {
                                    "title": "Your choice is required.",
                                    "message": "You must indicate your knowledge of panel work being required."
                                }
                            );

                            return;
                        }
                    }
                }

                if(s_key === "perm_approved_pending_scheduling")
                {
                    if($("#panel_or_construction_choice").val() === "n/a")
                    {
                        BootstrapDialog.alert
                        (
                            {
                                "title": "Your choice is required.",
                                "message": "You must choose whether this customer is moving to the step for panel work upgrade, or to the step for construction."
                            }
                        );

                        return;
                    }
                }

                idx = -1;
                $.each(step_info, function(i, step)
                {
                    if(step.step_key === s_key)
                    {
                        idx = i + 1;
                    }
                });

                if(s_key === "pending_perm_approved")
                {
                    if($("#permit_reject_or_approve_hidden_input").size() > 0)
                    {
                        if($("#permit_reject_or_approve_hidden_input").val() === "approved")
                        {
                            idx++;
                        }
                    }
                }
                else if(s_key === "perm_rejected_pending_resubmission")
                {
                    if($("#permit_reject_or_approve_hidden_input").val() === "rejected")
                    {
                        idx--;
                    }
                }
                else if(s_key == "perm_approved_pending_scheduling")
                {
                    if($("#panel_or_construction_choice").val() === "construction")
                    {
                        idx += 2;
                    }
                }
                else
                {
                    // yield
                }
                if(idx !== -1)
                {

                    var post_payload =
                    {
                        "fn": "record_customer_progress",
                        "step": step_info[idx].step_key,
                        "date": $("#progression_date").val(),
                        "entity_identifier": item.identifier,
                        "field_app_identifier": item.field_app_identifier,
                        "booking_identifier": item.booking_identifier
                    };

                    if(has_transactions)
                    {
                        post_payload["transaction_data"] = JSON.stringify(transaction_data);
                    }

                    post_payload["rec_panel_work_suggestion"] = ((((s_key === "pending_perm_approved") * 1) + '') || (((s_key === "perm_rejected_pending_resubmission") * 1) + ''));
                    if(s_key === "pending_perm_approved" || s_key === "perm_rejected_pending_resubmission")
                    {
                        if($("#permit_reject_or_approve_hidden_input").val() === "approved")
                        {
                            post_payload["panel_work_suggestion"] = $("#panel_work_required_or_not_hidden_input").val();
                        }
                    }

                    $.post("./data", post_payload).done(function(resp)
                    {
                        if(resp.success)
                        {
                            $(".entity_identifier_of_" + item.identifier).remove();
                        }
                        else
                        {
                            if(resp.reason === "missing_payscale")
                            {
                                rep_name_txt = $(".pp_value").eq(1).text();
                                BootstrapDialog.show
                                (
                                    {
                                        type: BootstrapDialog.TYPE_WARNING,
                                        message: "This could not be approved. The rep (" + rep_name_txt + ") has not been assigned to a payscale.<br /><br /><a target='_blank' href='./super'><button type='button' class='btn btn-primary' id='tmp_btn_rejected_bc_of_payscale'>Fix it &rarr;</button></a>"
                                    }
                                );
                                setTimeout(function()
                                {
                                    $(".show-packet-btns").find(".btn-success").text("Try again");
                                    $("#tmp_btn_rejected_bc_of_payscale").click(function()
                                    {
                                        localStorage.setItem("button_to_click", "payscale_editor");
                                    });
                                }, 250);
                            }
                            else if(resp.reason === "missing_fund")
                            {
                                $.post("./data", {"fn": "list_funding_sources"}).done(function(resp2)
                                {
                                    var html = "This could not be approved. The customer's fund was never set during the time when it was available in the upcoming view.<br /><br />";

                                    html += "<div class='dropdown'>";

                                    html += "<button class='btn btn-default dropdown-toggle' type='button' id='btnFixFund' data-toggle='dropdown' aria-expanded='false'>Select a Fund<span class='caret'></span></button>";

                                    html += "<ul id='ul_for_updating_fund_when_missing' class='dropdown-menu' role='menu' aria-labelledby='btnAccRejPp'>";

                                    $.each(resp2, function(i, fund_item)
                                    {
                                        if(i > 0 && i !== resp2.length - 1)
                                        {
                                            var li_html = "<li role='presentation' id='fund_value_of_" + fund_item.value + "'>";
                                            li_html += "<a role='menuitem' tabindex='-1' href='javascript:void(0);'>";
                                            li_html += fund_item.value_friendly
                                            li_html += "</a></li>";

                                            html += li_html;
                                        }
                                    });

                                    html += "</ul>";

                                    html += "<input type='hidden' value='n/a' id='temp_hidden_fix_fund' />";

                                    html += "</div>";

                                    html += "<div>&nbsp;</div>";

                                    html += "<button type='button' class='btn btn-primary' id='tmp_btn_rejected_bc_of_fund'>Update Fund</button>";

                                    BootstrapDialog.show
                                    (
                                        {
                                            type: BootstrapDialog.TYPE_WARNING,
                                            message: html
                                        }
                                    );
                                    setTimeout(function()
                                    {
                                        $(".show-packet-btns").find(".btn-success").text("Try again");

                                        $("#ul_for_updating_fund_when_missing").find("li").each(function(i, e)
                                        {
                                            $(e).click(function()
                                            {
                                                var new_val = $(e).attr("id").replace("fund_value_of_", "");
                                                $("#btnFixFund").text($(e).text());
                                                $("<span></span>").addClass("caret").appendTo($("#btnFixFund"));
                                                $("#temp_hidden_fix_fund").attr("value", new_val).val(new_val);
                                            });
                                        });

                                        $("#tmp_btn_rejected_bc_of_fund").click(function()
                                        {
                                            if($("#temp_hidden_fix_fund").val() === "n/a")
                                            {
                                                window.alert("You must select a fund in order to update the fund.");
                                                return;
                                            }

                                            $("#tmp_btn_rejected_bc_of_fund").animate({opacity: 0.5}, 250, function()
                                            {
                                                var new_fund = $("#temp_hidden_fix_fund").val();

                                                $.post("/data", {"fn": "set_fund_for_booking", "fund": new_fund, "identifier": item.booking_identifier}).done(function(resp)
                                                {
                                                    $("#tmp_btn_rejected_bc_of_fund").animate({opacity: 1.0}, 250, function()
                                                    {
                                                        $.each(BootstrapDialog.dialogs, function(idx, dialog)
                                                        {
                                                            dialog.close();
                                                        });
                                                    });
                                                });
                                            });
                                        });

                                    }, 250);
                                });
                            }
                            else
                            {
                                BootstrapDialog.show
                                (
                                    {
                                        type: BootstrapDialog.TYPE_WARNING,
                                        message: "This could not be approved. Most likely, rep's payscale and/or the customer's fund has been deprecated."
                                    }
                                );
                            }
                        }
                    });
                }
            }
            window.step_info =
            [
                {
                    "name": "Step 1",
                    "description": "Perfect Packet Submission",
                    "step_no": "0",
                    "step_key": "pp_sub",
                    "bg": "#908D8D"
                },
                {
                    "name": "Step 2",
                    "description": "Rejected Perfect Packet Pending Resubmission",
                    "step_no": "1",
                    "step_key": "pp_rejected_pending_resubmission",
                    "bg": "#7B7575"
                },
                {
                    "name": "Step 3",
                    "description": "Pending Perfect Packet Approval",
                    "step_no": "2",
                    "step_key": "pp_pending_approval",
                    "bg": "#676565"
                },
                {
                    "name": "Step 4",
                    "description": "Pending Permit Submission",
                    "step_no": "3",
                    "step_key": "perm_sub_pending",
                    "bg": "#536877"
                },
                {
                    "name": "Step 5",
                    "description": "Pending Permit Approval",
                    "step_no": "4",
                    "step_key": "pending_perm_approved",
                    "bg": "#4D5D69"
                },
                {
                    "name": "Step 6",
                    "description": "Permit Rejected Pending Resubmission",
                    "step_no": "5",
                    "step_key": "perm_rejected_pending_resubmission",
                    "bg": "#3C5365"
                },
                {
                    "name": "Step 7",
                    "description": "Permit Approved Pending Scheduling",
                    "step_no": "6",
                    "step_key": "perm_approved_pending_scheduling",
                    "bg": "#436988"
                },
                {
                    "name": "Step 8",
                    "description": "Panel Work Needed",
                    "step_no": "7",
                    "step_key": "panel_work_needed",
                    "bg": "#4E8CC1"
                },
                {
                    "name": "Step 9",
                    "description": "Panel Work Scheduled",
                    "step_no": "8",
                    "step_key": "panel_work_scheduled",
                    "bg": null
                },
                {
                    "name": "Step 10",
                    "description": "Construction Start Scheduled",
                    "step_no": "9",
                    "step_key": "construction_start_scheduled",
                    "bg": "#2580CE"
                },
                {
                    "name": "Step 11",
                    "description": "Construction Completed - Pending PTO",
                    "step_no": "10",
                    "step_key": "construction_completed",
                    "bg": "#1E86E0"
                },
                {
                    "name": "Step 12",
                    "description": "Permission to Operate Granted",
                    "step_no": "11",
                    "step_key": "operation_perm",
                    "bg": "#0089FF"
                }
            ];
            function initCustomerProgressLayout()
            {
                var customer_progress_div = $("<div></div>").addClass("customer_progress_outer").addClass("row");
                var customer_progress_inner_div = $("<div></div>").addClass("col-xs-12").addClass("col-sm-12").addClass("col-md-12").addClass("col-lg-12");

                var labels_outer_div = $("<div></div>").addClass("outer_labels_cust_prog_div");
                $.each(step_info, function(i, step)
                {
                    var btn = $("<button></button>").addClass("btn").addClass("btn-primary").text(step.name);
                    btn.attr("title", step.description);
                    btn.click(function()
                    {
                        showCustomerProgress(step);
                    });
                    if(step.bg !== null)
                    {
                        btn.css("background", step.bg);
                    }
                    btn.appendTo(labels_outer_div);
                });
                labels_outer_div.find(".btn").each(function(i, e)
                {
                    var btn = $(e);
                    btn.html(btn.html().replace("Step", "<span class='step_superfluous'>Step</span>"));
                });

                var archive_btn = $("<button></button>")
                                  .addClass("btn")
                                  .addClass("btn-danger")
                                  .attr("title", " Archived Customers")
                                  .html("&nbsp;&nbsp;Archive")
                                  .prepend
                                  (
                                        $("<span></span>")
                                        .addClass("glyphicon")
                                        .addClass("glyphicon-trash")
                                        .attr("title", "Archived Customers")
                                  );

                archive_btn.click(function()
                {
                    showArchivedCustomers();
                });
                archive_btn.appendTo(labels_outer_div);

                var holds_btn = $("<button></button>")
                                .addClass("btn")
                                .addClass("hold_cp_btn")
                                .attr("title", "View Customers with holds")
                                .html("Holds <span>&#x1f6c2;</span>");

                holds_btn.click(function()
                {
                    showHeldCustomers();
                });
                holds_btn.prependTo(labels_outer_div);

                var inner_row = $("<div></div>").addClass("row").addClass("curr_cust_prog_row");


                labels_outer_div.appendTo(customer_progress_inner_div);
                $("<p></p>").text("").addClass("cust_prog_main_lbl").appendTo(customer_progress_inner_div);
                customer_progress_inner_div.appendTo(customer_progress_div);
                customer_progress_div.appendTo(app_area);
                setTimeout(function()
                {
                    $(".hold_cp_btn").find("span").animate({top: "0.2em"}, 1000, "easeOutElastic");
                }, 1000);
            }
            function showArchivedCustomers()
            {
                var app_area = $("#app_area");
                var row = $("<div></div>").addClass("row");
                var spacer_div = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");
                var main_div = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10");

                $("<input />").attr("type", "text").attr("placeholder", "Search by name...").attr("id", "archived_customers_search_box")
                .on("blur", function(ev)
                {
                    var that = $(this);
                    var query = $.trim(that.val());
                    if(query.length > 0)
                    {
                        $("#archived_customers_search_results_div").empty();
                        that.val("Searching...");
                        $.post("/data", {"fn": "archived_customers_search", "query": query}).done(function(r)
                        {
                            $.each(r.customers, function(i, customer)
                            {
                                $("<div></div>")
                                .addClass("archived_customers_search_result")
                                .attr("data-identifier", customer.identifier)
                                .text(customer.name)
                                .click(function()
                                {
                                    $(".archived_customer_details_div").remove();
                                    $("<div></div>").addClass("archived_customer_details_div")
                                    .append
                                    (
                                        $("<div></div>").addClass("archived_customer_details_address")
                                        .html(customer.address.split("\n").join("<br />"))
                                    )
                                    .append
                                    (
                                        $("<div></div>").addClass("archived_customer_details_contact")
                                        .append
                                        (
                                            $("<a></a>").attr("href", "mailto:" + customer.email).text(customer.email)
                                        )
                                        .append
                                        (
                                            $("<br />")
                                        )
                                        .append
                                        (
                                            $("<a></a>").attr("href", "tel:" + customer.phone).text(customer.phone_formatted)
                                        )
                                    )
                                    .append
                                    (
                                        $("<div></div>").addClass("archived_customer_details_restore")
                                        .append
                                        (
                                            $("<span></span>").addClass("label").addClass("label-warning").text("Restore")
                                            .click(function()
                                            {
                                                var that = $(this);
                                                that.closest(".archived_customer_details_div").css("opacity", "0.1");
                                                that.closest(".archived_customer_details_div").prev().css("opacity", "0.1");
                                                $.post("/data", {"fn": "unarchive_customer", "identifier": customer.identifier})
                                                .done(function(rrr)
                                                {
                                                    that.closest(".archived_customer_details_div").prev().remove();
                                                    that.closest(".archived_customer_details_div").remove();
                                                });
                                            })
                                        )
                                    )
                                    .append
                                    (
                                        $("<br />").css("clear", "both")
                                    )
                                    .insertAfter($(this));
                                })
                                .appendTo($("#archived_customers_search_results_div"))
                            });
                            that.val(query);
                        });
                    }
                })
                .on("keyup", function(ev)
                {
                    if(ev.keyCode === 13)
                    {
                        $(this).trigger("blur");
                    }
                })
                .appendTo(main_div);
                $("<hr />").appendTo(main_div);
                $("<div></div>").attr("id", "archived_customers_search_results_div").appendTo(main_div);

                spacer_div.appendTo(app_area);
                main_div.appendTo(app_area);
                spacer_div.clone().appendTo(app_area);

            }
            function showHeldCustomers(offset, fname, lname)
            {
                if(typeof(offset) + '' === "undefined")
                {
                    offset = 0;
                }
                $(".customer_progress_outer").find("> .col-xs-12").find("> *").each(function(i, e)
                {
                    if(i > 1)
                    {
                        $(e).remove();
                    }
                });
                $(".cust_prog_main_lbl").text("Loading...");
                var req_payload =
                {
                    "offset": offset,
                    "fname": fname + '',
                    "lname": lname + '',
                    "has_firstname_filter": ((typeof(fname) + '') !== "undefined"),
                    "has_lastname_filter":  ((typeof(lname) + '') !== "undefined")
                }
                $.post("./data", {"fn": "list_held_customers_for_admin", "payload": JSON.stringify(req_payload)})
                .done(function(resp)
                {
                    var search_fn = function()
                    {
                        var v1 = $.trim($("#cust_held_search_fname").val());
                        if(v1.length === 0)
                        {
                            v1 = undefined;
                        }

                        var v2 = $.trim($("#cust_held_search_lname").val());
                        if(v2.length === 0)
                        {
                            v2 = undefined;
                        }
                        showHeldCustomers(0, v1, v2);
                    };
                    $.each(resp.customers, function(i, customer)
                    {
                        var cust_div = $("<div></div>").attr("id", "identifier_of_" + customer.identifier).addClass("row").addClass("held_cust_row");
                        cust_div.append
                        (
                            $("<div></div>").addClass("col-xs-12").addClass("col-sm-12").addClass("col-md-12").addClass("col-lg-12").text(customer.name)
                            .append
                            (
                                $("<span></span>").addClass("glyphicon").addClass("glyphicon-question-sign").attr("title", "Show hold(s) for " + customer.name)
                                .click(function()
                                {
                                    $(".held_hint").remove();
                                    var holds_ul = $("<ul></ul>").addClass("holds_ul");
                                    $.each(customer.hold_items, function(k, kk)
                                    {
                                        $("<li></li>")
                                        .append($("<p></p>").text(kk))
                                        .append
                                        (
                                            $("<span></span>").attr("title", "Remove this item").addClass("glyphicon").addClass("glyphicon-remove")
                                            .click(function()
                                            {
                                                if(window.confirm("Are you sure you would like to release this hold?"))
                                                {
                                                    if(($(this).parent().prevAll("li").size() + $(this).parent().nextAll("li").size()) > 0)
                                                    {
                                                        $(this).closest("li").remove();
                                                    }
                                                    else
                                                    {
                                                        $(this).closest(".held_cust_row").remove();
                                                    }
                                                    $.post("./data", {"fn": "release_hold_for_customer", "identifier": customer.identifier, "index": (k + '')}).done(function(resp)
                                                    {

                                                    });
                                                }
                                            })
                                        ).appendTo(holds_ul);
                                    });
                                    var hint_div = $("<div></div>").addClass("col-xs-12").addClass("col-sm-12").addClass("col-md-12").addClass("col-lg-12").addClass("held_hint");
                                    hint_div.append($("<p></p>").text(customer.name + " has the following hold(s) applied:"));
                                    hint_div.append
                                    (
                                        $("<br />")
                                    );
                                    hint_div.append
                                    (
                                        holds_ul
                                    );
                                    hint_div.appendTo($("#identifier_of_" + customer.identifier));
                                })
                            )
                        );
                        cust_div.appendTo($(".customer_progress_outer").find("> .col-xs-12").eq(0));
                    });
                    var val1 = "";
                    var val2 = "";
                    if(resp.original_payload["fname"] !== "undefined")
                    {
                        val1 = resp.original_payload["fname"];
                    }
                    if(resp.original_payload["lname"] !== "undefined")
                    {
                        val2 = resp.original_payload["lname"];
                    }
                    $("<div></div>").addClass("held_cust_search_filters")
                    .append
                    (
                        $("<input />").attr("placeholder", "First Name...").attr("id", "cust_held_search_fname").attr("value", val1)
                        .on("blur", function()
                        {
                            search_fn();
                        })
                    )
                    .append
                    (
                        $("<input />").attr("placeholder", "Last Name...").attr("id", "cust_held_search_lname").attr("value", val2)
                        .on("blur", function()
                        {
                            search_fn();
                        })
                    ).insertAfter($(".cust_prog_main_lbl"));
                    $(".cust_prog_main_lbl").text("Customers with holds");
                });

            }
            function customerNotesSearch()
            {
                var app_area = $("#app_area");
                var search_customer_notes_div = $("<div></div>").addClass("row").addClass("search_customer_notes_outer");
                $("<h3></h>").text("Customer Notes:").appendTo(search_customer_notes_div);
                var search_box = $("<input />").attr("type", "text").attr("id", "cust_notes_sbox").attr("placeholder", "Search for a customer by name...");

                search_box.on("keyup", function(ev)
                {
                    if(ev.keyCode === 13)
                    {
                        setTimeout(function()
                        {
                            search_box[0].blur();
                        }, 50);
                    }
                });
                search_box.on("blur", function()
                {
                    doCustomerNotesSearch(search_box);
                });

                var sbox_wrapper = $("<div></div>").addClass("search_customer_notes_sbox_wrapper");
                sbox_wrapper.append(search_box);

                sbox_wrapper.appendTo(search_customer_notes_div);
                app_area.append(search_customer_notes_div);
            }
            function doCustomerNotesSearch(search_box)
            {
                var query = $.trim(search_box.val())
                if(query.length === 0)
                {
                    return;
                }
                search_box.val("Searching...");
                setTimeout(function()
                {
                    $.post("./data", {"fn": "search_customers_by_name","query": query}).done(function(resp)
                    {
                        $(".cust_notes_search_result").remove();
                        $(".customer_search_results_notation").remove();
                        search_box.val("");
                        var placeholder = "";
                        if(resp.results.length === 0)
                        {
                            placeholder = "No results for '" + query + "', try again...";
                        }
                        else
                        {
                            $("<div></div>").addClass("customer_search_results_notation").text("Search Results").prepend($("<span></span>").addClass("glyphicon").addClass("glyphicon-search")).insertAfter(search_box.parent());
                            placeholder = "Showing results for '" + query + "'...";
                        }
                        search_box.attr("placeholder", placeholder);

                        $.each(resp.results, function(i, result)
                        {
                            var result_div = $("<div></div>").addClass("row").addClass("cust_notes_search_result").attr("title", "View Notes for " + result.name);
                            result_div.attr("id", "cust_note_identifier_of_" + result.identifier);

                            var customer_note_div = $("<div></div>").addClass("col-xs-6").addClass("col-sm-6").addClass("col-md-6").addClass("col-lg-6");
                            customer_note_div.text(result.name);
                            customer_note_div.appendTo(result_div);

                            var rep_info_div = $("<div></div>").addClass("col-xs-6").addClass("col-sm-6").addClass("col-md-6").addClass("col-lg-6");
                            rep_info_div.text(result.rep_name + " (" + result.rep_id + ")");

                            rep_info_div.appendTo(result_div);

                            result_div.click(function()
                            {
                                loadNotesForCustomer(result.identifier, result.name);
                            });

                            result_div.insertAfter(search_box.parent().parent());
                        });
                    });

                }, 200);
            }
            function loadNotesForCustomer(field_app_identifier, customer_name, expecting_return, insert_new_content_fn, insert_notes_fn, post_completion_fn)
            {
                $.post("./data", {"fn": "pull_notes_for_customer", "identifier": field_app_identifier}).done(function(resp)
                {
                    $(".cust_note_details").remove();
                    $(".activenote").removeClass("activenote");
                    var notes_results_div = $("<div></div>").addClass("cust_note_details").addClass("row");
                    $("#cust_note_identifier_of_" + field_app_identifier).addClass("activenote");
                    if(resp.notes.length === 0)
                    {
                        $("<h3></h3>").text("No notes have been recorded for " + customer_name).appendTo(notes_results_div);
                    }
                    else
                    {
                        $.each(resp.notes, function(i, note)
                        {
                            var note_div = $("<div></div>").addClass("cust_note_detail_item").attr("data-identifier", note.identifier);
                            var author_p = $("<p></p>").addClass("note_author_timestamp");
                            var date = moment(note.pacific);
                            var m = (date.month() + 1) + '';
                            if(m.length === 1)
                            {
                                m = "0" + m;
                            }
                            var d = date.date() + '';
                            if(d.length === 1)
                            {
                                d = "0" + d;
                            }
                            var y = date.year() + '';
                            author_p.text("On " + m + "-" + d + "-" + y + ", " + note.author_name + " recorded...");

                            var c_txt = note.content.txt[0].replaceAll("\r", "<br />");
                            c_txt = c_txt.replaceAll("\n", "<br />");
                            var content_div = $("<div></div>").addClass("note_detail_content").attr("data-identifier", note.identifier);
                            content_div
                            .append(author_p)
                            .append
                            (
                                $("<p></p>").addClass("note_text_content").html(c_txt)
                            )
                            .append
                            (
                                $("<span></span>").addClass("delete_customer_note").text("Delete this note")
                                .click(function()
                                {
                                    var that = $(this);
                                    if(window.confirm("Are you sure you would like to delete this note?"))
                                    {
                                        $.post("/data", {"fn": "delete_customer_note", "identifier": that.closest(".note_detail_content").data("identifier")}).done(function(rrr)
                                        {
                                            that.closest(".note_detail_content").remove();
                                        });
                                    }
                                })
                            );
                            if(note.blob_count > 0)
                            {
                                for(var i = 0; i < note.content.mime_types.length; i++)
                                {
                                    var ext = "jpg";
                                    if(note.content.mime_types[i] === "image/png")
                                    {
                                        ext = "png";
                                    }
                                    var img = $("<img />");
                                    img.attr("src", "//storage.googleapis.com/" + window.app_bucket + "/CustomerNoteBlobs/" + note.identifier + "_" + ((i + 1) + '') + "." + ext);

                                    var a = $("<a></a>").attr("hef", img.attr("src"));
                                    img.appendTo(a);
                                    a.appendTo(content_div);
                                }
                            }

                            content_div.appendTo(notes_results_div);
                        });
                    }
                    $("<div></div>").addClass("plus_new_note_div").append
                    (
                        $("<button></button>").addClass("btn").addClass("btn-success").text(" New Note").prepend
                        (
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-plus")
                        ).click(function()
                        {
                            var new_content_div = $("<div></div>").addClass("new_note_actual_content");
                            $("<textarea></textarea>").attr("placeholder", "Your note...").appendTo(new_content_div);

                            var image_div = $("<div></div>").addClass("camera-note-div");
                            $("<input />").attr("type", "file").css("display", "none").attr("id", "note_image").attr("accept", "image/*").appendTo(image_div);
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-camera").click(function()
                            {
                                $(this).prevAll("input").eq(0).trigger("click");
                            }).appendTo(image_div);

                            image_div.appendTo(new_content_div);

                            $("<button></button>").attr("id", "customer_notes_post_note_btn").addClass("btn").addClass("btn-primary").html("&nbsp;<span id='post_note_btn_msg'>Post Note</span>").prepend
                            (
                                $("<span></span>").addClass("glyphicon").addClass("glyphicon-upload")
                            ).click(function()
                            {
                                postCustomerNote(field_app_identifier, post_completion_fn);
                            }).appendTo(new_content_div);

                            if(typeof(insert_new_content_fn) + '' === "undefined")
                            {
                                new_content_div.appendTo($("#cust_note_identifier_of_" + field_app_identifier).next());
                            }
                            else
                            {
                                insert_new_content_fn(new_content_div);
                            }
                        })
                    ).appendTo(notes_results_div);

                    if(typeof(insert_notes_fn) + '' === "undefined")
                    {
                        notes_results_div.insertAfter($("#cust_note_identifier_of_" + field_app_identifier));
                    }
                    else
                    {
                        insert_notes_fn(notes_results_div);
                    }
                });
            }
            function postCustomerNote(field_app_identifier, post_completion_fn)
            {
                if($.trim($(".new_note_actual_content").find("textarea").eq(0).val()).length === 0)
                {
                    BootstrapDialog.alert
                    (
                        {
                            "title": "Missing text content",
                            "message": "At least some text content is required. If the intention is to only upload an image, please put a caption for the image inside the textbox."
                        }
                    );
                    return;
                }
                var img_file_name = $.trim($("#note_image").val());
                if(img_file_name.length === 0)
                {

                    $.post("./data", {"fn": "add_note_for_customer", "identifier": field_app_identifier, "has_file": "0", "txt": $.trim($(".new_note_actual_content").find("textarea").eq(0).val())}).done(function(resp)
                    {
                        if(typeof(post_completion_fn) + '' === "undefined")
                        {
                            $("#cust_note_identifier_of_" + field_app_identifier).trigger("click");
                        }
                        else
                        {
                            post_completion_fn();
                        }
                    });
                }
                else
                {
                    var split = null;
                    var extension = null;
                    try
                    {
                        split = img_file_name.split(".");
                        extension = split[split.length - 1].toLowerCase();
                    }
                    catch(e)
                    {
                        extension = "bawb";
                    }
                    if(extension !== "jpg" && extension !== "png")
                    {
                        BootstrapDialog.alert
                        (
                            {
                                "title": "Unsupported file type",
                                "message": "The uploaded file must be a JPG or PNG image."
                            }
                        );
                        return;
                    }
                    var formData = new FormData();

                    formData.append("txt", $.trim($(".new_note_actual_content").find("textarea").eq(0).val()));

                    formData.append("note_image", $("#note_image")[0].files[0]);

                    var xhr = new XMLHttpRequest();
                    (xhr.upload || xhr).addEventListener("progress", function(e)
                    {
                        var done = e.position || e.loaded
                        var total = e.totalSize || e.total;
                        var completion_percentage = (Math.round(done/total*100) + '') + "%";
                        $("#post_note_btn_msg").html("&nbsp;&nbsp;&nbsp;&nbsp;" + completion_percentage);

                    });
                    xhr.addEventListener("load", function(e)
                    {
                        if(typeof(post_completion_fn) + '' === "undefined")
                        {
                            setTimeout(function()
                            {
                                $("#cust_note_identifier_of_" + field_app_identifier).trigger("click");
                            }, 250);
                        }
                        else
                        {
                            post_completion_fn();
                        }
                    });
                    xhr.open("POST", "./data?fn=add_note_for_customer&identifier=" + field_app_identifier + "&has_file=1");
                    xhr.send(formData);
                }
            }
            function sortLeaderBoard()
            {
            	$(".lb_tally_total").remove();
            	var size = 0;
            	$("span.pl_cnt").each(function(i, e)
            	{
            		size += parseInt($(e).text());
            	});
            	size = parseInt(size);
            	size += '';
            	$("<span></span>").addClass("lb_tally_total").text("Tally Total: " + size).insertAfter($(".lb_dds"));
                if($(".pl_cnt").size() < 4)
                {
                    return;
                }

                var done = true;
                var items = $("span.pl_cnt");
                for(var i = 0; i < items.size(); i++)
                {
                    var item_a = $("span.pl_cnt").eq(i);
                    var item_b = null;
                    if($(".pl_cnt").eq(i + 1).size() > 0)
                    {
                        item_b = $("span.pl_cnt").eq(i + 1);
                    }
                    if(item_b !== null)
                    {
                        try
                        {
                            if(parseInt(item_b.text()) > parseInt(item_a.text()))
                            {
                                item_b.parent().parent().insertBefore(item_a.parent().parent());
                                done = false;
                            }
                        }
                        catch(e6)
                        {
                        }
                    }
                }
                if(!done)
                {
                    sortLeaderBoard();
                }
            }
            function showLeaderBoard(achievement_metric, time_metric, format, lb_data, office_filter, team_or_rep_view, child_offices, start_dt, end_dt)
            {
                var metric_map =
                {
                    "leads_acquired": "ABs",
                    "full_ab": "Full ABs",
                    "partial_ab": "Partial ABs",
                    "ab_with_call": "ABs with Calls",
                    "appointments_kept": "Appointments Kept",
                    "appointments_kept_reps": "Appointment Kept (Reps)",
                    "appointments_kept_solar_pros": "Appointments Kept (Solar Pros)",
                    "aks_paid": "AKs paid",
                    "packets_submitted": "CDs",
                    "packets_submitted_dnq": "DNQ CDs",
                    "hours_knocked": "Hours Knocked", 
                    "hours_knocked_v2": "V2 Hours Knocked",           
                    "install_completed": "Installs",
                    "same_week_ab_to_ak": "Same Week AB => AK Conversions",
                    "wc_complete": "Welcome Calls Completed",
                    "registrations": "Registrations",
                    "leads_assigned": "Leads Received",
                    "data_logger_deployed": "Data Logger Deployed",
                    "data_logger_retrieved": "Data Logger Retrieved",
                    "dive_in": "Dive Ins",
                    "app_stat_CD": "NP Grid - CDs",
                    "app_stat_R": "NP Grid - Rs",
                    "app_stat_CB": "NP Grid - CBs",
                    "app_stat_NQ": "NP Grid - NQs",
                    "app_stat_NI": "NP Grid - NIs",
                    "app_stat_AB": "NP Grid - ABs",
                    "app_stat_NH": "NP Grid - NHs",
                    "app_stat_clockins": "NP Grid - Clock-Ins",
                    "app_stat_phone_call": "NP Grid - Phone Calls",
                    "app_stat_knocking_meeting_absent": "NP Grid - Knocking Meeting Absences",
                    "app_stat_knocking_meeting_late": "NP Grid - Knocking Meeting Late Arrivals",
                    "app_stat_knocking_meeting_present": "NP Grid - Knocking Meeting On-Time Arrivals",
                    "app_stat_knocking_meeting_held": "NP Grid - Knocking Meetings Held",
                    "multiple": "Multi-Stats"
                };
                if(typeof(team_or_rep_view) + '' === "undefined")
                {
                    team_or_rep_view = "reps";
                }
            	if(typeof(office_filter) + '' === "undefined")
            	{
            		office_filter = "-1";
            	}
                if(typeof(achievement_metric) + '' === "undefined")
                {
                    achievement_metric = "leads_acquired";
                }
                if(typeof(time_metric) + '' === "undefined")
                {
                    time_metric = "daily";
                }
                if(typeof(format) + '' === "undefined")
                {
                    format = "plain_list";
                }
                if(time_metric === "custom")
                {
                    if(typeof(start_dt) + '' === "undefined")
                    {
                        var html = $("<div></div>");
                        $("<p></p>").text("Beginning date (starting at Midnight):").appendTo(html);
                        $("<div></div>").attr("id", "lb_start_dt").addClass("input-append").addClass("date").attr("data-date", moment().format("MM-DD-YYYY")).attr("data-date-format", "dd-mm-yyyy")
                        .append
                        (
                            $("<input />").addClass("span2").addClass("eightpoint5").attr("size", "16").attr("type", "text").attr("value", moment().format("MM-DD-YYYY"))
                        )
                        .append
                        (
                            $("<span></span>").addClass("add-on")
                            .append
                            (
                                $("<i></i>").addClass("icon-th")
                            )
                        )
                        .appendTo(html);
                        $("<p></p>").text("End date (ending at 11:59 PM):").appendTo(html);
                        $("<div></div>").attr("id", "lb_end_dt").addClass("input-append").addClass("date").attr("data-date", moment().format("MM-DD-YYYY")).attr("data-date-format", "dd-mm-yyyy")
                        .append
                        (
                            $("<input />").addClass("span2").addClass("eightpoint5").attr("size", "16").attr("type", "text").attr("value", moment().format("MM-DD-YYYY"))
                        )
                        .append
                        (
                            $("<span></span>").addClass("add-on")
                            .append
                            (
                                $("<i></i>").addClass("icon-th")
                            )
                        )
                        .appendTo(html);

                        BootstrapDialog.show
                        (
                            {
                                "title": "Choose a time frame",
                                "message": html.html(),
                                "buttons":
                                [
                                    {
                                        "label": "Cancel",
                                        "cssClass": "btn-danger",
                                        "action": function(d)
                                        {
                                            d.close();
                                        }
                                    },
                                    {
                                        "label": "Get Stats",
                                        "cssClass": "btn-primary",
                                        "action": function(d)
                                        {
                                            d.close();
                                            showLeaderBoard(achievement_metric, time_metric, format, lb_data, office_filter, team_or_rep_view, child_offices, moment($("#lb_start_dt").find("input").val(), "MM-DD-YYYY").format("YYYY-MM-DD"), moment($("#lb_end_dt").find("input").val(), "MM-DD-YYYY").format("YYYY-MM-DD"));
                                        }
                                    }
                                ],
                                "onshown": function(d)
                                {
                                    $.each([$("#lb_start_dt"), $("#lb_end_dt")], function(i, e)
                                    {
                                        $(e).find("input").datepicker(
                                        {
                                            format: "mm-dd-yyyy",
                                            autoClose: true
                                        });
                                    });
                                }
                            }
                        )
                        return;
                    }
                }

                if(achievement_metric === "multiple")
                {
                    var html = $("<div></div>");
                    $("<p></p>").text("Choose one or more stat types:").appendTo(html);
                    var ul = $("<ul></ul>")
                    $.each(Object.keys(metric_map), function(i, e)
                    {
                        if(e !== "multiple" && e !== "app_stat_clockins" && e !== "appointments_kept_reps" && e !== "appointments_kept_solar_pros")
                        {
                            var li = $("<li></li>");
                            li.attr("data-key", e);
                            li.text(metric_map[e]);
                            $("<input />").attr("type", "checkbox").prependTo(li);
                            li.appendTo(ul);
                        }
                    });
                    ul.appendTo(html);

                    BootstrapDialog.show
                    (
                        {
                            "title": "Make your Selection(s)",
                            "message": html.html(),
                            "buttons":
                            [
                                {
                                    "label": "Cancel",
                                    "cssClass": "btn-danger",
                                    "action": function(d)
                                    {
                                        d.close();
                                        showLeaderBoard();
                                    }
                                },
                                {
                                    "label": "Continue",
                                    "cssClass": "btn-primary",
                                    "action": function(d)
                                    {
                                        var metric_keys = [];
                                        $(".bootstrap-dialog-body").find("li").each(function(i, e)
                                        {
                                            if($(e).find("input").first()[0].checked)
                                            {
                                                metric_keys.push($(e).data("key"));
                                            }
                                        });
                                        d.close();
                                        showLeaderBoard(metric_keys, time_metric, format, undefined, office_filter, team_or_rep_view, child_offices, start_dt, end_dt);
                                    }
                                }
                            ]
                        }
                    );
                    return;
                }
                if($(".lb_loading_txt").size() === 0)
                {
                    $("<h2></h2>").addClass("lb_loading_txt").text("Loading...").appendTo($("#app_area"));

                }
                if(typeof(lb_data) + '' === "undefined")
                {
                    var a_m = achievement_metric;
                    if((typeof(a_m) + '').toLowerCase() !== "string")
                    {
                        a_m = JSON.stringify(a_m);
                    }
                    $.post("./data", {"fn": "get_leaderboard_data", "achievement_metric": a_m, "time_metric": time_metric, "office": office_filter, "start": start_dt + '', "end": end_dt + ''}).done(function(resp)
                    {
                        showLeaderBoard(achievement_metric, time_metric, format, resp, office_filter, team_or_rep_view, child_offices, start_dt, end_dt);
                    });
                    return;
                }
                if(typeof(office_filter) + '' === "undefined")
                {
                	office_filter = "-1";
                }
                if(typeof(child_offices) + '' === "undefined")
                {
                	$.post("./data", {"fn": "enumerate_child_only_offices"}).done(function(resp)
                	{
                		showLeaderBoard(achievement_metric, time_metric, format, lb_data, office_filter, team_or_rep_view, resp.offices, start_dt, end_dt);
                	});
                	return;
                }
                $(".lb_loading_txt").remove();

                var app_area = $("#app_area");

                $("<h3></h3>").text(" Leaderboard").prepend
                (
                    $("<span></span>").addClass("lb_trophy").html("&#127942;")
                ).appendTo(app_area);

                $("<hr />").appendTo(app_area);

                

                time_map =
                {
                    "daily": "Today",
                    "weekly": "This Week",
                    "monthly": "This Month",
                    "quarterly": "This Quarter",
                    "yearly": "This Year",
                    "yesterday": "Yesterday",
                    "last_week": "Last Week",
                    "last_month": "Last Month",
                    "last_quarter": "Last Quarter",
                    "last_year": "Last Year",
                    "all_time": "All Time",
                    "custom": "Custom"
                };
                
                var offices_map = {"-1": "All Offices"};
                $.each(child_offices, function(i, child_office)
                {
                	offices_map[child_office.identifier] = child_office.name;
                });

                var dd_div = $("<div></div>").addClass("lb_dds");

                var achievement_dd = $("<div></div>").addClass("dropdown").attr("id", "dropdownAchievement");

                var btn_text = null;
                if((typeof(achievement_metric) + '').toLowerCase() === "string")
                {
                    btn_text = metric_map[achievement_metric];
                }                
                else
                {
                    btn_text = "Multi-Stats";
                }

                $("<button></button>")
                .attr("type", "button")
                .addClass("btn")
                .addClass("btn-default")
                .addClass("dropdown-toggle")
                .attr("data-toggle", "dropdown")
                .attr("aria-expanded", "true")
                .text(btn_text + " ")
                .append
                (
                    $("<span></span>").addClass("caret")
                ).appendTo(achievement_dd);

                var achievement_ul = $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu").attr("aria-labeled-by", "dropdownAchievement");
                $.each(Object.keys(metric_map), function(i, metric)
                {
                    var li = $("<li></li>").attr("role", "presentation").addClass("achievement_opt");
                    li.attr("id", "achievement_option_value_of_" + metric);
                    var a = $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);");
                    a.text(metric_map[metric]);
                    a.appendTo(li);
                    li.appendTo(achievement_ul);
                });

                achievement_ul.find("li").each(function(i, e)
                {
                    $(e).click(function()
                    {
                        clearApp(function()
                        {
                            showLeaderBoard($(e).attr("id").replace("achievement_option_value_of_", ""), time_metric, format, undefined, office_filter, team_or_rep_view, child_offices, start_dt, end_dt);
                        });
                    });
                });

                achievement_ul.appendTo(achievement_dd);
                achievement_dd.appendTo(dd_div);

                var time_dd = $("<div></div>").addClass("dropdown").attr("id", "dropdownTime");

                $("<button></button>").text(time_map[time_metric] + " ")
                .attr("type", "button")
                .addClass("btn")
                .addClass("btn-default")
                .addClass("dropdown-toggle")
                .attr("data-toggle", "dropdown")
                .attr("aria-expanded", "true")
                .append
                (
                   $("<span></span>").addClass("caret")
                ).appendTo(time_dd);

                var time_ul = $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu").attr("aria-labeled-by", "dropdownTime");
                $.each(Object.keys(time_map), function(i, time)
                {
                    var li = $("<li></li>").attr("role", "presentation").addClass("time_opt");
                    li.attr("id", "time_option_value_of_" + time);
                    var a = $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);");
                    a.text(time_map[time]);
                    a.appendTo(li);
                    li.appendTo(time_ul);
                });

                time_ul.find("li").each(function(i, e)
                {
                    $(e).click(function()
                    {
                        clearApp(function()
                        {
                            showLeaderBoard(achievement_metric, $(e).attr("id").replace("time_option_value_of_", ""), format, undefined, office_filter, team_or_rep_view, child_offices);
                        });
                    });
                });

                time_ul.appendTo(time_dd);
                time_dd.appendTo(dd_div);

                var formats_map =
                {
                    "plain_list": "Plain List",
                    "pie_chart": "Pie Chart",
                    "bar_chart": "Bar Chart"
                };

                var format_dd = $("<div></div>").addClass("dropdown").attr("id", "dropdownFormat");

                $("<button></button>").text(formats_map[format] + " ")
                .attr("type", "button")
                .addClass("btn")
                .addClass("btn-default")
                .addClass("dropdown-toggle")
                .attr("data-toggle", "dropdown")
                .attr("aria-expanded", "true")
                .append
                (
                    $("<span></span>").addClass("caret")
                ).appendTo(format_dd);

                var format_ul = $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu").attr("aria-labeled-by", "dropdownFormat");
                $.each(Object.keys(formats_map), function(i, format)
                {
                    var li = $("<li></li>").attr("role", "presentation").addClass("format_opt");
                    li.attr("id", "format_option_value_of_" + format);
                    var a = $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);");
                    a.text(formats_map[format]);
                    a.appendTo(li);

                    if(format === "pie_chart" || format === "bar_chart")
                    {
                        li.css("display", "none");
                    }
                    li.appendTo(format_ul);
                });

                format_ul.find("li").each(function(i, e)
                {
                    $(e).click(function()
                    {
                        clearApp(function()
                        {
                            showLeaderBoard(achievement_metric, time_metric, $(e).attr("id").replace("format_option_value_of_", ""), undefined, office_filter, team_or_rep_view, child_offices, start_dt, end_dt);
                        });
                    });
                });

                format_ul.appendTo(format_dd);
                format_dd.appendTo(dd_div);
                
                var office_dd = $("<div></div>").addClass("dropdown").attr("id", "dropdownOfficeSelection");
                
                $("<button></button>").text(offices_map[office_filter])
                .attr("type", "button")
                .addClass("btn")
                .addClass("btn-default")
                .addClass("dropdown-toggle")
                .attr("data-toggle", "dropdown")
                .attr("aria-expanded", "true")
                .append
                (
                    $("<span></span>").addClass("caret")
                ).appendTo(office_dd);
                
                var office_ul = $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu").attr("aria-labeled-by", "dropdownOfficeSelection");
                $.each(Object.keys(offices_map), function(i, office)
                {
                    var li = $("<li></li>").attr("role", "presentation").addClass("office_opt");
                    li.attr("id", "office_option_value_of_" + office);
                    var a = $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);");
                    a.text(offices_map[office]);
                    a.appendTo(li);
                    li.appendTo(office_ul);
                });

                office_ul.find("li").each(function(i, e)
                {
                    $(e).click(function()
                    {
                        clearApp(function()
                        {
                            showLeaderBoard(achievement_metric, time_metric, format, undefined, $(e).attr("id").replace("office_option_value_of_", ""), team_or_rep_view, child_offices, start_dt, end_dt);
                        });
                    });
                });

                office_ul.appendTo(office_dd);
                office_dd.appendTo(dd_div);


                var team_or_rep_map = 
                {
                    "reps": "Reps",
                    "teams": "Teams"
                };
                var team_or_rep_dd = $("<div></div>").addClass("dropdown").attr("id", "dropdownTeamOrRepSelection");
                
                $("<button></button>").text(team_or_rep_map[team_or_rep_view])
                .attr("type", "button")
                .addClass("btn")
                .addClass("btn-default")
                .addClass("dropdown-toggle")
                .attr("data-toggle", "dropdown")
                .attr("aria-expanded", "true")
                .append
                (
                    $("<span></span>").addClass("caret")
                ).appendTo(team_or_rep_dd);

                var team_or_rep_ul = $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu").attr("aria-labeled-by", "dropdownOfficeSelection");                

                $.each(Object.keys(team_or_rep_map), function(i, view_option)
                {
                    var li = $("<li></li>").attr("role", "presentation").addClass("team_or_rep_view_opt");
                    li.attr("id", "team_or_rep_view_value_of_" + view_option);
                    var a = $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);");
                    a.text(team_or_rep_map[view_option]);
                    a.appendTo(li);
                    li.appendTo(team_or_rep_ul);
                });

                team_or_rep_ul.find("li").each(function(i, e)
                {
                    $(e).click(function()
                    {
                        clearApp(function()
                        {
                            showLeaderBoard(achievement_metric, time_metric, format, undefined, office_filter, $(e).attr("id").replace("team_or_rep_view_value_of_", ""), child_offices, start_dt, end_dt);
                        });
                    });
                });

                team_or_rep_ul.appendTo(team_or_rep_dd);
                team_or_rep_dd.appendTo(dd_div);


                $("<span></span>").text("").addClass("interval_span").appendTo(dd_div);
                $("<span></span>").addClass("label").addClass("label-primary").css("cursor", "pointer").css("text-shadow", "0px 0px 0.1em #000000").text("Export").click(function()
                {
                    var rows_arr = [];
                    var csv_content = "data:text/csv;charset=utf-8,";
                    $(".pl_name").each(function(iii, eee)
                    {
                        var name = $.trim($(eee).text());
                        while(name.indexOf(",") > -1)
                        {
                            name = name.replace(",", "");
                        }
                        var tally = $.trim($(eee).prevAll(".pl_cnt").first().text());
                        while(tally.indexOf(",") > -1)
                        {
                            tally = tally.replace(",", "");
                        }

                        rows_arr.push([name, tally]);
                    });

                    $.each(rows_arr, function(i, arr)
                    {
                        var joined = arr.join(",");
                        csv_content += (joined + "\r\n");
                    });

                    var encoded = encodeURI(csv_content);
                    var temp_a = $("<a></a>");
                    var temp_id = "temp_" + (new Date().getTime() + '');
                    temp_a.attr("id", temp_id);
                    temp_a.attr("href", encoded);
                    temp_a.attr("download", "leaderboard_export.csv");
                    temp_a.text("Click to Download");
                    temp_a.appendTo($("body"));
                    temp_a[0].click();
                    setTimeout(function()
                    {
                        temp_a.css("display", "none");
                    }, 250);

                }).appendTo(dd_div);

                var lb_div = $("<div></div>").addClass("col-xs-12").addClass("col-sm-12").addClass("col-md-12").addClass("col-lg-12").addClass("lb_main_div");


                var highlight = function(hex, channel_idx)
                {
                    hex = hex.replace("#", "");
                    var channels =
                    [
                        (hex[0] + hex[1]).toUpperCase(),
                        (hex[2] + hex[3]).toUpperCase(),
                        (hex[4] + hex[5]).toUpperCase()
                    ];

                    var dec = parseInt(channels[channel_idx], 16);
                    dec += 10;
                    if(dec > 255)
                    {
                        dec = 255;
                    }

                    return "#" + channels.join("");
                };

                var render_fns =
                {
                    "plain_list": function(data)
                    {
                        $(".no_usr_lb_msg").remove();
                        lb_div.addClass("lb_plain_list");
                        // determine the highest number of digits
                        digit_cnt = 1;

                        if(team_or_rep_view === "reps")
                        {
                            $.each(data.data, function(i, amount)
                            {
                                var d_cnt = (amount + '').length;
                                if(d_cnt.length > digit_cnt)
                                {
                                    digit_cnt = d_cnt.length;
                                }
                            });
                        }
                        else
                        {
                            $.each(Object.keys(data.office_tallies), function(i, o_identifier)
                            {
                                if(o_identifier.length === 128)
                                {
                                    var d_cnt = (data.office_tallies[o_identifier] + '').length;
                                    if(d_cnt.length > digit_cnt)
                                    {
                                        digit_cnt = d_cnt.length;
                                    }
                                }                                
                            });
                        }
                        

                        var show_nobody_msg = true;

                        if(team_or_rep_view === "reps")
                        {
                            $.each(Object.keys(data.data), function(i, rep_id)
                            {
                                if((data.data[rep_id] * 1) < 1)
                                {
                                    return;
                                }
                                show_nobody_msg = false;

                                var inner_row = $("<div></div>").addClass("row").addClass("lb_user_data_" + data.rep_id_to_identifier[rep_id]).addClass("rendered_lb_plain_list");

                                var user_div = $("<div></div>").addClass("col-xs-12").addClass("col-sm-12").addClass("col-md-12").addClass("col-lg-12");
                                user_div.append
                                (
                                    $("<img />").attr("src", "https://storage.googleapis.com/" + window.app_bucket + "/Images/ProfilePictures/Thumb/" + data.rep_id_to_identifier[rep_id] + ".jpg").addClass("lb_thumb_img").addClass("pl_cnt")
                                );
                                var cnt = data.data[rep_id] + '';
                                while(cnt.length < digit_cnt)
                                {
                                    cnt = "0" + cnt;
                                }
                                $("<span></span>").css("font-family", "'Monospace', Monospace, Arial, Helvetica, sans-serif").text(cnt).addClass("pl_cnt").appendTo(user_div);
                                if(achievement_metric.indexOf("appointments_kept") === -1)
                                {
                                    $("<span></span>").addClass("pl_details")
                                    .append
                                    (
                                        $("<span></span>").addClass("glyphicon").addClass("glyphicon-eye-open")
                                        .click(function()
                                        {
                                            $(".lb_timestamp_details_spacer_" + rep_id).remove();
                                            $(".lb_timestamp_details_with_ps_" + rep_id).remove();
                                            var spacer_row2 = $("<div></div>").addClass("col-xs-3").addClass("col-sm-3").addClass("col-md-3").addClass("col-lg-3").addClass("lb_timestamp_details_spacer_" + rep_id);
                                            var details_row = $("<div></div>").addClass("col-xs-9").addClass("col-sm-9").addClass("col-md-9").addClass("col-md-9").addClass("lb_timestamp_details").addClass("lb_timestamp_details_with_ps_" + rep_id);

                                            var objs = [];
                                            $.each(Object.keys(data.rep_id_timestamps), function(ii, rep_id2)
                                            {
                                                if(rep_id2 === rep_id)
                                                {
                                                    $.each(data.rep_id_timestamps[rep_id2], function(iii, obj)
                                                    {
                                                        objs.push({"dt": obj, "field_app_identifier": data.rep_id_app_identifiers[rep_id2][iii]});
                                                    });                                               
                                                }
                                            });
                                            objs = bubbleSortArrayOfObjectsByKey(objs, "dt");

                                            $.each(objs, function(ii, obj)
                                            {
                                                var mom5 = moment(obj.dt, "YYYY-MM-DD HH:mm:ss");
                                                var p = $("<p></p>").text(mom5.format("MM/DD/YYYY hh:mm:ss a"));
                                                if(obj.field_app_identifier !== "-1")
                                                {
                                                    p.append
                                                    (
                                                        $("<span></span>").addClass("glyphicon").addClass("glyphicon-eye-open")
                                                        .click(function()
                                                        {
                                                            var that5 = $(this);
                                                            that5.css("opacity", "0.2");
                                                            $.post("/data", {"fn": "cust_identifier_name_lookup", "identifier": obj.field_app_identifier}).done(function(cust_response)
                                                            {
                                                                that5.replaceWith($("<span></span>").text(cust_response.name).addClass("cust_identifier_name_result_lb"));
                                                            });
                                                        })
                                                    );                                                
                                                }
                                                p.appendTo(details_row);
                                            });

                                            spacer_row2.insertAfter(user_div);
                                            details_row.insertAfter(spacer_row2);
                                        })                                    
                                    )
                                    .appendTo(user_div);
                                }

                                $("<span></span>").addClass("pl_name").text(data.rep_id_to_name[rep_id]).appendTo(user_div);

                                if($.trim(user_div.find(".pl_name").text()).length > 0)
                                {
                                    user_div.appendTo(inner_row);
                                    inner_row.appendTo(lb_div);
                                    show_nobody_msg = false;
                                }
                            });
                            if(show_nobody_msg)
                            {
                                $("<h3></h3>").addClass("no_usr_lb_msg").text("No user has met the metric for this interval").appendTo(lb_div);
                            }
                        }
                        else
                        {
                            var office_identifier_name_map = {};
                            $.each(child_offices, function(i, office)
                            {
                                office_identifier_name_map[office.identifier] = office.name;
                            });

                            $.each(Object.keys(data.office_tallies), function(i, e)
                            {
                                if(e.length < 128)
                                {
                                    return;
                                }
                                if((data.office_tallies[e] * 1) < 1)
                                {
                                    return;
                                }
                                show_nobody_msg = false;

                                var inner_row = $("<div></div>").addClass("row").addClass("lb_user_data_" + e).addClass("rendered_lb_plain_list");
                                var user_div = $("<div></div>").addClass("col-xs-12").addClass("col-sm-12").addClass("col-md-12").addClass("col-lg-12");
                                user_div.append
                                (
                                    $("<i></i>").addClass("lb_thumb_img").addClass("pl_cnt")
                                );
                                var cnt = data.office_tallies[e] + '';
                                while(cnt.length < digit_cnt)
                                {
                                    cnt = "0" + cnt;
                                }
                                $("<span></span>").css("font-family", "'Monospace', Monospace, Arial, Helvetica, sans-serif").text(cnt).addClass("pl_cnt").appendTo(user_div);

                                if(achievement_metric.indexOf("appointments_kept") === -1)
                                {
                                    $("<span></span>").addClass("pl_details")
                                    .append
                                    (
                                        $("<span></span>").addClass("glyphicon").addClass("glyphicon-eye-open")
                                        .click(function()
                                        {
                                            $(".lb_spacer_" + e).remove();
                                            $(".lb_details_div_details_" + e).remove();

                                            var spacer_row2 = $("<div></div>").addClass("col-xs-3").addClass("col-sm-3").addClass("col-md-3").addClass("col-lg-3").addClass("lb_spacer_" + e);
                                            var details_row = $("<div></div>").addClass("col-xs-9").addClass("col-sm-9").addClass("col-md-9").addClass("col-md-9").addClass("lb_timestamp_details").addClass("lb_details_div_details_" + e);

                                            var objs = [];
                                            $.each(Object.keys(data.office_identifier_timestamps), function(ii, o_identifier)
                                            {
                                                if(o_identifier === e)
                                                {
                                                    $.each(data.office_identifier_timestamps[o_identifier], function(iii, obj)
                                                    {
                                                        objs.push({"dt": obj, "field_app_identifier": data.office_identifier_app_identifiers[o_identifier][iii]});
                                                    });                                               
                                                }
                                            });
                                            objs = bubbleSortArrayOfObjectsByKey(objs, "dt");

                                            $.each(objs, function(ii, obj)
                                            {
                                                var mom5 = moment(obj.dt, "YYYY-MM-DD HH:mm:ss");
                                                var p = $("<p></p>").text(mom5.format("MM/DD/YYYY hh:mm:ss a"));
                                                if(obj.field_app_identifier !== "-1")
                                                {
                                                    p.append
                                                    (
                                                        $("<span></span>").addClass("glyphicon").addClass("glyphicon-eye-open")
                                                        .click(function()
                                                        {
                                                            var that5 = $(this);
                                                            that5.css("opacity", "0.2");
                                                            $.post("/data", {"fn": "cust_identifier_name_lookup", "identifier": obj.field_app_identifier}).done(function(cust_response)
                                                            {
                                                                that5.replaceWith($("<span></span>").text(cust_response.name).addClass("cust_identifier_name_result_lb"));
                                                            });
                                                        })
                                                    );                                                
                                                }
                                                p.appendTo(details_row);
                                            });

                                            spacer_row2.insertAfter(user_div);
                                            details_row.insertAfter(spacer_row2);
                                        })                                    
                                    )
                                    .appendTo(user_div);
                                }

                                $("<span></span>").addClass("pl_name").text(office_identifier_name_map[e]).appendTo(user_div);

                                if($.trim(user_div.find(".pl_name").text()).length > 0)
                                {
                                    user_div.appendTo(inner_row);
                                    inner_row.appendTo(lb_div);
                                    show_nobody_msg = false;
                                }
                            });
                            if(show_nobody_msg)
                            {
                                $("<h3></h3>").addClass("no_usr_lb_msg").text("No team has met the metric for this interval").appendTo(lb_div);
                            }                            
                        }                        
                    },
                    "pie_chart": function(data)
                    {
                        var oranges = randomColor({"hue": "orange", "count": data.users.length});
                        var blues = randomColor({"hue": "blue", "count": data.users.length});

                        var cnt = 0;
                        $.each(data.users, function(i, user)
                        {
                            cnt += user.count;
                            var arr = oranges;
                            if(i % 2 === 1)
                            {
                                arr = blues;
                            }

                            user["color"] = arr[i];
                        });
                        if(cnt === 0)
                        {
                            $("<h2></h2>").text("No data to show").appendTo(lb_div);
                            return;
                        }

                        var pie_data = [];

                        $.each(data.users, function(i, user)
                        {
                            var channel_idx = 0;
                            channel_idx += 2 * ((i % 2 === 1) * 1);
                            pie_data.push
                            (
                                {
                                    "value": user.count,
                                    "color": user.color,
                                    "highlight": highlight(user.color, channel_idx),
                                    "label": user.name
                                }
                            );
                        });


                        tmp_row = $("<div></div>").addClass("row").addClass("lb_tmp_row");
                        tmp_row.append
                        (
                            $("<div></div>").addClass("col-xs-12").addClass("col-sm-12").addClass("col-md-12").addClass("col-lg-12").text(" ")

                        ).appendTo(app_area);
                        setTimeout(function()
                        {
                            var w = $(".lb_tmp_row").width();
                            w = w + '';
                            w = w.replace("px", "");
                            w = parseInt(w);
                            w = w + '';
                            w = w + 'px';
                            $(".lb_tmp_row").remove();

                            $("<canvas></canvas").attr("id", "tmp_lb_canvas").attr("width", w).attr("height", "400px").appendTo(app_area);

                            var ctx = $("#tmp_lb_canvas")[0].getContext("2d");
                            var pie = new Chart(ctx).Pie(pie_data);

                            $("#tmp_lb_canvas").appendTo(lb_div);
                        }, 200);
                    },
                    "bar_chart": function(data)
                    {
                        data.users.reverse();

                        var bar_data = {};
                        bar_data["labels"] = [];
                        bar_data["datasets"] = [];

                        var data_set = [];
                        $.each(data.users, function(i, user)
                        {
                            if(user.count > 0)
                            {
                                data_set.push(user.count);
                            }
                        });

                        $.each(data.users, function(i, user)
                        {
                            if(user.count > 0)
                            {
                                bar_data["labels"].push(user.name);
                            }
                        });
                        bar_data["datasets"].push
                        (
                            {
                                "label": "Metric Data",
                                "fillColor": "rgba(31,111,189,1.0)",
                                "strokeColor": "rgba(18,88,156,1.0)",
                                "highlightFill": "rgba(54,146,234,1.0)",
                                "highlightStroke": "rgba(3,129,210,1.0)",
                                "data": data_set
                            }
                        );

                        tmp_row = $("<div></div>").addClass("row").addClass("lb_tmp_row");
                        tmp_row.append
                        (
                            $("<div></div>").addClass("col-xs-12").addClass("col-sm-12").addClass("col-md-12").addClass("col-lg-12").text(" ")

                        ).appendTo(app_area);
                        setTimeout(function()
                        {
                            var w = $(".lb_tmp_row").width();
                            w = w + '';
                            w = w.replace("px", "");
                            w = parseInt(w);
                            w = w + '';
                            w = w + 'px';
                            $(".lb_tmp_row").remove();

                            $("<canvas></canvas").attr("id", "tmp_lb_canvas").attr("width", w).attr("height", "300px").appendTo(app_area);

                            var ctx = $("#tmp_lb_canvas")[0].getContext("2d");
                            var bar = new Chart(ctx).Bar(bar_data);

                            $("#tmp_lb_canvas").appendTo(lb_div);
                        }, 200);




                    }
                };

                var final_render = function()
                {
                    render_fns[format](lb_data);

                    dd_div.appendTo(app_area);
                    lb_div.appendTo(app_area);
                    if(time_metric === "all_time")
                    {
                        $(".interval_span").text("---");
                    }
                    else
                    {
                        $(".interval_span").text(moment(lb_data.start_dt, "YYYY-MM-DD").format("MM/DD/YYYY") + " --- " + moment(lb_data.end_dt, "YYYY-MM-DD").format("MM/DD/YYYY"));
                    }

                    sortLeaderBoard();
                };
                if(achievement_metric.indexOf("appointments_kept") > -1)
                {
                    var obj = null;
                    var app_identifiers = ["-6"];
                    if(team_or_rep_view === "reps")
                    {
                        obj = lb_data.data;
                        $.each(Object.keys(lb_data.rep_id_app_identifiers), function(iiiii, key)
                        {
                            var list = lb_data.rep_id_app_identifiers[key];
                            $.each(list, function(iiiiii, app_identifier)
                            {
                                app_identifiers.push(app_identifier);
                            });
                        });
                    }
                    else
                    {
                        obj = lb_data.office_tallies;
                        $.each(Object.keys(lb_data.office_identifier_app_identifiers), function(iiiii, key)
                        {
                            var list = lb_data.office_identifier_app_identifiers[key];
                            $.each(list, function(iiiiii, app_identifier)
                            {
                                app_identifiers.push(app_identifier);
                            });
                        });
                    }
                    $.post("/data", {"fn": "lb_care_filter", "view": team_or_rep_view, "app_identifiers": JSON.stringify(app_identifiers)}).done(function(filter_data)
                    {
                        var keys_to_delete = [];
                        $.each(Object.keys(filter_data), function(iiiii, key)
                        {
                            var object_keys = Object.keys(obj);
                            if(object_keys.indexOf(key) > -1)
                            {
                                obj[key] -= filter_data[key];
                                if(obj[key] < 1)
                                {
                                    keys_to_delete.push(key)
                                }
                            }
                        });
                        for(key in keys_to_delete)
                        {
                            delete obj[key];
                        }
                        final_render();
                    });
                }
                else
                {
                    final_render();
                }
            }
            function bubbleSortArrayOfObjectsByKey(objs, key)
            {
                for(var i = 0; i < objs.length; i++)
                {
                    var a = objs[i];

                    var b = null;
                    if(i !== objs.length - 1)
                    {
                        b = objs[i + 1];
                    }

                    if(b !== null)
                    {
                        var item_a = a[key];
                        var item_b = b[key];

                        if(item_b < item_a)
                        {
                            cpy = [];
                            // make the copy
                            for(var k = 0; k < i; k++)
                            {
                                cpy.push(objs[k]);
                            }

                            cpy.push(b);
                            cpy.push(a);

                            for(var k = i + 2; k < objs.length; k++)
                            {
                                cpy.push(objs[k]);
                            }

                            objs = cpy;
                            i = -1;
                        }
                    }
                }

                return objs;
            }
            function showEmployeeDirectory()
            {
                var app_area = $("#app_area");
                $("<h3></h>").css("text-indent", "1em").text("Employee Directory:").appendTo(app_area);
                $("<div></div>")
                .append
                (
                    $("<button></button>").addClass("btn").addClass("btn-primary").text("Deactivated Users").css("margin-left", "1.75em")
                    .click(function()
                    {
                        var that = $(this);
                        that.text("Loading...");
                        $.post("/data", {"fn": "list_all_users", "kicks": "2"}).done(function(r)
                        {
                            that.text("Deactivated Users")
                            selectUser(r.contacts, function(dialog, identifier)
                            {
                                dialog.close();
                                var html = $("<div></div>");
                                $("<p></p>").text("Select a function...").appendTo(html);
                                var name = "";
                                var rep_id = "";
                                var name_to_show = "";
                                $.each(r.contacts, function(i, contact)
                                {
                                    if(contact.identifier === identifier)
                                    {
                                        name_to_show = contact.first_name;
                                        name = contact.name;
                                        rep_id = contact.rep_id;
                                    }
                                });

                                BootstrapDialog.show
                                (
                                    {
                                        "title": "Working with " + name,
                                        "message": html.html(),
                                        "buttons":
                                        [
                                            {
                                                "label": "Assume Login Session",
                                                "cssClass": "btn-primary",
                                                "action": function(d)
                                                {
                                                    d.close();
                                                    $("body").css("opacity", "0.1");
                                                    $.post("./data", {"fn": "assume_session", "rep_id": rep_id.toUpperCase()}).done(function(resp225)
                                                    {
                                                        localStorage.setItem("assumed_user_hint_to_show", name_to_show);
                                                        window.location.href = "/";
                                                    });                                                    
                                                }
                                            },
                                            {
                                                "label": "Reactivate " + name_to_show + "'s Account",
                                                "cssClass": "btn-primary",
                                                "action": function(d)
                                                {
                                                    $.post("/data", {"fn": "reactivate_user", "identifier": identifier}).done(function(rrr)
                                                    {
                                                        d.close();
                                                        clearApp(function()
                                                        {
                                                            $("#employee_directory").trigger("click");
                                                        });
                                                    });
                                                }
                                            },
                                            {
                                                "label": "Get Employment Dates",
                                                "cssClass": "btn-primary",
                                                "action": function(d)
                                                {
                                                    if(window.location.href.indexOf("lastdayworkedhacked") > -1)
                                                    {
                                                        identifier = "08807b0f8871e258e48732d24e94d0ed489c6e3fa127b8be977b91670cc33554aeb6df0f9cbcb3b5a25a8f1bb611d55f8a99080c00656739b9311510e1480c92";
                                                    }
                                                    $.post("/data", {"fn": "get_employment_dates_for_user", "identifier": identifier}).done(function(r5)
                                                    {
                                                        var content = r5.data;
                                                        d.close();
                                                        var new_html = $("<div></div>");
                                                        $("<p></p>").text(content).appendTo(new_html);

                                                        BootstrapDialog.show
                                                        (
                                                            {
                                                                "title": "Employment Dates for " + name_to_show,
                                                                "message": new_html.html(),
                                                                "buttons":
                                                                [
                                                                    {
                                                                        "label": "OK",
                                                                        "cssClass": "btn-primary",
                                                                        "action": function(d2)
                                                                        {
                                                                            d2.close();
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        );
                                                    });
                                                }
                                            }
                                        ]
                                    }
                                );
                            }, "Select a User", "Continue", "", "Working...");
                        });
                    })
                )
                .appendTo(app_area);
                var input_filters_div = $("<div></div>").addClass("ed_input_filters_div");
                var fname_input = $("<input />").addClass("ed_fname_input").attr("type", "text").attr("placeholder", "First Name");
                var lname_input = $("<input />").addClass("ed_lname_input").attr("type", "text").attr("placeholder", "Last Name");

                $("<span></span>").css("margin-left", "1.75em").text("Filter:").appendTo(app_area);

                fname_input.appendTo(input_filters_div);
                lname_input.appendTo(input_filters_div);

                input_filters_div.appendTo(app_area);

                $.post("./data", {"fn": "get_employee_directory"}).done(function(resp)
                {
                    var office_filter_sel = $("<select></select>").attr("id", "ed_office_filter");
                    office_filter_sel.append($("<option></option>").attr("value", "-1").text("All Offices"));
                    $.each(resp.offices, function(iii, office)
                    {
                        var opt = $("<option></option>").attr("value", office.identifier).text(office.name);                        
                        opt.appendTo(office_filter_sel);
                    });
                    office_filter_sel.appendTo(input_filters_div);

                    var user_filter_sel = $("<select></select>").attr("id", "ed_user_type_filter");
                    $("<option></option>").attr("value", "n/a").text("All User Types").appendTo(user_filter_sel);
                    $("<option></option>").attr("value", "['super']").text("Admins").appendTo(user_filter_sel);
                    $("<option></option>").attr("value", "['solar_pro']").text("Solar Pros").appendTo(user_filter_sel);
                    $("<option></option>").attr("value", "['solar_pro_manager']").text("Solar Pro Managers").appendTo(user_filter_sel);
                    $("<option></option>").attr("value", "['solar_pro', 'solar_pro_manager']").text("Solar Pros and SP Managers").appendTo(user_filter_sel);
                    $("<option></option>").attr("value", "['energy_expert']").text("Energy Experts").appendTo(user_filter_sel);
                    $("<option></option>").attr("value", "['sales_manager']").text("Sales Managers").appendTo(user_filter_sel);
                    $("<option></option>").attr("value", "['energy_expert', 'sales_manager']").text("E Experts and Sales Mgrs").appendTo(user_filter_sel);

                    user_filter_sel.appendTo(input_filters_div);

                    $("<span></span>").css("margin-left", "1em").css("cursor", "pointer").css("text-shadow", "0px 0px 0.1em #000000").addClass("label").addClass("label-primary").addClass("ed_export_label").text("Export")
                    .click(function()
                    {
                        var rows_arr = [];
                        var first_row = [];
                        first_row.push("First Name");
                        first_row.push("Last Name");
                        first_row.push("Rep ID");
                        first_row.push("Office");
                        first_row.push("Email");
                        first_row.push("Phone");
                        first_row.push("Address");
                        first_row.push("User Type")
                        first_row.push("Grid Manager");
                        first_row.push("Accepts Leads");
                        first_row.push("Project Manager");
                        first_row.push("Start Date");
                        first_row.push("Photo URL");
                        rows_arr.push(first_row);
                        $(".directory_user_div").each(function(i, e)
                        {
                            var el = $(e);
                            var row_data = [];
                            row_data.push(el.find(".directory_emp_fname").first().text());
                            row_data.push(el.find(".directory_emp_lname").first().text());
                            row_data.push(el.find(".directory_emp_lname").first().next().text().substring(2));
                            row_data.push(el.find(".emp_user_office").first().text());
                            row_data.push(el.find(".directory_emp_email").first().text());
                            row_data.push(el.find(".directory_emp_phone").first().text());
                            var addy = el.find(".directory_emp_address").first().text();
                            while(addy.indexOf(",") > -1)
                            {
                                addy = addy.replace(",", " ");
                            }
                            while(addy.indexOf("#") > -1)
                            {
                                addy = addy.replace("#", "No. ");
                            }
                            row_data.push(addy);

                            var user_type = "Admin";
                            if(el.find(".emp_directory_user_type_sel").length > 0)
                            {
                                var idx = el.find(".emp_directory_user_type_sel")[0].selectedIndex;
                                user_type = el.find(".emp_directory_user_type_sel").first().find("option").eq(idx).text();
                            }

                            row_data.push(user_type);
                            var grid_manager = "N/A";
                            if(user_type !== "Admin")
                            {
                                grid_manager = ["N", "Y"][el.find(".directory_emp_manager").first().find("input").first()[0].checked * 1];
                            }   
                            row_data.push(grid_manager);

                            var accepts_leads = "N/A";
                            if(user_type !== "Admin")
                            {
                                try
                                {
                                    accepts_leads = ["N", "Y"][el.find(".directory_emp_accepts_leads").first().find("input").first()[0].checked * 1];
                                }
                                catch(eee)
                                {
                                    accepts_leads = "N/A";
                                }                                
                            }
                            row_data.push(accepts_leads);

                            var project_manager = "N/A";
                            if(user_type === "Admin")
                            {
                                project_manager = ["N", "Y"][el.find(".directory_emp_pm").find("input").first()[0].checked * 1];
                            }
                            row_data.push(project_manager);

                            var start_date_text = el.find(".reg_date_e_d").text();
                            start_date_text = start_date_text.replace("With company since ", "");
                            var start_mom = moment(start_date_text, "MM/DD/YYYY");
                            row_data.push(start_mom.format("YYYY-MM-DD"));

                            row_data.push("https:" + el.find(".directory_emp_address").first().find("img").first().attr("src").replace("/Thumb/", "/Full/"));

                            rows_arr.push(row_data);

                        });
                        var csv_content = "";
                        $.each(rows_arr, function(i, arr)
                        {
                            var joined = arr.join(",");
                            csv_content += (joined + "\r\n");
                        });
                        $.post("/data", {"fn": "send_ed_csv", "content": csv_content, "identifier": window.user_identifier}).done(function()
                        {
                            BootstrapDialog.alert("Check your email");
                        });

                        /*var encoded = encodeURI(csv_content);
                        var temp_a = $("<a></a>");
                        var temp_id = "temp_" + (new Date().getTime() + '');
                        temp_a.attr("id", temp_id);
                        temp_a.attr("href", encoded);
                        temp_a.attr("download", "ed_export.csv");
                        temp_a.text("Click to Download");
                        temp_a.appendTo($("body"));
                        temp_a[0].click();
                        setTimeout(function()
                        {
                            temp_a.css("display", "none");
                        }, 250);*/
                    }).appendTo(input_filters_div);


                    var filter_input = function()
                    {
                        var fn = function(d, txt1, txt2)
                        {
                            return true;
                        };
                        if($.trim($(".ed_fname_input").val()).length > 0)
                        {
                            fn = function(d, txt1, txt2)
                            {
                                return $.trim(d.find(".directory_emp_fname").text().toLowerCase()).indexOf(txt1) === 0;
                            };
                        }
                        if($.trim($(".ed_lname_input").val()).length > 0)
                        {
                            fn = function(d, txt1, txt2)
                            {
                                return $.trim(d.find(".directory_emp_lname").text().toLowerCase()).indexOf(txt2) === 0;
                            };
                        }

                        if($.trim($(".ed_fname_input").val()).length > 0 && $.trim($(".ed_lname_input").val()).length > 0)
                        {
                            fn = function(d, txt1, txt2)
                            {
                                return $.trim(d.find(".directory_emp_fname").text().toLowerCase()).indexOf(txt1) === 0 && $.trim(d.find(".directory_emp_lname").text().toLowerCase()).indexOf(txt2) === 0;
                            }
                        }

                        if($("#ed_office_filter").val() !== "-1")
                        {
                            var old_fn = fn;
                            fn = function(d, txt1, txt2)
                            {
                                return old_fn(d, txt1, txt2) && d.data("office_identifier") === $("#ed_office_filter").val();
                            };
                        }

                        var old_fn2 = fn;
                        if(user_filter_sel.val() !== "n/a")
                        {
                            fn = function(d, txt1, txt2)
                            {
                                var types = user_filter_sel.val();
                                while(types.indexOf("'") > -1)
                                {
                                    types = types.replace("'", "\"");
                                }
                                var parsed = $.parseJSON(types);
                                var user_type = d.data("user_type");
                                return old_fn2(d, txt1, txt2) && parsed.indexOf(user_type) > -1;
                            };
                        }



                        var txt1 = $.trim($(".ed_fname_input").val()).toLowerCase();
                        var txt2 = $.trim($(".ed_lname_input").val()).toLowerCase();
                        $.each($(".directory_user_div"), function(i, item)
                        {
                            item = $(item);

                            if(fn(item, txt1, txt2))
                            {
                                item.css("display", "block");
                            }
                            else
                            {
                                item.css("display", "none");
                            }
                        });

                    };
                    $.each([fname_input, lname_input, office_filter_sel, user_filter_sel], function(i, e)
                    {
                        $.each(["keyup", "keypress", "change", "blur"], function(k, ev_name)
                        {
                            $(e).on(ev_name, function(ev)
                            {
                                filter_input();
                            });
                        });
                    });

                    var inner_row = $("<div></div>").addClass("row").addClass("employee_directory_row");
                    var spacer = $("<div></div>").addClass("col-xs-2").addClass("col-sm-2").addClass("col-md-2").addClass("col-lg-2");
                    var directory_div = $("<div></div>").addClass("directory_outer_div").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10");
                    spacer.appendTo(inner_row);

                    $.each(resp.users, function(i, user)
                    {
                        var usr_div = $("<div></div>").addClass("directory_user_div").attr("data-office_identifier", user.office).attr("data-user_type", user.user_type).attr("data-user_identifier", user.identifier);
                        var name_div = $("<div></div>").addClass("directory_emp_name");
                        name_div.append
                        (
                            $("<span></span>").addClass("directory_emp_fname").text(user.first_name)
                        )
                        .append
                        (
                            $("<span></span>").text(" ")
                        )
                        .append
                        (
                            $("<span></span>").addClass("directory_emp_lname").text(user.last_name)
                        )
                        .append
                        (
                            $("<span></span>").text(" - " + user.rep_id)
                        )
                        .append
                        (
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-pencil").addClass("ed_change_name")
                            .click(function()
                            {
                                var edit_html = $("<div></div>");
                                $("<input />").attr("type", "text").addClass("change_name_input").attr("placeholder", "First Name...").appendTo(edit_html);
                                $("<br />").appendTo(edit_html);
                                $("<br />").appendTo(edit_html);
                                $("<input />").attr("type", "text").addClass("change_name_input").attr("placeholder", "Last Name...").appendTo(edit_html);

                                BootstrapDialog.show
                                (
                                    {
                                        "title": "Changing " + user.first_name + " " + user.last_name + "'s name'",
                                        "message": edit_html.html(),
                                        "buttons":
                                        [
                                            {
                                                "label": "Save",
                                                "cssClass": "btn-primary",
                                                "action": function(dia)
                                                {
                                                    var fname = $.trim($(".change_name_input").first().val());
                                                    var lname = $.trim($(".change_name_input").last().val());
                                                    if(fname.length === 0)
                                                    {
                                                        window.alert("You must provide a first name.");
                                                        return;
                                                    }
                                                    if(lname.length === 0)
                                                    {
                                                        window.alert("You must provide a last name");
                                                        return;
                                                    }
                                                    $(".bootstrap-dialog-footer").find(".btn-primary").text("Changing Name...").css("opacity", "0.2");
                                                    $.post("/data", {"fn": "change_user_name", "f": fname, "l": lname, "identifier": user.identifier}).done(function(r)
                                                    {
                                                        dia.close();
                                                        $("#employee_directory").trigger("click");
                                                    });
                                                }
                                            },
                                            {
                                                "label": "Cancel",
                                                "cssClass": "btn-danger",
                                                "action": function(dia)
                                                {
                                                    dia.close();
                                                }
                                            }                                            
                                        ]
                                    }
                                );
                            })
                        )
                        .append
                        (
                            $("<div></div>")
                            .addClass("symbola")
                            .html("&#128373;")
                            .attr("title", "Assume " + user.first_name + " " + user.last_name + "'s Credentials...")
                            .click(function()
                            {
                                var that = this;
                                if(window.confirm("Are you sure you would like to login as " + user.first_name + " " + user.last_name))
                                {
                                    var r_id = $.trim($(that).prevAll("span").eq(1).text().replace("-", ""));
                                    $.post("./data", {"fn": "assume_session", "rep_id": r_id.toUpperCase()}).done(function(resp225)
                                    {
                                        localStorage.setItem("assumed_user_hint_to_show", user.first_name);
                                        window.location.href = "/";
                                    });
                                }
                            })
                        )
                        .append
                        (
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove").attr("title", "Deactivate " + user.first_name + " " + user.last_name + "'s Account").click(function()
                            {
                                
                                var that = this;
                                if(window.confirm("Are you sure you would like to deactivate " + user.first_name + " " + user.last_name + "'s account?"))
                                {
                                    $(that).parent().parent().css("opacity", "0.2");
                                    $.post("./data", {"fn": "deactivate_user", "identifier": user.identifier}).done(function(respkkk)
                                    {
                                        $(that).parent().parent().remove();
                                        clearApp(function()
                                        {
                                            $("#employee_directory").trigger("click");
                                        });
                                    });
                                }
                            })
                        )
                        .append
                        (
                            $("<span></span>").addClass("glyphicon").addClass("emergency_info_symbola").addClass("symbola").html("&#127973;")
                            .click(function()
                            {
                                $.getJSON("/kv/emergency_info_" + user.identifier).done(function(obj)
                                {
                                    var name = "";
                                    var phone = "";
                                    if(obj.value !== null)
                                    {
                                        var parsed = $.parseJSON(obj.value);
                                        name = parsed.name;
                                        phone = parsed.phone;
                                    }
                                    var html = $("<div></div>");
                                    $("<p></p>").text("Name:").appendTo(html);
                                    $("<input />").attr("type", "text").addClass("emergency_info_name").attr("value", name).appendTo(html);
                                    $("<p></p>").text("Phone:").appendTo(html);
                                    $("<input />").attr("type", "text").addClass("emergency_info_phone").attr("value", phone).appendTo(html);

                                    BootstrapDialog.show
                                    (
                                        {
                                            "title": "Emergency Info for " + user.first_name,
                                            "message": html.html(),
                                            "buttons":
                                            [
                                                {
                                                    "label": "Cancel",
                                                    "cssClass": "btn-danger",
                                                    "action": function(d)
                                                    {
                                                        d.close();
                                                    }
                                                },
                                                {
                                                    "label": "Update",
                                                    "cssClass": "btn-primary",
                                                    "action": function(d)
                                                    {
                                                        var serialized = {"name": $.trim($(".emergency_info_name").first().val()), "phone": $.trim($(".emergency_info_phone").first().val())};
                                                        serialized = JSON.stringify(serialized);
                                                        $.post("/kv/emergency_info_" + user.identifier, {"value": serialized}).done(function()
                                                        {
                                                            d.close();
                                                        });
                                                    }
                                                }
                                            ]
                                        }
                                    );
                                });
                            })
                        )
                        .append
                        (
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-refresh").addClass("user_office_reassignment").attr("title", "Reassign " + user.first_name + " " + user.last_name + "'s office'")
                            .click(function()
                            {
                                var office_html = $("<div></div>");
                                $("<p></p>").text("Choose a new office:").appendTo(office_html);
                                var office_sel = $("<select></select>").attr("id", "office_reassignment");
                                $.each(resp.offices, function(iii, office)
                                {
                                    var opt = $("<option></option>").attr("value", office.identifier).text(office.name);
                                    if(office.identifier === user.office)
                                    {
                                        opt.attr("selected", "selected");
                                    }
                                    opt.appendTo(office_sel);
                                });
                                office_sel.appendTo(office_html);

                                BootstrapDialog.show
                                (
                                    {
                                        "title": "Reassign office",
                                        "message": office_html.html(),
                                        "buttons":
                                        [
                                            {
                                                "label": "Cancel",
                                                "cssClass": "btn-danger",
                                                "action": function(d)
                                                {
                                                    d.close();
                                                }
                                            },
                                            {
                                                "label": "OK",
                                                "cssClass": "btn-primary",
                                                "action": function(d)
                                                {
                                                    $.post("./data", {"fn": "user_office_reassignment", "identifier": user.identifier, "office": $("#office_reassignment").val()}).done(function(r2)
                                                    {
                                                        d.close();
                                                    });
                                                }
                                            }
                                        ]
                                    }
                                );
                            })
                        )
                        .append
                        (
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-pencil").addClass("directory_update_details")
                            .click(function()
                            {
                                var parent_div = $(this).parent().parent();
                                var update_html = $("<div></div>");
                                $("<p></p>").text("Email Address:").appendTo(update_html);
                                $("<input />").attr("type", "email").attr("value", user.email).appendTo(update_html);
                                $("<p></p>").text("Phone Number:").appendTo(update_html);
                                $("<input />").attr("type", "text").attr("value", user.phone.digits()).appendTo(update_html);
                                $("<p></p>").text("Address:").appendTo(update_html);
                                $("<input />").attr("type", "text").attr("value", user.address).appendTo(update_html);
                                $("<p></p>").text("City:").appendTo(update_html);
                                $("<input />").attr("type", "text").attr("value", user.city).appendTo(update_html);
                                $("<p></p>").text("State Abbreviation:").appendTo(update_html);
                                $("<input />").attr("type", "text").attr("value", user.state).appendTo(update_html);
                                $("<p></p>").text("Postal Code:").appendTo(update_html);
                                $("<input />").attr("type", "text").attr("value", user.postal).appendTo(update_html);

                                BootstrapDialog.show
                                (
                                    {
                                        "title": "Updating " + user.first_name + "'s details",
                                        "message": update_html.html(),
                                        "buttons":
                                        [
                                            {
                                                "label": "Cancel",
                                                "cssClass": "btn-danger",
                                                "action": function(d)
                                                {
                                                    d.close();
                                                }
                                            },
                                            {
                                                "label": "Save",
                                                "cssClass": "btn-primary",
                                                "action": function(d)
                                                {
                                                    var body = $(".bootstrap-dialog-body");
                                                    var email = $.trim(body.find("input").eq(0).val()).toLowerCase();
                                                    if(email.length < 3 || email.indexOf("@") === -1 || email.indexOf(".") === -1)
                                                    {
                                                        window.alert("The email address is malformed.");
                                                        return;
                                                    }
                                                    var phone = $.trim(body.find("input").eq(1).val().digits());
                                                    if(phone === null || phone.length !== 10)
                                                    {
                                                        window.alert("The phone number must be ten digits");
                                                        return;
                                                    }
                                                    var address = $.trim(body.find("input").eq(2).val());
                                                    if(address.length === 0)
                                                    {
                                                        window.alert("The rep must have an address");
                                                        return;
                                                    }
                                                    var city = $.trim(body.find("input").eq(3).val());
                                                    if(city.length === 0)
                                                    {
                                                        window.alert("The city is required");
                                                        return;
                                                    }
                                                    var state = $.trim(body.find("input").eq(4).val()).toUpperCase();
                                                    if(state.length !== 2)
                                                    {
                                                        window.alert("The state must be a 2-letter abbreviation");
                                                        return;
                                                    }
                                                    var postal = $.trim(body.find("input").eq(5).val()).digits();
                                                    if(postal === null || postal.length !== 5)
                                                    {
                                                        window.alert("The postal must be 5 digits");
                                                        return;
                                                    }

                                                    var p =
                                                    {
                                                        "fn": "directory_update_rep_details",
                                                        "email": email,
                                                        "phone": phone,
                                                        "address": address,
                                                        "city": city,
                                                        "state": state,
                                                        "postal": postal,
                                                        "identifier": user.identifier
                                                    };
                                                    $.post("./data", p).done(function(f)
                                                    {
                                                        parent_div.find(".directory_emp_email").find("a").text(email).attr("href", "mailto:" + email);
                                                        var formatted = "(" + phone[0] + phone[1] + phone[2] + ") " + phone[3] + phone[4] + phone[5] + "-" + phone[6] + phone[7] + phone[8] + phone[9];
                                                        parent_div.find(".directory_emp_phone").find("a").text(formatted).attr("href", "tel:" + phone);
                                                        var img = parent_div.find(".directory_emp_address").find("img").first().clone();
                                                        parent_div.find(".directory_emp_address").html(address + "<br />" + city + ", " + state + "<br />" + postal);
                                                        img.appendTo(parent_div.find(".directory_emp_address"));

                                                        d.close();
                                                    });
                                                }
                                            }
                                        ]
                                    }
                                );
                            })
                        )
                        .appendTo(usr_div);

                        $.each(resp.offices, function(iii, office)
                        {
                            if(office.identifier === user.office)
                            {
                                $("<span></span>").addClass("emp_user_office").text(office.name).appendTo(usr_div);
                            }
                        });

                        usr_div.append
                        (
                            $("<span></span>").addClass("directory_emp_reset").html("&gt; Reset Password &lt;")
                            .click(function()
                            {
                                if(window.confirm("Are you sure you would like to reset " + user.first_name + " " + user.last_name + "'s password"))
                                {
                                    var pwd = window.prompt("Enter the user's new password: (5 characters or more)");
                                    if(typeof(pwd) + '' !== "undefined")
                                    {
                                        if(pwd !== null)
                                        {
                                            if(pwd.length >= 5)
                                            {
                                                $.post("./data", {"fn": "user_manual_password_reset", "pass": pwd, "identifier": user.identifier}).done(function(r)
                                                {
                                                    BootstrapDialog.alert("The user's password has been reset to the value of '" + pwd + "'.");
                                                });
                                            }
                                            else
                                            {
                                                window.alert("The password must be 5 characters or greater.");
                                            }
                                        }
                                    }
                                }
                            })
                        );


                        usr_div.append
                        (
                            $("<span></span>").addClass("directory_emp_phone")
                            .append
                            (
                                $("<a></a>").text(user.phone).attr("href", "tel:" + user.phone.replace("(", "").replace(")", "").replace("-", ""))
                            )
                        );

                        usr_div.append
                        (
                            $("<span></span>").addClass("directory_emp_email")
                            .append
                            (
                                $("<a></a>").text(user.email).attr("href", "mailto:" + user.email).text(user.email)
                            )
                        );
                        var manager_cb = $("<input />").attr("type", "checkbox");
                        if(user.manager)
                        {
                            manager_cb.attr("checked", "checked");
                        }
                        manager_cb.change(function()
                        {
                            var that = $(this);
                            that.css("opacity", "0.2");
                            $.post("/data", {"fn": "user_manager_assignment", "identifier": user.identifier, "manager": (that[0].checked * 1) + ''}).done(function()
                            {
                                that.css("opacity", "1.0");
                            });
                        });                                                
                        usr_div.append
                        (
                            $("<span></span>").addClass("directory_emp_manager")
                            .text("Manager?")
                            .append
                            (
                                manager_cb
                            )
                        );
                        if(user.user_type === "field" || user.user_type === "solar_pro" || user.user_type === "solar_pro_manager" || user.user_type === "energy_expert" || user.user_type === "sales_manager")
                        {

                            $("<button></button>").addClass("label").addClass("label-warning").addClass("directory_emp_pin_check").text("Active Pins Count")
                            .click(function()
                            {
                                var that = $(this);
                                that.css("opacity", "0.2");
                                that.text("Checking...");
                                $.post("/data2", {"fn": "active_pin_count_query", "identifier": user.identifier}).done(function(rrr)
                                {
                                    that.css("opacity", "1.0");
                                    that.text((rrr.pins + '') + " pins");
                                    setTimeout(function()
                                    {
                                        that.text("Active Pins Count")
                                    }, 5000);
                                });
                            })
                            .appendTo(usr_div);

                            var user_type_sel = $("<select></select>").addClass("emp_directory_user_type_sel");
                            $("<option></option>").attr("value", "n/a").text("Choose One").appendTo(user_type_sel);
                            $("<option></option>").attr("value", "solar_pro").text("Solar Pro").appendTo(user_type_sel);
                            $("<option></option>").attr("value", "solar_pro_manager").text("Solar Pro Manager").appendTo(user_type_sel);
                            $("<option></option>").attr("value", "energy_expert").text("Energy Expert").appendTo(user_type_sel);
                            $("<option></option>").attr("value", "sales_manager").text("Sales Manager").appendTo(user_type_sel);

                            user_type_sel.find("option").each(function(iii, eee)
                            {
                                if($(eee).attr("value") === user.user_type)
                                {
                                    $(eee).attr("selected", "selected");
                                }
                            });

                            user_type_sel.change(function()
                            {
                                user_type_sel.css("opacity", "0.1");
                                $.post("/data2", {"fn": "update_user_type", "identifier": user.identifier, "type": user_type_sel.val()}).done(function(r)
                                {
                                    user_type_sel.css("opacity", "1.0");
                                });
                            });
                            user_type_sel.appendTo(usr_div);
                        }
                        if(user.user_type === "solar_pro" || user.user_type === "solar_pro_manager")
                        {
                            usr_div.append
                            (
                                $("<span></span>").addClass("label").addClass("label-primary").addClass("payment_customization_label").text("Customize Compensation")
                                .click(function()
                                {
                                    $.post("/data2", {"fn": "get_payment_customizations_for_user", "identifier": user.identifier}).done(function(customization)
                                    {
                                        var html = $("<div></div>");
                                        $("<hr />").appendTo(html);
                                        $("<p></p>").text("Pay Per HK:").appendTo(html);
                                        var input = $("<input />").addClass("price_per_hk").attr("type", "text").attr("placeholder", "$12.00");
                                        if(customization.price_per_hk !== null)
                                        {
                                            input.val(customization.price_per_hk).attr("value", customization.price_per_hk);
                                        }
                                        input.appendTo(html);
                                        $("<hr />").appendTo(html);
                                        
                                        $("<p></p>").text("Pay Per Install:").appendTo(html);
                                        var input2 = $("<input />").addClass("pay_per_install").attr("type", "text").attr("placeholder", "$100.00");
                                        if(customization.install_pay !== null)
                                        {
                                            input2.val(customization.install_pay).attr("value", customization.install_pay);
                                        }
                                        input2.appendTo(html);
                                        $("<hr />").appendTo(html);

                                        $("<p></p>").text("Pay Per KW on Install:").appendTo(html);
                                        var input3 = $("<input />").addClass("pay_per_install_kw").attr("type", "text").attr("placeholder", "$100.00");
                                        if(customization.install_per_kw_pay !== null)
                                        {
                                            input3.val(customization.install_per_kw_pay).attr("value", customization.install_per_kw_pay);
                                        }
                                        input3.appendTo(html);
                                        $("<hr />").appendTo(html);

                                        BootstrapDialog.show
                                        (
                                            {
                                                "title": "Customizing " + user.first_name + "'s Pay",
                                                "message": html.html(),
                                                "buttons":
                                                [
                                                    {
                                                        "label": "Cancel",
                                                        "cssClass": "btn-danger",
                                                        "action": function(d)
                                                        {
                                                            d.close();
                                                        }
                                                    },
                                                    {
                                                        "label": "Update Pay Per HK",
                                                        "cssClass": "btn-primary",
                                                        "action": function(d)
                                                        {
                                                            var new_value = $.trim($(".price_per_hk").first().val());
                                                            while(new_value.indexOf("$") > -1)
                                                            {
                                                                new_value = new_value.replace("$", "");
                                                            }
                                                            while(new_value.indexOf(",") > -1)
                                                            {
                                                                new_value = new_value.replace(",", "");
                                                            }

                                                            $.post("/kv/" + encodeURIComponent("pay_per_hk_" + user.identifier), {"value": new_value}).done(function()
                                                            {
                                                                d.close();
                                                            });
                                                        }
                                                    },
                                                    {
                                                        "label": "Update Pay Per Install",
                                                        "cssClass": "btn-primary",
                                                        "action": function(d)
                                                        {
                                                            var new_value = $.trim($(".pay_per_install").first().val());
                                                            while(new_value.indexOf("$") > -1)
                                                            {
                                                                new_value = new_value.replace("$", "");
                                                            }
                                                            while(new_value.indexOf(",") > -1)
                                                            {
                                                                new_value = new_value.replace(",", "");
                                                            }

                                                            $.post("/kv/" + encodeURIComponent("pay_per_install_" + user.identifier), {"value": new_value}).done(function()
                                                            {
                                                                d.close();
                                                            });
                                                        }
                                                    },
                                                    {
                                                        "label": "Update Pay Per Install (Per KW)",
                                                        "cssClass": "btn-primary",
                                                        "action": function(d)
                                                        {
                                                            var new_value = $.trim($(".pay_per_install_kw").first().val());
                                                            while(new_value.indexOf("$") > -1)
                                                            {
                                                                new_value = new_value.replace("$", "");
                                                            }
                                                            while(new_value.indexOf(",") > -1)
                                                            {
                                                                new_value = new_value.replace(",", "");
                                                            }

                                                            $.post("/kv/" + encodeURIComponent("pay_per_install_per_kw_" + user.identifier), {"value": new_value}).done(function()
                                                            {
                                                                d.close();
                                                            });
                                                        }
                                                    }
                                                ]
                                            }
                                        )
                                    });
                                })
                            )
                            .appendTo(usr_div);
                        }
                        else if(user.user_type === "sales_manager" || user.user_type === "energy_expert")
                        {
                            usr_div.append
                            (
                                $("<span></span>").addClass("label").addClass("label-primary").addClass("payment_customization_label").text("Customize Compensation")
                                .click(function()
                                {
                                    $.post("/data2", {"fn": "get_payment_customizations_for_user", "identifier": user.identifier}).done(function(customization)
                                    {
                                        var html = $("<div></div>");
                                        $("<hr />").appendTo(html);
                                        $("<p></p>").text("Per KW Commission for Self-Gen Sales:").appendTo(html);
                                        var self_gen_input = $("<input />").attr("type", "text").addClass("self_gen_customize");
                                        if(customization.commission_per_self_gen_sale !== null)
                                        {
                                            self_gen_input.val(customization.commission_per_self_gen_sale).attr("value", customization.commission_per_self_gen_sale);
                                        }
                                        self_gen_input.appendTo(html);
                                        $("<hr />").appendTo(html);
                                        $("<hr />").appendTo(html);
                                        $("<p></p>").text("Per KW Commission for Sales Generated by Solar Pros:").appendTo(html);
                                        var lead_input = $("<input />").attr("type", "text").addClass("solar_pro_customize");
                                        if(customization.commission_per_lead_sale !== null)
                                        {
                                            lead_input.val(customization.commission_per_lead_sale).attr("value", customization.commission_per_lead_sale);
                                        }
                                        lead_input.appendTo(html);
                                        $("<hr />").appendTo(html);

                                        BootstrapDialog.show
                                        (
                                            {
                                                "title": "Customizing " + user.first_name + "'s Pay",
                                                "message": html.html(),
                                                "buttons":
                                                [
                                                    {
                                                        "label": "Cancel",
                                                        "cssClass": "btn-danger",
                                                        "action": function(d)
                                                        {
                                                            d.close();
                                                        }
                                                    },
                                                    {
                                                        "label": "Update Self-Gen Commission",
                                                        "cssClass": "btn-primary",
                                                        "action": function(d)
                                                        {
                                                            var new_value = $.trim($(".self_gen_customize").first().val());
                                                            while(new_value.indexOf("$") > -1)
                                                            {
                                                                new_value = new_value.replace("$", "");
                                                            }
                                                            while(new_value.indexOf(",") > -1)
                                                            {
                                                                new_value = new_value.replace(",", "");
                                                            }

                                                            $.post("/kv/" + encodeURIComponent("commission_per_self_gen_sale_" + user.identifier), {"value": new_value}).done(function()
                                                            {
                                                                d.close();
                                                            });
                                                        }
                                                    },
                                                    {
                                                        "label": "Update Commission (Solar Pro Generated Sales)",
                                                        "cssClass": "btn-primary",
                                                        "action": function(d)
                                                        {
                                                            var new_value = $.trim($(".solar_pro_customize").first().val());
                                                            while(new_value.indexOf("$") > -1)
                                                            {
                                                                new_value = new_value.replace("$", "");
                                                            }
                                                            while(new_value.indexOf(",") > -1)
                                                            {
                                                                new_value = new_value.replace(",", "");
                                                            }

                                                            $.post("/kv/" + encodeURIComponent("commission_per_lead_sale_" + user.identifier), {"value": new_value}).done(function()
                                                            {
                                                                d.close();
                                                            });
                                                        }
                                                    }
                                                ]
                                            }
                                        );
                                    });
                                })
                            );
                        }
                        $("<span></span>").addClass("reg_date_e_d").text("With company since " + moment(user.registration_date, "YYYY-MM-DD").format("MM/DD/YYYY")).appendTo(usr_div);
                        var pm_cb = $("<input />").attr("type", "checkbox");
                        if(user.project_manager)
                        {
                            pm_cb.attr("checked", "checked");
                        }
                        pm_cb.change(function()
                        {
                            var that = $(this);
                            that.css("opacity", "0.2");
                            $.post("/data", {"fn": "user_pm_assignment", "identifier": user.identifier, "pm": (that[0].checked * 1) + ''}).done(function()
                            {
                                that.css("opacity", "1.0");
                            });
                        });

                        var lead_cb = $("<input />").attr("type", "checkbox");
                        if(user.accepts_leads)
                        {
                            lead_cb.attr("checked", "checked");
                        }
                        lead_cb.change(function()
                        {
                            var that = $(this);
                            that.css("opacity", "0.2");
                            $.post("/data2", {"fn": "accepts_leads_assignment", "identifier": user.identifier, "accepts_leads": (that[0].checked * 1) + ''}).done(function()
                            {
                                that.css("opacity", "1.0");
                            });
                        });

                        usr_div.append($("<div></div>").css("margin-top", "0.25em"));
                        if(user.user_type === "super")
                        {
                            usr_div.append
                            (
                                $("<span></span>").addClass("directory_emp_pm")
                                .text("PM?")
                                .append
                                (
                                    pm_cb
                                )
                            );
                        }
                        if(user.user_type !== "super" && user.user_type !== "solar_pro" && user.user_type !== "solar_pro_manager")
                        {
                            usr_div.append
                            (
                                $("<span></span>").addClass("directory_emp_accepts_leads")
                                .text("Accepts Leads?")
                                .append
                                (
                                    lead_cb
                                )
                            );
                        }                        
                        
                        usr_div.append
                        (
                            $("<p></p>").addClass("directory_emp_address").html(user.address + "<br />" + user.city + ", " + user.state + "<br />" + user.postal)
                            .append
                            (
                                $("<img />").addClass("img").addClass("img-responsive").attr("src", "//storage.googleapis.com/" + window.app_bucket + "/Images/ProfilePictures/Thumb/" + user.identifier + ".jpg")
                            )
                        );

                        usr_div.appendTo(directory_div);
                    });
                    directory_div.appendTo(inner_row);
                    spacer.appendTo(inner_row);

                    inner_row.appendTo(app_area);
                });
            }
            function showProposalSearchBox()
            {
                var app_area = $("#app_area");
                var search_proposal_div = $("<div></div>").addClass("row").addClass("search_proposal_outer");
                $("<h3></h>").text("Customer Proposals:").appendTo(search_proposal_div);
                var search_box = $("<input />").attr("type", "text").attr("id", "cust_proposal_sbox").attr("placeholder", "Search for a customer by name...");

                search_box.on("keyup", function(ev)
                {
                    if(ev.keyCode === 13)
                    {
                        setTimeout(function()
                        {
                            search_box[0].blur();
                        }, 50);
                    }
                });
                search_box.on("blur", function()
                {
                    doCustomerProposalSearch(search_box);
                });

                var sbox_wrapper = $("<div></div>").addClass("search_proposal_sbox_wrapper");
                sbox_wrapper.append(search_box);

                sbox_wrapper.appendTo(search_proposal_div);
                app_area.append(search_proposal_div);
            }
            function doCustomerProposalSearch(search_box)
            {
                var query = $.trim(search_box.val())
                if(query.length === 0)
                {
                    return;
                }
                search_box.val("Searching...");
                setTimeout(function()
                {
                    $.post("./data", {"fn": "search_customers_by_name","query": query}).done(function(resp)
                    {
                        $(".cust_proposal_search_result").remove();
                        $(".customer_search_results_notation").remove();
                        search_box.val("");
                        var placeholder = "";
                        if(resp.results.length === 0)
                        {
                            placeholder = "No results for '" + query + "', try again...";
                        }
                        else
                        {
                            $("<div></div>").addClass("customer_search_results_notation").text("Search Results").prepend($("<span></span>").addClass("glyphicon").addClass("glyphicon-search")).insertAfter(search_box.parent());
                            placeholder = "Showing results for '" + query + "'...";
                        }
                        search_box.attr("placeholder", placeholder);

                        $.each(resp.results, function(i, result)
                        {
                            var result_div = $("<div></div>").addClass("row").addClass("cust_proposal_search_result").attr("title", "Proposal info for " + result.name);
                            result_div.attr("id", "cust_proposal_identifier_of_" + result.identifier);

                            var customer_proposal_div = $("<div></div>").addClass("col-xs-6").addClass("col-sm-6").addClass("col-md-6").addClass("col-lg-6");
                            customer_proposal_div.text(result.name)
                            .append
                            (
                                $("<span></span>").addClass("glyphicon").addClass("glyphicon-pencil").addClass("proposal_name_edit")
                                .click(function(ev)
                                {
                                    ev.stopPropagation();
                                    editCustomerName(result);
                                })
                            )
                            .append
                            (
                                $("<span></span>").addClass("glyphicon").addClass("symbola").addClass("proposal_reconfigure_usage").html("&#9889;").click(function(ev)
                                {
                                    ev.stopPropagation();
                                    resubUsageInfo(result);
                                })
                            );
                            customer_proposal_div.appendTo(result_div);

                            result_div.click(function()
                            {
                                loadProposalInfoForCustomer(result.identifier, result.name);
                            });

                            result_div.insertAfter(search_box.parent().parent());
                        });
                    });

                }, 200);
            }
            function loadProposalInfoForCustomer(field_app_identifier, name)
            {
                var proposal_result_div = $("<div></div>").addClass("proposal_result_div").addClass("row");
                $("<h3></h3>").addClass("proposal_name").text(name + "'s Proposal...").appendTo(proposal_result_div);
                $("<hr />").appendTo(proposal_result_div);

                var field_info =
                {
                    "twelve_month_amount_average":
                    {
                        "type": "real_number",
                        "secondary_type": "monetary",
                        "title": "12-Month Dollar Amount Average",
                        "input_filter": function(el)
                        {
                            var new_txt = "";
                            var txt = $.trim(el.val());
                            var allowed_chars = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "."];
                            $.each(txt.split(""), function(i, char)
                            {
                                if(allowed_chars.indexOf(char) > -1)
                                {
                                    if(new_txt.indexOf(".") === -1 && char === ".")
                                    {
                                        new_txt += char;
                                    }
                                    else
                                    {
                                        if(char !== ".")
                                        {
                                            new_txt += char;
                                        }
                                    }
                                }
                            });
                            el.val(new_txt);
                        }
                    },
                    "system_size":
                    {
                        "type": "real_number",
                        "secondary_type": "none",
                        "title": "System Size",
                        "input_filter": function(el)
                        {
                            var new_txt = "";
                            var txt = $.trim(el.val());
                            var allowed_chars = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "."];
                            $.each(txt.split(""), function(i, char)
                            {
                                if(allowed_chars.indexOf(char) > -1)
                                {
                                    if(new_txt.indexOf(".") === -1 && char === ".")
                                    {
                                        new_txt += char;
                                    }
                                    else
                                    {
                                        if(char !== ".")
                                        {
                                            new_txt += char;
                                        }
                                    }
                                }
                            });
                            el.val(new_txt);
                        }
                    },
                    "offset_percentage":
                    {
                        "type": "real_number",
                        "secondary_type": "percentage",
                        "title": "Offset Percentage",
                        "input_filter": function(el)
                        {
                            var new_txt = "";
                            var txt = $.trim(el.val());
                            var allowed_chars = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "."];
                            $.each(txt.split(""), function(i, char)
                            {
                                if(allowed_chars.indexOf(char) > -1)
                                {
                                    if(new_txt.indexOf(".") === -1 && char === ".")
                                    {
                                        new_txt += char;
                                    }
                                    else
                                    {
                                        if(char !== ".")
                                        {
                                            new_txt += char;
                                        }
                                    }
                                }
                            });
                            try
                            {
                                if(parseInt(new_txt) > 100)
                                {
                                    new_txt = "100";
                                }
                            }
                            catch(eae)
                            {
                            }

                            el.val(new_txt);
                        }
                    },
                    "financing_type":
                    {
                        "type": "multiple_choice",
                        "secondary_type": "dropdown",
                        "choices":
                        [
                            "PPA",
                            "Loan"
                        ],
                        "title": "Financing Type"
                    },
                    "new_utility_bill":
                    {
                        "type": "real_number",
                        "secondary_type": "monetary",
                        "title": "New Utility Bill",
                        "input_filter": function(el)
                        {
                            var new_txt = "";
                            var txt = $.trim(el.val());
                            var allowed_chars = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "."];
                            $.each(txt.split(""), function(i, char)
                            {
                                if(allowed_chars.indexOf(char) > -1)
                                {
                                    if(new_txt.indexOf(".") === -1 && char === ".")
                                    {
                                        new_txt += char;
                                    }
                                    else
                                    {
                                        if(char !== ".")
                                        {
                                            new_txt += char;
                                        }
                                    }
                                }
                            });
                            el.val(new_txt);
                        }

                    },
                    "solar_bill_interest_only":
                    {
                        "type": "real_number",
                        "secondary_type": "monetary",
                        "title": "Solar Bill Interest Only",
                        "input_filter": function(el)
                        {
                            var new_txt = "";
                            var txt = $.trim(el.val());
                            var allowed_chars = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "."];
                            $.each(txt.split(""), function(i, char)
                            {
                                if(allowed_chars.indexOf(char) > -1)
                                {
                                    if(new_txt.indexOf(".") === -1 && char === ".")
                                    {
                                        new_txt += char;
                                    }
                                    else
                                    {
                                        if(char !== ".")
                                        {
                                            new_txt += char;
                                        }
                                    }
                                }
                            });
                            el.val(new_txt);
                        },
                        "excludable": true
                    },
                    "solar_bill_with_federal_tax_credit":
                    {
                        "type": "real_number",
                        "secondary_type": "monetary",
                        "title": "Solar Bill with Only Federal Tax Credit",
                        "input_filter": function(el)
                        {
                            var new_txt = "";
                            var txt = $.trim(el.val());
                            var allowed_chars = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "."];
                            $.each(txt.split(""), function(i, char)
                            {
                                if(allowed_chars.indexOf(char) > -1)
                                {
                                    if(new_txt.indexOf(".") === -1 && char === ".")
                                    {
                                        new_txt += char;
                                    }
                                    else
                                    {
                                        if(char !== ".")
                                        {
                                            new_txt += char;
                                        }
                                    }
                                }
                            });
                            el.val(new_txt);
                        },
                        "excludable": true
                    },
                    "solar_bill_with_all_incentives":
                    {
                        "type": "real_number",
                        "secondary_type": "monetary",
                        "title": "Solar Bill with All Incentives",
                        "input_filter": function(el)
                        {
                            var new_txt = "";
                            var txt = $.trim(el.val());
                            var allowed_chars = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "."];
                            $.each(txt.split(""), function(i, char)
                            {
                                if(allowed_chars.indexOf(char) > -1)
                                {
                                    if(new_txt.indexOf(".") === -1 && char === ".")
                                    {
                                        new_txt += char;
                                    }
                                    else
                                    {
                                        if(char !== ".")
                                        {
                                            new_txt += char;
                                        }
                                    }
                                }
                            });
                            el.val(new_txt);
                        },
                    },
                    "docusign_code":
                    {
                        "type": "plain_text",
                        "secondary_type": "none",
                        "title": "Docusign Code",
                        "excludable": true
                    },
                    "cad_photo":
                    {
                        "type": "file",
                        "secondary_type": "none",
                        "title": "CAD Photo"
                    },
                    "paperwork_pdf":
                    {
                        "type": "file",
                        "secondary_type": "none",
                        "title": "Paperwork PDF"
                    },
                    "term":
                    {
                        "type": "multiple_choice",
                        "secondary_type": "dropdown",
                        "choices":
                        [
                            "12-Year",
                            "20-Year",
                            "25-Year"
                        ],
                        "title": "Term"
                    }
                };

                $.post("./data", {"fn": "pull_proposal_info_for_customer", "identifier": field_app_identifier}).done(function(resp)
                {
                    var info = resp.proposal_info.info;
                    var items = [];
                    var keys = Object.keys(field_info);

                    $.each(keys, function(i, key)
                    {
                        var container = $("<div></div>").addClass("col-xs-12").addClass("col-sm-12").addClass("col-md-12").addClass("col-lg-12").attr("data-key", key);
                        $("<input />").attr("type", "hidden").addClass("keyname").attr("value", key).appendTo(container);
                        $("<p></p>").addClass("proposal_input_prompt_title").text(field_info[key].title + ":").appendTo(container);
                        container.addClass("prop_item");
                        container.addClass("type_" + field_info[key].type);

                        switch(field_info[key].type)
                        {
                            case "real_number":
                                var dolla_input = $("<input />").attr("type", "text").attr("placeholder", "XXXX.XX").addClass("txtinput");
                                var dolla_span = $("<span></span>").addClass("proposal_dolla").text("$");
                                dolla_input.on("blur", function(ev)
                                {
                                    field_info[key].input_filter($(this));
                                });
                                dolla_span.appendTo(container);
                                dolla_input.appendTo(container);
                                if((typeof(info[key]) + '') !== "undefined")
                                {
                                    if(info[key] !== "excluded")
                                    {
                                        dolla_input.val(info[key]).attr("value", info[key]);
                                    }
                                }
                                break;

                            case "plain_text":
                                var txtinput = $("<input />").attr("type", "text").addClass("txtinput").attr("placeholder", "abc");
                                if(typeof(info[key]) + '' !== "undefined")
                                {
                                    if(info[key] !== "excluded")
                                    {
                                        txtinput.attr("value", info[key]).val(info[key]);
                                    }
                                }
                                txtinput.appendTo(container);
                                break;

                            case "multiple_choice":
                                var dropdown = $("<div></div>").addClass("dropdown");
                                $("<button></button>").attr("type", "button").text("Choose One").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("data-toggle", "dropdown")
                                .append
                                (
                                    $("<span></span>").addClass("caret")
                                ).appendTo(dropdown);

                                var ul = $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu");
                                $.each(field_info[key].choices, function(k, choice)
                                {
                                    var li = $("<li></li>").attr("role", "presentation").attr("id", "choice_of_" + choice);
                                    var a = $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);");
                                    a.text(choice);

                                    a.appendTo(li);
                                    li.click(function()
                                    {
                                        $(this).parent().parent().find(".btn").text($(this).text());
                                        $("<span></span>").addClass("caret").appendTo($(this).parent().parent().find(".btn"));
                                        $(this).parent().parent().find("input").last().val($(this).find("a").text());
                                    });

                                    li.appendTo(ul);
                                });
                                ul.appendTo(dropdown);
                                dropdown.append
                                (
                                    $("<input />").attr("type", "hidden").attr("value", "n/a")
                                );
                                dropdown.appendTo(container);
                                if((typeof(info[key]) + '') !== "undefined")
                                {
                                    if(info[key] !== "excluded")
                                    {
                                        dropdown.find("li").each(function(k, e)
                                        {
                                            if($(e).attr("id").replace("choice_of_", "") === info[key])
                                            {
                                                $(e).trigger("click");
                                            }
                                        });
                                    }
                                }
                                break;

                            case "file":
                                if((typeof(info[key]) + '').toLowerCase() === "object")
                                {
                                    $("<a></a>").text("Current File").attr("href", "//storage.googleapis.com/" + window.app_bucket + "/ProposalBlobs/" + field_app_identifier + "_" + key + "." + info[key].extension).attr("target", "_blank").appendTo(container);
                                }
                                $("<input />").addClass("fileinput").attr("type", "file").appendTo(container);
                                break;

                            default:
                                break;
                        }
                        switch(field_info[key].secondary_type)
                        {
                            case "monetary":
                                break;

                            case "percentage":
                                container.find(".proposal_dolla").text("%");
                                break;
                            case "none":
                                container.find(".proposal_dolla").css("opacity", "0.0");
                                break;

                            case "default":
                                break;
                        }
                        if(field_info[key].excludable)
                        {
                            $("<p></p>").text("Mark as not applicable").addClass("exclude_notation")
                            .append
                            (
                                $("<input />").attr("type", "checkbox").addClass("excludable_cb")
                                .on("change", function()
                                {
                                    var checked = $(this)[0].checked;
                                    if(checked)
                                    {
                                        $(this).closest(".col-xs-12").css("opacity", "0.2").addClass("excluded");
                                    }
                                    else
                                    {
                                        $(this).closest(".col-xs-12").removeAttr("style").removeClass("excluded");
                                    }

                                })
                            ).appendTo(container);
                            if(info[key] === "excluded")
                            {
                                container.find(".excludable_cb")[0].checked = true;
                                container.find(".excludable_cb").trigger("change");
                            }

                        }
                        $("<hr />").appendTo(container);
                        items.push(container);
                    });

                    $.each(items, function(i, item)
                    {
                        item.appendTo(proposal_result_div);
                    });
                    $("<input />").attr("type", "hidden").attr("id", "proposal_version").attr("value", resp.proposal_info.version + '').val(resp.proposal_info.version + '').appendTo(proposal_result_div);
                    $("<button></button>").addClass("btn").addClass("btn-success").text("Save").click(function()
                    {
                        saveProposal(field_app_identifier);
                    }).appendTo(proposal_result_div);
                    proposal_result_div.insertAfter($("#cust_proposal_identifier_of_" + field_app_identifier));
                });
            }
            function saveProposal(field_app_identifier, admin_qualifier)
            {
                if(typeof(admin_qualifier) + '' === "undefined")
                {
                    admin_qualifier = false;
                }
                var has_cad_photo = false;
                $(".keyname").each(function(i, e)
                {
                    if($(e).val() === "cad_photo")
                    {
                        var file_input = $(e).nextAll("input").first();
                        if(file_input.val().length > 0)
                        {
                            has_cad_photo = true;
                        }
                    }
                });
                
                var has_fund_proposal = false;
                //$("#cust_proposal_identifier_of_" + field_app_identifier).find(".keyname").each(function(i, e)
                $(".keyname").each(function(i ,e)
                {
                    if($(e).val() === "fund_proposal")
                    {
                        var file_input = $(e).nextAll("input").first();
                        if(file_input.val().length > 0)
                        {
                            has_fund_proposal = true;
                        }
                    }
                });

                if(admin_qualifier)
                {
                    var offset_val = null;
                    var utility_bill_val = null;
                    var ret_early = false;
                    $(".keyname").each(function(i, e)
                    {
                        if($(e).val() === "has_utility_bill_after_solar")
                        {
                            utility_bill_val = $(e).nextAll(".dropdown").eq(0).find("input").val();
                        }                        
                        if($(e).val() === "system_size" && $.trim($(e).nextAll("input").eq(0).val()) === "")
                        {
                            if(!ret_early)
                            {
                                window.alert("You must specify the system size");
                                ret_early = true;
                            }
                        }

                        if($(e).val() === "panel_type" && $(e).nextAll(".dropdown").eq(0).find("input").val() === "n/a")
                        {
                            if(!ret_early)
                            {
                                window.alert("You must specify the type of panel/module");
                                ret_early = true;
                            }
                        }

                        if($(e).val() === "panel_qty" && $.trim($(e).nextAll("input").eq(0).val()) === "")
                        {
                            if(!ret_early)
                            {
                                window.alert("You must specify the quantity for the panel/module");
                                ret_early = true;
                            }
                        }

                        if($(e).val() === "panel_qty" && parseInt($.trim($(e).nextAll("input").eq(0).val())) < 10)
                        {
                            if(!ret_early)
                            {
                                window.alert("The minimum panel quantity is 10");
                                ret_early = true;
                            }
                        }

                        if($(e).val() === "inverter_type" && $(e).nextAll(".dropdown").eq(0).find("input").val() === "n/a")
                        {
                            if(!ret_early)
                            {
                                window.alert("You must choose an inverter type");
                                ret_early = true;
                            }
                        }

                        /*if($(e).val() === "inverter_qty" && $.trim($(e).nextAll("input").eq(0).val()) === "")
                        {
                            if(!ret_early)
                            {
                                window.alert("You must specify the quantity for the inverter");
                                ret_early = true;
                            }
                        }*/

                        if($(e).val() === "racking" && $(e).nextAll(".dropdown").eq(0).find("input").val() === "n/a")
                        {
                            if(!ret_early)
                            {
                                window.alert("You must specify the racking option");
                                ret_early = true;
                            }
                        }

                        if($(e).val() === "year_one_production" && $.trim($(e).nextAll("input").eq(0).val()) === "")
                        {
                            if(!ret_early)
                            {
                                window.alert("You must specify the estimated KwH production");
                                ret_early = true;
                            }
                        }
                    });
                    if(ret_early)
                    {
                        return;
                    }

                    if(utility_bill_val === "Yes")
                    {

                        $(".keyname").each(function(i, e)
                        {
                            if($(e).val() === "utility_bill_after_solar" && $.trim($(e).nextAll("input").eq(0).val()) === "")
                            {
                                if(!ret_early)
                                {
                                    window.alert("You must specify the utility bill after solar amount");
                                    ret_early = true;
                                }
                            }
                        });
                        if(ret_early)
                        {
                            return;
                        }
                    }


                    if(!has_cad_photo && $(".cad_photo_" + field_app_identifier).size() === 0)
                    {
                        window.alert("The CAD Photo is required");
                        return;
                    }
                    if(!has_fund_proposal && $(".proposal_root_div_key_of_fund_proposal").size() > 0)
                    {
                        if($(".fund_proposal_" + field_app_identifier).size() === 0)
                        {
                            window.alert("The fund proposal is required.");
                            return;
                        }                        
                    }
                }

                var data = {};
                data["fields"] = {};
                data["field_app_identifier"] = field_app_identifier;
                data["version"] = $("#proposal_version").val();

                
                var proposal_items = $(".proposal_result_div").find("> .col-xs-12");
                if(admin_qualifier)
                {
                    proposal_items = $(".proposal_result_div").find("> .prop_item");
                }
                proposal_items.each(function(i, e)
                {
                    if($(e).css("display").toLowerCase() === "none")
                    {
                        return;
                    }

                    var classnames = $(e).attr("class").split(" ");
                    var type = classnames[classnames.length - 1].replace("type_", "");
                    var key = $(e).find(".keyname").val();

                    if($(e).hasClass("excluded"))
                    {
                        data["fields"][key] = "excluded";
                        return;
                    }

                    if(type !== "file")
                    {
                        switch(type)
                        {
                            case "real_number":
                                data["fields"][key] = $(e).find(".txtinput").val();
                                break;

                            case "plain_text":
                                data["fields"][key] = $(e).find(".txtinput").val();
                                break;

                            case "multiple_choice":
                                data["fields"][key] = $(e).find("input").last().val();
                                break;

                            default:
                                break;
                        }
                    }
                });

                data["fields"]["inverter_qty"] = "1";

                var formData = new FormData();
                formData.append("field_app_identifier", field_app_identifier);
                formData.append("version", data.version);
                formData.append("fields", JSON.stringify(data.fields));

                has_cad_photo *= 1;
                has_cad_photo += '';

                admin_qualifier *= 1;
                admin_qualifier += '';
                var has_cad_photo2 = has_cad_photo;
                has_cad_photo2 *= 1;
                has_cad_photo2 += '';

                has_fund_proposal *= 1;
                has_fund_proposal += '';
                formData.append("has_cad_photo", has_cad_photo2);
                formData.append("has_fund_proposal", has_fund_proposal);
                formData.append("admin_qualifier", admin_qualifier);
                
                if(has_cad_photo2 === "1")
                {
                    formData.append("cad_photo", $(".proposal_root_div_key_of_cad_photo").find(".fileinput").eq(0)[0].files[0]);
                }
                if(has_fund_proposal === "1")
                {
                    formData.append("fund_proposal", $(".proposal_root_div_key_of_fund_proposal").find(".fileinput").eq(0)[0].files[0]);
                }
                var spruce_image_hack = "0";
                if($("#spruce_image_hack").size() > 0 && $("#spruce_image_hack").val() === "1")
                {
                    spruce_image_hack = "1";
                }
                formData.append("spruce_image_hack", spruce_image_hack);

                if(!admin_qualifier)
                {
                    var has_paperwork_pdf = ($(".fileinput").eq(1).val().length > 0);
                    has_paperwork_pdf *= 1;
                    has_paperwork_pdf += '';
                    formData.append("has_paperwork_pdf", has_paperwork_pdf);
                    if(has_paperwork_pdf === "1")
                    {
                        formData.append("paperwork_pdf", $(".fileinput").eq(1)[0].files[0]);
                    }
                }

                var xhr = new XMLHttpRequest();
                (xhr.upload || xhr).addEventListener("progress", function(e)
                {
                    var done = e.position || e.loaded
                    var total = e.totalSize || e.total;
                    var completion_percentage = (Math.round(done/total*100) + '') + "%";
                    //$("#post_note_btn_msg").html("&nbsp;&nbsp;&nbsp;&nbsp;" + completion_percentage);
                    $(".proposal_result_div").find(".btn-success").text(completion_percentage);

                });

                xhr.addEventListener("load", function(e)
                {
                    if(admin_qualifier)
                    {
                        $(".proposal_result_div").remove();
                        $("#cust_proposal_identifier_of_" + field_app_identifier).remove();
                        if(data["fields"]["configure_system_options"] === "Yes")
                        {
                            modifyAdditionalServices2(field_app_identifier, function(){});
                        }
                    }
                });

                xhr.open("POST", "./data?fn=save_proposal_info");
                xhr.send(formData);
            }
            function missingPacketTool()
            {
                var app_area = $("#app_area");

                var container = $("<div></div>").addClass("row");

                var dropdown = $("<div></div>").addClass("dropdown").addClass("missing_packet_dropdown");
                var btn = $("<button></button>").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("type", "button").attr("aria-expanded", "true").attr("data-toggle", "dropdown");
                btn.text("Choose a query")
                .append
                (
                    $("<span></span>").addClass("caret")
                );

                btn.appendTo(dropdown);

                var choices_ul = $("<ul></ul>").attr("role", "menu").addClass("dropdown-menu");

                $("<li></li>").attr("role", "presentation").attr("id", "unfinished_surveys")
                .append
                (
                    $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);")
                    .text
                    (
                        "Surveys that were not marked as completed"
                    )
                ).appendTo(choices_ul);

                choices_ul.find("li").each(function(i, e)
                {
                    $(e).click(function()
                    {
                        $(".missing_packet_name").remove();
                        $(".mp_header").text("Loading...");
                        $.post("./data", {"fn": $(e).attr("id")}).done(function(resp)
                        {
                            $(".mp_header").text("Missing Packets");

                            var spacer = $("<div></div>")
                            .addClass("col-xs-1")
                            .addClass("col-sm-1")
                            .addClass("col-md-1")
                            .addClass("col-lg-1");

                            var main_div = $("<div></div>")
                            .addClass("col-xs-10")
                            .addClass("col-sm-10")
                            .addClass("col-md-10")
                            .addClass("col-lg-10")
                            .addClass("missing_packet_main_div");

                            $.each(resp.results, function(k, result)
                            {
                                var name_div = $("<div></div>").addClass("missing_packet_name").attr("id", "missing_packet_" + result.field_app_identifier)
                                .append
                                (
                                    $("<span></span>").addClass("mp_nayme").text(result.name + " | " + result.survey_date)
                                );

                                $("<span></span>").addClass("glyphicon").addClass("glyphicon-info-sign").attr("title", "Show Info").click(function()
                                {
                                    showPotentialPacketInfo(result.field_app_identifier);
                                }).appendTo(name_div);

                                $("<span></span>").addClass("glyphicon").addClass("glyphicon-paste").attr("title", "Create Packet Manually").click(function()
                                {
                                    createPacket(result.field_app_identifier);
                                }).appendTo(name_div);

                                name_div.appendTo(main_div);
                            });

                            spacer.appendTo(app_area.find(".row").last());
                            main_div.appendTo(app_area.find(".row").last());
                            spacer.clone().appendTo(app_area.find(".row").last());
                        });
                    });
                });

                choices_ul.appendTo(dropdown);

                $("<span></span>").addClass("glyphicon").addClass("glyphicon-arrow-down").addClass("sdate_desc").attr("title", "Sort by Survey Date Descending").click(function()
                {
                    sortBySurveyDate("desc");
                }).appendTo(dropdown);
                $("<span></span>").addClass("glyphicon").addClass("glyphicon-arrow-up").addClass("sdate_asc").attr("title", "Sort By Survey Date Ascending").click(function()
                {
                    sortBySurveyDate("asc");
                }).appendTo(dropdown);

                dropdown.appendTo(container);
                $("<h4></h4>").addClass("mp_header").text("Missing Packets:").appendTo(container);
                container.appendTo(app_area);
                $("<hr />").appendTo(app_area);
            }
            window.sorting_surveys = false;
            function sortBySurveyDate(dir)
            {
                if(window.sorting_surveys || $(".missing_packet_name").size() < 2)
                {
                    return;
                }
                window.sorting_surveys = true;

                var predicate = function(div_a, div_b)
                {
                    if(div_a === null || div_b === null)
                    {
                        return false;
                    }

                    var date_str_a = $.trim(div_a.find(".mp_nayme").text().split("|")[1]);
                    var date_str_b = $.trim(div_b.find(".mp_nayme").text().split("|")[1]);

                    var moment_a = moment(date_str_a, "YYYY-MM-DD");
                    var moment_b = moment(date_str_b, "YYYY-MM-DD");

                    if(dir === "asc")
                    {
                        return moment_a > moment_b;
                    }
                    return moment_a < moment_b;
                }

                $(".missing_packet_name").css("opacity", "0.2");
                var orig_txt = $(".mp_header").text();
                $(".mp_header").text("Sorting...");

                window.temp_sort = function()
                {
                    var items = $(".missing_packet_name");
                    len = items.size();
                    var done = true;
                    for(var i = 0; i < len; i++)
                    {
                        div_a = items.eq(i);

                        div_b = null;
                        if(i !== items.length - 1)
                        {
                            div_b = items.eq(i + 1);
                        }

                        if(div_b !== null)
                        {
                            if(predicate(div_a, div_b))
                            {
                                div_b.insertBefore(div_a);
                                done = false;
                                items = $(".missing_packet_name");
                            }
                        }
                    }
                    if(!done)
                    {
                        setTimeout(function()
                        {
                            window.temp_sort();
                        }, 100);
                    }
                    else
                    {
                        $(".missing_packet_name").removeAttr("style");
                        window.sorting_surveys = false;
                        $(".mp_header").text(orig_txt);
                        delete window["temp_sort"];
                    }
                };

                setTimeout(function()
                {
                    window.temp_sort();
                }, 1500);
            }
            function createPacket(field_app_identifier)
            {
                $("#missing_packet_" + field_app_identifier).find(".glyphicon-paste").css("display", "none");

                $.post("./data", {"fn": "potential_packet_info", "identifier": field_app_identifier}).done(function(resp)
                {
                    try
                    {
                        if(Object.keys(resp).length < 6)
                        {
                            return;
                        }
                    }
                    catch(e)
                    {
                        return;
                    }

                    var html = $("<div></div>");
                    html.append
                    (
                        $("<p><b>Customer Name:</b></p>")
                    )
                    .append
                    (
                        $("<p></p>").text(resp.customer_name)
                    )
                    .append
                    (
                        $("<p><b>Customer Phone:</b></p>")
                    )
                    .append
                    (
                        $("<p></p>").text(resp.customer_phone)
                    )
                    .append
                    (
                        $("<p><hr /></p>")
                    )
                    .append
                    (
                        $("<p><b>Rep Name:</b></p>")
                    )
                    .append
                    (
                        $("<p></p>").text(resp.rep_name)
                    )
                    .append
                    (
                        $("<p><b>Rep Phone:</b></p>")
                    )
                    .append
                    (
                        $("<p></p>").text(resp.rep_phone)
                    )

                    BootstrapDialog.show
                    (
                        {
                            "title": "Confirming Packet Creation",
                            "message": html.html(),
                            "buttons":
                            [
                                {
                                    "label": "Nevermind",
                                    "action": function(d)
                                    {
                                        $("#missing_packet_" + field_app_identifier).find(".glyphicon-paste").removeAttr("style");
                                        d.close();
                                    }
                                },
                                {
                                    "label": "OK, Create the Packet",
                                    "action": function(d)
                                    {
                                        $.post("./data", {"fn": "create_packet_manually", "identifier": field_app_identifier}).done(function(resp2)
                                        {
                                            if(resp2.success)
                                            {
                                                $("#missing_packet_" + field_app_identifier).remove();
                                                d.close();
                                            }
                                            else
                                            {
                                                d.close();
                                                $("#missing_packet_" + field_app_identifier).find(".glyphicon-paste").removeAttr("style");
                                                window.alert("There was a problem creating the packet");
                                            }
                                        });
                                    }
                                }
                            ]
                        }
                    );
                });
            }
            function showPotentialPacketInfo(field_app_identifier)
            {
                $.post("./data", {"fn": "potential_packet_info", "identifier": field_app_identifier}).done(function(resp)
                {
                    var info_div = $("<div></div>").addClass("packet_info");

                    info_div
                    .append
                    (
                        $("<b>Rep Name: &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</b>")
                    )
                    .append
                    (
                        $("<span></span>").text(resp.rep_name)
                    )
                    .append
                    (
                        $("<b>Rep Phone: &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</b>")
                    )
                    .append
                    (
                        $("<span></span>").text(resp.rep_phone)
                    )
                    .append
                    (
                        $("<b>Rep Email: &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</b>")
                    )
                    .append
                    (
                        $("<span></span>").text(resp.rep_email)
                    )
                    .append
                    (
                        $("<b>&nbsp;</b>")
                    )
                    .append
                    (
                        $("<span>&nbsp;</span>")
                    )
                    .append
                    (
                        $("<b>Customer Name: &nbsp;&nbsp;&nbsp;</b>")
                    )
                    .append
                    (
                        $("<span></span>").text(resp.customer_name)
                    )
                    .append
                    (
                        $("<b>Customer Phone:&nbsp;&nbsp;&nbsp;</b>")
                    )
                    .append
                    (
                        $("<span></span>").text(resp.customer_phone)
                    )
                    .append
                    (
                        $("<b>Customer Email: &nbsp;&nbsp;&nbsp;</b>")
                    )
                    .append
                    (
                        $("<span></span>").text(resp.customer_email)
                    )
                    .append
                    (
                        $("<i></i>")
                        .append
                        (
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove")
                            .click(function()
                            {
                                info_div.remove();
                            })
                        )
                    )
                    .insertAfter($("#missing_packet_" + field_app_identifier));
                });
            }
            function saveCustomer(identifier, jq_div_to_remove, name, extra_cb)
            {
                var html =
                $("<div></div>").append
                (
                    $("<p></p>").text("In a few words, please explain why " + name + " is being marked as \"Save Me\"...")
                )
                .append
                (
                    $("<textarea></textarea>").addClass("saveme_reason").attr("placeholder", "Marking " + name + " as \"Save Me\" because...")
                );

                BootstrapDialog.show
                (
                    {
                        "title": "Annotating " + name + " as \"Save Me\"",
                        "message": html.html(),
                        "buttons":
                        [
                            {
                                "label": "Nevermind",
                                "cssClass": "btn-primary",
                                "action": function(dialog)
                                {
                                    dialog.close();
                                }
                            },
                            {
                                "label": "Save " + name.split(" ")[0],
                                "cssClass": "btn-danger",
                                "action": function(dialog)
                                {
                                    if($.trim($(".saveme_reason").eq(0).val()).length < 5)
                                    {
                                        window.alert("A descriptive reason must be provided.");
                                        return;
                                    }
                                    var ok_btn = $(".bootstrap-dialog-footer").find(".btn");
                                    ok_btn.text("Saving...");
                                    $.post("./data", {"fn": "save_customer", "identifier": identifier, "reason": $.trim($(".saveme_reason").eq(0).val())}).done(function(resp)
                                    {
                                        dialog.close();
                                        if(jq_div_to_remove.length === 1)
                                        {
                                        	jq_div_to_remove.remove();
                                        }
                                        else
                                        {
                                        	$.each(jq_div_to_remove, function(iii, eee)
                                        	{
                                        		$(eee).remove();
                                        	});
                                        }
                                        if(typeof(extra_cb) + '' !== "undefined")
                                        {
                                        	extra_cb();
                                        }
                                    });
                                }
                            }
                        ]
                    }
                );
            }
            function manageContests()
            {
                var app_area = $("#app_area");

                var spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");
                var main_div = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10");
                $("<h2></h2>").text(" Manage Competitions")
                .prepend
                (
                    $("<i></i>").addClass("fa").addClass("fa-diamond")
                ).appendTo(main_div);
                $("<hr />").appendTo(main_div);
                var btns_div = $("<div></div>").addClass("contest_buttons_div");

                $("<button></button>")
                .attr("type", "button")
                .text("+ New Contest")
                .addClass("btn")
                .addClass("btn-success")
                .click(function()
                {
                    var html = $("<div></div>");

                    html.append
                    (
                        $("<input />").attr("type", "text").attr("id", "contest_create_name").attr("placeholder", "Name of competition...")
                    )
                    .append
                    (
                        $("<p></p>")
                    )
                    .append
                    (
                        $("<p></p>").text("Start Date:")
                    )
                    .append
                    (
                        $("<div></div>").attr("id", "contest_st_div")
                        .append
                        (
                            $("<select></select>")
                            .attr("id", "start_month")
                            .append
                            (
                                $("<option></option>").attr("value", "n/a").text("Choose a month").attr("selected", "selected")
                            )
                        )
                        .append
                        (
                            $("<select></select>")
                            .attr("id", "start_day")
                            .append
                            (
                                $("<option></option>").attr("value", "n/a").text("Choose a day").attr("selected", "selected")
                            )
                        )
                        .append
                        (
                            $("<select></select>")
                            .attr("id", "start_year")
                            .append
                            (
                                $("<option></option>").attr("value", "n/a").text("Choose a year").attr("selected", "selected")
                            )
                        )
                    )
                    .append
                    (
                        $("<p></p>")
                    )
                    .append
                    (
                        $("<p></p>").text("End Date:")
                    )
                    .append
                    (
                        $("<div></div>").attr("id", "contest_et_div")
                        .append
                        (
                            $("<select></select>")
                            .attr("id", "end_month")
                            .append
                            (
                                $("<option></option>").attr("value", "n/a").text("Choose a month").attr("selected", "selected")
                            )
                        )
                        .append
                        (
                            $("<select></select>")
                            .attr("id", "end_day")
                            .append
                            (
                                $("<option></option>").attr("value", "n/a").text("Choose a day").attr("selected", "selected")
                            )
                        )
                        .append
                        (
                            $("<select></select>")
                            .attr("id", "end_year")
                            .append
                            (
                                $("<option></option>").attr("value", "n/a").text("Choose a year").attr("selected", "selected")
                            )
                        )
                    );

                    var months_data =
                    [
                        {
                            "name": "January",
                            "day_cnt": 31
                        },
                        {
                            "name": "February",
                            "day_cnt": 28
                        },
                        {
                            "name": "March",
                            "day_cnt": 31
                        },
                        {
                            "name": "April",
                            "day_cnt": 30
                        },
                        {
                            "name": "May",
                            "day_cnt": 31
                        },
                        {
                            "name": "June",
                            "day_cnt": 30,
                        },
                        {
                            "name": "July",
                            "day_cnt": 31
                        },
                        {
                            "name": "August",
                            "day_cnt": 31
                        },
                        {
                            "name": "September",
                            "day_cnt": 30
                        },
                        {
                            "name": "October",
                            "day_cnt": 31
                        },
                        {
                            "name": "November",
                            "day_cnt": 30
                        },
                        {
                            "name": "December",
                            "day_cnt": 31
                        }
                    ];


                    $.each(months_data, function(i, month_data)
                    {
                        var option = $("<option></option>");
                        option.attr("value", ((i + 1) + ''));
                        option.text(month_data.name);

                        option.appendTo(html.find("#start_month"));
                        option.clone().appendTo(html.find("#end_month"));
                    });

                    var now = moment();
                    html.find("#start_year, #end_year").each(function(i, e)
                    {
                        for(var k = now.year(); k < (now.year() + 5); k++)
                        {
                            $("<option></option>").attr("value", (k + '')).text(k + '').appendTo($(e));
                        }
                    });

                    BootstrapDialog.show
                    (
                        {
                            "title": "Creating a new competition",
                            "message": html.html(),
                            "buttons":
                            [
                                {
                                    "label": "Nevermind",
                                    "cssClass": "btn-danger",
                                    "action": function(dialog)
                                    {
                                        dialog.close();
                                    }
                                },
                                {
                                    "label": "Create Contest",
                                    "cssClass": "btn-success",
                                    "action": function(dialog)
                                    {
                                        if($.trim($("#contest_create_name").val()).length === 0)
                                        {
                                            window.alert("A competition must have a name");
                                            return;
                                        }

                                        var exit = false;
                                        $("#start_date, #start_month, #start_year, #end_date, #end_month, #end_year").each(function(i, e)
                                        {
                                            if($(e).val() === "n/a" && !exit)
                                            {
                                                window.alert("You must provide a complete start date and end date");
                                                exit = true;
                                            }
                                        });


                                        if(exit)
                                        {
                                            return;
                                        }

                                        var st = $("#start_year").val() + "-" + $("#start_month").val() + "-" + $("#start_day").val();
                                        var et = $("#end_year").val() + "-" + $("#end_month").val() + "-" + $("#end_day").val();

                                        var st_mom = moment(st, "YYYY-MM-DD");
                                        var et_mom = moment(et, "YYYY-MM-DD");

                                        if(et_mom < st_mom)
                                        {
                                            window.alert("The end time cannot be earlier than the start time");
                                            return;
                                        }

                                        $(".bootstrap-dialog-footer-buttons").find("btn-success").text("Creating...");
                                        $.post("./data", {"fn": "create_contest", "name": $.trim($("#contest_create_name").val()), "st": st, "et": et}).done(function(resp2)
                                        {
                                            $("body").css("opacity", "0.2");
                                            dialog.close();
                                            localStorage.setItem("button_to_click", "manage_contests");
                                            window.location.reload();
                                        });

                                    }
                                }
                            ],
                            "onshown": function(dialog)
                            {
                                $("#start_month, #end_month").each(function(i, e)
                                {
                                    $(e).on("change", function()
                                    {
                                        $(e).next().find("option").each(function(k, ee)
                                        {
                                            if(k > 0)
                                            {
                                                $(ee).remove();
                                            }
                                        });

                                        var month_data = null;
                                        for(var k = 0; k < months_data.length; k++)
                                        {
                                            if(((k + 1) + '') === $(e).val())
                                            {
                                                month_data = months_data[k];
                                                k = months_data.length;
                                            }
                                        }

                                        if(month_data !== null)
                                        {
                                            for(var k = 1; k <= month_data.day_cnt; k++)
                                            {
                                                var option = $("<option></option>");
                                                option.attr("value", (k + ''));

                                                var inner_txt = (k + '');
                                                if(inner_txt.length === 1)
                                                {
                                                    inner_txt = "0" + inner_txt;
                                                }

                                                option.text(inner_txt);
                                                option.appendTo($(e).next());
                                            }
                                            if(month_data.name === "February" && (moment().year() % 4 === 0))
                                            {
                                                $("<option></option>").attr("value", "29").text(29).appendTo($(e).next());
                                            }
                                        }
                                    });
                                });
                            }

                        }
                    );
                })
                .appendTo(btns_div);

                btns_div.appendTo(main_div);
                $.post("./data", {"fn": "list_contests"}).done(function(resp)
                {
                    $("<br />").appendTo(main_div);
                    if(resp.contests.length === 0)
                    {
                        $("<h4></h4>").text(" (There are currently no competitions configured) ").appendTo(main_div);
                    }
                    else
                    {
                        $.each(resp.contests, function(i, contest)
                        {
                            var contest_div = $("<div></div>").attr("id", "contest_" + contest.identifier).addClass("contest_div");

                            $("<p></p>")
                            .append
                            (
                                $("<span></span>").text(contest.name)
                            )
                            .append
                            (
                                $("<span></span>").addClass("glyphicon").addClass("glyphicon-pencil")
                                .attr("title", "Update Competition's Name")
                                .click(function()
                                {
                                    editContestName($(this).parent().parent());
                                })
                            ).appendTo(contest_div);

                            $("<hr />").appendTo(contest_div);
                            var st = moment(contest.start_time, "YYYY-MM-DD hh:mm:ss");
                            var et = moment(contest.end_time, "YYYY-MM-DD hh:mm:ss");
                            $("<p></p>")
                            .append
                            (
                                $("<span></span>").addClass("outer_times_edit")
                                .append
                                (
                                    $("<span></span>").addClass("glyphicon").addClass("glyphicon-pencil")
                                    .click(function()
                                    {
                                        updateContestTimes(contest);
                                    })
                                )
                            )
                            .append
                            (
                                $("<span></span>").html(st.format("YYYY-MM-DD").replace("am", "A.M.").replace("pm", "P.M.") + "&nbsp;&nbsp;&nbsp; - &nbsp;&nbsp;&nbsp;" + et.format("YYYY-MM-DD").replace("am", "A.M.").replace("pm", "P.M."))
                            ).appendTo(contest_div);
                            $("<hr />").appendTo(contest_div);

                            var description_p = $("<p></p>");

                            if($.parseJSON(contest.description).provided === false)
                            {
                                description_p.text("(No description or competition rules were provided)");
                            }
                            else
                            {
                                var descrip = $.parseJSON(contest.description).text;
                                var description_lines = descrip.split("\n");
                                var description_html = description_lines.join("<br />");

                                description_p.html(description_html).appendTo(contest_div);
                            }

                            $("<span></span>").append
                            (
                                $("<span></span>")
                                .addClass("glyphicon")
                                .addClass("glyphicon-pencil")
                                .on("click", function()
                                {
                                    editContestDescription(contest);
                                })
                            ).prependTo(description_p);

                            description_p.appendTo(contest_div);

                            contest_div.appendTo(main_div);

                        });
                    }
                    spacer.appendTo(app_area);
                    main_div.appendTo(app_area);
                    spacer.clone().appendTo(app_area);
                });
            }
            function editContestDescription(contest)
            {
                var description = $.parseJSON(contest.description);

                $("#contest_" + contest.identifier).find("> p").last().css("display", "none");

                var ta = $("<textarea></textarea>");
                if(description.provided)
                {
                    ta.html(description.text);
                }
                else
                {
                    ta.attr("placeholder", "The competition description/rules...");
                }
                ta.appendTo($("#contest_" + contest.identifier));
                $("<button></button>").attr("type", "button").addClass("btn").addClass("btn-success").text("Update Description")
                .click(function()
                {
                    description.text = $.trim($("#contest_" + contest.identifier).find("textarea").first().val());
                    description.provided = true;
                    contest.description = JSON.stringify(description);
                    $.post("./data", {"fn": "update_contest_description", "identifier": contest.identifier, "description": description.text}).done(function(resp)
                    {
                        var descrip = description.text;
                        var description_lines = descrip.split("\n");
                        var description_html = description_lines.join("<br />");

                        var cpy = $("#contest_" + contest.identifier).find(".glyphicon-pencil").last().clone(true);
                        $("#contest_" + contest.identifier).find(".glyphicon-pencil").last().detach();

                        $("#contest_" + contest.identifier).find("p").last().html(description_html);
                        cpy.prependTo($("#contest_" + contest.identifier).find("p").last());

                        $("#contest_" + contest.identifier).find("textarea").remove();
                        $("#contest_" + contest.identifier).find("button").remove();
                        $("#contest_" + contest.identifier).find("p").last().removeAttr("style");
                        $("#contest_" + contest.identifier).find(".glyphicon-pencil").off("click").on("click", function()
                        {
                            editContestDescription(contest);
                        });
                    });
                }).appendTo($("#contest_" + contest.identifier));
                $("<button></button>").attr("type", "button").addClass("btn").addClass("btn-danger").text("Cancel")
                .click(function()
                {
                    $("#contest_" + contest.identifier).find("textarea").remove();
                    $("#contest_" + contest.identifier).find("button").remove();
                    $("#contest_" + contest.identifier).find("p").last().removeAttr("style");
                }).appendTo($("#contest_" + contest.identifier));
            }
            function editContestName(parentDiv)
            {
                parentDiv.find("p").first().find("> span").first().attr("contenteditable", "true").on("blur", function(ev)
                {
                    var name = $.trim($(this).text());
                    while(name.indexOf("\n") > -1)
                    {
                        name = name.replace("\n", "");
                    }
                    while(name.indexOf("\r") > -1)
                    {
                        name = name.replace("\r", "");
                    }
                    while(name.indexOf("\t") > -1)
                    {
                        name = name.replace("\t", "");
                    }

                    $.post("./data", {"fn": "update_contest_name", "name": name, "identifier": parentDiv.attr("id").replace("contest_", "")}).done(function(resp)
                    {
                        parentDiv.find("p").first().find("> span").first().off("blur").removeAttr("contenteditable");
                    });

                })[0].focus();
            }
            function updateContestTimes(contest)
            {
                var html = $("<div></div>");

                html.append
                (
                    $("<p></p>")
                )
                .append
                (
                    $("<p></p>").text("Start Date:")
                )
                .append
                (
                    $("<div></div>").attr("id", "contest_st_div")
                    .append
                    (
                        $("<select></select>")
                        .attr("id", "start_month")
                        .append
                        (
                            $("<option></option>").attr("value", "n/a").text("Choose a month").attr("selected", "selected")
                        )
                    )
                    .append
                    (
                        $("<select></select>")
                        .attr("id", "start_day")
                        .append
                        (
                            $("<option></option>").attr("value", "n/a").text("Choose a day").attr("selected", "selected")
                        )
                    )
                    .append
                    (
                        $("<select></select>")
                        .attr("id", "start_year")
                        .append
                        (
                            $("<option></option>").attr("value", "n/a").text("Choose a year").attr("selected", "selected")
                        )
                    )
                )
                .append
                (
                    $("<p></p>")
                )
                .append
                (
                    $("<p></p>").text("End Date:")
                )
                .append
                (
                    $("<div></div>").attr("id", "contest_et_div")
                    .append
                    (
                        $("<select></select>")
                        .attr("id", "end_month")
                        .append
                        (
                            $("<option></option>").attr("value", "n/a").text("Choose a month").attr("selected", "selected")
                        )
                    )
                    .append
                    (
                        $("<select></select>")
                        .attr("id", "end_day")
                        .append
                        (
                            $("<option></option>").attr("value", "n/a").text("Choose a day").attr("selected", "selected")
                        )
                    )
                    .append
                    (
                        $("<select></select>")
                        .attr("id", "end_year")
                        .append
                        (
                            $("<option></option>").attr("value", "n/a").text("Choose a year").attr("selected", "selected")
                        )
                    )
                );

                var months_data =
                [
                    {
                        "name": "January",
                        "day_cnt": 31
                    },
                    {
                        "name": "February",
                        "day_cnt": 28
                    },
                    {
                        "name": "March",
                        "day_cnt": 31
                    },
                    {
                        "name": "April",
                        "day_cnt": 30
                    },
                    {
                        "name": "May",
                        "day_cnt": 31
                    },
                    {
                        "name": "June",
                        "day_cnt": 30,
                    },
                    {
                        "name": "July",
                        "day_cnt": 31
                    },
                    {
                        "name": "August",
                        "day_cnt": 31
                    },
                    {
                        "name": "September",
                        "day_cnt": 30
                    },
                    {
                        "name": "October",
                        "day_cnt": 31
                    },
                    {
                        "name": "November",
                        "day_cnt": 30
                    },
                    {
                        "name": "December",
                        "day_cnt": 31
                    }
                ];

                $.each(months_data, function(i, month_data)
                {
                   var option = $("<option></option>");
                   option.attr("value", ((i + 1) + ''));
                   option.text(month_data.name);

                   option.appendTo(html.find("#start_month"));
                   option.clone().appendTo(html.find("#end_month"));
                });

                var now = moment();
                html.find("#start_year, #end_year").each(function(i, e)
                {
                    for(var k = now.year(); k < (now.year() + 5); k++)
                    {
                        $("<option></option>").attr("value", (k + '')).text(k + '').appendTo($(e));
                    }
                });

                BootstrapDialog.show
                ({
                    "title": "Reconfiguring start/end dates",
                    "message": html.html(),
                    "buttons":
                    [
                        {
                            "label": "Nevermind",
                            "cssClass": "btn-danger",
                            "action": function(dialog)
                            {
                                dialog.close();
                            }
                        },
                        {
                            "label": "Update",
                            "cssClass": "btn-success",
                            "action": function(dialog)
                            {
                                 var st = $("#start_year").val() + "-" + $("#start_month").val() + "-" + $("#start_day").val();
                                 var et = $("#end_year").val() + "-" + $("#end_month").val() + "-" + $("#end_day").val();

                                 var st_mom = moment(st, "YYYY-MM-DD");
                                 var et_mom = moment(et, "YYYY-MM-DD");

                                 if(et_mom < st_mom)
                                 {
                                    window.alert("The end time cannot be earlier than the start time");
                                    return;
                                 }

                                 contest.start_time = st_mom.format("YYYY-MM-DD hh:mm:ss");
                                 contest.end_time = et_mom.format("YYYY-MM-DD hh:mm:ss");

                                 $.post("./data", {"fn": "update_contest_times", "identifier": contest.identifier, "st": st, "et": et}).done(function(resp)
                                 {
                                    $("#contest_" + contest.identifier).find("> p").eq(1).find("> span").eq(1).html
                                    (
                                        st_mom.format("YYYY-MM-DD").replace("am", "A.M.").replace("pm", "P.M.") + "&nbsp;&nbsp;&nbsp; - &nbsp;&nbsp;&nbsp;" + et_mom.format("YYYY-MM-DD").replace("am", "A.M.").replace("pm", "P.M.")
                                    );
                                    dialog.close();
                                 });
                            }
                        }
                    ],
                    "onshown": function()
                    {
                        $("#start_month, #end_month").each(function(i, e)
                        {
                            $(e).on("change", function()
                            {
                                $(e).next().find("option").each(function(k, ee)
                                {
                                    if(k > 0)
                                    {
                                        $(ee).remove();
                                    }
                                });

                                var month_data = null;
                                for(var k = 0; k < months_data.length; k++)
                                {
                                    if(((k + 1) + '') === $(e).val())
                                    {
                                        month_data = months_data[k];
                                        k = months_data.length;
                                    }
                                }

                                if(month_data !== null)
                                {
                                    for(var k = 1; k <= month_data.day_cnt; k++)
                                    {
                                        var option = $("<option></option>");
                                        option.attr("value", (k + ''));

                                        var inner_txt = (k + '');
                                        if(inner_txt.length === 1)
                                        {
                                            inner_txt = "0" + inner_txt;
                                        }

                                        option.text(inner_txt);
                                        option.appendTo($(e).next());
                                    }
                                    if(month_data.name === "February" && (moment().year() % 4 === 0))
                                    {
                                        $("<option></option>").attr("value", "29").text(29).appendTo($(e).next());
                                    }
                                }
                            });
                        });

                        var st = moment(contest.start_time, "YYYY-MM-DD hh:mm:ss");
                        var et = moment(contest.end_time, "YYYY-MM-DD hh:mm:ss");

                        $("#start_month").find("option").each(function(i, e)
                        {
                            if(i > 0)
                            {
                                var v = parseInt($(e).attr("value"));
                                v--;
                                if(v === st.month())
                                {
                                    $(e).parent()[0].selectedIndex = i;
                                    $(e).parent().trigger("change");
                                }
                            }
                        });
                        $("#end_month").find("option").each(function(i, e)
                        {
                            if(i > 0)
                            {
                                var v = parseInt($(e).attr("value"));
                                v--;
                                if(v === et.month())
                                {
                                    $(e).parent()[0].selectedIndex = i;
                                    $(e).parent().trigger("change");
                                }
                            }
                        });

                        $("#start_year").find("option").each(function(i, e)
                        {
                            if(i > 0)
                            {
                                var v = parseInt($(e).attr("value"));
                                if(v === st.year())
                                {
                                    $(e).parent()[0].selectedIndex = i;
                                }
                            }
                        });
                        $("#end_year").find("option").each(function(i, e)
                        {
                            if(i > 0)
                            {
                                var v = parseInt($(e).attr("value"));
                                if(v === et.year())
                                {
                                    $(e).parent()[0].selectedIndex = i;
                                }
                            }
                        });

                        setTimeout(function()
                        {
                            $("#start_day").find("option").each(function(i, e)
                            {
                                if(i > 0)
                                {
                                    var v = parseInt($(e).attr("value"));
                                    if(v === st.date())
                                    {
                                        $(e).parent()[0].selectedIndex = i;
                                    }
                                }
                            });
                            $("#end_day").find("option").each(function(i, e)
                            {
                                if(i > 0)
                                {
                                    var v = parseInt($(e).attr("value"));
                                    if(v === et.date())
                                    {
                                        $(e).parent()[0].selectedIndex = i;
                                    }
                                }
                            });
                        }, 250);

                    }
                });
            }
            function showSurveyScheduler(cnt)
            {
                var scheduler_div = $("<div></div>").addClass("row").addClass("scheduler_row");

                var dropdown_div = $("<div></div>").addClass("dropdown");

                $("<button></button>").attr("type", "button").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("data-toggle", "dropdown")
                .text("")
                .attr("id", "svy_choice_selector")
                .appendTo(dropdown_div);

                var choices_ul = $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu");
                if(cnt > 0 || true)
                {
                    $("<li></li>").attr("role", "presentation").attr("id", "choice_of_unbooked")
                    .append
                    (
                        $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);")
                        .text
                        (
                            "Surveys to Schedule"
                        )
                    ).appendTo(choices_ul);
                }

                $("<li></li>").attr("role", "presentation").attr("id", "choice_of_recent")
                .append
                (
                    $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);")
                    .text
                    (
                        "Recent Leads"
                    )
                ).appendTo(choices_ul);

                choices_ul.find("li").each(function(i, e)
                {
                    $(e).click(function()
                    {
                        $("#svy_choice_selector").text($(e).text());
                        $("<span></span>").addClass("caret").appendTo($("#svy_choice_selector"));

                        var criteria = $(e).attr("id").replace("choice_of_", "");

                        loadSurveysForAdmin(criteria);
                    });
                });

                choices_ul.appendTo(dropdown_div);
                dropdown_div.appendTo(scheduler_div);

                $("<div></div>").addClass("svy_lbl").addClass("col-xs-3").addClass("col-sm-3").addClass("col-md-3").addClass("col-lg-3").text("Customer Name").appendTo(scheduler_div);
                $("<div></div>").addClass("svy_lbl").addClass("col-xs-3").addClass("col-sm-3").addClass("col-md-3").addClass("col-lg-3").text("Location").appendTo(scheduler_div);
                $("<div></div>").addClass("svy_lbl").addClass("col-xs-3").addClass("col-sm-3").addClass("col-md-3").addClass("col-lg-3").text("Lead Date")
                .append
                (
                    $("<span></span>").attr("title", "Sort in ascending order").attr("id", "svy_leaddate_asc").addClass("glyphicon").addClass("glyphicon-arrow-up")
                    .click(function()
                    {
                        sortByLeadDate("asc");
                    })
                )
                .append
                (
                    $("<span></span>").attr("title", "Sort in descending order").attr("id", "svy_leaddate_desc").addClass("glyphicon").addClass("glyphicon-arrow-down")
                    .click(function()
                    {
                        sortByLeadDate("desc");
                    })
                )
                .appendTo(scheduler_div);
                $("<div></div>").addClass("svy_lbl").addClass("sv_lbl_cal_ico").addClass("col-xs-3").addClass("col-sm-3").addClass("col-md-3").addClass("col-lg-3")
                .append
                (
                    $("<span></span>").text("Schedule")
                ).appendTo(scheduler_div);

                scheduler_div.appendTo($("#app_area"));

                var idx_to_click = (cnt === 0) * 1;

                $(".scheduler_row").find("ul").find("li").eq(idx_to_click).trigger("click");
            }
            function loadSurveysForAdmin(criteria)
            {
                if(criteria === "upcoming")
                {
                    $(".sv_lbl_cal_ico").find("span").text("Reschedule");
                }
                else
                {
                    $(".sv_lbl_cal_ico").find("span").text("Schedule");
                }
                $(".scheduler_row").find(".no_svys").remove();
                $(".scheduler_row").find(".svy_data").remove();
                $.post("./data", {"fn": "get_surveys_for_admin", "criteria": criteria}).done(function(surveys)
                {
                    var surveys2 = [];
                    for(var i = 0; i < 3; i++)
                    {
                        surveys2.push(surveys[0]);
                    }
                    var scheduler_row = $(".scheduler_row");
                    if(surveys.length === 0)
                    {
                        $("<h3></h3>").addClass("no_svys").text("No surveys match this criteria").appendTo(scheduler_row);
                        return;
                    }

                    $.each(surveys, function(i, survey)
                    {
                        scheduler_row.append
                        (
                            $("<div></div>").addClass("col-xs-3").addClass("col-sm-3").addClass("col-md-3").addClass("col-lg-3").addClass("svy_data").addClass("svy_data_" + survey.identifier).addClass("svy_name").text(survey.name)
                        );

                        scheduler_row.append
                        (
                            $("<div></div>").addClass("col-xs-3").addClass("col-sm-3").addClass("col-md-3").addClass("col-lg-3").addClass("svy_data").addClass("svy_data_" + survey.identifier).addClass("svy_city").text(survey.city + ", " + survey.state)
                        );

                        var ts = moment.unix(survey.insert_time / 1000);

                        scheduler_row.append
                        (
                            $("<div></div>").addClass("col-xs-3").addClass("col-sm-3").addClass("col-md-3").addClass("col-lg-3").addClass("svy_data").addClass("svy_data_" + survey.identifier).addClass("svy_ltime").text(ts.format("MM-DD-YYYY"))
                        );

                        if(criteria === "upcoming")
                        {

                            scheduler_row.append
                            (
                                $("<div></div>")
                                .addClass("svy_data")
                                .addClass("svy_data_" + survey.identifier)
                                .addClass("svy_schedule_btn")
                                .addClass("col-xs-3")
                                .addClass("col-sm-3")
                                .addClass("col-md-3")
                                .addClass("col-lg-3")
                                .addClass("svy_data")
                                .addClass("svy_dt")
                                .append
                                (
                                    $("<span></span>").addClass("glyphicon").addClass("glyphicon-calendar")
                                    .click(function()
                                    {
                                        scheduleSurvey(survey, criteria);
                                    })
                                )
                                /*.append
                                (
                                    $("<br />")
                                )*/
                                .append
                                (
                                    $("<span></span>")
                                    .addClass("data_slot")
                                    .text
                                    (
                                        "Slot #" + (survey.slot_number + '')
                                    )
                                )
                            );
                        }
                        else
                        {
                            scheduler_row.append
                            (
                                $("<div></div>")
                                .addClass("col-xs-3")
                                .addClass("col-sm-3")
                                .addClass("col-md-3")
                                .addClass("col-lg-3")
                                .addClass("svy_data")
                                .addClass("svy_data_" + survey.identifier)
                                .addClass("svy_dt")
                                .append
                                (
                                    $("<span></span>").addClass("glyphicon").addClass("glyphicon-calendar")
                                    .click(function()
                                    {
                                        scheduleSurvey(survey, criteria);
                                    })
                                )
                            );
                        }
                    });
                    try
                    {
                        $("#svy_choice_selector").eq(0)[0].scrollIntoView();
                    }
                    catch(e5956221302)
                    {
                    }
                });
            }
            function scheduleSurvey(survey, criteria)
            {
                var svy_office_name = "{Unknown Office}";
                $.each(office_data.offices, function(i, office)
                {
                    if(office.identifier === survey.office_identifier)
                    {
                        svy_office_name = office.name;
                    }
                });
                var html = $("<div></div>");
                html
                .append
                (
                    $("<p></p>").addClass("svy_booking_lbl").text("Name:")
                )
                .append
                (
                    $("<p></p>").addClass("svy_booking_info").text(survey.name)
                )
                .append
                (
                    $("<p></p>").addClass("svy_booking_lbl").text("Address:")
                )
                .append
                (
                    $("<iframe></iframe>")
                    .attr("frameborder", "0")
                    .attr("scrolling", "0")
                    .attr("marginheight", "0")
                    .attr("marginwidth", "0")
                    .attr("width", "250")
                    .attr("seamless", "seamless")
                    .attr("src", "https://maps.google.com/maps?hl=en&q=" + encodeURIComponent(survey.address + " " + survey.city + ", " + survey.state) + "&ie=UTF8&t=roadmap&z=14&iwloc=B&output=embed")
                )
                .append
                (
                    $("<p></p>").addClass("svy_booking_info").text(survey.address)
                )
                .append
                (
                    $("<p></p>").addClass("svy_booking_lbl").text("Office:")
                )
                .append
                (
                    $("<p></p>").text(svy_office_name)
                )
                .append
                (
                    $("<p></p>").addClass("svy_booking_lbl").text("SP2 Appointment:")
                )
                .append
                (
                    $("<p></p>").addClass("svy_booking_info").text(moment(survey.sp2_time, "YYYY-MM-DD HH:mm:ss").format("MM-DD-YYYY hh:mm:ss a"))
                );

                $("<hr />").appendTo(html);

                var form = $("<form></form>").addClass("form-horizontal").attr("role", "form").attr("action", "#").attr("method", "GET").attr("id", "svy_sched_form").css("display", "none");
                form.attr("onsubmit", "javascript:return false;");
                form.on("submit", function()
                {
                    return false;
                });
                var date_picker_div = $("<div></div>").addClass("form-group");
                date_picker_div.append
                (
                    $("<label></label>")
                    .addClass("control-label")
                    .addClass("col-xs-12").addClass("col-sm-12").addClass("col-md-12").addClass("col-lg-12")
                    .text("Appointment Time for Survey")
                )
                .append
                (
                    $("<div></div>")
                    .addClass("col-xs-12")
                    .addClass("col-sm-12")
                    .addClass("col-md-12")
                    .addClass("col-lg-12")
                    .append
                    (
                        $("<div></div>").attr("id", "dt_333").addClass("input-append").addClass("date").attr("data-date", "12-02-2012").attr("data-date-format", "dd-mm-yyyy")
                        .append
                        (
                            $("<input />").attr("size", "16").addClass("span2").addClass("eightpoint5").attr("type", "text").attr("value", "12-02-2012").attr("id", "cust_appointment_date")
                        )
                        .append
                        (
                            $("<span></span>").addClass("add-on")
                            .append
                            (
                                $("<i></i>").addClass("icon-th")
                            )
                        )
                        .append
                        (
                            $("<input />").attr("type", "hidden").attr("id", "appt_slot_num").attr("value", "N/A")
                        )
                    )
                ).appendTo(form);
                form.appendTo(html);

                $("<p></p>").addClass("tmp_finding").text("Finding the soonest appointment slot....").appendTo(html);

                var title = "Booking " + survey.name;
                if(criteria === "upcoming")
                {
                    title = "Rescheduling " + survey.name;
                }
                BootstrapDialog.show
                (
                    {
                        "title": title,
                        "message": html.html(),
                        "onshown": function()
                        {
                            var disabled_days = [];
                            var val = getDateString();
                            var split = val.split("/");
                            for(var i = 0; i < split.length; i++)
                            {
                                if(split[i].length === 1)
                                {
                                    split[i] = "0" + split[i];
                                }
                            }
                            disabled_days.push(split.join("-"));
                            var switched_up = split[2] + "-" + split[0] + "-" + split[1];

                            var today = moment(switched_up);
                            for(var i = 0; i < 712; i++)
                            {
                                var day = today;
                                disabled_days.push(day.format("MM-DD-YYYY"));
                                day = day.subtract(1, "days");
                                today = day;
                            }
                            var today2 = moment(switched_up);
                            for(var i = 0; i < 712; i++)
                            {
                                var day = today2;
                                disabled_days.push(day.format("MM-DD-YYYY"));
                                day = day.add(1, "days");
                                today2 = day;
                            }


                            $.post("./data", {"fn": "time_slot_days_available", "office_id": survey.office_identifier, "lead_id": survey.field_app_lead_id}).done(function(resp)
                            {
                                if(typeof(window.office_time_slots) + '' === "undefined" || !window.office_time_slots)
                                {
                                    window.office_time_slots = {};
                                }
                                if(typeof(window.office_time_slots["o_" + survey.office_identifier]) + '' === "undefined" || !window.office_time_slots["o_" + survey.office_identifier])
                                {
                                    window.office_time_slots["o_" + survey.office_identifier] = {};
                                }

                                for(var i = 0; i < resp.dates.length; i++)
                                {
                                    var date_str = resp.dates[i].date;
                                    if(typeof(window.office_time_slots["o_" + survey.office_identifier]["d_" + date_str]) + '' === "undefined" || !window.office_time_slots["o_" + survey.office_identifier]["d_" + date_str])
                                    {
                                        window.office_time_slots["o_" + survey.office_identifier]["d_" + date_str] = {};
                                    }
                                    var slot_available = false;
                                    for(var j = 1; j < 13; j++)
                                    {
                                        window.office_time_slots["o_" + survey.office_identifier]["d_" + date_str]["slot_" + (j + '') + "_enabled"] = resp.dates[i]["slot_" + (j + '') + "_enabled"];
                                        if(resp.dates[i]["slot_" + (j + '') + "_enabled"])
                                        {
                                            slot_available = true;
                                            j = 13;
                                        }
                                    }
                                    if(slot_available)
                                    {
                                        while(disabled_days.indexOf(date_str) !== -1)
                                        {
                                            disabled_days.splice(disabled_days.indexOf(date_str), 1);
                                        }
                                    }
                                }

                                var clone = $("#cust_appointment_date").clone();
                                clone.addClass("cloned_dp");
                                clone.removeAttr("id");
                                $("#cust_appointment_date").replaceWith(clone);
                                $(".cloned_dp").attr("id", "cust_appointment_date").removeClass("cloned_dp");
                                var suggested_day = resp.suggested_date + '';
                                var suggested_slot_num = resp.suggested_slot_number + '';

                                if(suggested_day !== "undefined")
                                {
                                    $("#cust_appointment_date").attr("value", suggested_day);
                                    $("#dt").attr("data-date", suggested_day);
                                }
                                else
                                {
                                    var val2 = getDateString();
                                    var split2 = val.split("/");
                                    for(var i = 0; i < split2.length; i++)
                                    {
                                        if(split2[i].length === 1)
                                        {
                                            split2[i] = "0" + split2[i];
                                        }
                                    }
                                    var switched_up2 = split[2] + "-" + split[0] + "-" + split[1];

                                    var today2 = moment(switched_up2);
                                    var new_str = today2.format("MM-DD-YYYY")
                                    $("#cust_appointment_date").attr("value", new_str);
                                    //$("#dt").attr("data-date", new_str);
                                }

                                $.post("./data", {"fn": "get_bookings", "date": (resp.suggested_date + ''), "office": survey.office_identifier, "lead_id": survey.field_app_lead_id, "v2": "1", "v2": "1"}).done(function(resp2)
                                {
                                    var dropdown_div = $("<div></div>").addClass("dropdown");
                                    var dropdown_btn = $("<button></button>").addClass("btn").addClass("btn-default").addClass("dropdown-toggle");
                                    dropdown_btn.attr("type", "button").attr("id", "dropdownMenu3").attr("data-toggle", "dropdown").attr("aria-expanded", "false");
                                    dropdown_btn.text("Select a Slot");
                                    $("<span></span>").addClass("caret").appendTo(dropdown_btn);
                                    var ul = $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu").attr("aria-labelledby", "dropdownMenu3");
                                    for(var i = 0; i < resp2.slot_reservations.length; i++)
                                    {
                                        var li = $("<li></li>").attr("role", "presentation");
                                        li.addClass("slot_" + ((i + 1) + ''));
                                        var a = $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text("Slot #" + ((i + 1) + ''));
                                        if(resp2.slot_reservations[i])
                                        {
                                            a.css("text-decoration", "line-through");
                                            a.addClass("linethrough_anchor")
                                        }
                                        else
                                        {
                                            a.css("text-decoration", "none");
                                        }
                                        a.appendTo(li);
                                        li.appendTo(ul);
                                    }
                                    ul.find("li").each(function(i, e)
                                    {
                                        $(e).click(function()
                                        {
                                            if(! $(e).find("a").eq(0).hasClass("linethrough_anchor"))
                                            {
                                                var new_val = $(e).attr("class").replace("slot_", "");
                                                $("#appt_slot_num").attr("value", new_val).val(new_val);
                                                var split_items = $("#cust_appointment_date").val().split("-");
                                                var key = survey.office_identifier + "_" + split_items[1] + "_" + split_items[0] + "_" + split_items[2] + "_slot_" + $("#appt_slot_num").val();
                                                if(window.all_keys_reserved.indexOf(key) === -1)
                                                {
                                                    window.all_keys_reserved.push(key);
                                                }
                                                window.current_reservation_key = key;
                                                $.post("/data", {"fn": "reserve_slot", "date": (resp.suggested_date + ''), "office": survey.office_identifier, "lead_id": survey.field_app_lead_id, "slot": new_val}).done(function(resp22)
                                                {
                                                    //
                                                });
                                                $("#dropdownMenu3").eq(0).text($(e).text());
                                                $("<span></span>").addClass("caret").appendTo($("#dropdownMenu3").eq(0));
                                            }
                                        });
                                    });

                                    dropdown_btn.appendTo(dropdown_div);
                                    ul.appendTo(dropdown_div);
                                    if($("#appt_slot_num").nextAll(".dropdown").size() === 0)
                                    {
                                        dropdown_div.appendTo($("#cust_appointment_date").parent().parent());
                                    }

                                    $("#dropdownMenu3").nextAll("ul").eq(0).find("li").each(function(i, e)
                                    {
                                        if($(e).attr("class").replace("slot_", "") === suggested_slot_num)
                                        {
                                            $(e).click();
                                        }
                                    });

                                    $("<button></button>").addClass("btn").addClass("btn-success").addClass("svy_sub_btn").text("Book it!").click(function()
                                    {
                                        if($("#appt_slot_num").val().toLowerCase() === "n/a")
                                        {
                                            window.alert("You must choose an appointment slot");
                                            return;
                                        }
                                        //handle the SP2 logic

                                        // compare the SP2 date with the appointment date/time
                                        var appt_dayte = $("#cust_appointment_date").val();
                                        var sp2_dayte = survey.sp2_time.split(" ")[0];

                                        var appt_dayte_moment = moment($("#cust_appointment_date").val().replace(/-/g, ""), "MMDDYYYY");
                                        var sp2_dayte_moment = moment(sp2_dayte.replace(/-/g, ""), "YYYYMMDD");

                                        // california vs utah logic
                                        var is_california = survey.state.toUpperCase() === "CA";
                                        // for now
                                        var is_utah = !is_california;

                                        var time_diff = sp2_dayte_moment - appt_dayte_moment;
                                        var is_next_business_day = (appt_dayte_moment.format("E") === "5" && ["6", "7", "1"].indexOf(sp2_dayte_moment.format("E")) > -1) || time_diff === 86400000;
                                        if(is_utah && !is_next_business_day)
                                        {
                                            is_next_business_day = (sp2_dayte_moment.format("E") === "5" && ["6", "7", "1"].indexOf(appt_dayte_moment.format("E")) > -1)

                                                                   ||

                                                                   (["6","7","1"].indexOf(appt_dayte_moment.format("E")) > -1 && sp2_dayte_moment.format("E") === "5")

                                                                   ||

                                                                   time_diff === -86400000;
                                        }

                                        if(is_california)
                                        {

                                            var hours_value = parseInt(survey.sp2_time.split(" ")[1].split(":")[0]);

                                            // ensure the sp2 date is after 4:59 PM if it's the next day
                                            if(is_next_business_day)
                                            {
                                                var five_pm_or_later = true;

                                                if(hours_value < 17)
                                                {
                                                    five_pm_or_later = false;
                                                }

                                                if(!five_pm_or_later)
                                                {
                                                    window.alert
                                                    (
                                                        "The survey date is invalid:\n\n" +
                                                        "SP2 Date: " + moment(survey.sp2_time, "YYYY-MM-DD HH:mm:ss").format("MM-DD-YYYY hh:mm:ss a") + "\n\n" +
                                                        "Message: The SP2 date would be < 1 business day after the survey date. In this case, the SP2 time must be 5 P.M. or later"
                                                    );
                                                    return;
                                                }
                                            }

                                            // don't allow the SP2 on a saturday or sunday if the survey is on a friday
                                            if(appt_dayte_moment.isoWeekday() === 5 && time_diff <= (86400000 * 2))
                                            {
                                                window.alert
                                                (
                                                    "The survey date is invalid:\n\n" +
                                                    "SP2 Date: " + moment(survey.sp2_time, "YYYY-MM-DD HH:mm:ss").format("MM-DD-YYYY hh:mm:ss a") + "\n\n" +
                                                    "Message: The SP2 date would be < 1 business day after the survey date. Please reschedule the survey or SP2 appointment"
                                                );
                                                return;
                                            }
                                        }
                                        else if(is_utah)
                                        {
                                            // ensure the sp2 date is after 2:59 PM if it's the next day
                                            if(is_next_business_day)
                                            {
                                                var three_pm_or_later = hours_value >= 15;

                                                if(!three_pm_or_later)
                                                {
                                                    window.alert
                                                    (
                                                        "The survey date is invalid:\n\n" +
                                                        "SP2 Date: " + moment(survey.sp2_time, "YYYY-MM-DD HH:mm:ss").format("MM-DD-YYYY hh:mm:ss a") + "\n\n" +
                                                        "Message: For cases when the SP2 date and the survey date are within one business day of each other, the SP2 time must be 3:00 P.M or later"
                                                    );
                                                    return;
                                                }
                                            }
                                        }

                                        var sub_btn = $(this);
                                        sub_btn.css("opacity", "0.3").text("Booking...");
                                        bookSurvey(survey, function(result)
                                        {
                                            if(result.success)
                                            {
                                                $(".bootstrap-dialog-message").empty();
                                                $("<p></p>").text("The survey has been booked.").appendTo($(".bootstrap-dialog-message"));
                                                setTimeout(function()
                                                {
                                                    $.each(BootstrapDialog.dialogs, function(k, d)
                                                    {
                                                        d.close();
                                                        $(".svy_data_" + survey.identifier).remove();
                                                        var num = parseInt($.trim($(".unbooked_badge").text()));
                                                        num -= 1;
                                                        $(".unbooked_badge").text((num + ''));
                                                    });
                                                }, 1500);
                                            }
                                            else
                                            {
                                                if(result.already_booked === true)
                                                {
                                                    window.alert("The survey could not be booked because someone else has already taken the slot");
                                                }
                                                else
                                                {
                                                    window.alert("For an unknown reason, the survey could not be booked");
                                                }
                                                sub_btn.css("opacity", "1.0").text("Try again");
                                            }
                                        });
                                    }).insertAfter($("#dt_333").next());

                                    $(".tmp_finding").remove();
                                    $("#svy_sched_form").removeAttr("style");

                                    $("#cust_appointment_date").datepicker
                                    (
                                        {
                                            "format": "mm-dd-yyyy",
                                            "autoClose": true,
                                            "datesDisabled": disabled_days
                                        }
                                    ).on("change", function()
                                    {
                                        $("#svy_sched_form").css("display", "none");
                                        $("<p></p>").addClass("tmp_finding").text("Looking at slots for " + $(this).val()).insertAfter($("#svy_sched_form"));
                                        $("#appt_slot_num").val("N/A");
                                        $.post("./data", {"fn": "get_bookings", "date": $(this).val(), "office": survey.office_identifier, "lead_id": survey.field_app_lead_id, "v2": "1"}).done(function(resp3)
                                        {
                                            var ul = $("#dt_333").next().find("ul");
                                            ul.find("li").remove();

                                            for(var i = 0; i < resp3.slot_reservations.length; i++)
                                            {
                                                var li = $("<li></li>").attr("role", "presentation");
                                                li.addClass("slot_" + ((i + 1) + ''));
                                                var a = $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text("Slot #" + ((i + 1) + ''));
                                                if(resp3.slot_reservations[i])
                                                {
                                                    a.css("text-decoration", "line-through");
                                                    a.addClass("linethrough_anchor")
                                                }
                                                else
                                                {
                                                    a.css("text-decoration", "none");
                                                }
                                                a.appendTo(li);
                                                li.appendTo(ul);
                                            }

                                            ul.find("li").each(function(i, e)
                                            {
                                               $(e).click(function()
                                               {
                                                   if(! $(e).find("a").eq(0).hasClass("linethrough_anchor"))
                                                   {
                                                       var new_val = $(e).attr("class").replace("slot_", "");
                                                       $("#appt_slot_num").attr("value", new_val).val(new_val);
                                                       var split_items = $("#cust_appointment_date").val().split("-");
                                                       var key = survey.office_identifier + "_" + split_items[1] + "_" + split_items[0] + "_" + split_items[2] + "_slot_" + $("#appt_slot_num").val();
                                                       if(window.all_keys_reserved.indexOf(key) === -1)
                                                       {
                                                           window.all_keys_reserved.push(key);
                                                       }
                                                       window.current_reservation_key = key;
                                                       $.post("/data", {"fn": "reserve_slot", "date": (resp.suggested_date + ''), "office": survey.office_identifier, "lead_id": survey.field_app_lead_id, "slot": new_val}).done(function(resp2222)
                                                       {
                                                           //
                                                       });
                                                       $("#dropdownMenu3").eq(0).text($(e).text());
                                                       $("<span></span>").addClass("caret").appendTo($("#dropdownMenu3").eq(0));
                                                   }
                                               });
                                            });
                                            $("#dropdownMenu3").eq(0).text("Choose a slot");
                                            $("<span></span>").addClass("caret").appendTo($("#dropdownMenu3").eq(0));
                                            $(".tmp_finding").remove();
                                            $("#svy_sched_form").removeAttr("style");
                                        });
                                    });
                                });
                            });
                        },
                        "onhidden": function()
                        {
                            killReservations(false);
                        }
                    }
                );
            }
            function bookSurvey(survey, cb)
            {
                $.post("./data", {"fn": "adjust_survey_appointment", "identifier": survey.identifier, "office_identifier": survey.office_identifier, "slot": $.trim($("#appt_slot_num").val()), "date": $.trim($("#cust_appointment_date").val())}).done(function(resp)
                {
                    cb(resp);
                });
            }
            function killReservations(rightBeforePOST)
            {
                var predicate = function(item)
                {
                    return true;
                }
                if(rightBeforePOST)
                {
                    predicate = function(item)
                    {
                        return item !== window.current_reservation_key;
                    }
                }
                if(window.all_keys_reserved.length > 0)
                {
                    var diffed_keys = [];
                    for(var i = 0; i < window.all_keys_reserved.length; i++)
                    {
                        if(window.all_keys_reserved[i] !== "" && predicate(window.all_keys_reserved[i]))
                        {
                            diffed_keys.push(window.all_keys_reserved[i]);
                        }
                    }
                    if(diffed_keys.length > 0)
                    {
                        
                    }
                }
            }
            function showRecentCustomers()
            {
                var app_area = $("#app_area");
                $("<h2></h2>").text("Loading...").appendTo(app_area);
                var spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");
                var recent_div = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10");

                $.post("./data", {"fn": "list_utility_providers"}).done(function(resp)
                {
                    $.each(resp, function(i, utility_provider)
                    {
                        $("<div></div>")
                        .addClass("recent_utility_container")
                        .attr("id", "recent_utility_container_" + utility_provider.value)
                        .append
                        (
                            $("<h3></h3>").text(utility_provider.value_friendly)
                        )
                        .appendTo(recent_div);
                        $("<hr />").appendTo(recent_div);
                    });
                    var utility_providers = resp;
                    $.post("./data", {"fn": "get_recent_customers"}).done(function(resp2)
                    {
                        app_area.empty();
                        $.each(resp2.customers, function(i, customer)
                        {
                            var div_to_append_to = recent_div.find("#recent_utility_container_" + customer.utility_provider.replace("&", "\\&").replace("n/a", "n\\/a"));

                            var cust_div = $("<div></div>").addClass("recent_customer").attr("id", "recent_customer_" + customer.identifier);
                            cust_div.click(function()
                            {
                                showCustomerDetails(customer, resp2.funding_list, utility_providers);
                            });
                            var name = customer.customer_first_name + " " + customer.customer_last_name;
                            if(customer.spouse_name !== "n/a")
                            {
                                name += ("&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;"  + customer.spouse_name);
                            }
                            $("<p></p>").addClass("recent_customer_name").html(name).appendTo(cust_div);
                            var cb = $("<input />").attr("type", "checkbox");
                            if(customer.fund !== "n/a")
                            {
                                cb.attr("checked", "checked");
                            }
                            cb.attr("disabled", "disabled");
                            $("<p></p>").addClass("fund_checkbox")
                            .append(cb)
                            .append
                            (
                                $("<span></span>").addClass("glyphicon").addClass("glyphicon-pencil").attr("title", "Edit Customer Details").click(function(ev)
                                {
                                    ev.stopPropagation();
                                    editCustomerDetails(customer);
                                })
                            )
                            .appendTo(cust_div);

                            if(div_to_append_to.size() > 0)
                            {
                                div_to_append_to.append(cust_div);
                            }
                        });

                        $(".recent_utility_container").each(function(i, e)
                        {
                            if($(e).children().size() === 1)
                            {
                                $("<p></p>").appendTo($(e));
                                $("<p></p>").text("( No customers )").appendTo($(e));
                                $("<p></p>").appendTo($(e));
                            }
                        });

                        spacer.appendTo(app_area);
                        recent_div.appendTo(app_area);
                        spacer.clone().appendTo(app_area);

                        recent_div.find(".recent_utility_container").each(function(i, e)
                        {
                            if($(e).find(".recent_customer").length === 0)
                            {
                                $(e).nextAll("hr").first().remove();
                                $(e).prevAll("hr").first().remove();
                                $(e).remove();
                            }
                        });
                    });
                });
            }
            function editCustomerDetails(customer)
            {
                var html = $("<div></div>");
                $("<p></p>").text("Customer First Name:").appendTo(html);
                $("<input />").attr("type", "text").addClass("edit_cust").addClass("edit_first").attr("value", customer.customer_first_name).val(customer.first_name).appendTo(html);
                $("<br />").appendTo(html);
                $("<p></p>").text("Customer Last Name:").appendTo(html);
                $("<input />").attr("type", "text").addClass("edit_cust").addClass("edit_last").attr("value", customer.customer_last_name).val(customer.last_name).appendTo(html);
                $("<br />").appendTo(html);
                $("<p></p>").text("Customer Address:").appendTo(html);
                $("<input />").attr("type", "text").addClass("edit_cust").addClass("edit_add").attr("value", customer.customer_address).val(customer.customer_address).appendTo(html);

                BootstrapDialog.show
                (
                    {
                        "title": "Edit Customer Details",
                        "message": html.html(),

                        "buttons":
                        [
                            {
                                "label": "Nevermind",
                                "cssClass": "btn-danger",
                                "action": function(dialog)
                                {
                                    dialog.close();
                                }
                            },
                            {
                                "label": "Confirm Changes",
                                "cssClass": "btn-primary",
                                "action": function(dialog)
                                {
                                    var ret_early = false;
                                    $(".edit_cust").each(function(i, e)
                                    {
                                        if(ret_early)
                                        {
                                            return;
                                        }
                                        if($.trim($(e).val()).length === 0)
                                        {
                                            ret_early = true;
                                            window.alert("Blank fields are not allowed");
                                        }
                                    });
                                    if(ret_early)
                                    {
                                        return;
                                    }

                                    customer.customer_first_name = $.trim($(".edit_cust").eq(0).val());
                                    customer.customer_last_name = $.trim($(".edit_cust").eq(1).val());
                                    customer.customer_address = $.trim($(".edit_cust").eq(2).val());

                                    $(".bootstrap-dialog-footer").find(".btn-primary").remove();
                                    $.post("./data", {"fn": "update_customer_details", "f": customer.customer_first_name, "l": customer.customer_last_name, "a": customer.customer_address, "identifier": customer.identifier}).done(function(resp)
                                    {
                                        $("#recent_customer_" + customer.identifier).find(".recent_customer_name").text(customer.customer_first_name + " " + customer.customer_last_name);
                                    });

                                    dialog.close();
                                }
                            }
                        ]
                    }
                );
            }
            function editCustomerEmail(jqSpan, customer)
            {
                var html = $("<div></div>");
                html.append
                (
                    $("<p></p>").text("Update the customer's email address...")
                );
                html.append
                (
                    $("<input />").attr("type", "text").attr("id", "ud_customer_email_input").attr("value", customer.customer_email)
                );
                html.append($("<br />"));
                BootstrapDialog.show
                (
                    {
                        "title": "Updating customer email",
                        "message": html.html(),
                        "buttons":
                        [
                            {
                                "label": "Cancel",
                                "cssClass": "btn-danger",
                                "action": function(d)
                                {
                                    d.close();
                                }
                            },
                            {
                                "label": "Update",
                                "cssClass": "btn-primary",
                                "action": function(d)
                                {
                                    var email = $.trim($("#ud_customer_email_input").val());
                                    $.post("./data", {"fn": "update_customer_email_address", "identifier": customer.identifier, "value": email}).done(function(r)
                                    {
                                        customer.customer_email = email;
                                        jqSpan.prev().text(email);
                                        jqSpan.prev().attr("href", "mailto:" + email);
                                        d.close();
                                    });
                                }
                            }
                        ]
                    }
                );
            }
            function showCustomerDetails(customer, funding_list, utility_providers)
            {
                $(".recent_customer_details").remove();
                var detail_div = $("<div></div>").addClass("recent_customer_details");
                $("<span></span>").addClass("close").text("X")
                .click(function()
                {
                    $(this).parent().remove();
                }).appendTo(detail_div);
                $("<p></p>").addClass("recent_card_label").text("Recorded into System:").appendTo(detail_div);
                $("<p></p>").addClass("recent_card_value").text(customer.recorded_dt).appendTo(detail_div);

                
                $("<p></p>").addClass("recent_card_label").text("SP2 Time:").appendTo(detail_div);
                var booking_p = $("<p></p>").addClass("recent_card_value");
                var booking_date = moment(customer.booking_date, "YYYY-MM-DD");

                if(booking_date.year() === 1970)
                {
                    //booking_p.text("Survey has yet to be booked.");
                }
                else
                {
                    //booking_p.text(booking_date.format("MM/DD/YYYY") + (customer.booking_slot + ''));
                }
                booking_p.text(moment(customer.sp_two_time, "YYYY-MM-DD HH:mm:ss").format("MM/DD/YYYY hh:mm:ss A"));
                $("<span></span>").addClass("glyphicon").addClass("glyphicon-pencil").addClass("credits_edit_sp_two_pencil").click(function()
                {
                    var mom5 = moment(customer.sp_two_time, "YYYY-MM-DD HH:mm:ss");
                    var html = $("<div></div>");
                    $("<p></p>").text("SP2 Date:").appendTo(html);
                    $("<div></div>").attr("id", "dt909").addClass("input-append").addClass("date").attr("data-date", mom5.format("MM-DD-YYYY")).attr("data-date-format", "mm-dd-yyyy")
                    .append
                    (
                        $("<input />").addClass("span2").attr("size", "16").attr("type", "text").attr("value", mom5.format("MM-DD-YYYY"))                        
                    )
                    .append
                    (
                        $("<span></span>").addClass("add-on")
                        .append
                        (
                            $("<i></i>").addClass("icon-th")
                        )
                    )
                    .appendTo(html);

                    $("<p></p>").text("SP2 Time").appendTo(html);

                    var hour_sel = $("<select></select").attr("id", "credits_edit_sp2_hour");
                    for(var cnt = 1; cnt < 13; cnt++)
                    {
                        var hour_txt = cnt + '';
                        if(hour_txt.length === 1)
                        {
                            hour_txt = "0" + hour_txt;
                        }
                        $("<option></option>").attr("value", cnt + '').text(hour_txt).appendTo(hour_sel);
                    }

                    hour_sel.appendTo(html);

                    var min_sel = $("<select></select>").attr("id", "credits_edit_sp2_min");
                    $("<option></option>").attr("value", "0").text("00").appendTo(min_sel);
                    $("<option></option>").attr("value", "15").text("15").appendTo(min_sel);
                    $("<option></option>").attr("value", "30").text("30").appendTo(min_sel);
                    $("<option></option>").attr("value", "45").text("45").appendTo(min_sel);
                    min_sel.appendTo(html);

                    var am_pm_sel = $("<select></select>").attr("id", "credits_edit_sp2_ampm");
                    $("<option></option>").attr("value", "AM").text("AM").appendTo(am_pm_sel);
                    $("<option></option>").attr("value", "PM").text("PM").appendTo(am_pm_sel);
                    am_pm_sel.appendTo(html);
                    
                    min_sel.find("option").each(function(iii, eee)
                    {
                        if(($(eee).attr("value") * 1) === mom5.minutes())
                        {
                            $(eee).attr("selected", "selected");
                        }
                    });
                    hour_sel.find("option").each(function(iii, eee)
                    {
                        var hr = parseInt($(eee).val());
                        var curr_hr = mom5.hours();
                        if(curr_hr === 0)
                        {
                            curr_hr = 12;
                        }
                        if(curr_hr > 12)
                        {
                            curr_hr = curr_hr - 12;
                        }

                        if(hr === curr_hr)
                        {
                            $(eee).attr("selected", "selected")
                        }
                    });

                    if(mom5.hours() >= 12)
                    {
                        am_pm_sel.find("option").eq(1).attr("selected", "selected");
                    }

                    BootstrapDialog.show
                    (
                        {
                            "title": "Updating " + customer.customer_first_name + " " + customer.customer_last_name + "'s SP2 Time",
                            "message": html.html(),
                            "buttons":
                            [
                                {
                                    "label": "Cancel",
                                    "cssClass": "btn-danger",
                                    "action": function(d)
                                    {
                                        d.close();
                                    }
                                },
                                {
                                    "label": "Update it!",
                                    "cssClass": "btn-primary",
                                    "action": function(d)
                                    {
                                        /*"fn": "sp2_booking_doublecheck",
                                "sp2_date": $("#sp2_date").val(),
                                "sp2_hours": $("#sp2_hours").val(),
                                "sp2_mins": $("#sp2_mins").val(),
                                "pm": pee_em*/
                                        var mom = moment($(".bootstrap-dialog-body").find("input").first().val(), "MM-DD-YYYY");
                                        var hours = parseInt($(".bootstrap-dialog-body").find("select").first().val());
                                        if(hours === 12 && $(".bootstrap-dialog-body").find("select").last().val() === "AM")
                                        {
                                            hours = 0;
                                        }
                                        if(hours !== 12 && $(".bootstrap-dialog-body").find("select").last().val() === "PM")
                                        {
                                            hours += 12;
                                        }
                                        mom.add(hours, "hours");
                                        mom.add(parseInt($(".bootstrap-dialog-body").find("select").eq(1).val()), "minutes");
                                        $.post("/data", {"fn": "update_sp2_dt", "dt": mom.format("YYYY-MM-DD HH:mm:ss"), "rep_id": customer.rep_id, "identifier": customer.identifier}).done(function(rrr)
                                        {
                                            if(rrr.success)
                                            {
                                                customer.sp_two_time = mom.format("YYYY-MM-DD HH:mm:ss");
                                                showCustomerDetails(customer, funding_list, utility_providers);
                                                d.close();
                                            }
                                            else
                                            {
                                                window.alert("The SP2 time has already been reserved with a different customer for this rep.");
                                            }
                                        });
                                    }
                                }
                            ],
                            "onshown": function(d)
                            {
                                $.each(["keyup", "keydown", "keypress"], function(iii, evv)
                                {
                                    $(".bootstrap-dialog-body").find("input").on(evv, function(ev)
                                    {
                                        evv.preventDefault();
                                    });
                                });
                                $(".bootstrap-dialog-body").find(".date").datepicker
                                (
                                    {
                                        "autoClose": "true",
                                        "format": "mm-dd-yyyy"
                                    }
                                );
                            }
                        }
                    );

                })
                .appendTo(booking_p);
                booking_p.appendTo(detail_div);

                
                $("<p></p>").addClass("recent_card_label").text("Notes from rep:").appendTo(detail_div);
                var notes_p = $("<p></p>").addClass("recent_card_label");
                if(customer.opt_rep_notes === "")
                {
                    notes_p.text("(No notes were left)");
                }
                else
                {
                    notes_p.text(customer.opt_rep_notes);
                }
                notes_p.css("font-style", "italic").appendTo(detail_div);

                $("<p></p>").addClass("recent_card_label").text("Notes to rep:")
                .append
                (
                    $("<span></span>").addClass("glyphicon").addClass("glyphicon-pencil")
                    .click(function()
                    {
                        var that = $(this);
                        var txt = $.trim(that.parent().next().text());
                        var ta = $("<textarea></textarea>").addClass("edit_customer_notes_credit_screen_ta");
                        that.parent().next().html("");
                        ta.appendTo(that.parent().next());
                        ta.val(txt);
                        ta.off("blur");
                        ta.on("blur", function()
                        {
                            var that2 = $(this);
                            var new_txt = $.trim(that2.val());
                            that2.css("opacity", "0.2");
                            $.post("/data2", {"fn": "credit_screen_notes_check", "identifier": customer.identifier}).done(function(jaysawn)
                            {
                                if(jaysawn.has_notes)
                                {
                                    $.post("/data2", {"fn": "update_credit_screen_notes", "identifier": customer.identifier, "txt": new_txt}).done(function()
                                    {
                                        that2.remove();
                                        that.parent().next().html(new_txt.split("\n").join("<br />"));
                                        customer.admin_notes = new_txt;
                                    });
                                }
                                else
                                {
                                    $.post("./data", {"fn": "add_note_for_customer", "user_identifier": window.user_identifier, "identifier": customer.identifier, "has_file": "0", "txt": new_txt, "nkey": "credit_screen_notes", "comm_type": ""}).done(function()
                                    {
                                        that2.remove();
                                        that.parent().next().html(new_txt.split("\n").join("<br />"));
                                        customer.admin_notes = new_txt;
                                    });
                                }
                            });                            
                        });
                    })
                )
                .appendTo(detail_div);
                $("<p></p>").addClass("recent_card_value").html(customer.admin_notes.split("\n").join("<br />")).appendTo(detail_div);

                $("<p></p>").addClass("recent_card_label").text("Name:").appendTo(detail_div);
                $("<p></p>").addClass("recent_card_value").text(customer.customer_first_name + " " + customer.customer_last_name).appendTo(detail_div);
                if(customer.spouse_info !== null)
                {
                    $("<p></p>").addClass('recent_card_label').text("Spouse Info").appendTo(detail_div);
                    $("<p></p>").addClass("recent_card_value").html("Name: " + customer.spouse_info.first_name + " " + customer.spouse_info.last_name + "<br />Email: " + "<a href='mailto:" + customer.spouse_info.email + "'>" + customer.spouse_info.email + "</a><br />Last Four: " + customer.spouse_info.last_four)
                    .appendTo(detail_div);
                }
                
                //$("<p></p>").addClass("recent_card_label").text("Customer DOB:").appendTo(detail_div);
                //$("<p></p>").addClass("recent_card_value").text(moment(customer.customer_dob, "YYYY-MM-DD").format("MM/DD/YYYY")).appendTo(detail_div);
                $("<p></p>").addClass("recent_card_label").text("Email:").appendTo(detail_div);
                $("<p></p>").addClass("recent_card_value")
                .append
                (
                    $("<a></a>").text(customer.customer_email).attr("href", "mailto:" + customer.customer_email)
                )
                .append
                (
                    $("<span></span>").addClass("glyphicon").addClass("glyphicon-pencil").addClass("ud_customer_email")
                    .click(function()
                    {
                            editCustomerEmail($(this), customer);
                    })
                )
                .appendTo(detail_div);
                
                $("<p></p>").addClass("recent_card_label").text("Phone Number:").appendTo(detail_div);
                $("<p></p>").addClass("recent_card_value").text(customer.customer_phone_formatted).appendTo(detail_div).attr("href", "tel:" + customer.customer_phone).appendTo(detail_div);
                $("<p></p>").addClass("recent_card_label").text("Address:").appendTo(detail_div);

                var utility_info_p = $("<p></p>").addClass("recent_card_value");
                var utility_provider_text = "";
                $.each(utility_providers, function(i, utility_provider)
                {
                    if(utility_provider.value === customer.utility_provider)
                    {
                        utility_provider_text = utility_provider.value_friendly;
                    }
                });
                if(customer.usage_info_available)
                {
                    utility_info_p
                    .append
                    (
                        $("<span></span>").text("Usage Months: " + (customer.usage_months + ''))
                    )
                    .append
                    (
                        $("<br />")
                    )
                    .append
                    (
                        $("<span></span>").text("Total KW Hrs: " + customer.total_kwhs.toFixed(2))
                    )
                    .append
                    (
                        $("<br />")
                    )
                    .append
                    (
                        $("<span></span>").text("Total Spent: $" + customer.total_dollars.toFixed(2))
                    )
                    .append
                    (
                        $("<br />")
                    )
                    .append
                    (
                        $("<span></span>").text("Highest Monthly Bill: $" + customer.highest_amount.toFixed(2))
                    );
                    utility_info_p.append
                    (
                        $("<br />")
                    )
                    .append
                    (
                        $("<br />")
                    )
                    .append
                    (
                        $("<b></b>").addClass("recent_card_label").text("Utility Provider and #:")
                    )
                    .append
                    (
                        $("<br />")
                    )
                    .append
                    (
                        $("<span></span>").text(utility_provider_text + " - " + customer.customer_utility_account_number)
                    );
                }
                else
                {
                    utility_info_p.append
                    (
                        $("<b></b>").addClass("recent_card_label").text("Utility Provider and #:")
                    )
                    .append
                    (
                        $("<br />")
                    )
                    .append
                    (
                        $("<span></span>").text(utility_provider_text + " - " + customer.customer_utility_account_number)
                    );
                }

                $("<p></p>").addClass("recent_card_value")
                .append
                (
                    $("<span></span>").text(customer.customer_address)
                    
                )
                .append
                (
                    $("<br />")
                )
                .append
                (
                    $("<span></span>").text(customer.customer_city + ", " + customer.customer_state)
                )
                .append
                (
                    $("<br />")
                )
                .append
                (
                    $("<span></span>").text(customer.customer_postal)
                )
                .append
                (
                    $("<span></span>").addClass("glyphicon").addClass("glyphicon-pencil")
                    .click(function()
                    {
                        var that = $(this);
                        var prev = that.prev();
                        var html = $("<div></div>");
                        $("<p></p>").text("Postal Code:").appendTo(html);
                        $("<input />").addClass("input_edit_postal_credits_screen").attr("type", "text").attr("value", customer.customer_postal).appendTo(html);

                        BootstrapDialog.show
                        (
                            {
                                "title": "Updating " + customer.customer_first_name + " " + customer.customer_last_name + "'s Postal Code",
                                "message": html.html(),
                                "buttons":
                                [
                                    {
                                        "label": "Cancel",
                                        "cssClass": "btn-danger",
                                        "action": function(d)
                                        {
                                            d.close();
                                        }
                                    },
                                    {
                                        "label": "Update it!",
                                        "cssClass": "btn-primary",
                                        "action": function(d)
                                        {
                                            var postal_val = $(".input_edit_postal_credits_screen").val().digits();
                                            if(postal_val === null || postal_val.length !== 5)
                                            {
                                                window.alert("The postal code must be 5 digits.");
                                                return;
                                            }
                                            $.post("/data", {"fn": "update_cust_postal", "identifier": customer.identifier, "postal": postal_val}).done(function()
                                            {
                                                customer.customer_postal = postal_val;
                                                prev.text(postal_val);
                                                d.close();
                                            });
                                        }
                                    }
                                ]
                            }
                        )

                    })
                )
                .append
                (
                    $("<br />")
                )
                .append
                (
                    $("<br />")
                )
                .append
                (
                    $("<p></p>").addClass("recent_card_label").text("Utility Info:")
                )
                .append
                (
                    utility_info_p
                )
                .appendTo(detail_div);
                
                //$("<p></p>").addClass("recent_card_label").text("Annual Income:").appendTo(detail_div);
                //var income_val = customer.annual_income;
                //if(income_val === "-1")
                //{
                 //   income_val = "Not Available";
               // }
                //else
                //{
                 //   income_val = currencyFormat(parseFloat(customer.annual_income));
                //}
                //$("<p></p>").addClass("recent_card_value").text(income_val).appendTo(detail_div);

                //$("<p></p>").addClass("recent_card_label").text("Monthly Mortgage Payment:").appendTo(detail_div);
                //var mortgage_val = customer.mortgage_payment;
                //if(mortgage_val === "-1")
                //{
                 //   mortgage_val = "Not Available";
                //}
                //else
                //{
                 //   mortgage_val = currencyFormat(parseFloat(customer.mortgage_payment));
                //}
                //$("<p></p>").addClass("recent_card_value").text(mortgage_val).appendTo(detail_div);

                if(customer.care)
                {
                    $("<span></span>").addClass("label").addClass("label-warning").text("Care/Discount").appendTo(detail_div);
                    $("<br />").appendTo(detail_div);
                }



                $("<hr />").css("border-top", "1px solid #000").appendTo(detail_div);
                if(customer.utility_provider === "san_diego_gas_&_electric")
                {
                    $("<p></p>").addClass("recent_card_label").text("Meter Number:").appendTo(detail_div);
                    if(customer.meter_number === null)
                    {
                        $("<p></p>").addClass("recent_card_value").addClass("sdge_meter_prompt")
                        .append
                        (
                            $("<input />").attr("type", "text").attr("placeholder", "Provide the SDGE Meter #")
                        )
                        .append
                        (
                            $("<br />")
                        )
                        .append
                        (
                            $("<br />")
                        )
                        .append
                        (
                            $("<button></button>").addClass("btn").addClass("btn-success").attr("type", "button").text("Save Meter #").click(function()
                            {
                                $(this).css("opacity", "0.5").text("Saving...")
                                var that = $(this);
                                var m_box = that.prevAll("input").first();
                                var m_num = $.trim(m_box.val());
                                $.post("./data", {"fn": "set_meter_number", "identifier": customer.identifier, "number": m_num}).done(function(r)
                                {
                                    customer.meter_number = m_num;
                                    m_box.replaceWith($("<span></span>").text(m_num));
                                    that.remove();
                                });
                            })
                        )
                        .appendTo(detail_div);
                    }
                    else
                    {
                        $("<p></p>").addClass("recent_card_value").text(customer.meter_number).appendTo(detail_div);
                    }
                }
                $("<p></p>").addClass("recent_card_label").text("Rep Name:").appendTo(detail_div);
                $("<p></p>").addClass("recent_card_value").text(customer.rep.name).appendTo(detail_div);
                $("<p></p>").addClass("recent_card_label").text("Rep Phone:").appendTo(detail_div);
                $("<p></p>").addClass("recent_card_value")
                .append
                (
                    $("<a></a>").attr("href", "tel:" + customer.rep.phone).text(customer.rep.phone_formatted)
                ).appendTo(detail_div);


                if(customer.credit_score > -1)
                {
                    $("<p></p>").addClass("recent_card_label").text("Credit Score:").appendTo(detail_div);
                    $("<p></p>").addClass("recent_card_value").text(customer.credit_score + '').appendTo(detail_div);
                }
                if(customer.last_four > -1)
                {
                    $("<p></p>").addClass("recent_card_label").text("Last 4:").appendTo(detail_div);
                    $("<p></p>").addClass("recent_card_value").text(customer.last_four + '').appendTo(detail_div);
                }

                $("<div></div>").addClass("recent_card_label").text("Fund:")
                .append
                (
                    $("<br />")
                )
                .append
                (
                    $("<div></div>").addClass("dropdown")
                    .append
                    (
                        $("<button></button>").attr("type", "button").addClass("btn").addClass("btn-default").text("N/A").attr("data-toggle", "dropdown").attr("aria-expanded", "true")
                        .append
                        (
                            $("<span></span>").addClass("caret")
                        )
                    )
                    .append
                    (
                        $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu").attr("aria-labelledby", "kk")
                    )
                )
                .appendTo(detail_div);

                $("<div></div>").addClass("recent_card_label").text("Interest Rate:")
                .append
                (
                    $("<br />")
                )                
                .append
                (
                    $("<div></div>").addClass("dropdown").attr("id", "funding_tier_dd")
                    .append
                    (
                        $("<button></button>").attr("type", "button").addClass("btn").addClass("btn-default").text("N/A").attr("data-toggle", "dropdown").attr("aria-expanded", "true")
                        .append
                        (
                            $("<span></span>").addClass("caret")
                        )
                    )
                    .append
                    (
                        $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu").attr("aria-labelledby", "kk")
                        .append
                        (
                            $("<li></li>").attr("role", "presentation").attr("id", "funding_tier_n/a")
                            .append
                            (
                                $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text("n/a")
                            )
                        )
                    )
                )
                .appendTo(detail_div);

                $("<div></div>").addClass("recent_card_label").text("Income Verification Required?:")
                .append
                (
                    $("<br />")
                )                
                .append
                (
                    $("<div></div>").addClass("dropdown").attr("id", "income_required_dd")
                    .append
                    (
                        $("<button></button>").attr("type", "button").addClass("btn").addClass("btn-default").text("Choose One").attr("data-toggle", "dropdown").attr("aria-expanded", "true")
                        .append
                        (
                            $("<span></span>").addClass("caret")
                        )
                    )
                    .append
                    (
                        $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu").attr("aria-labelledby", "kk")
                        .append
                        (
                            $("<li></li>").attr("role", "presentation").attr("id", "income_verification_1")
                            .append
                            (
                                $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text("Yes")
                            )
                        )
                        .append
                        (
                            $("<li></li>").attr("role", "presentation").attr("id", "income_verification_0")
                            .append
                            (
                                $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text("No")
                            )
                        )                        
                    )
                    .append
                    (
                        $("<input />").attr("type", "hidden").attr("id", "income_verification_required")
                    )
                )
                .appendTo(detail_div);

                var ul = detail_div.find("ul").first();
                $.each(funding_list, function(i, fund)
                {
                    if(fund["active"] === true)
                    {
                        var li = $("<li></li>").attr("role", "presentation").attr("id", "fund_" + fund.value);
                        var a = $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text(fund.value_friendly);
                        a.appendTo(li);

                        li.click(function()
                        {
                            li.parent().prevAll("button").first().animate({"opacity": 0.3}, 250, function()
                            {
                                customer.fund = li.attr("id").replace("fund_", "");
                                $.post("./data", {"fn": "set_fund_for_booking", "identifier": customer.booking_identifier, "fund": customer.fund}).done(function(resp)
                                {                                    
                                    li.parent().prevAll("button").first().text(li.text());
                                    $("<span></span>").addClass("caret").appendTo(li.parent().prevAll("button").first());
                                    li.parent().prevAll("button").first().animate({"opacity": 1.0}, 250);
                                    showCustomerDetails(customer, funding_list, utility_providers);
                                });
                            });
                        }).appendTo(ul);
                    }
                });

                var ul2 = detail_div.find("#funding_tier_dd").find("ul");
                $.each(funding_list, function(i, fund)
                {
                    if(fund.value === customer.fund && customer.fund !== "n/a")
                    {
                        $.each(fund.tier_data, function(ii, tier)
                        {
                            var li = $("<li></li>").attr("role", "presentation").data("fund-name", tier.name);
                            $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text(tier.name).appendTo(li);
                            li.click(function()
                            {
                                li.parent().parent().css("opacity", "0.2");
                                $.post("/data", {"fn": "set_funding_tier_for_booking", "identifier": customer.booking_identifier, "tier": li.data("fund-name")}).done(function(rrr)
                                {
                                    li.parent().parent().css("opacity", "1.0")
                                    customer.funding_tier = li.data("fund-name");
                                    li.parent().parent().find("button").text(tier.name);
                                    $("<span></span>").addClass("caret").appendTo(li.parent().parent().find("button"));
                                });
                            });
                            li.appendTo(ul2);
                        });
                    }
                });

                $("<div></div>").addClass("recent_card_label").text("Trust Docs:")
                .append
                (
                    $("<br />")
                )
                .append
                (
                    $("<div></div>").addClass("dropdown")
                    .append
                    (
                        $("<button></button>").attr("type", "button").addClass("btn").addClass("btn-default").text("Not Sure").attr("data-toggle", "dropdown").attr("aria-expanded", "true")
                        .append
                        (
                            $("<span></span>").addClass("caret")
                        )
                    )
                    .append
                    (
                        $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu").attr("aria-labelledby", "kk")
                    )
                )
                .appendTo(detail_div);

                var trust_vals = ["n/a", "yes", "no"];
                var trust_vals_friendly = ["Not Sure", "Not Required", "Required"];

                ul3 = detail_div.find("ul").eq(3);

                $.each(trust_vals, function(i, trust_val)
                {
                    var li = $("<li></li>").attr("role", "presentation").attr("id", "trust_docs_value_of_" + trust_val);
                    var a = $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text(trust_vals_friendly[i]);
                    a.appendTo(li);

                    li.click(function()
                    {
                        $(this).parent().prevAll("button").first().animate({"opacity": 0.3}, 250, function()
                        {
                            customer.trust_docs = li.attr("id").replace("trust_docs_value_of_", "");
                            $.post("./data", {"fn": "set_trust_for_booking", "identifier": customer.booking_identifier, "trust": customer.trust_docs}).done(function(resp)
                            {
                                li.parent().prevAll("button").first().text(li.text());
                                $("<span></span>").addClass("caret").appendTo(li.parent().prevAll("button").first());
                                li.parent().prevAll("button").first().animate({"opacity": 1.0}, 250);
                            });
                        });
                    }).appendTo(ul3);
                });

                var ul4 = detail_div.find("ul").eq(2);
                ul4.find("li").each(function(ii, ee)
                {
                    $(ee).click(function()
                    {
                        var btn = $(ee).parent().prevAll("button").first();
                        var inp = $(ee).parent().nextAll("input").first();
                        var new_val = $(ee).attr("id").replace("income_verification_", "");
                        inp.val(new_val).attr("value", new_val);
                        btn.css("opacity", "0.2");
                        $.post("/data", {"fn": "set_income_verification_for_customer", "identifier": customer.identifier, "value": new_val}).done(function(respon)
                        {
                            btn.css("opacity", "1.0");
                            btn.text($(ee).text());
                            $("<span></span>").addClass("caret").appendTo(btn);
                        });
                    });
                });

                if(customer.last_four === -1)
                {
                    $("<p></p>").addClass("recent_card_label").text("Last 4 (SS#):").appendTo(detail_div);
                    $("<div></div>").addClass("recent_card_value")
                    .append
                    (
                        $("<input />").attr("type", "text").attr("placeholder", "XXXX").css("float", "left")
                    )
                    .append
                    (
                        $("<span></span>").addClass("inner_card_update").text("Update Last 4")
                        .click(function()
                        {
                            var v = $.trim($(this).prev().val());
                            $.post("./data", {"fn": "update_last_four", "identifier": customer.identifier, "val": v}).done(function(bestp)
                            {
                                customer.last_four = parseInt(v);
                                $("#recent_customer_" + customer.identifier).trigger("click");
                            });
                        })
                    )
                    .appendTo(detail_div);
                }

                $.each(funding_list, function(i, fund)
                {
                    if(fund.value === customer.fund && fund.value !== "n/a")
                    {
                        detail_div.find("button").first().text(fund.value_friendly);
                        $("<span></span>").addClass("caret").appendTo(detail_div.find("button").first());
                    }
                });

                $.each(trust_vals, function(i, trust_val)
                {
                    if(trust_val === customer.trust_docs && trust_val !== "n/a")
                    {
                        detail_div.find("button").eq(1).text(trust_vals_friendly[i]);
                        $("<span></span>").addClass("caret").appendTo(detail_div.find("button").eq(1));
                    }
                });
                if(parseFloat(customer.approval_amount) < parseFloat(0))
                {
                    $("<div></div>").attr("id", "approval_amount_div")
                    .append
                    (
                        $("<span></span>")
                        .append
                        (
                            $("<b></b>").text("Approval Amount:")
                        )
                    )
                    .append
                    (
                        $("<input />").attr("type", "text").attr("id", "credit_approval_amount")
                    )
                    .append
                    (
                        $("<span></span>").addClass("label").addClass("label-primary").text("Save")
                        .click(function()
                        {
                            var allowed_chars = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "."];
                            var chars = $("#credit_approval_amount").val().split("");
                            var new_amt = "";
                            $.each(chars, function(iii, char)
                            {
                                if(allowed_chars.indexOf(char) > -1)
                                {
                                    new_amt += char;
                                }
                            });
                            if(new_amt.length === 0)
                            {
                                window.alert("Please provide a numeric value for approval amount.");
                                return;
                            }
                            $("#approval_amount_div").css("opacity", "0.1");
                            $.post("/data", {"fn": "update_approval_amount", "amount": parseFloat(new_amt).toFixed(2), "identifier": customer.identifier}).done(function(rr)
                            {
                                customer.approval_amount = parseFloat(new_amt).toFixed(2);
                                $("#recent_customer_" + customer.identifier).trigger("click");
                            });
                        })
                    )
                    .appendTo(detail_div);
                }
                else
                {
                    $("<div></div>").attr("id", "approval_amount_div")
                    .append
                    (
                        $("<b></b>").text("Approval Amount:")
                    )
                    .append
                    (
                        $("<p></p>").text(currencyFormat(parseFloat(customer.approval_amount)))
                    )
                    .appendTo(detail_div);
                }
                $("<span></span>").addClass("inner_card_cancel").text("Cancel Customer").click(function()
                {
                    if(window.confirm("Are you sure you would like to cancel this customer?\nTHIS WILL ALSO CANCEL THE CUSTOMER'S SURVEY APPOINTMENT"))
                    {
                        $.post("/data", {"fn": "cancel_booking", "identifier": customer.booking_identifier}).done(function(resp)
                        {
                            $("#recent_customer_" + customer.identifier).next().remove();
                            $("#recent_customer_" + customer.identifier).remove();
                        });
                    }
                }).appendTo(detail_div);

                $("<button></button>").attr("type", "button").addClass("btn").addClass("btn-default").addClass("usage_reconfig").text("(Re)Configure Usage")
                .prepend
                (
                    $("<span></span>").addClass("symbola").addClass("glyphicon").html("&#128161;")
                )
                .click(function()
                {
                    showUsageReconfigurationElements(customer);
                })
                .appendTo(detail_div);
                $("<button></button>").attr("type", "button").addClass("btn").addClass("btn-success").addClass("proposal_sub_btn").text("Submit Customer for Proposal").click(function()
                {
                    submitCustomerForProposal(customer);
                }).appendTo(detail_div);

                detail_div.insertAfter($("#recent_customer_" + customer.identifier));
                detail_div.find("#funding_tier_dd").find("button").first().text(customer.funding_tier).append($("<span></span>").addClass("caret"));

            }
            function submitCustomerForProposal(customer)
            {
                if(customer.last_four === -1)
                {
                    window.alert("You must identity the last four digits of the customer's social security number.");
                    return;
                }
                if(customer.utility_provider === "san_diego_gas_&_electric" && customer.meter_number === null && false)
                {
                    window.alert("SDGE customers must have their meter number provided.");
                    return;
                }
                if(!customer.usage_info_available)
                {
                    window.alert("The customer's usage information must first be updated.");
                    return;
                }
                if((customer.usage_months * 1) < 1)
                {
                    window.alert("You must first specify the # of usage months available for the customer.");
                    return;
                }
                if((customer.total_kwhs * 1) < 0.1)
                {
                    window.alert("You must specify the customer's total KW hours measured in the usage configuration screen.");
                    return;
                }
                if((customer.total_dollars * 1) < 0.1)
                {
                    window.alert("You must first specify the customer's total dollar amount in the usage configuration screen.");
                    return;
                }
                if((customer.highest_amount * 1) < 0.1)
                {
                    window.alert("You must first specify the customer's highest dollar amount in the usage configuration screen.");
                    return;
                }
                if(customer.fund === "n/a")
                {
                    window.alert("You must first specify the customer's fund.");
                    return;
                }
                if($("#funding_tier_dd").find("ul").find("li").size() > 1)
                {
                    if($("#funding_tier_dd").find("button").first().text().toLowerCase() === "n/a")
                    {
                        window.alert("You must first choose the interest rate.");
                        return;
                    }
                }
                if(parseFloat(customer.approval_amount) < 0)
                {
                    if(window.confirm("Are you sure you would like to approve the customer without providing an approval amount?"))
                    {

                    }
                    else
                    {
                        return;
                    }
                }
                var submit = function(customer)
                {
                    $.post("./data", {"fn": "prep_customer_for_proposal_submission", "identifier": customer.identifier}).done(function(resp)
                    {
                        $("#recent_customer_" + customer.identifier).remove();
                        $(".recent_customer_details").remove();
                    });
                };
                if(["1", "0"].indexOf($("#income_verification_required").val()) === -1)
                {
                    window.alert("Please specify whether income verification is required.");
                    return;
                }
                if(customer.trust_docs === "n/a")
                {
                    if(window.confirm("Are you sure you would like to proceed with submitting the customer to the proposal stage? The Trust Docs for this customer are still marked as \"Not Sure\"?"))
                    {
                        submit(customer);
                    }
                    else
                    {
                        return;
                    }
                }
                else
                {
                    submit(customer);
                }
            }
            function showUsageReconfigurationElements(customer)
            {
                $(".usage_hr").nextAll("*").each(function(i, e)
                {
                    $(e).remove();
                });
                $(".usage_hr").remove();
                $("<hr />").addClass("usage_hr").appendTo($(".recent_customer_details"));
                $("<b></b>").addClass("credits_usage_b").text("Highest Monthly Bill:").appendTo($(".recent_customer_details"));
                $("<p></p>").addClass("credits_usage_p").text(currencyFormat(customer.highest_amount)).appendTo($(".recent_customer_details"));
                $("<b></b>").addClass("credits_usage_b").text("Total Dollars Spent per Annum:").appendTo($(".recent_customer_details"));
                $("<p></p>").addClass("credits_usage_p").text(currencyFormat(customer.total_dollars)).appendTo($(".recent_customer_details"));
                $("<b></b>").addClass("credits_usage_b").text("Total Kwhs per Annum:").appendTo($(".recent_customer_details"));
                $("<p></p>").addClass("credits_usage_p").text(customer.total_kwhs).appendTo($(".recent_customer_details"));
                var dropdown = $("<div></div>").addClass("dropdown");
                $("<p></p>").addClass("credits_usage_p").text("Has the customer lived in home for 12 months?").appendTo($(".recent_customer_details"));
                $("<button></button>").addClass("btn").addClass("btn-primary").addClass("dropdown-toggle").attr("type", "button").attr("data-toggle", "dropdown")
                .text("Choose One")
                .append($("<span></span>").addClass("caret"))
                .appendTo(dropdown);
                $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu")
                .append
                (
                    $("<li></li>").attr("role", "presentation").attr("id", "credits_twelve_months_1")
                    .append
                    (
                        $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text("Yes")
                    )
                )
                .append
                (
                    $("<li></li>").attr("role", "presentation").attr("id", "credits_twelve_months_0")
                    .append
                    (
                        $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text("No")
                    )
                )
                .appendTo(dropdown);

                dropdown.find("li").each(function(i, e)
                {
                    $(e).click(function()
                    {
                        var that = $(this);
                        var opt = that.attr("id").replace("credits_twelve_months_", "");
                        $("#credits_reconfigure_twelve_months_1, #credits_reconfigure_twelve_months_0").css("display", "none");
                        $("#credits_reconfigure_twelve_months_" + opt).css("display", "block");                        
                        var btn = that.closest(".dropdown").find("button");
                        btn.text(that.text());
                        $("<span></span>").addClass("caret").appendTo(btn);
                    });
                });

                dropdown.appendTo($(".recent_customer_details"));                

                $("<div></div>").attr("id", "credits_reconfigure_twelve_months_1")
                .append
                (
                    $("<p></p>").addClass("credits_usage_p").text("Total Kwhs Used in Last 12 Months:")
                )
                .append
                (
                    $("<input />").attr("type", "text").addClass("credits_usage_input")
                )
                .append
                (
                    $("<p></p>").addClass("credits_usage_p").text("Total Dollars Spent in Last 12 Months:")
                )
                .append
                (
                    $("<input />").attr("type", "text").addClass("credits_usage_input")
                )
                .append
                (
                    $("<p></p>").addClass("credits_usage_p").text("Highest Single Bill Amount:")
                )
                .append
                (
                    $("<input />").attr("type", "text").addClass("credits_usage_input")
                )
                .appendTo($(".recent_customer_details"));

                $("<div></div>").attr("id", "credits_reconfigure_twelve_months_0")
                .append
                (
                    $("<p></p>").addClass("credits_usage_p").text("Average Kwhs Per Month:")
                )
                .append
                (
                    $("<input />").attr("type", "text").addClass("credits_usage_input")
                )
                .append
                (
                    $("<p></p>").addClass("credits_usage_p").text("Average Dollar Amount Per Month:")
                )
                .append
                (
                    $("<input />").attr("type", "text").addClass("credits_usage_input")
                )
                .append
                (
                    $("<p></p>").addClass("credits_usage_p").text("Anticipated Highest Bill Amount:")
                )
                .append
                (
                    $("<input />").attr("type", "text").addClass("credits_usage_input")
                )
                .appendTo($(".recent_customer_details"));



                /*var t = $("<table></table>").addClass("reconfigure_usage_table");
                var tb = $("<tbody></tbody>");
                $("<tr></tr>")
                .append
                (
                    $("<th></th>").text(" ")
                )
                .append
                (
                    $("<th></th>").text("Amount Spent")
                )
                .append
                (
                    $("<th></th>").text("KW Hours")
                )
                .appendTo(tb);
                $.each(["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], function(iii, eee)
                {
                    var tee_r = $("<tr></tr>");
                    $("<td></td>").text(eee).appendTo(tee_r);
                    $("<td></td>").append
                    (
                        $("<input />").attr("type", "text").attr("placeholder", "250.00")
                    ).appendTo(tee_r);
                    $("<td></td>").append
                    (
                        $("<input />").attr("type", "text").attr("placeholder", "122.21")
                    ).appendTo(tee_r);

                    if(Object.keys(customer.usage_data).indexOf(eee) > -1)
                    {
                        tee_r.find("input").first().val(customer.usage_data[eee].dollars.toFixed(2));
                        tee_r.find("input").eq(1).val(customer.usage_data[eee].kwhs + '');
                    }

                    tee_r.appendTo(tb);
                });
                tb.appendTo(t);
                $("<form></form").addClass("form-horizontal").attr("role", "form").attr("action", "#").attr("method", "GET").submit(function()
                {
                    return false;
                })

                .append
                (
                    t
                ).appendTo($(".recent_customer_details"));

                for(var i = 1; i < 13; i++)
                {
                    var num_str = i + '';
                    if(num_str.length === 1)
                    {
                        num_str = "0" + num_str;
                    }

                    var option = $("<option></option>").attr("value", (i + '')).text(num_str);
                    option.appendTo($(".recent_customer_details").find("select"));
                }

                if(customer.usage_info_available)
                {
                    var months = customer.usage_months + '';

                    $(".recent_customer_details").find("option").each(function(i, e)
                    {
                        if($(e).attr("value") === months)
                        {
                            $(".recent_customer_details").find("select").first()[0].selectedIndex = i;
                        }
                    });

                    $("#reconfigure_total_kwhs").val(customer.total_kwhs.toFixed(2));
                    $("#reconfigure_total_dollars").val(customer.total_dollars.toFixed(2));
                    $("#reconfigure_highest_amount").val(customer.highest_amount.toFixed(2));
                }*/

                $("<button></button>").addClass("reconfigure_usage_save").attr("type", "button").addClass("btn").addClass("btn-default").text("Update")
                .click(function()
                {
                    updateCustomerUsage2(customer);
                }).appendTo($(".recent_customer_details"));
            }
            function updateCustomerUsage2(customer)
            {
                var kv_value = "";
                if($("#credits_reconfigure_twelve_months_1").css("display").toLowerCase() === "block")
                {
                    kv_value = "real";
                    var error = false;
                    var error_el = null;
                    $.each([0, 1, 2], function(i, e)
                    {
                        if(error)
                        {
                            return;
                        }
                        var el = $(".credits_usage_input").eq(e);
                        var trimmed = $.trim(el.val());
                        el.val(trimmed);
                        var new_val = el.val();
                        while(new_val.indexOf("$") > -1 || new_val.indexOf(",") > -1)
                        {
                            new_val = new_val.replace("$", "");
                            new_val = new_val.replace(",", "");
                        }
                        el.val(new_val);

                        var new_val2 = el.val();
                        var parsed = parseFloat(new_val2);
                        if(Number.isNaN(parsed))
                        {
                            error = true;
                            error_el = el;
                        }
                        else
                        {
                            el.val(new_val2);
                        }
                    });
                    if(error)
                    {
                        window.alert("The amount for " + error_el.prev().text() + " could not be understood.");
                        return;
                    }
                }
                else
                {
                    kv_value = "estimated";
                    var error = false;
                    var error_el = null;
                    $.each([3, 4, 5], function(i, e)
                    {
                        if(error)
                        {
                            return;
                        }
                        var el = $(".credits_usage_input").eq(e);
                        var trimmed = $.trim(el.val());
                        el.val(trimmed);
                        var new_val = el.val();
                        while(new_val.indexOf("$") > -1 || new_val.indexOf(",") > -1)
                        {
                            new_val = new_val.replace("$", "");
                            new_val = new_val.replace(",", "");
                        }
                        el.val(new_val);

                        var new_val2 = el.val();
                        var parsed = parseFloat(new_val2);
                        if(Number.isNaN(parsed))
                        {
                            error = true;
                            error_el = el;
                        }
                        else
                        {
                            el.val(new_val2);
                        }
                    });
                    if(error)
                    {
                        window.alert("The amount for " + error_el.prev().text() + " could not be understood.");
                        return;
                    }
                }
                $(".reconfigure_usage_save").text("Saving...");
                var u_data = {};
                customer.total_kwhs = parseFloat(0);
                customer.total_dollars = parseFloat(0);
                customer.highest_amount = parseFloat(0);
                
                customer.usage_data = u_data;
                customer.usage_months = 12
                customer.usage_info_available = true;

                if(typeof(u_data) + '' === "object")
                {
                    u_data = JSON.stringify(u_data);
                }
                if($("#credits_reconfigure_twelve_months_1").css("display").toLowerCase() === "block")
                {
                    customer.total_kwhs = parseFloat($(".credits_usage_input").eq(0).val());
                    customer.total_dollars = parseFloat($(".credits_usage_input").eq(1).val());
                    customer.highest_amount = parseFloat($(".credits_usage_input").eq(2).val());
                }
                else
                {
                    customer.total_kwhs = parseFloat($(".credits_usage_input").eq(3).val()) * parseFloat("12");
                    customer.total_dollars = parseFloat($(".credits_usage_input").eq(4).val()) * parseFloat("12");
                    customer.highest_amount = parseFloat($(".credits_usage_input").eq(5).val());
                }
                
                $.post("/kv/real_or_estimated_" + customer.identifier, {"value": kv_value}).done(function()
                {
                    $.post("./data", {"fn": "update_customer_usage", "identifier": customer.identifier, "new_total_kwhs": customer.total_kwhs.toFixed(2), "new_total_dollars": customer.total_dollars.toFixed(2), "new_highest_amount": customer.highest_amount.toFixed(2), "new_usage_months": customer.usage_months + '', "new_usage_data": u_data}).done(function(resp)
                    {
                        $(".close").eq(0).trigger("click");
                    });
                });
            }
            function updateCustomerUsage(customer)
            {
                var u_data = {};
                var months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
                $.each(months, function(i, month)
                {
                    var tr = $(".reconfigure_usage_table").find("tr").eq(i + 1);
                    u_data[month] = {"dollars": parseFloat(tr.find("td").eq(1).find("input").val().replace("$", "")), "kwhs": parseFloat(tr.find("td").eq(2).find("input").val().replace("$", ""))}
                });
                var ret_early = false;
                var ret_msg = "";
                $.each(Object.keys(u_data), function(i, month)
                {
                    if(ret_early)
                    {
                        return;
                    }
                    if(Number.isNaN(u_data[month]["dollars"]))
                    {
                        ret_early = true;
                        ret_msg = "The dollar amount for the month of " + month + " is invalid.";
                    }
                    else if(Number.isNaN(u_data[month]["kwhs"]))
                    {
                        ret_early = true;
                        ret_msg = "The KW hour amount for the month of " + month + " is invalid.";
                    }
                });
                if(ret_early)
                {
                    window.alert(ret_msg);
                    return;
                }

                customer.total_kwhs = parseFloat(0);
                customer.total_dollars = parseFloat(0);
                customer.highest_amount = parseFloat(0);
                $.each(Object.keys(u_data), function(i, month)
                {
                    customer.total_kwhs += u_data[month]["kwhs"];
                    customer.total_dollars += u_data[month]["dollars"];
                    if(customer.highest_amount < u_data[month]["dollars"])
                    {
                        customer.highest_amount = u_data[month]["dollars"];
                    }
                });
                customer.usage_data = u_data;
                customer.usage_months = 12
                customer.usage_info_available = true;

                $(".reconfigure_usage_save").text("Saving...");
                if(typeof(u_data) + '' === "object")
                {
                    u_data = JSON.stringify(u_data);
                }
                $.post("./data", {"fn": "update_customer_usage", "identifier": customer.identifier, "new_total_kwhs": customer.total_kwhs.toFixed(2), "new_total_dollars": customer.total_dollars.toFixed(2), "new_highest_amount": customer.highest_amount.toFixed(2), "new_usage_months": customer.usage_months + '', "new_usage_data": u_data}).done(function(resp)
                {
                    $(".close").eq(0).trigger("click");
                });
            }
            function reassignCustomers()
            {
                var cust_name = window.prompt("Please enter the name of the customer you would like to reassign:");
                $.post("./data", {"fn": "search_customers_for_reassignment", "query": cust_name}).done(function(resp)
                {
                    var html = $("<div></div>");
                    var header = $("<h2></h2>");
                    if(resp.results.length === 0)
                    {
                        header.text("No matches found...");

                    }
                    else
                    {
                        header.text("Possible matches:");
                        $("<hr />").appendTo(html);
                        var ul = $("<ul></ul>").addClass("customer_swap_matches_ul");
                        $.each(resp.results, function(i, result)
                        {
                            var li = $("<li></li>").addClass("swap_match").attr("id", "match_" + result.identifier);
                            li.text(result.name).appendTo(ul);
                        });
                        ul.appendTo(html);
                    }

                    BootstrapDialog.show
                    (
                        {
                            "title": "Search results",
                            "message": $("<div></div>").append(html).html(),
                            "buttons":
                            [
                                {
                                    "label": "Nevermind",
                                    "cssClass": "btn-danger",
                                    "action": function(dialog)
                                    {
                                        dialog.close();
                                    }
                                }
                            ],
                            "onshown": function(dialog)
                            {
                                $(".swap_match").each(function(i, e)
                                {
                                    var li = $(e);
                                    li.click(function()
                                    {
                                        if(window.confirm("Are you sure you would like reassign " + li.text() + "?"))
                                        {
                                            var prospective_rep_id = window.prompt("Please enter the RepID of the new rep you would like to assign to " + li.text() + ":");
                                            $.post("./data", {"fn": "rep_id_to_name", "rep_id": prospective_rep_id}).done(function(resp)
                                            {
                                                if(resp.name !== "")
                                                {
                                                    if(window.confirm(li.text() + " will be reassigned to " + resp.name + ", sounds good?"))
                                                    {
                                                        var grand_parent = li.parent().parent();
                                                        grand_parent.empty();
                                                        $("<h2></h2>").text("Attempting reassignment...").prependTo(grand_parent);
                                                        $.post("./data", {"fn": "reassign_customer", "identifier": li.attr("id").replace("match_", ""), "rep_id": prospective_rep_id}).done(function(resp2)
                                                        {
                                                            if(resp2.success === true)
                                                            {
                                                                grand_parent.empty();
                                                                $("<h2></h2>").text("The reassignment was successful!").appendTo(grand_parent);
                                                                $(".bootstrap-dialog-footer").find("button").removeClass("btn-danger").addClass("btn-success").text("OK");
                                                            }
                                                            else
                                                            {
                                                                grand_parent.empty();
                                                                $("<h2></h2>").text("Oh no, the reassignment was not successful :/").appendTo(grand_parent);
                                                            }
                                                        });
                                                    }
                                                }
                                                else
                                                {
                                                    window.alert("No such user with the given RepID could be found");
                                                    dialog.close();
                                                }
                                            });
                                        }
                                    });
                                });
                            }
                        }
                    );
                });
            }
            function updateFundingTierDD(fundd, funding_list, result, div)
            {
                div.find("li").each(function(i, e)
                {
                    if(i > 0)
                    {
                        $(e).remove();
                    }
                });

                var ul2 = div.find("ul");
                var button2 = div.find("button").first();
                button2.text("n/a");
                $("<span></span>").addClass("caret").appendTo(button2);

                $.each(funding_list, function(i, fund)
                {
                    if(fund.value === fundd)
                    {
                        if(fund.tier_enabled)
                        {
                            $.each(fund.tier_data, function(ii, tier)
                            {
                                var li = $("<li></li>").attr("role", "presentation").attr("data-funding_tier", tier.name)
                                .append
                                (
                                    $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text(tier.name)
                                );
                                li.click(function()
                                {
                                    li.parent().parent().css("opacity", "0.1");
                                    $.post("/data", {"fn": "set_funding_tier_for_booking", "identifier": result.booking_identifier, "tier": li.data("funding_tier")}).done(function(rrr)
                                    {
                                        button2.text(li.data("funding_tier"));
                                        $("<span></span>").addClass("caret").appendTo(button2);
                                        li.parent().parent().css("opacity", "1.0");
                                    });
                                })
                                .appendTo(ul2);
                            });
                        }
                    }
                });
            }
            function loadPendingProposals()
            {
                var app_area = $("#app_area");
                $.post("./data", {"fn": "get_pending_proposals"}).done(function(resp)
                {
                    $("<h2></h2>").text("Pending Proposals").prepend
                    (
                        $("<span></span>").addClass("glyphicon").addClass("glyphicon-file")
                    )
                    .append
                    (
                        $("<input />").attr("type", "text").addClass("old_proposal_customer_search").attr("placeholder", "Work on an older customer, search by name...").blur(function()
                        {
                            $.post("./data", {"fn": "old_customer_proposal_search", "query": $.trim($(".old_proposal_customer_search").val())}).done(function(resp2)
                            {
                                $(".cust_proposal_search_result").remove();
                                $(".proposal_result_div").remove();
                                if(resp2.results.length === 0)
                                {
                                    $(".prop_no_results_search").css("display", "inline");
                                }
                                else
                                {
                                    $(".prop_no_results_search").css("display", "none");
                                    $.each(resp2.results, function(i, result)
                                    {
                                        var result_div = $("<div></div>").addClass("row").addClass("cust_proposal_search_result").attr("title", "Proposal info for " + result.name);
                                        result_div.attr("id", "cust_proposal_identifier_of_" + result.identifier);

                                        var customer_proposal_div = $("<div></div>").addClass("col-xs-6").addClass("col-sm-6").addClass("col-md-6").addClass("col-lg-6");
                                        var fund_div = $("<div></div>").addClass("col-xs-3").addClass("col-sm3").addClass("col-md-3").addClass("col-lg-3");
                                        var inner_fund_div = $("<div></div>").addClass("dropdown");
                                        var inner_funding_tier_div = $("<div></div>").addClass("dropdown");

                                        var button = $("<button></button>").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("type", "button").attr("data-toggle", "dropdown");                                        
                                        $.each(resp.funds, function(ii, fund)
                                        {
                                            if(fund.value === result.fund)
                                            {
                                                button.text(fund.value_friendly);
                                                $("<span></span>").addClass("caret").appendTo(button);
                                            }
                                        });                                        

                                        var ul = $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu");
                                        $.each(resp.funds, function(ii, fund)
                                        {
                                            if(!fund.active)
                                            {
                                                return;
                                            }
                                            $("<li></li>").attr("role", "presentation").attr("id", "fund_value_of_" + fund.value)
                                            .append
                                            (
                                                $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text(fund.value_friendly)
                                            )
                                            .click(function()
                                            {
                                                var that = $(this);
                                                var val = $(this).attr("id").replace("fund_value_of_", "");
                                                that.closest(".dropdown").find("button").css("opacity", "0.2");
                                                $.post("/data", {"fn": "set_fund_for_booking", "fund": val, "identifier": result.booking_identifier}).done(function(rrr)
                                                {
                                                    result.fund = val;
                                                    that.closest(".dropdown").find("button").text(fund.value_friendly);
                                                    $("<span></span>").addClass("caret").appendTo(that.closest(".dropdown").find("button"));
                                                    that.closest(".dropdown").find("button").css("opacity", "1.0");                                                    
                                                    updateProposalSystemCost(result.identifier);
                                                    updateFundingTierDD(val, resp.funds, result, that.parent().parent().nextAll(".dropdown").first());
                                                });
                                            })
                                            .appendTo(ul);
                                        });

                                        button.appendTo(inner_fund_div);
                                        ul.appendTo(inner_fund_div);
                                        inner_fund_div.appendTo(fund_div);

                                        var button2 = $("<button></button>").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("type", "button").attr("data-toggle", "dropdown").text("n/a").append($("<span></span>").addClass("caret"));

                                        var ul2 = $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu");
                                        $("<li></li>").attr("role", "presentation")
                                        .append
                                        (
                                            $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text("n/a")
                                        )
                                        .appendTo(ul2);

                                        $.each(resp.funds, function(ii, fund)
                                        {
                                            if(fund["value"] === result.fund && fund.tier_enabled)
                                            {
                                                $.each(fund.tier_data, function(iii, tier)
                                                {
                                                    var li = $("<li></li>").attr("role", "presentation").attr("data-funding_tier", tier.name)
                                                    .append
                                                    (
                                                        $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text(tier.name)
                                                    );
                                                    li.click(function()
                                                    {
                                                        li.parent().parent().css("opacity", "0.1");
                                                        $.post("/data", {"fn": "set_funding_tier_for_booking", "identifier": result.booking_identifier, "tier": li.data("funding_tier")}).done(function(rrr)
                                                        {
                                                            button2.text(li.data("funding_tier"));
                                                            $("<span></span>").addClass("caret").appendTo(button2);
                                                            li.parent().parent().css("opacity", "1.0");
                                                        });
                                                    })
                                                    .appendTo(ul2);

                                                    if(tier.name === result.funding_tier)
                                                    {
                                                        button2.text(tier.name);
                                                        $("<span></span>").addClass("caret").appendTo(button2);
                                                    }
                                                });
                                            }
                                        });

                                        button2.appendTo(inner_funding_tier_div);
                                        ul2.appendTo(inner_funding_tier_div);
                                        inner_funding_tier_div.appendTo(fund_div);
                                        


                                        customer_proposal_div.text(result.name)
                                        .append
                                        (
                                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-pencil").addClass("proposal_name_edit")
                                            .click(function(ev)
                                            {
                                                ev.stopPropagation();
                                                editCustomerName(result);
                                            })
                                        )
                                        .append
                                        (
                                            $("<span></span>").addClass("glyphicon").addClass("symbola").addClass("proposal_reconfigure_usage").html("&#9889;").click(function(ev)
                                            {
                                                ev.stopPropagation();
                                                resubUsageInfo(result);
                                            })
                                        )
                                        /*.append
                                        (
                                            $("<span></span>").addClass("proposal_last_four").text("Last 4: " + result.last_four)
                                        )
                                        .append
                                        (
                                            $("<span></span>").addClass("proposal_credit_check").text("Cred Score: " + result.score)
                                        )*/
                                        ;
                                        customer_proposal_div.appendTo(result_div);
                                        fund_div.appendTo(result_div);

                                        $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove").addClass("prop_del").attr("title", "Remove from list").click(function(ev)
                                        {
                                            ev.stopPropagation();

                                            var html = $("<div></div>");
                                            html.append
                                            (
                                                $("<br />")
                                            );
                                            html.append
                                            (
                                                $("<textarea></textarea>").addClass("proposal_remove_reason").attr("placeholder", "In a few words, why can't the proposal proceed...")
                                            );
                                            BootstrapDialog.show
                                            (
                                                {
                                                    "title": "Please provide a reason",
                                                    "message": html.html(),
                                                    "buttons":
                                                    [
                                                        {
                                                            "label": "Nevermind",
                                                            "cssClass": "btn-danger",
                                                            "action": function(dialog)
                                                            {
                                                                dialog.close();
                                                            }
                                                        },
                                                        {
                                                            "label": "Archive Customer",
                                                            "cssClass": "btn-danger",
                                                            "action": function(d)
                                                            {
                                                                d.close();
                                                                promptForArchive(result.identifier, result.name);
                                                            }
                                                        },
                                                        {
                                                            "label": "Continue",
                                                            "cssClass": "btn-success",
                                                            "action": function(dialog)
                                                            {
                                                                $.post("./data", {"fn": "remove_from_proposal_tabs", "identifier": result.identifier, "reason": $.trim($(".proposal_remove_reason").val())}).done(function(resp2)
                                                                {
                                                                    result_div.remove();
                                                                    dialog.close();
                                                                });
                                                            }
                                                        }
                                                    ]
                                                }
                                            );
                                        }).appendTo(result_div);

                                        result_div.click(function(e)
                                        {
                                            var source = $(e.originalEvent.srcElement);
                                            if(source.is("button") || source.is("a") || source.is("li"))
                                            {
                                                return;
                                            }
                                            loadAdminProposalInfoForCustomer(result.identifier, result.name, resp.system_options);
                                        }).appendTo(app_area);
                                    });
                                }
                            });
                        })
                    )
                    .append
                    (
                        $("<span class='prop_no_results_search'>No results found</span>")
                    )
                    .appendTo(app_area);
                    $("<hr />").appendTo(app_area);

                    $.each(resp.results, function(i, result)
                    {
                        var fund_div = $("<div></div>").addClass("dropdown").addClass("proposal_fund_dd");
                        var button = $("<button></button>").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("type", "button").attr("data-toggle", "dropdown");
                        button.click(function(ev)
                        {
                            //ev.stopPropagation();
                        });
                        $.each(resp.funds, function(ii, fund)
                        {
                            if(fund.value === result.fund)
                            {
                                button.text(fund.value_friendly);
                                $("<span></span>").addClass("caret").appendTo(button);
                            }
                        });

                        var ul = $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu");
                        $.each(resp.funds, function(ii, fund)
                        {
                            if(!fund.active)
                            {
                                return;
                            }
                            $("<li></li>").attr("role", "presentation").attr("id", "fund_value_of_" + fund.value)
                            .append
                            (
                                $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text(fund.value_friendly)
                            )
                            .click(function()
                            {
                                var that = $(this);
                                var val = $(this).attr("id").replace("fund_value_of_", "");
                                that.closest(".dropdown").find("button").css("opacity", "0.2");
                                $.post("/data", {"fn": "set_fund_for_booking", "fund": val, "identifier": result.booking_identifier}).done(function(rrr)
                                {
                                    result.fund = val;
                                    that.closest(".dropdown").find("button").text(fund.value_friendly);
                                    $("<span></span>").addClass("caret").appendTo(that.closest(".dropdown").find("button"));
                                    that.closest(".dropdown").find("button").css("opacity", "1.0");
                                    updateProposalSystemCost(result.identifier);
                                    updateFundingTierDD(val, resp.funds, result, that.parent().parent().nextAll(".dropdown").first());
                                });
                            })
                            .appendTo(ul);
                        });

                        button.appendTo(fund_div);
                        ul.appendTo(fund_div);

                        var inner_funding_tier_div = $("<div></div>").addClass("dropdown").addClass("funding_tier_dd_proposal");

                        var button2 = $("<button></button>").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("type", "button").attr("data-toggle", "dropdown").text("n/a").append($("<span></span>").addClass("caret"));

                        var ul2 = $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu");
                        $("<li></li>").attr("role", "presentation")
                        .append
                        (
                            $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text("n/a")
                        )
                        .appendTo(ul2);

                        $.each(resp.funds, function(ii, fund)
                        {
                            if(fund["value"] === result.fund && fund.tier_enabled)
                            {
                                $.each(fund.tier_data, function(iii, tier)
                                {
                                    var li = $("<li></li>").attr("role", "presentation").attr("data-funding_tier", tier.name)
                                    .append
                                    (
                                        $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text(tier.name)
                                    );
                                    li.click(function()
                                    {
                                        li.parent().parent().css("opacity", "0.1");
                                        $.post("/data", {"fn": "set_funding_tier_for_booking", "identifier": result.booking_identifier, "tier": li.data("funding_tier")}).done(function(rrr)
                                        {
                                            button2.text(li.data("funding_tier"));
                                            $("<span></span>").addClass("caret").appendTo(button2);
                                            li.parent().parent().css("opacity", "1.0");
                                        });
                                    })
                                    .appendTo(ul2);

                                    if(tier.name === result.funding_tier)
                                    {
                                        button2.text(tier.name);
                                        $("<span></span>").addClass("caret").appendTo(button2);
                                    }
                                });
                            }
                        });

                        button2.appendTo(inner_funding_tier_div);
                        ul2.appendTo(inner_funding_tier_div);

                        var result_div = $("<div></div>").addClass("row").addClass("cust_proposal_search_result").attr("title", "Proposal info for " + result.name);
                        result_div.attr("id", "cust_proposal_identifier_of_" + result.identifier);

                        var customer_proposal_div = $("<div></div>").addClass("col-xs-6").addClass("col-sm-6").addClass("col-md-6").addClass("col-lg-6");
                        customer_proposal_div.text(result.name)
                        .append
                        (
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-pencil").addClass("proposal_name_edit")
                            .click(function(ev)
                            {
                                ev.stopPropagation();
                                editCustomerName(result);
                            })
                        )
                        .append
                        (
                            $("<span></span>").addClass("glyphicon").addClass("symbola").addClass("proposal_reconfigure_usage").html("&#9889;").click(function(ev)
                            {
                                ev.stopPropagation();
                                resubUsageInfo(result);
                            })
                        )
                        .append
                        (
                            fund_div
                        )
                        .append
                        (
                            inner_funding_tier_div
                        );
                        customer_proposal_div.appendTo(result_div);

                        $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove").addClass("prop_del").attr("title", "Remove from list").click(function(ev)
                        {
                            ev.stopPropagation();

                            var html = $("<div></div>");
                            html.append
                            (
                                $("<br />")
                            );
                            html.append
                            (
                                $("<textarea></textarea>").addClass("proposal_remove_reason").attr("placeholder", "In a few words, why can't the proposal proceed...")
                            );
                            BootstrapDialog.show
                            (
                                {
                                    "title": "Please provide a reason",
                                    "message": html.html(),
                                    "buttons":
                                    [
                                        {
                                            "label": "Nevermind",
                                            "cssClass": "btn-danger",
                                            "action": function(dialog)
                                            {
                                                dialog.close();
                                            }
                                        },
                                        {
                                            "label": "Archive Customer",
                                            "cssClass": "btn-danger",
                                            "action": function(d)
                                            {
                                                d.close();
                                                promptForArchive(result.identifier, result.name);
                                            }
                                        },
                                        {
                                            "label": "Continue",
                                            "cssClass": "btn-success",
                                            "action": function(dialog)
                                            {
                                                $.post("./data", {"fn": "remove_from_proposal_tabs", "identifier": result.identifier, "reason": $.trim($(".proposal_remove_reason").val())}).done(function(resp2)
                                                {
                                                    result_div.remove();
                                                    dialog.close();
                                                });
                                            }
                                        }
                                    ]
                                }
                            );
                        }).appendTo(result_div);

                        result_div.click(function(e)
                        {
                            var source = $(e.originalEvent.srcElement);
                            if(source.is("button") || source.is("a") || source.is("li"))
                            {
                                return;
                            }
                            loadAdminProposalInfoForCustomer(result.identifier, result.name, resp.system_options);
                        }).appendTo(app_area);

                    });
                });
            }

            function editCustomerName(cust_obj)
            {
                $.post("./data", {"fn": "customer_details", "identifier": cust_obj.identifier}).done(function(resp)
                {
                    var html = $("<div></div>");
                    $("<p></p>").text("Customer Address:").appendTo(html);
                    $("<input />").attr("type", "text").attr("value", resp.customer_address).attr("id", "update_a").appendTo(html);
                    $("<p></p>").text("First Name:").appendTo(html);
                    $("<input />").attr("type", "text").attr("value", resp.customer_first_name).attr("id", "update_f").appendTo(html);
                    $("<p></p>").text("Last Name:").appendTo(html);
                    $("<input />").attr("type", "text").attr("value", resp.customer_last_name).attr("id", "update_l").appendTo(html);
                    $("<p></p>").text("SS# Last Four:").appendTo(html);
                    $("<input />").attr("type", "text").attr("value", cust_obj.last_four + '').attr("id", "update_l4").appendTo(html);
                    $("<p></p>").text("Email:").appendTo(html);
                    $("<input />").attr("type", "text").attr("value", resp.customer_email).attr("id", "update_e").appendTo(html);
                    $("<p></p>").text("Phone:").appendTo(html);
                    var phone = resp.customer_phone;
                    var phone_str = "(" + phone[0] + phone[1] + phone[2] + ") " + phone[3] + phone[4] + phone[5] + "-" + phone[6] + phone[7] + phone[8] + phone[9];
                    $("<input />").attr("type", "text").attr("value", phone_str).attr("id", "update_p").appendTo(html);

                    BootstrapDialog.show
                    (
                        {
                            "title": "Renaming Customer",
                            "message": html.html(),
                            "buttons":
                            [
                                {
                                    "label": "Cancel",
                                    "cssClass": "btn-danger",
                                    "action": function(dialog)
                                    {
                                        dialog.close();
                                    }
                                },
                                {
                                    "label": "OK",
                                    "cssClass": "btn-primary",
                                    "action": function(dialog)
                                    {
                                        if($.trim($("#update_a").val()).length === 0)
                                        {
                                            window.alert("The customer's address is required");
                                            return;
                                        }
                                        if($.trim($("#update_f").val()).length === 0)
                                        {
                                            window.alert("The customer's first name is required");
                                            return;
                                        }
                                        if($.trim($("#update_l").val()).length === 0)
                                        {
                                            window.alert("The customer's last name is required");
                                            return;
                                        }
                                        if($.trim($("#update_l4").val()).length === 0)
                                        {
                                            window.alert("The customer's last four of social is required.");
                                            return;
                                        }
                                        if($.trim($("#update_e").val()).length === 0)
                                        {
                                            window.alert("The email address is required.");
                                            return;
                                        }
                                        var phone_digits = $("#update_p").val().digits();
                                        if(phone_digits === null || phone_digits.length < 10)
                                        {
                                            window.alert("The phone number was not in the proper format.");
                                            return;
                                        }

                                        var data = {"fn": "update_customer_details", "identifier": cust_obj.identifier};
                                        $("#update_a, #update_f, #update_l, #update_l4, #update_p, #update_e").each(function(i, e)
                                        {
                                            data[$(e).attr("id").replace("update_", "")] = $(e).val();
                                        });
                                        data["p"] = data["p"].digits() + '';

                                        $.post("./data", data).done(function(resp2)
                                        {
                                            dialog.close();
                                            $("#view_proposals").first().trigger("click");
                                        });
                                    }
                                }
                            ]
                        }
                    );
                });
                console.log(cust_obj);
            }

            window.temp_admin_proposal_intervals = [];
            window.temp_proposal_check_interval_kk = null;
            function loadAdminProposalInfoForCustomer(field_app_identifier, name, sys_options)
            {
                if(window.temp_proposal_check_interval_kk !== null)
                {
                    window.clearInterval(window.temp_proposal_check_interval_kk);
                }
                $.each(window.temp_admin_proposal_intervals, function(i, interval)
                {
                    window.clearInterval(interval);
                });
                $(".proposal_result_div").remove();
                var proposal_result_div = $("<div></div>").addClass("proposal_result_div").addClass("row");
                $("<h3></h3>").addClass("proposal_name").text(name + "'s Proposal Info...").appendTo(proposal_result_div);
                $("<hr />").appendTo(proposal_result_div);

                /*
                var field_info =
                {
                    "offset":
                    {
                        "type": "multiple_choice",
                        "secondary_type": "dropdown",
                        "choices":
                        [
                            "UT-70",
                            "UT-90",
                            "CA-TOU",
                            "Partial"
                        ],
                        "title": "Offset",
                        "dependent_question":
                        {
                            "key": "utility_bill_after_solar",
                            "type": "real_number",
                            "secondary_type": "none",
                            "title": "Utility Bill After Solar",
                            "input_filter": function(el)
                            {
                                var new_txt = "";
                                var txt = $.trim(el.val());
                                var allowed_chars = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "."];
                                $.each(txt.split(""), function(i, char)
                                {
                                    if(allowed_chars.indexOf(char) > -1)
                                    {
                                        if(new_txt.indexOf(".") === -1 && char === ".")
                                        {
                                            new_txt += char;
                                        }
                                        else
                                        {
                                            if(char !== ".")
                                            {
                                                new_txt += char;
                                            }
                                        }
                                    }
                                });
                                el.val(new_txt);
                            }
                        },
                        "dependent_value": "Partial"

                    },
                    "system_size":
                    {
                        "type": "real_number",
                        "secondary_type": "none",
                        "title": "System Size",
                        "input_filter": function(el)
                        {
                            var new_txt = "";
                            var txt = $.trim(el.val());
                            var allowed_chars = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "."];
                            $.each(txt.split(""), function(i, char)
                            {
                                if(allowed_chars.indexOf(char) > -1)
                                {
                                    if(new_txt.indexOf(".") === -1 && char === ".")
                                    {
                                        new_txt += char;
                                    }
                                    else
                                    {
                                        if(char !== ".")
                                        {
                                            new_txt += char;
                                        }
                                    }
                                }
                            });
                            el.val(new_txt);
                        }
                    },
                    "offset_percentage":
                    {
                        "type": "real_number",
                        "secondary_type": "percentage",
                        "title": "Offset Percentage",
                        "input_filter": function(el)
                        {
                            var new_txt = "";
                            var txt = $.trim(el.val());
                            var allowed_chars = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "."];
                            $.each(txt.split(""), function(i, char)
                            {
                                if(allowed_chars.indexOf(char) > -1)
                                {
                                    if(new_txt.indexOf(".") === -1 && char === ".")
                                    {
                                        new_txt += char;
                                    }
                                    else
                                    {
                                        if(char !== ".")
                                        {
                                            new_txt += char;
                                        }
                                    }
                                }
                            });
                            try
                            {
                                if(parseInt(new_txt) > 100)
                                {
                                    new_txt = "100";
                                }
                            }
                            catch(eae)
                            {
                            }

                            el.val(new_txt);
                        }
                    },
                    "financing_type":
                    {
                        "type": "multiple_choice",
                        "secondary_type": "dropdown",
                        "choices":
                        [
                            "PPA",
                            "Loan"
                        ],
                        "title": "Financing Type"
                    },
                    "new_utility_bill":
                    {
                        "type": "real_number",
                        "secondary_type": "monetary",
                        "title": "New Utility Bill",
                        "input_filter": function(el)
                        {
                            var new_txt = "";
                            var txt = $.trim(el.val());
                            var allowed_chars = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "."];
                            $.each(txt.split(""), function(i, char)
                            {
                                if(allowed_chars.indexOf(char) > -1)
                                {
                                    if(new_txt.indexOf(".") === -1 && char === ".")
                                    {
                                        new_txt += char;
                                    }
                                    else
                                    {
                                        if(char !== ".")
                                        {
                                            new_txt += char;
                                        }
                                    }
                                }
                            });
                            el.val(new_txt);
                        }

                    },
                    "solar_bill_interest_only":
                    {
                        "type": "real_number",
                        "secondary_type": "monetary",
                        "title": "Solar Bill Interest Only",
                        "input_filter": function(el)
                        {
                            var new_txt = "";
                            var txt = $.trim(el.val());
                            var allowed_chars = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "."];
                            $.each(txt.split(""), function(i, char)
                            {
                                if(allowed_chars.indexOf(char) > -1)
                                {
                                    if(new_txt.indexOf(".") === -1 && char === ".")
                                    {
                                        new_txt += char;
                                    }
                                    else
                                    {
                                        if(char !== ".")
                                        {
                                            new_txt += char;
                                        }
                                    }
                                }
                            });
                            el.val(new_txt);
                        },
                        "excludable": true
                    },
                    "solar_bill_with_federal_tax_credit":
                    {
                        "type": "real_number",
                        "secondary_type": "monetary",
                        "title": "Solar Bill with Only Federal Tax Credit",
                        "input_filter": function(el)
                        {
                            var new_txt = "";
                            var txt = $.trim(el.val());
                            var allowed_chars = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "."];
                            $.each(txt.split(""), function(i, char)
                            {
                                if(allowed_chars.indexOf(char) > -1)
                                {
                                    if(new_txt.indexOf(".") === -1 && char === ".")
                                    {
                                        new_txt += char;
                                    }
                                    else
                                    {
                                        if(char !== ".")
                                        {
                                            new_txt += char;
                                        }
                                    }
                                }
                            });
                            el.val(new_txt);
                        },
                        "excludable": true
                    },
                    "solar_bill_with_all_incentives":
                    {
                        "type": "real_number",
                        "secondary_type": "monetary",
                        "title": "Solar Bill with All Incentives",
                        "input_filter": function(el)
                        {
                            var new_txt = "";
                            var txt = $.trim(el.val());
                            var allowed_chars = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "."];
                            $.each(txt.split(""), function(i, char)
                            {
                                if(allowed_chars.indexOf(char) > -1)
                                {
                                    if(new_txt.indexOf(".") === -1 && char === ".")
                                    {
                                        new_txt += char;
                                    }
                                    else
                                    {
                                        if(char !== ".")
                                        {
                                            new_txt += char;
                                        }
                                    }
                                }
                            });
                            el.val(new_txt);
                        },
                    },
                    "docusign_code":
                    {
                        "type": "plain_text",
                        "secondary_type": "none",
                        "title": "Docusign Code",
                        "excludable": true
                    },
                    "cad_photo":
                    {
                        "type": "file",
                        "secondary_type": "none",
                        "title": "CAD Photo"
                    },
                    "paperwork_pdf":
                    {
                        "type": "file",
                        "secondary_type": "none",
                        "title": "Paperwork PDF"
                    },
                    "term":
                    {
                        "type": "multiple_choice",
                        "secondary_type": "dropdown",
                        "choices":
                        [
                            "12-Year",
                            "20-Year",
                            "25-Year"
                        ],
                        "title": "Term"
                    }
                };
                */

                var field_info =
                {
                    "has_utility_bill_after_solar":
                    {
                        "type": "multiple_choice",
                        "secondary_type": "dropdown",
                        "choices":
                        [
                            "Yes",
                            "No",
                        ],
                        "title": "Will there be a residual utility bill?",
                        "dependent_question":
                        {
                            "key": "utility_bill_after_solar",
                            "type": "real_number",
                            "secondary_type": "none",
                            "title": "Utility Bill After Solar",
                            "input_filter": function(el)
                            {
                                var new_txt = "";
                                var txt = $.trim(el.val());
                                var allowed_chars = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "."];
                                $.each(txt.split(""), function(i, char)
                                {
                                    if(allowed_chars.indexOf(char) > -1)
                                    {
                                        if(new_txt.indexOf(".") === -1 && char === ".")
                                        {
                                            new_txt += char;
                                        }
                                        else
                                        {
                                            if(char !== ".")
                                            {
                                                new_txt += char;
                                            }
                                        }
                                    }
                                });
                                el.val(new_txt);
                            }
                        },
                        "dependent_value": "Yes"
                    },
                    "trees_need_cut":
                    {
                        "type": "multiple_choice",
                        "secondary_type": "dropdown",
                        "choices":
                        [
                            "Yes",
                            "No",
                        ],
                        "title": "Do trees need cut for this proposal?",
                        "dependent_question":
                        {
                            "key": "tree_cut_details",
                            "type": "plain_text",
                            "secondary_type": "none",
                            "title": "Please describe the trees that need cut...",
                        },
                        "dependent_value": "Yes"
                    },
                    "system_size":
                    {
                        "type": "real_number",
                        "secondary_type": "none",
                        "title": "System Size",
                        "input_filter": function(el)
                        {
                            var new_txt = "";
                            var txt = $.trim(el.val());
                            var allowed_chars = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "."];
                            $.each(txt.split(""), function(i, char)
                            {
                                if(allowed_chars.indexOf(char) > -1)
                                {
                                    if(new_txt.indexOf(".") === -1 && char === ".")
                                    {
                                        new_txt += char;
                                    }
                                    else
                                    {
                                        if(char !== ".")
                                        {
                                            new_txt += char;
                                        }
                                    }
                                }
                            });
                            el.val(new_txt);
                        }
                    },
                    "cad_photo":
                    {
                        "type": "file",
                        "secondary_type": "none",
                        "title": "CAD Photo"
                    },
                    "panel_type":
                    {
                        "type": "multiple_choice",
                        "secondary_choice": "dropdown",
                        "choices": sys_options["panels"],
                        "title": "Panel(s)/Module(s) Type"
                    },
                    "panel_qty":
                    {
                        "type": "real_number",
                        "secondary_type": "none",
                        "title": "Quantity for Panel(s)/Module(s) & Inverters",
                        "input_filter": function(el)
                        {
                            var new_txt = "";
                            var txt = $.trim(el.val());
                            var allowed_chars = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "."];
                            $.each(txt.split(""), function(i, char)
                            {
                                if(allowed_chars.indexOf(char) > -1)
                                {
                                    if(new_txt.indexOf(".") === -1 && char === ".")
                                    {
                                        new_txt += char;
                                    }
                                    else
                                    {
                                        if(char !== ".")
                                        {
                                            new_txt += char;
                                        }
                                    }
                                }
                            });
                            el.val(new_txt);
                        }
                    },
                    "display_status":
                    {
                        "type": "multiple_choice",
                        "secondary_type": "none",
                        "choices": ["No", "Yes"],
                        "title": "Hide System Size from Rep? (PPA)",                        
                    },
                    "inverter_type":
                    {
                        "type": "multiple_choice",
                        "secondary_choice": "dropdown",
                        "choices": sys_options["inverters"],
                        "title": "Inverter(s)"
                    },
                    /*"inverter_qty":
                    {
                        "type": "real_number",
                        "secondary_type": "none",
                        "title": "Quantity for Inverter(s)",
                        "input_filter": function(el)
                        {
                            var new_txt = "";
                            var txt = $.trim(el.val());
                            var allowed_chars = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "."];
                            $.each(txt.split(""), function(i, char)
                            {
                                if(allowed_chars.indexOf(char) > -1)
                                {
                                    if(new_txt.indexOf(".") === -1 && char === ".")
                                    {
                                        new_txt += char;
                                    }
                                    else
                                    {
                                        if(char !== ".")
                                        {
                                            new_txt += char;
                                        }
                                    }
                                }
                            });
                            el.val(new_txt);
                        }
                    },*/
                    "racking":
                    {
                        "type": "multiple_choice",
                        "secondary_type": "none",
                        "title": "Racking Option",
                        "choices": sys_options["racking"]
                    },
                    "year_one_production":
                    {
                        "type": "real_number",
                        "secondary_type": "none",
                        "title": "Estimated System Production (in KwH) for year 1",
                        "input_filter": function(el)
                        {
                            var new_txt = "";
                            var txt = $.trim(el.val());
                            var allowed_chars = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "."];
                            $.each(txt.split(""), function(i, char)
                            {
                                if(allowed_chars.indexOf(char) > -1)
                                {
                                    if(new_txt.indexOf(".") === -1 && char === ".")
                                    {
                                        new_txt += char;
                                    }
                                    else
                                    {
                                        if(char !== ".")
                                        {
                                            new_txt += char;
                                        }
                                    }
                                }
                            });
                            el.val(new_txt);
                        }
                    },
                    "configure_system_options":
                    {
                        "type": "multiple_choice",
                        "secondary_type": "none",
                        "title": "Would you like to configure System Options?",
                        "choices": ["Yes", "No"]
                    }
                };



                $.post("./data", {"fn": "pull_proposal_info_for_customer", "identifier": field_app_identifier, "admin_qualifier": "1"}).done(function(resp)
                {
                    if(resp.requires_proposal)
                    {
                        field_info["fund_proposal"] =
                        {
                            "type": "file",
                            "secondary_type": "none",
                            "title": "Fund Proposal PDF"
                        };
                    }

                    var info_div = $("<div></div>").addClass("col-xs-12").addClass("col-sm-12").addClass("col-md-12").addClass("col-lg-12").addClass("proposal_info_card");
                    $("<h3></h3>").text("Lead Information:").appendTo(info_div);
                    $("<br />").appendTo(info_div);
                    $("<p></p>").addClass("proposal_info_card_label").text("AB Timestamp:").appendTo(info_div);
                    $("<p></p>").addClass("proposal_info_card_value").text(moment(resp.ab_timestamp, "YYYY-MM-DD HH:mm:ss").format("MM/DD/YYYY hh:mm a")).appendTo(info_div);
                    $("<p></p>").addClass("proposal_info_card_label").text("Customer Name:").appendTo(info_div);
                    $("<p></p>").addClass("proposal_info_card_value").text(resp.customer_name).appendTo(info_div);
                    $("<p></p>").addClass("proposal_info_card_label").text("Spouse Name:").appendTo(info_div);
                    $("<p></p>").addClass("proposal_info_card_value").text(resp.spouse_name).appendTo(info_div);
                    $("<p></p>").addClass("proposal_info_card_label").text("Customer Contact Info:").appendTo(info_div);
                    $("<p></p>").addClass("proposal_info_card_value")
                    .append
                    (
                        $("<a></a>").attr("href", "tel:" + resp.customer_phone).text(resp.customer_phone_formatted)
                    )
                    .append
                    (
                        $("<br />")
                    )
                    .append
                    (
                        $("<a></a>").attr("href", "mailto:" + resp.customer_email).text(resp.customer_email)
                    )
                    .appendTo(info_div);
                    
                    $("<p></p>").addClass("proposal_info_card_label").text("Customer Address:").appendTo(info_div);
                    $("<p></p>").addClass("proposal_info_card_value").html(resp.customer_address.split("\n").join("<br />")).appendTo(info_div);
                    $("<p></p>").addClass("proposal_info_card_label").text("SP2 Time:").appendTo(info_div);
                    $("<p></p>").addClass("proposal_info_card_value").text(moment(resp.sp_two_time, "YYYY-MM-DD HH:mm:ss").format("MM/DD/YYYY hh:mm:ss A")).appendTo(info_div);
                    $("<p></p>").addClass("proposal_info_card_label").text("Credit Score:").appendTo(info_div);
                    $("<p></p>").addClass("proposal_info_card_value").text(resp.credit_score).appendTo(info_div);
                    
                    $("<p></p>").addClass("proposal_info_card_label").text("Total Kwhs:").appendTo(info_div);
                    $("<p></p>").addClass("proposal_info_card_value").text(resp.total_kwhs.toFixed(2)).appendTo(info_div);
                    $("<p></p>").addClass("proposal_info_card_label").text("Total $:").appendTo(info_div);
                    $("<p></p>").addClass("proposal_info_card_value").text("$" + resp.total_dollars.toFixed(2)).appendTo(info_div);
                    $("<p></p>").addClass("proposal_info_card_label").text("Usage Months:").appendTo(info_div);
                    $("<p></p>").addClass("proposal_info_card_value").text(resp.usage_months + '').appendTo(info_div);
                    $("<p></p>").addClass("proposal_info_card_label").text("Approval Amount:").appendTo(info_div);
                    if(parseFloat(resp.approval_amount) < parseFloat(0))
                    {
                        $("<p></p>").addClass("proposal_info_card_value").text("Not Available").appendTo(info_div);
                    }
                    else
                    {
                        $("<p></p>").addClass("proposal_info_card_value").text(currencyFormat(parseFloat(resp.approval_amount))).appendTo(info_div);
                    }
                    $("<p></p>").addClass("proposal_info_card_label").text("Rep Name:").appendTo(info_div);
                    $("<p></p>").addClass("proposal_info_card_value").text(resp.rep_name).appendTo(info_div);
                    $("<p></p>").addClass("proposal_info_card_label").text("Rep Phone:").appendTo(info_div);                    
                    $("<p></p>").addClass("proposal_info_card_value")
                    .append
                    (
                        $("<a></a>").attr("href", "tel:" + resp.rep_phone).text(resp.rep_phone_formatted)
                    ).appendTo(info_div);
                    $("<p></p>").addClass("proposal_info_card_label").text("Solar Pro:").appendTo(info_div);
                    if(resp.lead_generator === "-1")
                    {
                        $("<p></p>").addClass("proposal_info_card_value").text("N/A").appendTo(info_div);
                    }
                    else
                    {
                        $("<p></p>").addClass("proposal_info_card_value").text(resp.lead_generator).appendTo(info_div);
                    }
                    $("<p></p>").addClass("proposal_info_card_label").text("Notes:").appendTo(info_div);

                    var notes = resp.opt_rep_notes
                    if(notes === "" || notes === "n/a")
                    {
                        notes = "(No notes were provided)";
                    }

                    $("<p></p>").addClass("proposal_info_card_value").css("font-style", "italic").html(notes.replace("\n"), "<br />").appendTo(info_div);

                    info_div.appendTo(proposal_result_div);

                    var table_div = $("<div></div>").addClass("col-xs-12").addClass("col-sm-12").addClass("col-md-12").addClass("col-lg-12").addClass("proposal_arithmetic_table");
                    var tbl = $("<table></table>");
                    var tbody = $("<tbody></tbody>");
                    $("<tr></tr>")
                    .append
                    (
                        $("<th></th>").text("Percentage")
                    )
                    .append
                    (
                        $("<th></th>").text("Formula Application")
                    )
                    .append
                    (
                        $("<th></th>").text("Result")
                    )
                    .appendTo(tbody);
                    $.each([95, 90, 87, 82, 70, 64], function(i, percentage)
                    {
                        var row = $("<tr></tr>");
                        $("<td></td>").addClass("p_arithmetic_percentage").text("@ " + (percentage + '') + "%").appendTo(row);
                        $("<td></td>").addClass("p_arithmetic_work").html
                        (
                            "( (" + resp.total_kwhs.toFixed(2) + " / " + (resp.usage_months + '') + ") * 12) * 0." + (percentage + '') + " = "
                            +
                            (((resp.total_kwhs / resp.usage_months) * 12) * (percentage / 100)).toFixed(2)
                        ).appendTo(row);
                        $("<td></td>").addClass("p_arithmetic_money").text("$" + (((resp.total_kwhs / resp.usage_months) * 12) * (percentage / 100)).toFixed(2))
                        .appendTo(row);

                        row.appendTo(tbody);
                    });

                    tbody.appendTo(tbl);
                    tbl.appendTo(table_div);
                    $("<input />").attr("type", "hidden").attr("id", "spruce_image_hack").attr("value", "0").appendTo(table_div);
                    //table_div.appendTo(proposal_result_div);
                    $("<br />").appendTo(proposal_result_div);
                    $("<button></button>").addClass("btn").addClass("btn-primary").attr("id", "spruce_hack_btn").text("Click here if initializing as Spruce PPA")
                    .click(function()
                    {
                        $("#spruce_image_hack").val("1");
                        $(".keyname").each(function(i, e)
                        {
                            if($(e).attr("value") === "panel_qty")
                            {
                                $(e).nextAll("input").first().val("99");
                                $(e).nextAll("input").first().trigger("keyup");
                                $(e).nextAll("input").first().trigger("change");
                            }
                            if($(e).attr("value") === "cad_photo")
                            {
                                $(e).parent().remove();
                            }
                            if($(e).attr("value") === "display_status")
                            {
                                $(e).parent().find(".dropdown").find("ul").find("li").eq(1).trigger("click");
                            }
                        });
                    }).appendTo(table_div);


                    var info = resp.proposal_info.info;
                    var items = [];
                    var dependency_intervals = [];
                    var keys = Object.keys(field_info);

                    $.each(keys, function(i, key)
                    {
                        var container = $("<div></div>").addClass("col-xs-12").addClass("col-sm-12").addClass("col-md-12").addClass("col-lg-12").addClass("proposal_root_div_key_of_" + key);
                        $("<input />").attr("type", "hidden").addClass("keyname").attr("value", key).appendTo(container);
                        $("<p></p>").addClass("proposal_input_prompt_title").text(field_info[key].title + ":").appendTo(container);

                        container.addClass("prop_item");
                        container.addClass("type_" + field_info[key].type);

                        switch(field_info[key].type)
                        {
                            case "real_number":
                                var dolla_input = $("<input />").attr("type", "text").attr("placeholder", "XXXX.XX").addClass("txtinput");
                                if(key === "system_size")
                                {
                                    dolla_input.attr("disabled", "disabled");
                                }
                                var dolla_span = $("<span></span>").addClass("proposal_dolla").text("$");
                                dolla_input.on("blur", function(ev)
                                {
                                    field_info[key].input_filter($(this));
                                });
                                dolla_span.appendTo(container);
                                dolla_input.appendTo(container);
                                if((typeof(info[key]) + '') !== "undefined")
                                {
                                    if(info[key] !== "excluded")
                                    {
                                        dolla_input.val(info[key]).attr("value", info[key]);
                                    }
                                }
                                break;

                            case "plain_text":
                                var txtinput = $("<input />").attr("type", "text").addClass("txtinput").attr("placeholder", "abc");
                                if(typeof(info[key]) + '' !== "undefined")
                                {
                                    if(info[key] !== "excluded")
                                    {
                                        txtinput.attr("value", info[key]).val(info[key]);
                                    }
                                }
                                txtinput.appendTo(container);
                                break;

                            case "multiple_choice":
                                var dropdown = $("<div></div>").addClass("dropdown");
                                $("<button></button>").attr("type", "button").text("Choose One").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("data-toggle", "dropdown")
                                .append
                                (
                                    $("<span></span>").addClass("caret")
                                ).appendTo(dropdown);

                                var ul = $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu");
                                $.each(field_info[key].choices, function(k, choice)
                                {
                                    var modded_choice = choice;
                                    if(modded_choice.indexOf("[[[") > -1)
                                    {
                                        modded_choice = modded_choice.substring(0, modded_choice.indexOf("[[["));
                                    }
                                    var li = $("<li></li>").attr("role", "presentation").attr("id", "choice_of_" + choice);
                                    var a = $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);");
                                    a.text(modded_choice);

                                    a.appendTo(li);
                                    li.click(function()
                                    {
                                        $(this).parent().parent().find(".btn").text($(this).text());
                                        $("<span></span>").addClass("caret").appendTo($(this).parent().parent().find(".btn"));
                                        $(this).parent().parent().find("input").last().val(choice);
                                        $(this).parent().parent().find("input").last().trigger("change");
                                        $(this).parent().parent().find("input").last().trigger("blur");
                                    });

                                    li.appendTo(ul);
                                });
                                ul.appendTo(dropdown);
                                dropdown.append
                                (
                                    $("<input />").attr("type", "hidden").attr("value", "n/a")
                                );
                                dropdown.appendTo(container);
                                if((typeof(info[key]) + '') !== "undefined")
                                {
                                    if(info[key] !== "excluded")
                                    {
                                        dropdown.find("li").each(function(k, e)
                                        {
                                            if($(e).attr("id").replace("choice_of_", "") === info[key])
                                            {
                                                $(e).trigger("click");
                                            }
                                        });
                                    }
                                }
                                break;

                            case "file":
                                if((typeof(info[key]) + '').toLowerCase() === "object")
                                {
                                    $("<a></a>").addClass(key + "_" + field_app_identifier).text("Current File").attr("href", "//storage.googleapis.com/" + window.app_bucket + "/ProposalBlobs/" + field_app_identifier + "_" + key + "." + info[key].extension).attr("target", "_blank").appendTo(container);
                                }
                                $("<input />").addClass("fileinput").attr("type", "file").appendTo(container);
                                break;

                            default:
                                break;
                        }
                        switch(field_info[key].secondary_type)
                        {
                            case "monetary":
                                break;

                            case "percentage":
                                container.find(".proposal_dolla").text("%");
                                break;
                            case "none":
                                container.find(".proposal_dolla").css("opacity", "0.0");
                                break;

                            default:
                                break;
                        }
                        if(field_info[key].excludable)
                        {
                            $("<p></p>").text("Mark as not applicable").addClass("exclude_notation")
                            .append
                            (
                                $("<input />").attr("type", "checkbox").addClass("excludable_cb")
                                .on("change", function()
                                {
                                    var checked = $(this)[0].checked;
                                    if(checked)
                                    {
                                        $(this).closest(".col-xs-12").css("opacity", "0.2").addClass("excluded");
                                    }
                                    else
                                    {
                                        $(this).closest(".col-xs-12").removeAttr("style").removeClass("excluded");
                                    }

                                })
                            ).appendTo(container);
                            if(info[key] === "excluded")
                            {
                                container.find(".excludable_cb")[0].checked = true;
                                container.find(".excludable_cb").trigger("change");
                            }

                        }
                        $("<hr />").appendTo(container);
                        var container2 = null;
                        if(typeof(field_info[key].dependent_question) + '' !== "undefined")
                        {
                            container2 = $("<div></div>").addClass("col-xs-12").addClass("col-sm-12").addClass("col-md-12").addClass("col-lg-12").css("display", "none");
                            $("<input />").attr("type", "hidden").addClass("keyname").attr("value", field_info[key].dependent_question.key).appendTo(container2);
                            $("<p></p>").addClass("proposal_input_prompt_title").text(field_info[key].dependent_question.title + ":").appendTo(container2);
                            container2.addClass("prop_item");
                            container2.addClass("type_" + field_info[key].dependent_question.type);

                             switch(field_info[key].dependent_question.type)
                             {
                                case "real_number":
                                    var dolla_input = $("<input />").attr("type", "text").attr("placeholder", "XXXX.XX").addClass("txtinput");
                                    var dolla_span = $("<span></span>").addClass("proposal_dolla").text("$");
                                    dolla_input.on("blur", function(ev)
                                    {
                                        field_info[key].dependent_question.input_filter($(this));
                                    });
                                    dolla_span.appendTo(container2);
                                    dolla_input.appendTo(container2);
                                    if((typeof(info[field_info[key].dependent_question.key]) + '') !== "undefined")
                                    {
                                        if(info[field_info[key].dependent_question.key] !== "excluded")
                                        {
                                            dolla_input.val(info[field_info[key].dependent_question.key]).attr("value", info[key]);
                                        }
                                    }
                                    break;
                                case "plain_text":
                                    var txtinput = $("<input />").attr("type", "text").addClass("txtinput").attr("placeholder", "abc");
                                    if((typeof(info[field_info[key].dependent_question.key]) + '') !== "undefined")
                                    {
                                        if(info[field_info[key].dependent_question.key] !== "excluded")
                                        {
                                            txtinput.val(info[field_info[key].dependent_question.key]).attr("value", info[key]);
                                        }
                                    }
                                    txtinput.appendTo(container2);
                                    break;
                                default:
                                    break;
                             }

                             $("<hr />").appendTo(container2);
                             window.temp_admin_proposal_intervals.push(window.setInterval(function()
                             {
                                $(".keyname").each(function(k, ee)
                                {
                                    if($(ee).val() === key)
                                    {
                                        var curr_val = null;
                                        switch(field_info[key].type)
                                        {
                                            case "multiple_choice":
                                                curr_val = $(ee).nextAll(".dropdown").eq(0).find("input").eq(0).val();
                                                break;
                                        }

                                        if(curr_val === field_info[key].dependent_value)
                                        {
                                            if($(ee).parent().next().css("display").toLowerCase() !== "block")
                                            {
                                                $(ee).parent().next().css("display", "block");
                                            }
                                        }
                                        else
                                        {
                                            if($(ee).parent().next().css("display").toLowerCase() !== "none")
                                            {
                                                $(ee).parent().next().css("display", "none");
                                            }
                                        }
                                    }
                                });
                             }, 100));

                        }
                        items.push(container);
                        if(container2 !== null)
                        {
                            items.push(container2);
                        }
                    });

                    $.each(items, function(i, item)
                    {
                        item.appendTo(proposal_result_div);
                    });
                    var sys_size_input = proposal_result_div.find("input[value='system_size']").first();
                    $("<p></p>").text("Calculating...").attr("id", "proposal_system_cost").insertBefore(sys_size_input.nextAll("hr").first());
                    $("<p></p>").addClass("residual_bill_warning").text("Please be aware that all customers will have an electric bill after they go solar. This bill will include any taxes, fees, and non-bipassable charges. This bill is not included in the section below that says bill after solar.").insertBefore(sys_size_input);

                    proposal_result_div.find("input[type='text']")
                    var panel_qty_input = proposal_result_div.find("input[value='panel_qty']").first();
                    var panel_type_input = proposal_result_div.find("input[value='panel_type']").first();

                    $.each([panel_qty_input.nextAll("input").last(), panel_type_input.parent().find("input").last()], function(iiiii, eeeee)
                    {
                        eeeee.on("blur", function(ev)
                        {
                            setTimeout(function()
                            {
                                updateProposalSystemCost(field_app_identifier);
                            }, 1000);
                        });                        
                    });


                    $("<input />").attr("type", "hidden").attr("id", "proposal_version").attr("value", resp.proposal_info.version + '').val(resp.proposal_info.version + '').appendTo(proposal_result_div);
                    $("<button></button>").addClass("btn").addClass("btn-success").text("Complete Proposal Prep").click(function()
                    {
                        var ret_early = false;
                        $(".type_file").each(function(i, e)
                        {
                            var ee = $(e).find("input").eq(1);
                            var vals = ee.val().split(".");
                            if(["jpg", "png"].indexOf(vals[vals.length - 1].toLowerCase()) === -1)
                            {
                                if(ee.find("input").first().val() === "cad_photo")
                                {
                                    if(ee.find("a").size() === 0)
                                    {
                                        ret_early = true;
                                    }
                                } 
                            }
                        });
                        if(ret_early)
                        {
                            window.alert("The file uploaded must end in either \".jpg\" or \".png\"");
                            return;
                        }
                        saveProposal(field_app_identifier, true);
                    }).appendTo(proposal_result_div);
                    proposal_result_div.insertAfter($("#cust_proposal_identifier_of_" + field_app_identifier));
                    updateProposalSystemCost(field_app_identifier);

                    window.temp_proposal_check_interval_kk = window.setInterval(function()
                    {
                        try
                        {
                            $("input").each(function(i, e)
                            {
                                if($(e).attr("value") === "panel_type")
                                {
                                    if($(e).nextAll(".dropdown").size() > 0)
                                    {
                                        if($(e).nextAll(".dropdown").find("input").val().indexOf("[[[") > -1)
                                        {
                                            var wattage = $(e).nextAll(".dropdown").find("input").val().substring($(e).nextAll(".dropdown").find("input").val().indexOf("[[["));
                                            wattage = wattage.replace("[[[", "");
                                            wattage = wattage.replace("]]]", "");

                                            $("input").each(function(k, ee)
                                            {
                                                if($(ee).attr("value") === "panel_qty")
                                                {
                                                    if($(ee).nextAll("input").size() > 0)
                                                    {
                                                        var q = $(ee).nextAll("input").val();
                                                        if(q !== "")
                                                        {
                                                            q = parseFloat(q);

                                                            $("input").each(function(j, eee)
                                                            {
                                                                if($(eee).attr("value") === "system_size")
                                                                {
                                                                    var num = (((wattage * 1) * q) / 1000) + '';
                                                                    if(num.indexOf(".") === 0)
                                                                    {
                                                                        num = "0" + num;
                                                                    }
                                                                    $(eee).nextAll("input").val(num);
                                                                }
                                                            });
                                                        }
                                                    }
                                                }
                                            });


                                        }
                                    }
                                }
                            });
                        }
                        catch(esix)
                        {
                        }
                    }, 100);
                    window.temp_intervals.push(window.temp_proposal_check_interval_kk);


                });
            }
            function updateProposalSystemCost(field_app_identifier)
            {
                if($(".proposal_result_div").size() === 0)
                {
                    return;
                }
                var main_div = $(".proposal_result_div").first();
                var panel_qty = parseInt(main_div.find("input[value='panel_qty']").first().nextAll("input").first().val());
                if(Number.isNaN(panel_qty))
                {
                    return;
                }

                var sys_size_input = main_div.find("input[value='system_size']").first();
                var sys_size = parseFloat(sys_size_input.nextAll("input").last().val());
                if(Number.isNaN(sys_size))
                {
                    return;
                }


                var target_p = sys_size_input.nextAll("p").last();
                target_p.text("Calculating...");
                $.post("/data", {"fn": "preview_system_cost_in_proposal", "identifier": field_app_identifier, "panel_qty": panel_qty + '', "system_size": sys_size + ''}).done(function(r)
                {
                    target_p.text(currencyFormat(parseFloat(r.result)));
                });
            }
            function showSurveyScreen()
            {
                var app_area = $("#app_area");
                $("<h3></h3>").addClass("tmp_loading_h3").text("Loading").appendTo(app_area);
                var spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");
                var spacer_clone = spacer.clone();
                var main_div = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10");
                $.post("./data", {"fn": "get_svys"}).done(function(resp)
                {
                    var state_map = window.states_mapping;
                    $(".tmp_loading_h3").remove();
                    var surveys = resp.surveys;
                    $.each(Object.keys(surveys), function(i, state)
                    {
                        var state_container = $("<div></div>").addClass("svy_state_container");
                        $("<h3></h3>").text(state_map[state]).appendTo(state_container);

                        var customers = surveys[state];
                        $.each(customers, function(k, customer)
                        {
                            var cust_div = $("<div></div>").addClass("svy_customer_div").attr("id", "svy_customer_" + customer.identifier);
                            $("<p></p>").addClass("svy_customer_name").text(customer.name).appendTo(cust_div);
                            cust_div.click(function()
                            {
                                showSurveyCustomerDetailsV2(customer);
                            });
                            cust_div.appendTo(state_container);
                        });

                        state_container.appendTo(main_div);
                    });
                });

                $.each([spacer, main_div, spacer_clone], function(i, div)
                {
                    div.appendTo(app_area);
                });
            }
            function showSurveyCustomerDetailsV2(customer)
            {
                $(".deal_details").remove();
                var deal_details_wrapper_div = $("<div></div>").addClass("deal_details");

                var display_items =
                [
                    {
                        "label": "Customer Address",
                        "value": function(obj)
                        {
                            return obj.address + "<br />&nbsp;&nbsp;&nbsp;&nbsp;" + obj.city + ", " + obj.customer_state + "<br />&nbsp;&nbsp;&nbsp;&nbsp;" + obj.postal;
                        }
                    },
                    {
                        "label": "Rep Name",
                        "value": function(obj)
                        {
                            return obj.rep.name;
                        }
                    },
                    {
                        "label": "Rep Phone",
                        "value": function(obj)
                        {
                            return "<a href='tel:" + obj.rep.phone + "'>" + obj.rep.phone_formatted + "</a>";
                        }
                    },
                    {
                        "label": "Docs Link",
                        "value": function(obj)
                        {
                            return "<a target='_blank' href='" + (obj["docs_link"] + '') + "'>Link</a>";
                        }
                    }
                ];

                var table = $("<table></table>");
                var tbody = $("<tbody></tbody>");
                var tr = $("<tr></tr>");
                $.each(display_items, function(i, item)
                {
                    $("<td></td>")
                    .append
                    (
                        $("<b></b>").text(item.label)
                    ).appendTo(tr);
                });
                tr.appendTo(tbody);
                var tr2 = $("<tr></tr>");
                $.each(display_items, function(i, item)
                {
                    $("<td></td>").html(item.value(customer)).appendTo(tr2);
                });
                tr2.appendTo(tbody);
                tbody.appendTo(table);

                table.appendTo(deal_details_wrapper_div);

                $("<hr />").appendTo(deal_details_wrapper_div);

                var questions_div = $("<div></div>").addClass("deal_questions");

                $("<button></button>").addClass("btn").addClass("btn-success").text("Complete Survey")
                .click(function()
                {
                    var payload = {};
                    payload["fn"] = "new_survey_complete"
                    payload["identifier"] = customer.identifier;
                    payload["new_layout"] = $("#new_layout").val();
                    payload["new_layout_link"] = $.trim($("#new_layout_link").val());

                    $.post("./data", payload).done(function(resp)
                    {
                        $("#svy_customer_" + customer.identifier).remove();
                    });
                }).appendTo(questions_div);

                $("<button></button>").addClass("btn").addClass("btn-danger").text("Cancel Survey").click(function()
                {
                    BootstrapDialog.show
                    (
                        {
                            "title": "Provide a reason",
                            "message": "<br /><textarea class='svy_cancel_reason' placeholder='Please provide an explanation to pass on to the rep...'></textarea><br />",
                            "buttons":
                            [
                                {
                                    "label": "Continue",
                                    "cssClass": "btn-primary",
                                    "action": function(dialog)
                                    {
                                        $(".bootstrap-dialog-footer").find("button").remove();
                                        if($.trim($(".svy_cancel_reason").val()).length === 0)
                                        {
                                            window.alert("You must provide a reason.");
                                            return;
                                        }
                                        $.post("./data", {"fn": "new_survey_cancel", "identifier": customer.identifier, "reason": $.trim($(".svy_cancel_reason").val())}).done(function(resp)
                                        {
                                            $("#svy_customer_" + customer.identifier).remove();
                                            dialog.close();
                                        });
                                    }
                                }
                            ]
                        }
                    )
                }).appendTo(questions_div);

                questions_div.appendTo(deal_details_wrapper_div);
                deal_details_wrapper_div.appendTo($("#svy_customer_" + customer.identifier));
            }
            function showSurveyCustomerDetails(customer)
            {
                $(".deal_details").remove();
                var deal_details_wrapper_div = $("<div></div>").addClass("deal_details");

                var display_items =
                [
                    {
                        "label": "Customer Address",
                        "value": function(obj)
                        {
                            return obj.address + "<br />&nbsp;&nbsp;&nbsp;&nbsp;" + obj.city + ", " + obj.customer_state + "<br />&nbsp;&nbsp;&nbsp;&nbsp;" + obj.postal;
                        }
                    },
                    {
                        "label": "Rep Name",
                        "value": function(obj)
                        {
                            return obj.rep.name;
                        }
                    },
                    {
                        "label": "Rep Phone",
                        "value": function(obj)
                        {
                            return "<a href='tel:" + obj.rep.phone + "'>" + obj.rep.phone_formatted + "</a>";
                        }
                    },
                    {
                        "label": "Docs Link",
                        "value": function(obj)
                        {
                            return "<a target='_blank' href='" + (obj["docs_link"] + '') + "'>Link</a>";
                        }
                    }
                ];

                var table = $("<table></table>");
                var tbody = $("<tbody></tbody>");
                var tr = $("<tr></tr>");
                $.each(display_items, function(i, item)
                {
                    $("<td></td>")
                    .append
                    (
                        $("<b></b>").text(item.label)
                    ).appendTo(tr);
                });
                tr.appendTo(tbody);
                var tr2 = $("<tr></tr>");
                $.each(display_items, function(i, item)
                {
                    $("<td></td>").html(item.value(customer)).appendTo(tr2);
                });
                tr2.appendTo(tbody);
                tbody.appendTo(table);

                table.appendTo(deal_details_wrapper_div);

                $("<hr />").appendTo(deal_details_wrapper_div);

                var questions_div = $("<div></div>").addClass("deal_questions");
                questions_div.click(function(ev)
                {
                    ev.stopPropagation();
                });
                $("<p></p>").text("Does the rep need a new final layout signed?").appendTo(questions_div);

                var y_n_dd = $("<div></div>").addClass("dropdown");
                $("<select></select>").attr("id", "new_layout")
                .append
                (
                    $("<option value='n/a'>Select One</option>")
                )
                .append
                (
                    $("<option value='1'>Yes</option>")
                ).append
                (
                    $("<option value='0'>No</option>")
                ).on("change", function()
                {
                    var v = $(this).val();
                    if(v === "1")
                    {
                      $(this).parent().nextAll(".dropdown").first().css("display", "block");
                    }
                    else
                    {
                      $(this).parent().nextAll(".dropdown").first().css("display", "none");
                    }
                }).appendTo(y_n_dd);

                y_n_dd.appendTo(questions_div);

                $("<br />").appendTo(questions_div);
                $("<br />").appendTo(questions_div);

                $("<div></div>").addClass("dropdown").css("display", "none")
                .append
                (
                    $("<input />").attr("type", "text").attr("placeholder", "https://link_to_new_layout").attr("id", "new_layout_link")
                )
                .appendTo(questions_div);

                $("<br />").appendTo(questions_div);
                $("<br />").appendTo(questions_div);
                $("<br />").appendTo(questions_div);
                $("<br />").appendTo(questions_div);

                $("<button></button>").addClass("btn").addClass("btn-success").text("Complete Survey").click(function()
                {
                    if($("#new_layout").val() === "n/a")
                    {
                        window.alert("You must specify whether a new layout signature is required");
                        return;
                    }

                    if($("#new_layout").val() === "1")
                    {
                        if($.trim($("#new_layout_link").val()).indexOf("http") !== 0)
                        {
                            window.alert("You must provide a link to the new layout starting with 'http://' or 'https://'");
                            return;
                        }
                    }
                    $(this).remove();

                    var payload = {};
                    payload["fn"] = "new_survey_complete"
                    payload["identifier"] = customer.identifier;
                    payload["new_layout"] = $("#new_layout").val();
                    payload["new_layout_link"] = $.trim($("#new_layout_link").val());

                    $.post("./data", payload).done(function(resp)
                    {
                        $("#svy_customer_" + customer.identifier).remove();
                    });
                }).appendTo(questions_div);

                $("<button></button>").addClass("btn").addClass("btn-danger").text("Cancel Survey").click(function()
                {
                    BootstrapDialog.show
                    (
                        {
                            "title": "Provide a reason",
                            "message": "<br /><textarea class='svy_cancel_reason' placeholder='Please provide an explanation to pass on to the rep...'></textarea><br />",
                            "buttons":
                            [
                                {
                                    "label": "Continue",
                                    "cssClass": "btn-primary",
                                    "action": function(dialog)
                                    {
                                        $(".bootstrap-dialog-footer").find("button").remove();
                                        if($.trim($(".svy_cancel_reason").val()).length === 0)
                                        {
                                            window.alert("You must provide a reason.");
                                            return;
                                        }
                                        $.post("./data", {"fn": "new_survey_cancel", "identifier": customer.identifier, "reason": $.trim($(".svy_cancel_reason").val())}).done(function(resp)
                                        {
                                            $("#svy_customer_" + customer.identifier).remove();
                                            dialog.close();
                                        });
                                    }
                                }
                            ]
                        }
                    )
                }).appendTo(questions_div);

                questions_div.appendTo(deal_details_wrapper_div);

                deal_details_wrapper_div.appendTo($("#svy_customer_" + customer.identifier));
            }
            function showNewPAssessmentDetails(packet, assessment)
            {
            	if(typeof(assessment) + '' === "undefined")
            	{
            		$.post("./data", {"fn": "get_assessment_for_app_entry", "identifier": packet.app_entry_identifier}).done(function(resp)
            		{
            			showNewPAssessmentDetails(packet, resp.assessment);
            		});
            		return;
            	}
            	var bool_str_map = {"0": "No", "1": "Yes"};
            	var html = $("<div></div>");
            	$("<p></p>").text("Assessment Type: " + assessment).appendTo(html);
            	$("<p></p>").css("font-weight", "bold").text("New BUSS Rating:").appendTo(html);
            	$("<p></p>").text(packet.extra_info["new_buss_ratings"]).appendTo(html);
            	$("<p></p>").css("font-weight", "bold").text("New Breaker Amps:").appendTo(html);
            	$("<p></p>").text(packet.extra_info["new_breaker_amps"]).appendTo(html);
            	$("<p></p>").css("font-weight", "bold").text("Solar Breaker:").appendTo(html);
            	$("<p></p>").text(packet.extra_info["solar_breaker"]).appendTo(html);
            	$("<p></p>").text("Intercept? : " + bool_str_map[packet.extra_info["try_intercept"]]).appendTo(html);
				$("<p></p>").text("MPU? : " + bool_str_map[packet.extra_info["mpu_needed"]]).appendTo(html);
				if(packet.extra_info["mpu_needed"] === "0")
				{
					$("<p></p>").text("Panel Work Needed? : " + bool_str_map[packet.extra_info["panel_work_required"]]).appendTo(html);
				}
				if(typeof(packet.extra_info["electrician"]) + '' !== "undefined")
				{
					$("<p></p>").css("font-weight", "bold").text("Electrician:").appendTo(html);
					$.each(Object.keys(packet.extra_info["electrician"]), function(i, e)
					{
						$("<p></p>").text(packet.extra_info["electrician"][e]).appendTo(html);
					});
				}

				html.find("p").each(function(i, e)
				{
					if($(e).text().indexOf("undefined") > -1)
					{
						$(e).css("display", "none");
					}
				});

				BootstrapDialog.show
				(
					{
						"title": "Panel Assessment Details",
						"message": html.html(),
						"buttons":
						[
							{
								"label": "OK",
								"cssClass": "btn-primary",
								"action": function(d)
								{
									d.close();
								}
							}
						]
					}
				);


            	console.log(packet);
            }
            function showPanelAssessments()
            {
                var app_area = $("#app_area");
                $("<h3></h3>").addClass("tmp_loading_h3").text("Loading").appendTo(app_area);

                var spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");
                var spacer_clone = spacer.clone();

                var main_div = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10");
                $.post("./data", {"fn": "get_customers_for_panel_assessment"}).done(function(resp)
                {
                    $(".tmp_loading_h3").remove();
                    $.each(resp.customers, function(i, customer)
                    {
                        var cust_div = $("<div></div>").addClass("panel_customer_div").attr("id", "panel_customer_" + customer.identifier);
                        $("<p></p>").addClass("panel_customer_name").text(customer.name).appendTo(cust_div);
                        cust_div.click(function()
                        {
                            showPanelAssessmentDetails(customer);
                        });
                        cust_div.appendTo(main_div);
                    });

                    if(resp.customers.length === 0)
                    {
                        $("<h3></h3>").addClass("tmp_loading_h3").text("No customers are ready for panel assessment").appendTo(main_div);
                    }

                    $.each([spacer, main_div, spacer_clone], function(i, e)
                    {
                        $(e).appendTo(app_area);
                    });
                });
            }
            function showPanelAssessmentDetails(customer)
            {
                $(".panel_details").remove();
                var deal_details_wrapper_div = $("<div></div>").addClass("panel_details");

                var display_items =
                [
                    {
                        "label": "Customer Address",
                        "value": function(obj)
                        {
                            return obj.address + "<br />" + obj.city + ", " + obj.state + "<br />" + obj.postal;
                        }
                    },
                    {
                        "label": "Rep Name",
                        "value": function(obj)
                        {
                            return obj.rep.name;
                        }
                    },
                    {
                        "label": "Rep Phone",
                        "value": function(obj)
                        {
                            return "<a href='tel:" + obj.rep.phone + "'>" + obj.rep.phone_formatted + "</a>";
                        }
                    },
                    {
                        "label": "Docs Link",
                        "value": function(obj)
                        {
                            return "<a target='_blank' href='" + (obj["docs_link"] + '') + "'>Link</a>";
                        }
                    }
                ];

                var table = $("<table></table>");
                var tbody = $("<tbody></tbody>");
                var tr = $("<tr></tr>");
                $.each(display_items, function(i, item)
                {
                    $("<td></td>")
                    .append
                    (
                        $("<b></b>").text(item.label)
                    ).appendTo(tr);
                });
                tr.appendTo(tbody);
                var tr2 = $("<tr></tr>");
                $.each(display_items, function(i, item)
                {
                    $("<td></td>").html(item.value(customer)).appendTo(tr2);
                });
                tr2.appendTo(tbody);
                tbody.appendTo(table);

                table.appendTo(deal_details_wrapper_div);

                $("<hr />").appendTo(deal_details_wrapper_div);

                var questions_div = $("<div></div>").addClass("deal_questions");
                questions_div.click(function(ev)
                {
                    ev.stopPropagation();
                });

                var y_n_dd = $("<div></div>").addClass("dropdown");
                $("<p></p>").text("Is panel work required?").appendTo(y_n_dd);
                $("<select></select>").attr("id", "p_work_required")
                .append
                (
                    $("<option value='n/a'>Select One</option>")
                )
                .append
                (
                    $("<option value='1'>Yes</option>")
                ).append
                (
                    $("<option value='0'>No</option>")
                ).on("change", function()
                {
                    var v = $(this).val();
                    if(v === "1")
                    {
                      $(this).parent().nextAll(".dropdown").first().css("display", "block");
                    }
                    else
                    {
                      $(this).parent().nextAll(".dropdown").first().css("display", "none");
                    }
                }).appendTo(y_n_dd);

                y_n_dd.appendTo(questions_div);
                $("<br />").appendTo(questions_div);
                $("<div></div>").addClass("dropdown").css("display", "none").append
                (
                    $("<p></p>").text("Type of panel work")
                )
                .append
                (
                    $("<select></select>").attr("id", "p_work_type")
                    .append
                    (
                        $("<option value='n/a'>Select One</option>")
                    )
                    .append
                    (
                        $("<option value='RMA'>RMA</option>")
                    )
                    .append
                    (
                        $("<option value='Connector'>Connector</option>")
                    )
                    .append
                    (
                        $("<option value='Gut Change'>Gut Change</option>")
                    )
                    .append
                    (
                        $("<option value='Derate'>Derate</option>")
                    )
                    .append
                    (
                        $("<option value='Replace'>Replace</option>")
                    )
                    .append
                    (
                        $("<option value='Breaker Work'>Breaker Work</option>")
                    )
                ).appendTo(questions_div);
                $("<br />").appendTo(questions_div);

                $("<div></div>").addClass("dropdown").append
                (
                    $("<textarea></textarea>").attr("placeholder", "Your notes...").addClass("p_assessment_notes")
                ).appendTo(questions_div);

                $("<button></button>").text("Submit").addClass("btn").addClass("btn-primary").addClass("panel_sub_btn").click(function()
                {
                    if($(".deal_questions").find("select").first().val() === "n/a")
                    {
                        window.alert("You must choose whether panel work is required.");
                        return;
                    }
                    if($(".deal_questions").find("select").last().val() === "n/a" && $(".deal_questions").find("select").first().val() === "1")
                    {
                        window.alert("If panel work is specified as required, the type of panel work must also be provided.");
                        return;
                    }

                    $(this).remove();
                    var payload = {};
                    payload["fn"] = "submit_panel_job_info";
                    payload["identifier"] = customer.identifier;
                    payload["panel_work_required"] = ((($(".deal_questions").find("select").first().val() === "1") * 1) + '');
                    if(payload["panel_work_required"] === "1")
                    {
                        payload["panel_work_type"] = $(".deal_questions").find("select").last().val();
                    }
                    payload["notes"] = $.trim($(".deal_questions").find("textarea").val());

                    $.post("./data", payload).done(function(resp)
                    {
                        $("#panel_customer_" + customer.identifier).remove();
                    });
                }).appendTo(questions_div);

                questions_div.appendTo(deal_details_wrapper_div);
                $("<hr />").appendTo(deal_details_wrapper_div);
                deal_details_wrapper_div.appendTo($("#panel_customer_" + customer.identifier));
            }
            function perfectPacketV2(funds, project_managers, counts, electricians)
            {
                if($("#app_area").find("h3").size() === 0)
                {
                    $("<h3></h3>").text("Loading...").appendTo($("#app_area"));
                }
                window.temp_intervals.push(window.setInterval(function()
                {
                    $(".cb_check_welcome_complete").each(function(i, e)
                    {
                        var sum = 0;
                        $(e).nextAll("ol").first().find("li").each(function(ii, ee)
                        {
                            sum += $(ee).find("input").first()[0].checked;
                        });
                        $(e)[0].checked = (sum === 3);
                    });
                }, 100));
                if(typeof(funds) + '' === "undefined")
                {
                    $.post("./data", {"fn": "list_funding_sources"}).done(function(resp)
                    {
                        perfectPacketV2(resp);
                    });
                    return;
                }

                if(typeof(project_managers) + '' === "undefined")
                {
                    $.post("./data", {"fn": "read_setting", "value": "project_managers"}).done(function(resp)
                    {
                        perfectPacketV2(funds, resp.data);
                    });
                    return;
                }
                if(typeof(counts) + '' === "undefined")
                {
                    $.post("./data", {"fn": "save_me_rejected_tallies"}).done(function(resp)
                    {
                        perfectPacketV2(funds, project_managers, resp);
                    });
                    return;
                }
                if(typeof(electricians) + '' === "undefined")
                {
                    $.post("./data", {"fn": "read_setting", "value": "electricians"}).done(function(resp)
                    {
                        perfectPacketV2(funds, project_managers, counts, resp.data);
                    });
                    return;
                }

                var click_fns =
                [
                    function(packet)
                    {
                        var cnt = 0;
                        $("#new_pp_div_" + packet.identifier).find("ol").find("li").each(function(i, e)
                        {
                            cnt += ($(e).find("input").first()[0].checked * 1);
                        });
                        if(cnt < 7)
                        {
                            window.alert("The packet can only be approved after all items in the checklist have been positively marked off");
                            return;
                        }
                        var html = $("<html></html>");
                        $("<p></p>").css("display", "none").text("System size:").appendTo(html);
                        $("<input />").attr("type", "text").attr("id", "sys_size").attr("placeholder", "7.22").css("display", "none")
                        .on("blur", function(ev)
                        {
                            var allowed_chars = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "."];
                            var found_period = false;
                            var new_val = "";
                            $.each($(this).val().split(""), function(j, char)
                            {
                                if(allowed_chars.indexOf(char) > -1)
                                {
                                    if(char === "." && !found_period)
                                    {
                                        new_val += char;
                                        found_period = true;
                                    }
                                    else if(char !== ".")
                                    {
                                        new_val += char;
                                    }
                                }
                            });
                            $(this).val(new_val);

                        }).appendTo(html);
                        $("<p></p>").text("Packet Approval Date:").appendTo(html);
                        $("<div></div>").attr("id", "dt909").addClass("input-append").addClass("date").attr("data-date", moment().format("MM-DD-YYYY")).attr("data-date-format", "mm-dd-yyyy")
                        .append
                        (
                            $("<input />").addClass("span2").attr("size", "16").attr("type", "text").attr("value", moment().format("MM-DD-YYYY")).on("keyup", function(ev)
                            {
                                ev.preventDefault();
                            }).on("keydown", function(ev)
                            {
                                ev.preventDeafult();
                            })
                        )
                        .append
                        (
                            $("<span></span>").addClass("add-on")
                            .append
                            (
                                $("<i></i>").addClass("icon-th")
                            )
                        )
                        .appendTo(html);

                        BootstrapDialog.show
                        (
                            {
                                "title": "Approving Packet for " + packet.name,
                                "message": html.html(),
                                "onshown": function(dialog)
                                {
                                    $("#dt909 input").datepicker
                                    (
                                        {
                                            format: "mm-dd-yyyy",
                                            autoClose: true
                                        }
                                    );
                                },
                                "buttons":
                                [
                                    {
                                        "label": "Cancel",
                                        "cssClass": "btn-danger",
                                        "action": function(dialog)
                                        {
                                            dialog.close();
                                        }
                                    },
                                    {
                                        "label": "Approve Packet",
                                        "cssClass": "btn-primary",
                                        "action": function(dialog)
                                        {

                                            $.post("./data", {"fn": "approve_perfect_packet", "identifier": packet.identifier, "system_size": "abc", "approval_date": $("#dt909 input").val()}).done(function(resp)
                                            {
                                                if(resp.success)
                                                {
                                                    dialog.close();
                                                    clearApp(function()
                                                    {
                                                        perfectPacketV2();
                                                    });
                                                }
                                                else
                                                {
                                                    if(resp.reason === "missing_payscale")
                                                    {
                                                        rep_name_txt = packet.rep.name;
                                                        BootstrapDialog.show
                                                        (
                                                            {
                                                                type: BootstrapDialog.TYPE_WARNING,
                                                                message: "The packet could not be approved. The rep (" + rep_name_txt + ") has not been assigned to a payscale.<br /><br /><a target='_blank' href='./super'><button type='button' class='btn btn-primary' id='tmp_btn_rejected_bc_of_payscale'>Fix it &rarr;</button></a>"
                                                            }
                                                        );
                                                        setTimeout(function()
                                                        {
                                                            $(".bootstrap-dialog-footer").find(".btn-primary").text("Try again");

                                                            $("#tmp_btn_rejected_bc_of_payscale").click(function()
                                                            {
                                                                localStorage.setItem("button_to_click", "payscale_editor");
                                                                window.location.reload();
                                                            });
                                                        }, 250);
                                                    }
                                                    else
                                                    {
                                                        BootstrapDialog.show
                                                        (
                                                            {
                                                                type: BootstrapDialog.TYPE_WARNING,
                                                                message: "The packet could not be approved. Most likely, rep's payscale and/or the customer's fund has been deprecated."
                                                            }
                                                        );
                                                    }
                                                }
                                            });

                                        }
                                    }
                                ]
                            }
                        );

                    },
                    function(packet)
                    {
                        var html = $("<html></html");
                        $("<p></p>").text("Reason(s) for rejection:").appendTo(html);
                        $("<br />").appendTo(html);
                        $("<div></div>").addClass("new_pp_rej_reason_div")
                        .append
                        (
                            $("<textarea></textarea>").attr("placeholder", "Reason for rejection...")
                        )
                        .appendTo(html);

                        BootstrapDialog.show
                        (
                            {
                                "title": "Specify packet rejection reason(s)...",
                                "message": html.html(),
                                "buttons":
                                [
                                    {
                                        "label": "Cancel",
                                        "cssClass": "btn-danger",
                                        "action": function(dialog)
                                        {
                                            dialog.close();
                                        }
                                    },
                                    {
                                        "label": "Add Additional Reason",
                                        "cssClass": "btn-primary",
                                        "action": function(dialog)
                                        {
                                            $("<div></div>").addClass("new_pp_rej_reason_div")
                                            .append
                                            (
                                                $("<textarea></textarea>").attr("placeholder", "Reason for rejection...")
                                            )
                                            .append
                                            (
                                                $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove").attr("title", "Remove reason").click(function()
                                                {
                                                    $(this).parent().remove();
                                                })
                                            ).insertAfter($(".new_pp_rej_reason_div").last());
                                        }
                                    },
                                    {
                                        "label": "Reject Packet",
                                        "cssClass": "btn-success",
                                        "action": function(dialog)
                                        {
                                            var reasons_json = [];
                                            var ret_early2 = false;
                                            $(".new_pp_rej_reason_div textarea").each(function(i, e)
                                            {
                                                if(ret_early2)
                                                {
                                                    return;
                                                }

                                                if($.trim($(e).val()).length > 0)
                                                {
                                                    reasons_json.push($.trim($(e).val()));
                                                }
                                                else
                                                {
                                                    ret_early2 = true;
                                                }
                                            });
                                            if(ret_early2)
                                            {
                                                window.alert("A reason cannot be blank");
                                                return;
                                            }
                                            if(reasons_json.length > 0)
                                            {
                                                $(".bootstrap-dialog-footer").find("button").remove();
                                                $.post("./data", {"fn": "reject_perfect_packet", "identifier": packet.identifier, "reasons": JSON.stringify(reasons_json), "json": "1"}).done(function(resp)
                                                {
                                                    dialog.close();
                                                    $("#new_perfect_packet").trigger("click");
                                                });
                                            }
                                        }
                                    }
                                ]
                            }
                        )
                    }
                ];


                var spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");
                var main_div = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10");
                var spacer_clone = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");
                $.post("./data", {"fn": "new_perfect_packets_screen"}).done(function(resp)
                {
                    $("#app_area").find("h3").remove();
                    $("<div></div>").addClass("new_pp_top_btns")
                    .append
                    (
                        $("<button></button>").addClass("btn").addClass("btn-danger").text("Rejected Packets (" + (counts.rejected + '') + ")")
                        .click(function()
                        {
                            showRejPackets();
                        })
                    )
                    .append
                    (
                        $("<button></button>").addClass("btn").addClass("btn-warning").text("Save Mes (" + (counts.save_me + '') + ")")
                        .click(function()
                        {
                            showSaveMes();
                        })
                    )
                    .appendTo(main_div);
                    var headers_div = $("<div></div>").addClass("new_pp_headers");
                    $("<span></span>").addClass("new_pp_header_name").text("Customer Info").appendTo(headers_div);
                    $("<span></span>").addClass("new_pp_header_rep").text("Rep").appendTo(headers_div);
                    $("<span></span>").addClass("new_pp_header_sub_dt").text("Submission Date").appendTo(headers_div);
                    $("<span></span>").addClass("new_pp_header_sub_survey_dt").text("Survey Date").appendTo(headers_div);

                    headers_div.appendTo(main_div);

                    $.each(resp.packets, function(i, packet)
                    {

                        var checklist_div = $("<div></div>").addClass("pp_checklist");
                        var ol = $("<ol></ol>");
                        var checklist_info =
                        {
                            "check_panel_work": {"name": "Panel Assessment", "value": "check_panel_work"},
                            "check_doc_validation": {"name": "Document Validation", "value": "check_doc_validation"},
                            "check_roof_prep": {"name": "Roof/Prep Work Planning Completed", "value": "check_roof_prep"},
                            "check_NOC": {"name": "NOC Date passed", "value": "check_NOC"},
                            "check_upfront": {"name": "Upfront Funding Completed", "value": "check_upfront"},
                            "check_PM": {"name": "PM Assigned", "value": "check_PM"},
                            "check_welcome_complete": {"name": "Welcome Call Process", "value": "check_welcome", "substeps": [{"name": "Welcome Call Completed", "value": "check_wc_completed"},{"name": "HOA Information", "value": "check_HOA"}, {"name": "Installation Date Set", "value": "check_installation_date"}]}
                        };

                        $.each(Object.keys(checklist_info), function(k, key)
                        {
                            var ol2 = null;
                            var li = $("<li></li>");
                            $("<span></span>").addClass("pp_checkoff_description").text(checklist_info[key]["name"]).appendTo(li);
                            var input = $("<input />").attr("type", "checkbox").addClass("cb_" + key);
                            if(typeof(packet.extra_info[key]) + '' !== "undefined" && typeof(checklist_info[key]["substeps"]) + '' === "undefined")
                            {
                                input.attr("checked", "checked");
                                $("<span></span>").addClass("pp_checkoff_dt").text(moment(packet.extra_info[key], "YYYY-MM-DD").format("MM/DD/YYYY")).appendTo(li);
                                if(key === "check_panel_work")
                                {
                                	$("<label></label>").addClass("label").addClass("label-primary").addClass("new_assessment_details_label").text("Assessment Details")
                                	.click(function()
                                	{
                                		showNewPAssessmentDetails(packet);
                                	}).appendTo(li);
                                }
                            }
                            if(typeof(checklist_info[key]["substeps"]) + '' !== "undefined")
                            {
                                input.attr("disabled", "disabled");
                                input.appendTo(li);
                                var ol2 = $("<ol></ol>").addClass("ppcheckoff_subul");
                                $.each(checklist_info[key].substeps, function(kk, ee)
                                {
                                    var li2 = $("<li></li>");
                                    var input2 = $("<input />").attr("type", "checkbox").addClass("cb_" + checklist_info[key].substeps[kk].value);
                                    if(typeof(packet.extra_info[ee.value]) + '' !== "undefined")
                                    {
                                        input2.attr("checked", "checked");
                                        $("<span></span>").addClass("pp_checkoff_dt").text(moment(packet.extra_info[ee.value], "YYYY-MM-DD").format("MM/DD/YYYY")).appendTo(li2);
                                    }

                                    input2.on("change", function()
                                    {
                                        var that = this;
                                        var checked = ($(that)[0].checked * 1) + '';
                                        var checkbox = $(that);

                                        var checkoff_fn = function(packet, checkbox, checked)
                                        {
                                            $.post("./data", {"fn": "pp_checkoff", "key": checklist_info[key].substeps[kk].value, "checked": checked, "dt": moment().format("YYYY-MM-DD"), "identifier": packet.identifier}).done(function(resp3)
                                            {
                                                checkbox.removeAttr("style");
                                                if(checkbox[0].checked)
                                                {
                                                    $("<span></span>").addClass("pp_checkoff_dt").text(moment().format("MM/DD/YYYY")).appendTo(checkbox.parent());
                                                }
                                                else
                                                {
                                                    checkbox.parent().find(".pp_checkoff_dt").remove();
                                                }

                                            });
                                        };

                                        if($(this).attr("class").replace("cb_", "") === "check_HOA")
                                        {
                                            if($(that)[0].checked)
                                            {
                                                $(that)[0].checked = false;
                                                var html5 = $("<div></div>").addClass("html5");
                                                $("<p></p>").text("Is this customer in an HOA?").appendTo(html5);
                                                $("<select></select>").attr("id", "hoa_yn")
                                                .append
                                                (
                                                    $("<option value='n/a'>Choose One</option>")
                                                )
                                                .append
                                                (
                                                    $("<option value='1'>Yes</option>")
                                                )
                                                .append
                                                (
                                                    $("<option value='0'>No</option>")
                                                )
                                                .appendTo(html5);

                                                $("<div></div>")
                                                .append
                                                (
                                                    $("<p></p>").text("HOA Information:")
                                                )
                                                .append
                                                (
                                                    $("<textarea></textarea>").attr("id", "hoa_info").css("padding", "0.5em").css("width", "100%").css("background", "#222121").css("border", "1px solid rgba(255, 255, 255, 0.2)")
                                                )
                                                .css("display", "none").appendTo(html5);

                                                BootstrapDialog.show
                                                (
                                                    {
                                                        "title": "HOA information",
                                                        "message": html5.html(),
                                                        "onshown": function(dialog)
                                                        {
                                                            $("#hoa_yn").on("change", function()
                                                            {
                                                                if($(this).val() === "1")
                                                                {
                                                                    $(this).nextAll("div").first().css("display", "block")
                                                                }
                                                                else
                                                                {
                                                                    $(this).nextAll("div").first().css("display", "none");
                                                                }
                                                            })
                                                        },
                                                        "buttons":
                                                        [
                                                            {
                                                                "label": "Cancel",
                                                                "cssClass": "btn-danger",
                                                                "action": function(dialog)
                                                                {
                                                                    dialog.close();
                                                                }
                                                            },
                                                            {
                                                                "label": "Save",
                                                                "cssClass": "btn-primary",
                                                                "action": function(dialog)
                                                                {
                                                                    if($("#hoa_yn").val() === "n/a")
                                                                    {
                                                                        window.alert("You must indicate whether there is an HOA involved.");
                                                                        return;
                                                                    }
                                                                    if($("#hoa_yn").val() === "1")
                                                                    {
                                                                        if($.trim($("#hoa_info").val()) === "")
                                                                        {
                                                                            window.alert("When there is a positive indication of an HOA, you must provide the HOA info.");
                                                                            return;
                                                                        }
                                                                    }

                                                                    var post_payload = {};
                                                                    post_payload["hoa"] = $("#hoa_yn").val();
                                                                    post_payload["fn"] = "packet_HOA";
                                                                    post_payload["identifier"] = packet.identifier;
                                                                    if(post_payload["hoa"] === "1")
                                                                    {
                                                                        post_payload["hoa_info"] = $.trim($("#hoa_info").val());
                                                                    }
                                                                    $.post("./data", post_payload).done(function(resp)
                                                                    {
                                                                        checkbox[0].checked = true;
                                                                        checkoff_fn(packet, checkbox, checked);
                                                                        dialog.close();
                                                                    });
                                                                }
                                                            }
                                                        ]
                                                    }
                                                );
                                            }
                                            else
                                            {
                                                $.post("./data", {"fn": "docs_link_v2", "set": "0", "identifier": packet.identifier}).done(function(resp2)
                                                {
                                                    checkoff_fn(packet, checkbox, checked);
                                                });
                                            }
                                        }
                                        else if($(this).attr("class").replace("cb_check_", "") === "installation_date")
                                        {
                                            if($(that)[0].checked)
                                            {
                                                $(that)[0].checked = false;
                                                var html5 = $("<div></div>");
                                                $("<p></p>").text("Did you set an install date?").appendTo(html5);
                                                $("<select></select>").attr("id", "installdate_yn")
                                                .append
                                                (
                                                    $("<option value='n/a'>Choose One</option>")
                                                )
                                                .append
                                                (
                                                    $("<option value='1'>Yes</option>")
                                                )
                                                .append
                                                (
                                                    $("<option value='0'>No</option>")
                                                )
                                                .appendTo(html5);

                                                $("<div></div>")
                                                .append
                                                (
                                                    $("<p></p>").text("Installation Date:")
                                                )
                                                .append
                                                (
                                                    $("<div></div>").attr("id", "dt2283122").addClass("input-append-date").attr("data-date", moment().format("MM-DD-YYYY")).attr("data-date-format", "mm-dd-yyyy")
                                                    .append
                                                    (
                                                        $("<input />").attr("type", "text").attr("value", moment().format("MM-DD-YYYY")).attr("id", "installation_dayte")
                                                    )
                                                    .append
                                                    (
                                                        $("<span></span>").addClass("add-on")
                                                        .append
                                                        (
                                                            $("<i></i>").addClass("icon-th")
                                                        )
                                                    )
                                                )
                                                .css("display", "none").appendTo(html5);



                                                BootstrapDialog.show
                                                (
                                                    {
                                                        "title": "Installation",
                                                        "message": html5.html(),
                                                        "onshown": function(dialog)
                                                        {
                                                            $("#installdate_yn").on("change", function()
                                                            {
                                                                if($(this).val() === "1")
                                                                {
                                                                    $(this).nextAll("div").first().css("display", "block")
                                                                }
                                                                else
                                                                {
                                                                    $(this).nextAll("div").first().css("display", "none");
                                                                }
                                                            });

                                                            $("#dt2283122 input").datepicker
                                                            (
                                                                {
                                                                    format: "mm-dd-yyyy",
                                                                    autoClose: true
                                                                }
                                                            );
                                                        },
                                                        "buttons":
                                                        [
                                                            {
                                                                "label": "Cancel",
                                                                "cssClass": "btn-danger",
                                                                "action": function(dialog)
                                                                {
                                                                    dialog.close();
                                                                }
                                                            },
                                                            {
                                                                "label": "Save",
                                                                "cssClass": "btn-primary",
                                                                "action": function(dialog)
                                                                {
                                                                    if($("#installdate_yn").val() === "n/a")
                                                                    {
                                                                        window.alert("You must choose specify whether an install date was set");
                                                                        return;
                                                                    }

                                                                    $(".bootstrap-dialog-footer").find(".btn-primary").remove();
                                                                    var post_payload = {};
                                                                    post_payload["fn"] = "set_installation_date_info";
                                                                    post_payload["install_set"] = $("#installdate_yn").val()
                                                                    post_payload["identifier"] = packet.identifier;
                                                                    if(post_payload["install_set"] === "1")
                                                                    {
                                                                        post_payload["install_date"] = $("#installation_dayte").val();
                                                                    }

                                                                    $.post("./data", post_payload).done(function(resp)
                                                                    {
                                                                        checkbox[0].checked = true;
                                                                        checkoff_fn(packet, checkbox, checked);
                                                                        dialog.close();
                                                                    });
                                                                }
                                                            }
                                                        ]
                                                    }
                                                )
                                            }
                                            else
                                            {
                                                $.post("./data", {"fn": "unassign_project_manager", "identifier": packet.identifier}).done(function(resp2)
                                                {
                                                    checkoff_fn(packet, checkbox, checked);
                                                });
                                            }
                                        }
                                        else
                                        {
                                            checkoff_fn(packet, checkbox, checked);
                                        }
                                    });
                                    input2.appendTo(li2);
                                    $("<span></span>").addClass("pp_checkoff_subdescription").text(checklist_info[key].substeps[kk].name).appendTo(li2);
                                    li2.appendTo(ol2);
                                });
                            }
                            else
                            {
                                input.on("change", function()
                                {
                                    var that = this;
                                    var checked = ($(that)[0].checked * 1) + '';
                                    var checkbox = $(that);

                                    var checkoff_fn = function(packet, checkbox, checked)
                                    {
                                        $.post("./data", {"fn": "pp_checkoff", "key": key, "checked": checked, "dt": moment().format("YYYY-MM-DD"), "identifier": packet.identifier}).done(function(resp2)
                                        {
                                            checkbox.removeAttr("style");
                                            if(checkbox[0].checked)
                                            {
                                                $("<span></span>").addClass("pp_checkoff_dt").text(moment().format("MM/DD/YYYY")).appendTo(checkbox.parent());
                                            }
                                            else
                                            {
                                                checkbox.parent().find(".pp_checkoff_dt").remove();
                                            }

                                        });
                                    };

                                    if($(this).attr("class").replace("cb_check_", "") === "doc_validation")
                                    {
                                        if($(that)[0].checked)
                                        {
                                            $(that)[0].checked = false;
                                            BootstrapDialog.show
                                            (
                                                {
                                                    "title": "Enter the link",
                                                    "message": "Please provide a new document link that contains all the packet information (paperwork, signatures, panel assessment docs, etc.)...<br /><input type='text' style='text-indent: 0.5em; margin-top: 1em;' id='pp_approval_docs_link' />",
                                                    "buttons":
                                                    [
                                                        {
                                                            "label": "Cancel",
                                                            "cssClass": "btn-danger",
                                                            "action": function(dialog)
                                                            {
                                                                dialog.close();
                                                            }
                                                        },
                                                        {
                                                            "label": "Save Link",
                                                            "cssClass": "btn-primary",
                                                            "action": function(dialog)
                                                            {
                                                                var link_val = $.trim($("#pp_approval_docs_link").val());
                                                                if(link_val.indexOf("http") !== 0)
                                                                {
                                                                    window.alert("The link bust be a URL, starting with http:// or https://");
                                                                    return;
                                                                }
                                                                $.post("./data", {"fn": "docs_link_v2", "set": "1", "link": link_val, "identifier": packet.identifier}).done(function(resp)
                                                                {
                                                                    checkbox[0].checked = true;
                                                                    checkoff_fn(packet, checkbox, checked);
                                                                    dialog.close();
                                                                });
                                                            }
                                                        }
                                                    ]
                                                }
                                            );
                                        }
                                        else
                                        {
                                            $.post("./data", {"fn": "docs_link_v2", "set": "0", "identifier": packet.identifier}).done(function(resp2)
                                            {
                                                checkoff_fn(packet, checkbox, checked);
                                            });
                                        }
                                    }
                                    else if($(this).attr("class").replace("cb_check_", "") === "PM")
                                    {
                                        if($(that)[0].checked)
                                        {
                                            $(that)[0].checked = false;
                                            var pm_html = $("<div></div>");
                                            $("<br />").appendTo(pm_html);
                                            var pm_dd = $("<div></div>").addClass("dropdown");
                                            $("<button></button>").text("Choose a Project Manager").attr("id", "pm_btn").addClass("btn").addClass("btn-default").attr("data-toggle", "dropdown").addClass("dropdown-toggle")
                                            .append
                                            (
                                                $("<span></span>").addClass("caret")
                                            ).appendTo(pm_dd);

                                            var pm_ul = $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu");

                                            $.each(project_managers, function(iii, pm)
                                            {
                                                $("<li></li>").attr("role", "presentation").attr("id", "pm_" + pm.name.replace(" ", "_")).append
                                                (
                                                    $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text(pm.name)
                                                ).appendTo(pm_ul);
                                            });

                                            pm_ul.appendTo(pm_dd);
                                            $("<input />").attr("type", "hidden").attr("id", "delegated_pm").attr("value", "n/a").val("n/a").appendTo(pm_dd);

                                            pm_dd.appendTo(pm_html);
                                            $("<br />").appendTo(pm_html);

                                            BootstrapDialog.show
                                            (
                                                {
                                                    "title": "Who's the Project Manager",
                                                    "message": pm_html.html(),
                                                    "buttons":
                                                    [
                                                        {
                                                            "label": "Cancel",
                                                            "cssClass": "btn-danger",
                                                            "action": function(dialog)
                                                            {
                                                                dialog.close();
                                                            }
                                                        },
                                                        {
                                                            "label": "Assign PM",
                                                            "cssClass": "btn-primary",
                                                            "action": function(dialog)
                                                            {
                                                                if($("#delegated_pm").val() === "n/a")
                                                                {
                                                                    window.alert("You must choose a project manager");
                                                                    return;
                                                                }

                                                                $(".bootstrap-dialog-footer").find(".btn-primary").remove();
                                                                var pm = $("#delegated_pm").val();
                                                                $.post("./data", {"fn": "assign_project_manager", "identifier": packet.identifier, "name": $("#delegated_pm").val()}).done(function(resp)
                                                                {
                                                                    checkbox[0].checked = true;
                                                                    checkoff_fn(packet, checkbox, checked);
                                                                    dialog.close();
                                                                });
                                                            }
                                                        }
                                                    ],
                                                    "onshown": function(dialog)
                                                    {
                                                        $(".bootstrap-dialog-body").find("li").each(function(iii, eee)
                                                        {
                                                            $(eee)
                                                            .click(function()
                                                            {
                                                                var hidden_input = $(eee).parent().nextAll("input").first();
                                                                hidden_input.attr("value", $(eee).attr("id").replace("pm_", ""));
                                                                hidden_input.val($(eee).attr("id").replace("pm_", ""));

                                                                $("#pm_btn").text($(eee).text());
                                                                $("<span></span>").addClass("caret").appendTo($("#pm_btn"));
                                                            })
                                                        });
                                                    }
                                                }
                                            )
                                        }
                                        else
                                        {
                                            $.post("./data", {"fn": "unassign_project_manager", "identifier": packet.identifier}).done(function(resp2)
                                            {
                                                checkoff_fn(packet, checkbox, checked);
                                            });
                                        }
                                    }
                                    else if($(this).attr("class").replace("cb_", "") === "check_panel_work")
                                    {
                                        if($(that)[0].checked)
                                        {
                                            $(that)[0].checked = false;

                                            panelAssessmentDialog(packet.app_entry_identifier, electricians, function()
                                            {
                                                checkoff_fn(packet, checkbox, checked);
                                                checkbox[0].checked = true;
                                            });
                                            return;

                                            var html5 = $("<div></div>");
                                            $("<p></p>").text("Are you going to try an intercept?").appendTo(html5);
                                            html5.append
                                            (
                                                $("<select></select>").attr("id", "intercept_yn")
                                                .append
                                                (
                                                    $("<option value='n/a'>Choose one</option>")
                                                )
                                                .append
                                                (
                                                    $("<option value='1'>Yes</option>")
                                                )
                                                .append
                                                (
                                                    $("<option value='0'>No</option>")
                                                )

                                            );
                                            html5.append($("<p></p>"));
                                            html5.append
                                            (
                                                $("<div></div>").css("display", "none")
                                                .append
                                                (
                                                    $("<p></p>").text("Is an MPU needed")
                                                )
                                                .append
                                                (
                                                    $("<select></select>").attr("id", "mpu_needed")
                                                    .append
                                                    (
                                                        $("<option value='n/a'>Choose One</option>")
                                                    )
                                                    .append
                                                    (
                                                        $("<option value='1'>Yes</option>")
                                                    )
                                                    .append
                                                    (
                                                        $("<option value='0'>No</option>")
                                                    )
                                                )
                                            );
                                            var options = [];
                                            $.each(electricians, function(i, electrician)
                                            {
                                                options.push
                                                (
                                                    $("<option></option>").attr("value", electrician.name).text(electrician.name)
                                                );
                                            });
                                            var el_sel = $("<select></select>").attr("id", "electrician_designation")
                                            .append
                                            (
                                                $("<option value='n/a'>Choose one</option>")
                                            );
                                            $.each(options, function(i, option)
                                            {
                                                option.appendTo(el_sel);
                                            });
                                            html5.append
                                            (
                                                $("<div></div>").css("display", "none")
                                                .append
                                                (
                                                    $("<p></p>").text("Designate an electrician:")
                                                )
                                                .append
                                                (
                                                    el_sel
                                                )
                                            );
                                            html5.append
                                            (
                                                $("<div></div>").css("display", "none")
                                                .append
                                                (
                                                    $("<p></p>").text("Is panel work needed?")
                                                )
                                                .append
                                                (
                                                    $("<select></select>").attr("id", "panel_work_needed")
                                                    .append
                                                    (
                                                        $("<option value='n/a'>Choose one</option>")
                                                    )
                                                    .append
                                                    (
                                                        $("<option value='1'>Yes</option>")
                                                    )
                                                    .append
                                                    (
                                                        $("<option value='0'>No</option>")
                                                    )
                                                )
                                            );
                                            html5.append
                                            (
                                                $("<div></div>").css("display", "none")
                                                .append
                                                (
                                                    $("<p></p>").text("Panel Work Type:")
                                                )
                                                .append
                                                (
                                                    $("<select></select>").attr("id", "panel_work_type")
                                                    .append
                                                    (
                                                        $("<option value='n/a'>Choose one</option>")
                                                    )
                                                    .append
                                                    (
                                                        $("<option value='breaker_work'>Breaker Work</option>")
                                                    )
                                                    .append
                                                    (
                                                        $("<option value='move_main'>Move Main</option>")
                                                    )
                                                    .append
                                                    (
                                                        $("<option value='derate'>Derate</option>")
                                                    )
                                                )
                                            );
                                            html5.append
                                            (
                                                $("<div></div>").css("display", "none").attr("id", "reqd_notes_pw")
                                                .append
                                                (
                                                    $("<p></p>").text("Below, please provide notes about the make, manufacturer, and how to install.")
                                                )
                                                .append
                                                (
                                                    $("<textarea></textarea>").attr("placeholder", "Type your required notes...")
                                                )
                                            );
                                            html5.append
                                            (
                                                $("<div></div>")
                                                .append
                                                (
                                                    $("<p></p>").text("New Ratings:")
                                                )
                                                .append
                                                (
                                                    $("<hr />")
                                                )
                                                .append
                                                (
                                                    $("<p></p>").text("BUSS Rating:")
                                                )
                                                .append
                                                (
                                                    $("<input />").attr("type", "text").attr("id", "buss_rating")
                                                )
                                                .append
                                                (
                                                    $("<p></p>").text("Main Breaker Rating:")
                                                )
                                                .append
                                                (
                                                    $("<input />").attr("type", "text").attr("id", "main_breaker_rating")
                                                )
                                                .append
                                                (
                                                    $("<p></p>").text("Solar Breaker:")
                                                )
                                                .append
                                                (
                                                    $("<input />").attr("type", "text").attr("id", "solar_breaker")
                                                )
                                            );

                                            BootstrapDialog.show
                                            ({
                                                "title": "Provide more details...",
                                                "message": html5.html(),
                                                "onshown": function(d)
                                                {
                                                    $(".bootstrap-dialog-message").addClass("html5");
                                                    $("#intercept_yn").change(function()
                                                    {
                                                        if($(this).val() === "0")
                                                        {
                                                            $("#mpu_needed").parent().css("display", "block");
                                                        }
                                                        else
                                                        {
                                                            $("#mpu_needed").parent().css("display", "none");
                                                            $("#electrician_designation").parent().css("display", "none");
                                                            $("#panel_work_needed").parent().css("display", "none");
                                                            $("#panel_work_type").parent().css("display", "none");
                                                            $("#reqd_notes_pw").css("display", "none");
                                                        }
                                                    });
                                                    $("#mpu_needed").change(function()
                                                    {
                                                        if($(this).val() === "1")
                                                        {
                                                            $("#electrician_designation").parent().css("display", "block");
                                                        }
                                                        else
                                                        {
                                                            $("#electrician_designation").parent().css("display", "none");
                                                        }

                                                        if($(this).val() === "0")
                                                        {
                                                            $("#panel_work_needed").parent().css("display", "block");
                                                        }
                                                        else
                                                        {
                                                            $("#panel_work_needed").parent().css("display", "none");
                                                        }
                                                    });

                                                    $("#panel_work_needed").change(function()
                                                    {
                                                        if($(this).val() === "1")
                                                        {
                                                            $("#panel_work_type").parent().css("display", "block");
                                                        }
                                                        else
                                                        {
                                                            $("#panel_work_type").parent().css("display", "none");
                                                        }
                                                    });

                                                    $("#panel_work_type").change(function()
                                                    {
                                                        if($(this).val() === "breaker_work" || $(this).val() === "derate")
                                                        {
                                                            $(this).parent().next().css("display", "block");
                                                        }
                                                        else
                                                        {
                                                            $(this).parent().next().css("display", "none");
                                                        }
                                                    });
                                                },
                                                "buttons":
                                                [
                                                    {
                                                        "label": "Cancel",
                                                        "cssClass": "btn-danger",
                                                        "action": function(d)
                                                        {
                                                            d.close();
                                                        }
                                                    },
                                                    {
                                                        "label": "OK",
                                                        "cssClass": "btn-primary",
                                                        "action": function(dialog)
                                                        {
                                                            if($("#intercept_yn").val() === "n/a")
                                                            {
                                                                window.alert("You must specify whether you will try an intercept.");
                                                                return;
                                                            }
                                                            if($("#intercept_yn").val() === "0")
                                                            {
                                                                if($("#mpu_needed").val() === "n/a")
                                                                {
                                                                    window.alert("You must specify whether an MPU is needed.");
                                                                    return;
                                                                }
                                                                if($("#mpu_needed").val() === "1")
                                                                {
                                                                    if($("#electrician_designation").val() === "n/a")
                                                                    {
                                                                        window.alert("You must specify the electrician.");
                                                                        return;
                                                                    }

                                                                }
                                                                if($("#mpu_needed").val() === "0")
                                                                {
                                                                    if($("#panel_work_needed").val() === "n/a")
                                                                    {
                                                                        window.alert("You must specify whether panel work is needed.");
                                                                        return;
                                                                    }
                                                                    if($("#panel_work_needed").val() === "1")
                                                                    {
                                                                        if($("#panel_work_type").val() === "n/a")
                                                                        {
                                                                            window.alert("You must specify the panel work type.");
                                                                            return;
                                                                        }
                                                                        if($("#panel_work_type").val() === "breaker_work" || $("#panel_work_type").val() === "derate")
                                                                        {
                                                                            if($.trim($(".html5").find("textarea").first().val()).length === 0)
                                                                            {
                                                                                window.alert("You must provide notes about the make, model, installation, etc.");
                                                                                return;
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                            if($.trim($("#buss_rating").val()).length === 0)
                                                            {
                                                                window.alert("You must specify the BUSS rating.");
                                                                return;
                                                            }
                                                            if($.trim($("#main_breaker_rating").val()).length === 0)
                                                            {
                                                                window.alert("You must specify the main breaker rating.");
                                                                return;
                                                            }
                                                            if($.trim($("#solar_breaker").val()).length === 0)
                                                            {
                                                                window.alert("You must specify the solar breaker.");
                                                                return;
                                                            }

                                                            var post_note_fn = function(cb)
                                                            {
                                                                $.post("./data", {"fn": "add_note_for_customer", "identifier": packet.app_entry_identifier, "has_file": "0", "txt": $.trim($("#reqd_notes_pw").find("textarea").val()), "nkey": "panel_work"}).done(function(resph)
                                                                {
                                                                    cb();
                                                                });
                                                            };
                                                            var update_packet = function()
                                                            {
                                                                var payload = {};
                                                                payload["fn"] = "update_new_packet_panel_info";
                                                                payload["identifier"] = packet.app_entry_identifier;
                                                                payload["try_intercept"] = $("#intercept_yn").val();
                                                                if(payload["try_intercept"] === "0")
                                                                {
                                                                    payload["mpu_needed"] = $("#mpu_needed").val();
                                                                    if(payload["mpu_needed"] === "1")
                                                                    {
                                                                        payload["electrician"] = $("#electrician_designation").val();
                                                                    }
                                                                    else
                                                                    {
                                                                        payload["panel_work_needed"] = $("#panel_work_needed").val();
                                                                        if(payload["panel_work_needed"] === "1")
                                                                        {
                                                                            payload["panel_work_type"] = $("#panel_work_type").val();
                                                                        }
                                                                    }
                                                                }
                                                                payload["buss_rating"] = $("#buss_rating").val();
                                                                payload["main_breaker_rating"] = $("#main_breaker_rating").val();
                                                                payload["solar_breaker"] = $("#solar_breaker").val();

                                                                $.post("./data", payload).done(function(rrr)
                                                                {
                                                                    checkbox[0].checked = true;
                                                                    checkoff_fn(packet, checkbox, checked);
                                                                    dialog.close();
                                                                });
                                                            };

                                                            if($("#panel_work_type").val() === "breaker_work" || $("#panel_work_type").val() === "derate")
                                                            {
                                                                post_note_fn(function()
                                                                {
                                                                    update_packet();
                                                                });
                                                            }
                                                            else
                                                            {
                                                                update_packet();
                                                            }
                                                        }
                                                    }
                                                ]
                                            });
                                        }
                                        else
                                        {
                                            $.post("./data", {"fn": "remove_panel_work_new_info", "identifier": packet.app_entry.identifier}).done(function(r)
                                            {
                                                checkoff_fn(packet, checkbox, checked);
                                            });
                                        }
                                    }
                                    else
                                    {
                                        checkoff_fn(packet, checkbox, checked);
                                    }
                                });
                            }
                            input.prependTo(li);
                            li.appendTo(ol);

                            if(ol2 !== null)
                            {
                                ol2.appendTo(li);
                            }
                        });
                        ol.appendTo(checklist_div);


                        var roofing_span = $("<span></span>");
                        var electrical_span = $("<span></span>");
                        var estimated_kwh_span = $("<span>Unavailable</span>").css("display", "none");
                        var has_estimated_kwh_span = false;
                        var electrical_notes_span = $("<span></span>");

                        if(typeof(packet.extra_info["roof_work_required"]) + '' !== "undefined")
                        {
                            if(packet.extra_info["roof_work_required"] === "1")
                            {
                                roofing_span = $("<span></span>").addClass("glyphicon").addClass("glyphicon-exclamation-sign").attr("title", "Roof Work Details").click(function()
                                {
                                   var roof_div = $("<div></div>").addClass("roofing_details");
                                   $("<h4></h4>").text("Roofing Details:").appendTo(roof_div);
                                   $("<hr />").appendTo(roof_div);
                                   $("<p></p>").text(packet.extra_info["roof_work_details"]).appendTo(roof_div);
                                   $("<a></a>").text("Close").attr("href", "javascript:void(0);").click(function()
                                   {
                                        $(this).parent().remove();
                                   }).appendTo(roof_div);

                                   roof_div.insertAfter($(this).parent().next());
                                });
                            }
                        }

                        electrical_notes_span = $("<span></span>").addClass("pp_el_notes").addClass("glyphicon").addClass("symbola").html("&#128210;").attr("title", "Customer Notes").click(function()
                        {
                            showFilteredCustomerNotes({"identifier": packet.app_entry_identifier, "notes": packet.notes, "name": packet.name});

                        });

                        if(typeof(packet.extra_info["panel_work_required"]) + '' !== "undefined")
                        {
                            if(packet.extra_info["panel_work_required"] === "1")
                            {
                                electrical_span = $("<span></span>").addClass("glyphicon").addClass("glyphicon-exclamation-sign").attr("title", "Panel Work Details").click(function()
                                {
                                   var electrical_div = $("<div></div>").addClass("electrical_details");
                                   $("<h4></h4>").text("Additional Panel Work Details:").appendTo(electrical_div);
                                   $("<hr />").appendTo(electrical_div);
                                   $("<p></p>").text(packet.extra_info["panel_work_type"]).appendTo(electrical_div);
                                   $("<a></a>").text("Close").attr("href", "javascript:void(0);").click(function()
                                   {
                                        $(this).parent().remove();
                                   }).appendTo(electrical_div);

                                   electrical_div.insertAfter($(this).parent().next());
                                });
                            }
                        }

                        if(packet["estimated_kwh_production"] !== null)
                        {
                            has_estimated_kwh_span = true;
                            estimated_kwh_span.text
                            (
                                (parseFloat(packet["estimated_kwh_production"]))
                                .toFixed(2)
                                + " KwH"
                            ).css("display", "inline-block");
                        }

                        var packet_div = $("<div></div>").addClass("new_pp").attr("id", "new_pp_div_" + packet.identifier);
                        packet_div.append
                        (
                            $("<span></span>").html(packet.name + "<br />" + packet.customer_address + "<br />" + packet.customer_city_state + "<br />" + "<a href='tel:" + packet.customer_phone + "'>" + packet.customer_phone_formatted + "</a><br />" + "<a href='mailto:" + packet.customer_email + "'>" + packet.customer_email + "</a><br />Utility #" + packet.utility_no).addClass("new_pp_name")
                        )
                        .append
                        (
                            $("<span></span>").addClass("new_pp_rep").text(packet.rep.name)
                            .append
                            (
                                $("<br />")
                            )
                            .append
                            (
                                $("<a></a>").attr("href", "tel:" + packet.rep.phone).text(packet.rep.phone_formatted)
                            )
                            .append
                            (
                                $("<br />")
                            )
                            .append
                            (
                                $("<br />")
                            )
                            .addClass("new_pp_rep")
                        )
                        .append
                        (
                            $("<span></span>").addClass("new_pp_sub").text(moment(packet.submission_date.split(" ")[0], "YYYY-MM-DD").format("MM/DD/YYYY"))
                        )
                        .append
                        (
                            $("<span></span>").addClass("new_pp_sub").text(moment(packet.survey_date.split(" ")[0], "YYYY-MM-DD").format("MM/DD/YYYY"))
                        )
                        .append
                        (
                            $("<div></div>").addClass("dropdown").addClass("new_pp_dd")
                            .append
                            (
                                $("<button></button>").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("data-toggle", "dropdown")
                                .text("Choose")
                                .append
                                (
                                    $("<span></span>").addClass("caret")
                                )
                            )
                            .append
                            (
                                $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu")
                                .append
                                (
                                    $("<li></li>").attr("id", "opt_approve").append
                                    (
                                        $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text("Approve")
                                    )
                                )
                                .append
                                (
                                    $("<li></li>").attr("id", "opt_reject").append
                                    (
                                        $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text("Reject")
                                    )
                                )
                            )
                            .append
                            (
                                $("<span></span>").addClass("glyphicon").addClass("glyphicon-time").attr("title", "Show rejection history for packet").click(function()
                                {
                                    $(this).parent().parent().find(".rejection_history_row").remove();
                                    packet.rep_name = packet.rep.name;
                                    var rej_div = showRejectionHistory(packet, 0, true);
                                    rej_div.insertAfter($(this).parent().next());
                                })
                            )
                            .append
                            (
                                $("<span></span>").addClass("glyphicon").addClass("glyphicon-sayve-me").attr("title", "Annotate " + packet.name + " as 'Save Me'")
                                .append
                                (
                                    $("<i></i>").addClass("fa").addClass("fa-life-ring")
                                )
                                .click(function()
                                {
                                    saveCustomer(packet.app_entry_identifier, packet_div, packet.name);
                                })
                            )
                            .append
                            (
                                electrical_notes_span
                            )
                            .append
                            (
                                roofing_span
                            )
                            .prepend
                            (
                                electrical_span
                            )
                        )
                        .append
                        (
                            $("<div></div>").addClass("dropdown").addClass("new_pp_dd2")
                            .append
                            (
                                $("<button></button>").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("data-toggle", "dropdown")
                                .text("Change Fund")
                                .append
                                (
                                    $("<span></span>").addClass("caret")
                                )
                            )
                            .append
                            (
                                $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu")
                            )
                        )
                        .append
                        (
                            $("<p></p>").addClass("estimated_kwh_production").text("Estimated KwH Production: ").append
                            (
                               estimated_kwh_span
                            )
                        )
                        .append
                        (
                            $("<p></p>").addClass("newpp_system_size").html("System Size: <span class='symbola'>&#9889; </span>" + packet.system_size + " KW")
                        )
                        .append
                        (
                            $("<h4></h4>").text("Checklist:").css("clear", "both")
                        )
                        .append
                        (
                            checklist_div
                        );

                        if(!has_estimated_kwh_span)
                        {
                            packet_div.find(".estimated_kwh_production").css("display", "none");
                        }

                        if(packet.meter_number !== null)
                        {
                            packet_div.find("span").first().html(packet_div.find("span").first().html() + "<br />Meter #: " + packet.meter_number);
                        }

                        if(packet.noc !== "Unavailable")
                        {
                            $("<p></p>").addClass("pp_noc").text("NOC: " + packet.noc).insertAfter(packet_div.find("p").last());
                        }

                        $.each(funds, function(i, fund)
                        {
                            if(fund.active)
                            {
                                $("<li></li>").attr("role", "presentation").attr("id", "fund_value_of_" + fund.value)
                                .append
                                (
                                    $("<a></a>").attr("role", "menuitem").attr("href", "javascript:void(0);").attr("tabindex", "-1").text(fund.value_friendly)
                                )
                                .click(function()
                                {
                                    $(this).parent().prevAll(".btn").text($(this).text());
                                    $("<span></span>").addClass("caret").appendTo($(this).parent().prevAll(".btn"));
                                    $(".new_pp_dd2").find(".btn").css("opacity", "0.2");
                                    $.post("/data", {"fn": "set_fund_for_booking", "fund": $(this).attr("id").replace("fund_value_of_", ""), "identifier": packet.booking_identifier}).done(function(respabc)
                                    {
                                        $(".new_pp_dd2").find(".btn").removeAttr("style");
                                    });
                                }).appendTo(packet_div.find(".new_pp_dd2").find("ul"));
                            }
                            if(packet.fund === fund.value)
                            {
                                packet_div.find(".new_pp_dd2").find(".btn").text(fund.value_friendly);
                                $("<span></span>").addClass("caret").appendTo(packet_div.find(".new_pp_dd2").find(".btn"));
                            }
                        });

                        packet_div.appendTo(main_div);


                        main_div.find(".new_pp_dd").last().find("li").each(function(k, e)
                        {
                            $(e).click(function()
                            {
                                click_fns[k](packet);
                            });
                        });
                    });

                    $.each([spacer, main_div, spacer_clone], function(i, e)
                    {
                        $(e).appendTo($("#app_area"));
                    });
                });
            }
            function panelAssessmentDialog(identifier, electricians, cb, intercept_needed, mpu_needed, panel_work_needed, panel_work_type, panel_note, electrician, rating_details)
            {
                var std_cancel = {
                    "label": "Cancel",
                    "cssClass": "btn-danger",
                    "action": function(dialog)
                    {
                        dialog.close();
                    }
                };
                if(typeof(intercept_needed) + '' === "undefined")
                {
                    var html = $("<div></div>");
                    html.append($("<h3></h3>").text("Will you try an intercept?"));
                    html.append($("<br />"));
                    BootstrapDialog.show
                    (
                        {
                            "title": "Intercept Details",
                            "message": html.html(),
                            "buttons":
                            [
                                std_cancel,
                                {
                                    "label": "No",
                                    "cssClass": "btn-primary",
                                    "action": function(dialog)
                                    {
                                        dialog.close();
                                        panelAssessmentDialog(identifier, electricians, cb, "0");
                                    }
                                },
                                {
                                    "label": "Yes",
                                    "cssClass": "btn-primary",
                                    "action": function(dialog)
                                    {
                                        dialog.close();
                                        panelAssessmentDialog(identifier, electricians, cb, "1", null, null, null, null);
                                    }
                                }
                            ]
                        }
                    );
                    return;
                }
                var btns = [std_cancel];

                if(intercept_needed === "1")
                {
                    if(typeof(electrician) + '' === "undefined")
                    {
                        var html = $("<div></div>");
                        $("<p></p>").text("Assign Electrician").appendTo(html);
                        $("<select></select>").attr("id", "electrician_designation")
                        .append
                        (
                            $("<option value='n/a'>Choose an Electrician</option>")
                        ).appendTo(html);

                        $.each(electricians, function(i, e)
                        {
                            $("<option></option>").attr("value", e.name).text(e.name).appendTo(html.find("select"));
                        });

                        btns.push
                        (
                            {
                                "label": "Continue",
                                "cssClass": "btn-primary",
                                "action": function(dialog)
                                {
                                    if($("#electrician_designation").val() !== "n/a")
                                    {
                                        dialog.close();
                                        panelAssessmentDialog(identifier, electricians, cb, intercept_needed, null, null, null, null, $("#electrician_designation").val());
                                    }
                                    else
                                    {
                                        window.alert("You must choose the electrician.");
                                    }
                                }
                            }
                        );
                        BootstrapDialog.show
                        (
                            {
                                "title": "Assign the electrician",
                                "message": html.html(),
                                "buttons": btns
                            }
                        );
                        return;
                    }
                }
                else if(intercept_needed === "0")
                {
                    if(typeof(mpu_needed) + '' === "undefined")
                    {
                        var html = $("<div></div>");
                        html.append($("<h3></h3>").text("Is an MPU needed?"));
                        btns.push
                        (
                            {
                                "label": "No",
                                "cssClass": "btn-primary",
                                "action": function(dialog)
                                {
                                    dialog.close();
                                    panelAssessmentDialog(identifier, electricians, cb, intercept_needed, "0");
                                }
                            }
                        );

                        btns.push
                        (
                            {
                                "label": "Yes",
                                "cssClass": "btn-primary",
                                "action": function(dialog)
                                {
                                    dialog.close();
                                    panelAssessmentDialog(identifier, electricians, cb, intercept_needed, "1");
                                }
                            }
                        );
                        BootstrapDialog.show
                        (
                            {
                                "title": "MPU details...",
                                "message": html.html(),
                                "buttons": btns
                            }
                        );
                        return;
                    }
                    if(mpu_needed === "1")
                    {
                        if(typeof(electrician) + '' === "undefined")
                        {
                            var html = $("<div></div>");
                            $("<p></p>").text("Assign Electrician").appendTo(html);
                            $("<select></select>").attr("id", "electrician_designation")
                            .append
                            (
                                $("<option value='n/a'>Choose an Electrician</option>")
                            ).appendTo(html);

                            $.each(electricians, function(i, e)
                            {
                                $("<option></option>").attr("value", e.name).text(e.name).appendTo(html.find("select"));
                            });

                            btns.push
                            (
                                {
                                    "label": "Continue",
                                    "cssClass": "btn-primary",
                                    "action": function(dialog)
                                    {
                                        if($("#electrician_designation").val() !== "n/a")
                                        {
                                            dialog.close();
                                            panelAssessmentDialog(identifier, electricians, cb, intercept_needed, "1", null, null, null, $("#electrician_designation").val());
                                        }
                                        else
                                        {
                                            window.alert("You must choose the electrician.");
                                        }
                                    }
                                }
                            );


                            BootstrapDialog.show
                            (
                                {
                                    "title": "Assign the Electrician",
                                    "message": html.html(),
                                    "buttons": btns
                                }
                            );
                            return;
                        }
                    }
                    if(mpu_needed === "0")
                    {
                        if(typeof(panel_work_needed) + '' === "undefined")
                        {

                            var html = $("<div></div>");
                            html.append($("<h3></h3>").text("Is panel work needed?"));
                            btns.push
                            (
                                {
                                    "label": "No",
                                    "cssClass": "btn-primary",
                                    "action": function(dialog)
                                    {
                                        dialog.close();
                                        panelAssessmentDialog(identifier, electricians, cb, intercept_needed, "0", "0");
                                    }
                                }
                            );
                            btns.push
                            (
                                {
                                    "label": "Yes",
                                    "cssClass": "btn-primary",
                                    "action": function(dialog)
                                    {
                                        dialog.close();
                                        panelAssessmentDialog(identifier, electricians, cb, intercept_needed, "0", "1");
                                    }
                                }
                            );

                            BootstrapDialog.show
                            (
                                {
                                    "title": "Panel Work",
                                    "message": html.html(),
                                    "buttons": btns
                                }
                            );
                            return;
                        }
                        if(panel_work_needed === "1")
                        {
                            if(typeof(panel_work_type) + '' === "undefined")
                            {
                                btns.push
                                (
                                    {
                                        "label": "Breaker Work",
                                        "cssClass": "btn-primary",
                                        "action": function(dialog)
                                        {
                                            dialog.close();
                                            panelAssessmentDialog(identifier, electricians, cb, intercept_needed, "0", "1", "breaker_work");
                                        }
                                    }
                               );
                               btns.push
                               (
                                    {
                                        "label": "Move Main",
                                        "cssClass": "btn-primary",
                                        "action": function(dialog)
                                        {
                                            dialog.close();
                                            panelAssessmentDialog(identifier, electricians, cb, intercept_needed, "0", "1", "move_main", null);
                                        }
                                    }
                               );
                               btns.push
                               (
                                    {
                                        "label": "Derate",
                                        "cssClass": "btn-primary",
                                        "action": function(dialog)
                                        {
                                            dialog.close();
                                            panelAssessmentDialog(identifier, electricians, cb, intercept_needed, "0", "1", "derate");
                                        }
                                    }
                               );
                               BootstrapDialog.show
                               (
                                    {
                                        "title": "Select Panel Work Type",
                                        "message": "<br /><br />",
                                         "buttons": btns
                                    }
                               );
                               return;
                            }

                            if(panel_work_type === "breaker_work" || panel_work_type === "derate")
                            {
                                if(typeof(panel_note) + '' === "undefined")
                                {

                                    var html = $("<div></div>");
                                    html.append($("<p></p>").text("You must include notes on this account about the make/mfg/rating and how to install."));
                                    html.append($("<textarea></textarea>").css("background", "#424141").css("border", "0px solid #000").css("width", "80%").css("padding", "0.5em").attr("placeholder", "Your required note..."));
                                    btns.push
                                    (
                                        {
                                            "label": "Continue",
                                            "cssClass": "btn-primary",
                                            "action": function(dialog)
                                            {
                                                dialog.close();
                                                panelAssessmentDialog(identifier, electricians, cb, intercept_needed, "0", "1", panel_work_type, $.trim($(".bootstrap-dialog-message").find("textarea").val()));
                                            }
                                        }
                                    );
                                    BootstrapDialog.show
                                    (
                                        {
                                            "title": "Installation Notes",
                                            "message": html.html(),
                                            "buttons": btns
                                        }
                                    );
                                    return;
                                }
                            }
                            if(typeof(electrician) + '' === "undefined")
                            {
                                var html = $("<div></div>");
                                $("<p></p>").text("Assign Electrician").appendTo(html);
                                $("<select></select>").attr("id", "electrician_designation")
                                .append
                                (
                                    $("<option value='n/a'>Choose an Electrician</option>")
                                ).appendTo(html);

                                $.each(electricians, function(i, e)
                                {
                                    $("<option></option>").attr("value", e.name).text(e.name).appendTo(html.find("select"));
                                });

                                btns.push
                                (
                                    {
                                        "label": "Continue",
                                        "cssClass": "btn-primary",
                                        "action": function(dialog)
                                        {
                                            if($("#electrician_designation").val() !== "n/a")
                                            {
                                                dialog.close();
                                                panelAssessmentDialog(identifier, electricians, cb, intercept_needed, "0", "1", panel_work_type, panel_note, $("#electrician_designation").val());
                                            }
                                            else
                                            {
                                                window.alert("You must choose the electrician.");
                                            }
                                        }
                                    }
                                );


                                BootstrapDialog.show
                                (
                                    {
                                        "title": "Assign the Electrician",
                                        "message": html.html(),
                                        "buttons": btns
                                    }
                                );
                                return;
                            }
                        }
                    }
                }
                if(typeof(rating_details) + '' === "undefined")
                {
                    var html = $("<div></div>");
                    html.append
                    (
                        $("<p></p>").text("BUSS Rating:")
                    );
                    html.append
                    (
                        $("<input />").attr("type", "text").attr("id", "buss_rating")
                    );
                    html.append
                    (
                        $("<p></p>").text("Main Breaker Rating:")
                    );
                    html.append
                    (
                        $("<input />").attr("type", "text").attr("id", "main_breaker_rating")
                    );
                    html.append
                    (
                        $("<p></p>").text("Solar Breaker:")
                    );
                    html.append
                    (
                        $("<input />").attr("type", "text").attr("id", "solar_breaker")
                    );

                    btns.push
                    (
                        {
                            "label": "Save",
                            "cssClass": "btn-primary",
                            "action": function(dialog)
                            {
                                $(".bootstrap-dialog-footer").find(".btn-primary").text("Saving...").css("opacity", "0.2");
                                if(panel_note !== null && (typeof(panel_note) + '' !== "undefined"))
                                {
                                    $.post("./data", {"fn": "add_note_for_customer", "identifier": identifier, "has_file": "0", "txt": panel_note, "nkey": "panel_work"}).done(function(resph)
                                    {

                                        var raytings = {"buss_rating": $("#buss_rating").val(), "main_breaker_rating": $("#main_breaker_rating").val(), "solar_breaker": $("#solar_breaker").val()};

                                        var data = {"intercept_needed": intercept_needed, "mpu_needed": mpu_needed, "panel_work_needed": panel_work_needed, "panel_work_type": panel_work_type, "electrician": electrician, "ratings": raytings};
                                        var payload = {};
                                        payload["fn"] = "update_new_packet_panel_info";
                                        payload["identifier"] = identifier;
                                        payload["data"] = JSON.stringify(data);

                                        $.post("./data", payload).done(function(rrr)
                                        {
                                            dialog.close();
                                            cb();
                                        });
                                    });

                                }
                                else
                                {
                                    var raytings = {"buss_rating": $("#buss_rating").val(), "main_breaker_rating": $("#main_breaker_rating").val(), "solar_breaker": $("#solar_breaker").val()};

                                    var data = {"intercept_needed": intercept_needed, "mpu_needed": mpu_needed, "panel_work_needed": panel_work_needed, "panel_work_type": panel_work_type, "electrician": electrician, "ratings": raytings};
                                    var payload = {};
                                    payload["fn"] = "update_new_packet_panel_info";
                                    payload["identifier"] = identifier;
                                    payload["data"] = JSON.stringify(data);

                                    $.post("./data", payload).done(function(rrr)
                                    {
                                        dialog.close();
                                        cb();
                                    });
                                }
                            }
                        }
                    );

                    BootstrapDialog.show
                    (
                        {
                            "title": "Rating Details",
                            "message": html.html(),
                            "buttons": btns
                        }
                    );
                }

            }
            function showRejPackets()
            {
                clearApp(function()
                {
                    showPerfectPacket(true);
                });
            }
            function showSaveMes()
            {
                $("#app_area > *").addClass("temp_new_pp_hidden");
                var spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");
                var main_div = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10");
                $("<h3></h3>").text("Loading...").appendTo($("#app_area"));
                var spacer_clone = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");

                var app_area = $("#app_area");

                $.post("./data", {"fn": "list_save_mes"}).done(function(resp)
                {
                    $("#app_area").find("h3").text("Save Me Customers:");
                    $.each(resp, function(i, customer)
                    {
                        $("<div></div>").addClass("new_save_me_customer").addClass("sv_me_" + customer.identifier).text(customer.name)
                        .prepend
                        (
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-trash").attr("title", "Archive " + customer.name)
                            .click(function()
                            {
                                promptForArchive(customer.identifier, customer.name);
                            })
                        )
                        .prepend
                        (
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-refresh").attr("title", "Restore " + customer.name)
                            .click(function()
                            {
                                $(this).parent().css("opacity", "0.1");
                                if(window.confirm("Are you sure you would like to restore " + customer.name + "?"))
                                {
                                    $.post("/data", {"fn": "restore_customer", "identifier": customer.identifier})
                                    .done(function(r)
                                    {
                                        $(".sv_me_" + customer.identifier).remove();
                                    });   
                                }
                            })

                        )
                        .appendTo(main_div);
                    });                    

                    $.each([spacer, main_div, spacer_clone], function(i, e)
                    {
                        e.appendTo(app_area);
                    });
                });
            }
            function showSolarReadyTab()
            {
                var app_area = $("#app_area");
                $("<h3></h3>").addClass("tmp_loading_h3").text("Loading").appendTo(app_area);
                var spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");
                var spacer_clone = spacer.clone();
                var main_div = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10");
                $("<p></p>")/*.append
                (
                    $("<span></span>").addClass("badge").addClass("badge-default").addClass("solar_ready_complete2").text("Panel Assessment Complete")
                )
                .append
                (
                    $("<span></span>").addClass("badge").addClass("badge-default").addClass("solar_ready_complete1").text("Survey Complete")
                )*/
                .append
                (
                    $("<span></span>").addClass("badge").addClass("badge-default").addClass("solar_ready_complete1").text("Project Verify Submitted")
                )
                .appendTo(main_div);
                $.post("./data", {"fn": "get_solar_ready_customers"}).done(function(resp)
                {
                    var state_map = window.states_mapping;
                    $(".tmp_loading_h3").remove();
                    var surveys = resp.surveys;
                    $.each(Object.keys(surveys), function(i, state)
                    {
                        var state_container = $("<div></div>").addClass("svy_state_container");
                        $("<h3></h3>").text(state_map[state]).appendTo(state_container);

                        var customers = surveys[state];
                        $.each(customers, function(k, customer)
                        {
                            var cust_div = $("<div></div>").addClass("svy_customer_div").attr("id", "svy_customer_" + customer.identifier);
                            if(customer.notes.length > 0)
                            {
                                cust_div.addClass("custhasnotes");
                            }
                            var cb1 = $("<input />").attr("type", "checkbox").attr("disabled", "disabled").addClass("cb_survey_complete").on("click", function(ev)
                            {
                                ev.stopPropagation();
                            });
                            if(customer.survey_complete)
                            {
                                cb1.attr("checked", "checked");
                            }
                            var cb2 = $("<input />").attr("type", "checkbox").attr("disabled", "disabled").addClass("cb_assessment_complete").on("click", function(ev)
                            {
                                ev.stopPropagation();
                            });
                            if(customer.assessment_complete)
                            {
                                cb2.attr("checked", "checked");
                            }
                            var cb3 = $("<input />").attr("type", "checkbox").attr("disabled", "disabled").addClass("cb_verify_submitted").on("click", function(ev)
                            {
                                ev.stopPropagation();
                            });
                            if(customer.verify_submitted)
                            {
                                cb3.attr("checked", "checked");
                            }

                            $("<p></p>").addClass("svy_customer_name").text(customer.name)
                            .append
                            (
                                cb3
                            )
                            .appendTo(cust_div);
                            cust_div.click(function()
                            {
                                if(cust_div.find(".merged_details").size() === 0)
                                {
                                    showMergedCustomerDetailsV2(customer);
                                }                                
                            });
                            cust_div.appendTo(state_container);
                        });

                        state_container.appendTo(main_div);
                    });
                });

                $.each([spacer, main_div, spacer_clone], function(i, div)
                {
                    div.appendTo(app_area);
                });
            }
            function showMergedCustomerDetailsV2(customer)
            {
                $(".merged_details").remove();
                var deal_details_wrapper_div = $("<div></div>").addClass("merged_details");

                var questions_div = $("<div></div>").addClass("deal_questions");

                var display_items =
                [
                    {
                        "label": "Customer Address",
                        "value": function(obj)
                        {
                            return obj.address + "<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" + obj.city + ", " + obj.state + "<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" + obj.postal;
                        }
                    },
                    {
                        "label": "Utility Number",
                        "value": function(obj)
                        {
                            return obj.customer_utility_account_number;
                        }
                    },
                    {
                        "label": "Rep Name",
                        "value": function(obj)
                        {
                            return obj.rep.name;
                        }
                    },
                    {
                        "label": "Rep Phone",
                        "value": function(obj)
                        {
                            return "<a href='tel:" + obj.rep.phone + "'>" + obj.rep.phone_formatted + "</a>";
                        }
                    },
                    {
                        "label": "Docs Link",
                        "value": function(obj)
                        {
                            return "<a target='_blank' href='" + (obj["docs_link"] + '') + "'>Link</a>";
                        }
                    },
                    {
                        "label": "Notes",
                        "value": function(obj)
                        {
                            return "<span class='symbola'>&#128210;</span>";
                        }
                    }
                ];

                var table = $("<table></table>");
                var tbody = $("<tbody></tbody>");
                var tr = $("<tr></tr>");
                $.each(display_items, function(i, item)
                {
                    $("<td></td>")
                    .append
                    (
                        $("<b></b>").text(item.label)
                    ).appendTo(tr);
                });
                tr.appendTo(tbody);
                var tr2 = $("<tr></tr>");
                $.each(display_items, function(i, item)
                {
                    $("<td></td>").html(item.value(customer)).appendTo(tr2);
                });
                tr2.appendTo(tbody);
                tbody.appendTo(table);

                table.find(".symbola").each(function(i, e)
                {
                    $(e).click(function()
                    {
                        showFilteredCustomerNotes(customer);
                    });
                });

                table.appendTo(deal_details_wrapper_div);

                $("<hr />").appendTo(deal_details_wrapper_div);

                $("<p></p>").addClass("merged_details_v2_question_label").text("Roof Condition:").appendTo(questions_div);
                $("<select></select>").addClass("merged_details_v2_sel")
                .append
                (
                    $("<option></option>").attr("value", "n/a").text("Choose One")
                )
                .append
                (
                    $("<option></option>").attr("value", "Good").text("Good")
                )
                .append
                (
                    $("<option></option>").attr("value", "Fair").text("Fair")
                )
                .append
                (
                    $("<option></option>").attr("value", "Poor").text("Poor")
                )
                .appendTo(questions_div);

                $("<p></p>").addClass("merged_details_v2_question_label").text("Is roof work needed?").appendTo(questions_div);
                $("<select></select>").addClass("merged_details_v2_sel")
                .append
                (
                    $("<option></option>").attr("value", "n/a").text("Choose One")
                )
                .append
                (
                    $("<option></option>").attr("value", "Yes").text("Yes")
                )
                .append
                (
                    $("<option></option>").attr("value", "No").text("No")
                )
                .append
                (
                    $("<option></option>").attr("value", "Maybe").text("Maybe")
                )
                .appendTo(questions_div);

                $("<p></p>").addClass("merged_details_v2_question_label").text("Does the electrical panel need attention?").appendTo(questions_div);
                $("<select></select>").addClass("merged_details_v2_sel")
                .append
                (
                    $("<option></option>").attr("value", "n/a").text("Choose One")
                )
                .append
                (
                    $("<option></option>").attr("value", "Yes").text("Yes")
                )
                .append
                (
                    $("<option></option>").attr("value", "No").text("No")
                )
                .appendTo(questions_div);

                $("<p></p>").addClass("merged_details_v2_question_label").text("Is the roof made of fragile tiles such as light weight or clay tile?").appendTo(questions_div);
                $("<select></select>").addClass("merged_details_v2_sel")
                .append
                (
                    $("<option></option>").attr("value", "n/a").text("Choose One")
                )
                .append
                (
                    $("<option></option>").attr("value", "Yes").text("Yes")
                )
                .append
                (
                    $("<option></option>").attr("value", "No").text("No")
                )
                .appendTo(questions_div);

                $("<p></p>").addClass("merged_details_v2_question_label").text("Was there a dead plate?").appendTo(questions_div);
                $("<select></select>").addClass("merged_details_v2_sel")
                .append
                (
                    $("<option></option>").attr("value", "n/a").text("Choose One")
                )
                .append
                (
                    $("<option></option>").attr("value", "Yes").text("Yes")
                )
                .append
                (
                    $("<option></option>").attr("value", "No").text("No")
                )
                .appendTo(questions_div);



                $("<p></p>").addClass("merged_details_v2_question_label").text("Notes:").appendTo(questions_div);
                $("<textarea></textarea>").addClass("merged_details_v2_ta").appendTo(questions_div);

                $("<hr />").appendTo(questions_div);

                $("<button></button>").addClass("btn").addClass("btn-success").text("Complete Survey").click(function()
                {
                    var ret = false;
                    questions_div.find("select").each(function(i, e)
                    {
                        if($(e).val() === "n/a")
                        {
                            ret = true;
                        }
                    });
                    if(ret)
                    {
                        window.alert("You must answer all questions in the dropdown menu.");
                        return;
                    }

                    $(this).remove();

                    var payload = {};
                    payload["fn"] = "survey_complete_v3"
                    payload["identifier"] = customer.identifier;
                    payload["roof_condition"] = questions_div.find("select").first().val();
                    payload["roof_work_needed"] = questions_div.find("select").eq(1).val();
                    payload["electrical_attention"] = questions_div.find("select").eq(2).val();
                    payload["fragile"] = questions_div.find("select").eq(3).val();
                    payload["dead_plate"] = questions_div.find("select").eq(4).val();
                    payload["notes"] = $.trim(questions_div.find("textarea").first().val());

                    $("#svy_customer_" + customer.identifier).css("opacity", "0.2");
                    $.post("./data", payload).done(function(resp)
                    {
                        $("#svy_customer_" + customer.identifier).remove();
                        //$("#svy_customer_" + customer.identifier).find(".cb_survey_complete")[0].checked = true;                            
                    });
                }).appendTo(questions_div);

                $("<button></button>").addClass("btn").addClass("btn-danger").text("Cancel Survey").click(function()
                {
                    BootstrapDialog.show
                    (
                        {
                            "title": "Provide a reason",
                            "message": "<br /><textarea class='svy_cancel_reason' placeholder='Please provide an explanation to pass on to the rep...'></textarea><br />",
                            "buttons":
                            [
                                {
                                    "label": "Continue",
                                    "cssClass": "btn-primary",
                                    "action": function(dialog)
                                    {
                                        $(".bootstrap-dialog-footer").find("button").remove();
                                        if($.trim($(".svy_cancel_reason").val()).length === 0)
                                        {
                                            window.alert("You must provide a reason.");
                                            return;
                                        }
                                        $.post("./data", {"fn": "new_survey_cancel", "identifier": customer.identifier, "reason": $.trim($(".svy_cancel_reason").val())}).done(function(resp)
                                        {
                                            $("#svy_customer_" + customer.identifier).remove();
                                            dialog.close();
                                        });
                                    }
                                }
                            ]
                        }
                    )
                }).appendTo(questions_div);

                questions_div.appendTo(deal_details_wrapper_div);

                deal_details_wrapper_div.appendTo($("#svy_customer_" + customer.identifier));
            }
            function showMergedCustomerDetails(customer)
            {
                $(".merged_details").remove();
                var deal_details_wrapper_div = $("<div></div>").addClass("merged_details");

                var display_items =
                [
                    {
                        "label": "Customer Address",
                        "value": function(obj)
                        {
                            return obj.address + "<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" + obj.city + ", " + obj.state + "<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" + obj.postal;
                        }
                    },
                    {
                        "label": "Utility Number",
                        "value": function(obj)
                        {
                            return obj.customer_utility_account_number;
                        }
                    },
                    {
                        "label": "Rep Name",
                        "value": function(obj)
                        {
                            return obj.rep.name;
                        }
                    },
                    {
                        "label": "Rep Phone",
                        "value": function(obj)
                        {
                            return "<a href='tel:" + obj.rep.phone + "'>" + obj.rep.phone_formatted + "</a>";
                        }
                    },
                    {
                        "label": "Docs Link",
                        "value": function(obj)
                        {
                            return "<a target='_blank' href='" + (obj["docs_link"] + '') + "'>Link</a>";
                        }
                    },
                    {
                        "label": "Notes",
                        "value": function(obj)
                        {
                            return "<span class='symbola'>&#128210;</span>";
                        }
                    }
                ];

                var table = $("<table></table>");
                var tbody = $("<tbody></tbody>");
                var tr = $("<tr></tr>");
                $.each(display_items, function(i, item)
                {
                    $("<td></td>")
                    .append
                    (
                        $("<b></b>").text(item.label)
                    ).appendTo(tr);
                });
                tr.appendTo(tbody);
                var tr2 = $("<tr></tr>");
                $.each(display_items, function(i, item)
                {
                    $("<td></td>").html(item.value(customer)).appendTo(tr2);
                });
                tr2.appendTo(tbody);
                tbody.appendTo(table);

                table.find(".symbola").each(function(i, e)
                {
                    $(e).click(function()
                    {
                        showFilteredCustomerNotes(customer);
                    });
                });

                table.appendTo(deal_details_wrapper_div);

                $("<hr />").appendTo(deal_details_wrapper_div);

                // the survey details.....

                var get_survey_questions_div = function(customer)
                {
                    var questions_div = $("<div></div>").addClass("deal_questions");
                    questions_div.click(function(ev)
                    {
                        ev.stopPropagation();
                    });
                    //$("<p></p>").text("Check here when project verify has been submitted").appendTo(questions_div);
                    $("<input />").attr("type", "checkbox").addClass("submit_verify_cb").css("font-size", "2em").css("position", "relative").css("left", "0.5em").css("display", "none")
                    .change(function()
                    {
                        $(this).css("opacity", "0.2");
                        var that = $(this);
                        $.post("./data", {"fn": "project_verification_status", "status": (($(this)[0].checked * 1) + ''), "identifier": customer.identifier}).done(function(r)
                        {
                            $("#svy_customer_" + customer.identifier).find(".cb_verify_submitted")[0].checked = that[0].checked;
                            that.css("opacity", "1.0");
                        });

                    })
                    .appendTo(questions_div);
                    $("<hr />").appendTo(questions_div);
                    $("<h3></h3>").text("Complete Survey:").appendTo(questions_div);
                    /*if(customer.new_docs_link !== false)
                    {
                        $("<a></a>").attr("href", "javascript:void(0);").text("Response to new signature request").addClass("new_docs_link")
                        .click(function()
                        {
                            BootstrapDialog.show
                            (
                                {
                                    "title": "Rep's Response",
                                    "message": customer.new_docs_link,
                                    "buttons":
                                    [
                                        {
                                            "label": "OK",
                                            "cssClass": "btn-primary",
                                            "action": function(dialog)
                                            {
                                                dialog.close();
                                            }
                                        }
                                    ]
                                }
                            );
                        })
                        .appendTo(questions_div.find("h3").first());
                    }*/                    

                    var y_n_dd = $("<div></div>").addClass("dropdown");
                    $("<select></select>").attr("id", "new_layout").css("display", "none")
                    .append
                    (
                        $("<option value='n/a'>Select One</option>")
                    )
                    .append
                    (
                        $("<option value='1'>Yes</option>")
                    ).append
                    (
                        $("<option value='0' selected='selected'>No</option>")
                    ).on("change", function()
                    {
                        var v = $(this).val();
                        if(v === "1")
                        {
                          $(this).parent().nextAll(".dropdown").first().css("display", "block");
                        }
                        else
                        {
                          $(this).parent().nextAll(".dropdown").first().css("display", "none");
                        }
                    }).appendTo(y_n_dd);

                    y_n_dd.appendTo(questions_div);

                    //$("<br />").appendTo(questions_div);
                    //$("<br />").appendTo(questions_div);

                    $("<div></div>").addClass("dropdown").css("display", "none")
                    .append
                    (
                        $("<input />").attr("type", "text").attr("placeholder", "https://link_to_new_layout").attr("id", "new_layout_link")
                    )
                    .appendTo(questions_div);

                    //$("<br />").appendTo(questions_div);
                    //$("<br />").appendTo(questions_div);

                    //$("<p></p>").text("Is roof/prep work required before installation? Ex: Reroof, move pool solar, etc...").appendTo(questions_div);
                    var y_n_dd2 = $("<div></div>").addClass("dropdown");
                    /*$("<select></select>").attr("id", "roof_work")
                    .append
                    (
                        $("<option value='n/a'>Select One</option>")
                    )
                    .append
                    (
                        $("<option value='1'>Yes</option>")
                    )
                    .append
                    (
                        $("<option value='0'>No</option>")
                    )
                    .on("change", function()
                    {
                        if($(this).val() === "1")
                        {
                            $(this).parent().nextAll(".dropdown").first().css("display", "block");
                        }
                        else if($(this).val() === "0")
                        {
                            $(this).parent().nextAll(".dropdown").first().css("display", "none");
                        }
                    }).appendTo(y_n_dd2);
                    y_n_dd2.appendTo(questions_div);*/

                    //$("<br />").appendTo(questions_div);
                    //$("<br />").appendTo(questions_div);

                    $("<div></div>").addClass("dropdown").css("display", "none")
                    .append
                    (
                        $("<textarea></textarea>").attr("id", "roof_work_details").attr("placeholder", "Describe what type of roof/prep work is required...")
                    ).appendTo(questions_div);

                    $("<br />").appendTo(questions_div);
                    $("<br />").appendTo(questions_div);

                    var repeat_section = function()
                    {
                        var questions = questions_div.find(".new_survey_question_div").get();
                        questions.reverse();
                        var keepers = [];
                        var keep = false;
                        var insert_after = $("<div></div>");
                        var ret = false;
                        $.each(questions, function(i, question)
                        {
                            if(ret)
                            {
                                return;
                            }
                            if($(question).attr("class").indexOf("roof_plane_photos_") > -1)
                            {                                
                                keep = true;
                                insert_after = $(question);
                            }
                            if($(question).attr("class").indexOf("mounting_roof_plane_number_") > -1)
                            {                                
                                ret = true;                                
                            }
                            if(keep)
                            {
                                keepers.push($(question));
                            }
                            
                            
                        });
                        keepers.reverse();
                        var cpy = [];
                        
                        $.each(keepers, function(iii, keeper)
                        {
                            var clonedd = keeper.clone(true, true);
                            clonedd.find("input").val("");
                            clonedd.find(".survey_image_uploading_span").css("display", "none");
                            cpy.push(clonedd);
                            var item = cpy[cpy.length - 1];
                            var class_name_components = item.attr("class").split(" ")[1].replace("new_survey_question_div_", "").split("_");
                            var new_class = item.attr("class").split(" ")[0];
                            var number = parseInt(class_name_components[class_name_components.length - 1]);
                            var new_number = (number + 1) + '';
                            var class_name_components_cpy = [];
                            $.each(class_name_components, function(iiii, component)
                            {
                                if(iiii !== class_name_components.length - 1)
                                {
                                    class_name_components_cpy.push(component);
                                }
                            });
                            item.attr("class", new_class + " " + class_name_components_cpy.join("_") + "_" + new_number);
                            item.attr("data-key", item.attr("class").split(" ")[1]).data("key", item.attr("class").split(" ")[1]);
                            var upped = [];
                            $.each(class_name_components_cpy, function(iiii, eeee)
                            {
                                var word = eeee.toUpperCase()[0];
                                if(eeee.length > 1)
                                {
                                    word += eeee.substring(1);
                                }
                                upped.push(word);

                            });
                            item.find("> p").first().text(upped.join(" ") + " " + new_number);
                            item.insertAfter(insert_after);
                            insert_after = item;
                        });
                        
                    };

                    var survey_questions = 
                    {
                        "site_visit_date":
                        {
                            "type": "date",
                            "value": moment().format("MM-DD-YYYY")
                        },
                        "site_surveyor":
                        {
                            "type": "input_box",
                            "value": "{{user_name}}"
                        },
                        "customer_name":
                        {
                            "type": "input_box",
                            "value": customer.name
                        },
                        "customer_address":
                        {
                            "type": "textarea",
                            "value": customer.address + "\n" + customer.city + ", " + customer.state + "\n" + customer.postal
                        },
                        "house_location":
                        {
                            "type": "geolocation",
                            "value": {"latitude": 33.9980112, longitude: -117.3328108}
                        },
                        "signed_final_layout_available":
                        {
                            "type": "dropdown",
                            "choices":
                            [
                                "Yes",
                                "No"
                            ]
                        },
                        "home_from_street":
                        {
                            "type": "image"
                        },
                        "how_do_lines_enter_home?":
                        {
                            "type": "dropdown",
                            "choices":
                            [
                                "Roof Riser",
                                "Underground"
                            ]
                        },
                        "main_service_description":
                        {
                            "type": "multicheckbox",
                            "choices":
                            [
                                "Exterior Panel",
                                "Combo Panel",
                                "Interior Panel",
                                "Exterior Disconnect",
                                "Interior Disconnect"
                            ]
                        },
                        "exterior_main_panel_location":
                        {
                            "type": "dropdown",
                            "choices":
                            [
                                "NE",
                                "NW",
                                "SE",
                                "SW",
                                "North",
                                "South",
                                "East",
                                "West",
                                "Other"
                            ]
                        },
                        "main_buss_rating_visible":
                        {
                            "type": "dropdown",
                            "choices":
                            [
                                "Yes",
                                "No"
                            ]
                        },
                        "close_up_of_panel_label":
                        {
                            "type": "image"
                        },
                        "close_up_of_main_breaker":
                        {
                            "type": "image"
                        },
                        "main_breaker":
                        {
                            "type": "dropdown",
                            "choices":
                            [
                                "60A",
                                "70A",
                                "90A",
                                "100A",
                                "125A",
                                "150A",
                                "175A",
                                "200A",
                                "225A",
                                "400A"
                            ]
                        },
                        "main_buss_rating":
                        {
                            "type": "dropdown",
                            "choices":
                            [
                                "400A",
                                "250A",
                                "225A",
                                "200A",
                                "175A",
                                "150A",
                                "125A",
                                "100A",
                                "Other"
                            ]
                        },
                        "main_bus_other":
                        {
                            "type": "input_box"
                        },
                        "main_panel_manufacturer":
                        {
                            "type": "dropdown",
                            "choices":
                            [
                                "Square D",
                                "Homeline",
                                "Siemens",
                                "Bryant",
                                "GE",
                                "Thomas & Betts",
                                "Westinghouse",
                                "Cutler Hammer",
                                "Stab Lock",
                                "I*T*E",
                                "Federal Pacific",
                                "Challenger",
                                "BullDog",
                                "Eaton",
                                "Other"
                            ]
                        },
                        "closeup_of_panel_with_deadplate_on":
                        {
                            "type": "image"
                        },
                        "closeup_with_deadplate_removed":
                        {
                            "type": "image"
                        },
                        "available_breaker_space":
                        {
                            "type": "dropdown",
                            "choices":
                            [
                                "No",
                                "Yes"
                            ],
                            "dependent_questions":
                            [
                                {
                                    "key": "available_breaker_space_image",
                                    "type": "image"
                                }
                            ],
                            "dependent_value": "Yes"
                        },
                        "is_there_an_additional_panel_in_the_home":
                        {
                            "type": "dropdown",
                            "choices":
                            [
                                "N/A",
                                "No",
                                "Yes"
                            ]
                        },
                        "grounding_type":
                        {
                            "type": "dropdown",
                            "choices":
                            [
                                "Ufer",
                                "Ground Rod",
                                "Cold Water Pipe",
                                "None"
                            ]
                        },
                        "meter_number":
                        {
                            "type": "input_box"
                        },
                        "close_up_of_meter":
                        {
                            "type": "image"
                        },
                        "exterior_panel_and_surroundings":
                        {
                            "type": "image"
                        },
                        "info_on_interior_panel":
                        {
                            "type": "input_box"
                        },
                        "number_of_solar_panels_to_provided_layout":
                        {
                            "type": "input_box"
                        },
                        "roof_mount":
                        {
                            "type": "dropdown",
                            "choices":
                            [
                                "Yes",
                                "No"
                            ],
                            "dependent_questions":
                            [
                                {
                                    "key": "flat_or_pitched?",
                                    "type": "dropdown",
                                    "choices":
                                    [
                                        "Flat",
                                        "Pitched",
                                        "Both"
                                    ]
                                }
                            ],
                            "dependent_value": "Yes"
                        },
                        "skip_sheeting?":
                        {
                            "type": "dropdown",
                            "choices":
                            [
                                "Yes",
                                "No",
                                "N/A"
                            ]
                        },
                        "non_usable_area_photos":
                        {
                            "type": "image"
                        },
                        "shade_obstruction_in_proposed_array_location?":
                        {
                            "type": "dropdown",
                            "choices":
                            [
                                "Yes",
                                "No"
                            ]
                        },
                        "shade_photos_(_annotate_heights_about_24_inches_)":
                        {
                            "type": "image"
                        },
                        "structural_members_visible":
                        {
                            "type": "dropdown",
                            "choices":
                            [
                                "Yes",
                                "No"
                            ],
                            "dependent_questions":
                            [
                                {
                                    "key": "structural_type",
                                    "type": "dropdown",
                                    "choices": 
                                    [
                                        "Pitched Trusses",
                                        "Pitched Rafters",
                                        "Metal Framing",
                                        "Flat - Joists",
                                        "Flat - Trusses",
                                        "Heavy Timber",
                                        "Other"
                                    ]
                                },
                                {
                                    "key": "on_center_spacing",
                                    "type": "multicheckbox",
                                    "choices":
                                    [
                                        "16\"",
                                        "24\"",
                                        "48\"",
                                        "Other"
                                    ]
                                },
                                {
                                    "key": "structural_member_size",
                                    "type": "dropdown",
                                    "choices":
                                    [
                                        "2x4",
                                        "2x6",
                                        "2x8",
                                        "2x10",
                                        "2x12",
                                        "2x16",
                                        "4x4",
                                        "4x6",
                                        "4x8"
                                    ]
                                },
                                {
                                    "key": "structural_photos",
                                    "type": "image"
                                }
                            ],
                            "dependent_value": "Yes"
                        },
                        "structural_concerns":
                        {
                            "type": "dropdown",
                            "choices":
                            [
                                "Yes",
                                "No"
                            ]
                        },
                        "number_of_mounting_planes":
                        {
                            "type": "dropdown",
                            "choices":
                            [
                                "Roof 1",
                                "Roof 2",
                                "Roof 3",
                                "Roof 4",
                                "Roof 5",
                                "Roof 6",
                                "Roof 7",
                                "Roof 8",
                                "Roof 9",
                                "Roof 10"
                            ]
                        },
                        "ridge_condition":
                        {
                            "type": "dropdown",
                            "choices":
                            [
                                "New",
                                "Very Good",
                                "Good",
                                "Poor"
                            ],
                            "dependent_questions":
                            [
                                {
                                    "key": "explanation_of_ridge_problems",
                                    "type": "input_box"
                                }
                            ],
                            "dependent_value": "Poor"
                        },
                        "pictures_of_ridges_above_desired_mounting_plane":
                        {
                            "type": "image"
                        },
                        "underlayment_problems":
                        {
                            "type": "image"
                        },
                        "mounting_roof_plane_number_1":
                        {
                            "type": "dropdown",
                            "choices": 
                            [
                                "Roof 1",
                                "Roof 2",
                                "Roof 3",
                                "Roof 4",
                                "Roof 5",
                                "Roof 6",
                                "Roof 7",
                                "Roof 8",
                                "Roof 9",
                                "Roof 10"
                            ]
                        },
                        "azimuth_of_mounting_plane_1":
                        {
                            "type": "input_box"
                        },
                        "visible_roof_problems_1":
                        {
                            "type": "dropdown",
                            "choices":
                            [
                                "Yes",
                                "No"
                            ]
                        },
                        "underlayment_problem_type_1":
                        {
                            "type": "dropdown",
                            "choices":
                            [
                                "N/A",
                                "Ripped",
                                "Holes",
                                "Cracking",
                                "Excessively Curled Where Water Can Enter",
                                "Excessive Debris Build-Up"
                            ]
                        },
                        "more_than_15_tiles_missing_or_broken_1":
                        {
                            "type": "dropdown",
                            "choices":
                            [
                                "N/A",
                                "Yes",
                                "No"
                            ]
                        },
                        "number_of_layers_of_shingles_1":
                        {
                            "type": "dropdown",
                            "choices":
                            [
                                "N/A",
                                "1",
                                "2",
                                "3",
                                "4",
                                "More than 4"
                            ]
                        },
                        "shingles_dry_and_cracked_1":
                        {
                            "type": "dropdown",
                            "choices":
                            [
                                "N/A",
                                "Yes",
                                "No"
                            ]
                        },
                        "explain_action_required_for_roof_repair_1":
                        {
                            "type": "input_box",
                            "value": "n/a"
                        },
                        "inclinometer_reading_1":
                        {
                            "type": "image"
                        },
                        "inclinometer_reading_roof_plane_tilt_1":
                        {
                            "type": "input_box"
                        },
                        "is_this_a_steep_roof_1":
                        {
                            "type": "dropdown",
                            "choices":
                            [
                                "N/A",
                                "Yes",
                                "No"
                            ]
                        },
                        "roofing_type_1":
                        {
                            "type": "dropdown",
                            "choices":
                            [
                                "Asphalt Shingle",
                                "Flat Tile",
                                "S Tile",
                                "Wave Tile",
                                "Rolled Asphalt",
                                "Tar and Gravel",
                                "Clay",
                                "Standing Seam Metal",
                                "Wood Shake",
                                "Other"
                            ]
                        },
                        "roof_problems_1":
                        {
                            "type": "dropdown",
                            "choices":
                            [
                                "None",
                                "Damaged FLashing",
                                "Roof BUckling",
                                "Roof Blistering",
                                "Roof Rot",
                                "Other",
                                "Broken Tiles",
                                "Underlayment Problems"
                            ]
                        },
                        "roof_plane_photos_1":
                        {
                            "type": "image",
                            "button": "Add Additional Roof/Plane",
                            "button_click": function(el)
                            {
                                repeat_section();
                            }
                        },
                        "general_ground_mount":
                        {
                            "type": "dropdown",
                            "choices":
                            [
                                "Yes",
                                "No"
                            ]
                        },
                        "roof_drawing":
                        {
                            "type": "image"
                        },
                        "desigener_notes":
                        {
                            "type": "input_box"
                        }                        
                    };

                    var render_question = function(key, e)
                    {
                        var change_fn = function(ev, data)
                        {
                            if(data === e.dependent_value)
                            {
                                question_div.find(".new_survey_question_div").each(function(ii, ee)
                                {
                                    $(ee).css("display", "block");
                                });
                            }
                            else
                            {
                                question_div.find(".new_survey_question_div").each(function(ii, ee)
                                {
                                    $(ee).css("display", "none");
                                });
                            }
                        };
                        var question_div = $("<div></div>").addClass("new_survey_question_div").attr("data-key", key).addClass("new_survey_question_div_" + key).attr("data-type", e.type);
                        var question_txt_vals = [];
                        var vals = key.split("_");
                        $.each(vals, function(ii, value)
                        {
                            var v = value[0].toUpperCase();
                            if(value.length > 1)
                            {
                                v += value.substring(1);
                            }
                            question_txt_vals.push(v)
                        });
                        $("<p></p>").text(question_txt_vals.join(" ")).appendTo(question_div);
                        
                        switch(e.type)
                        {
                            case "date":
                                var dt = moment().format("MM-DD-YYYY");
                                if(typeof(e["value"]) + '' !== "undefined")
                                {
                                    dt = e.value;
                                }
                                $("<div></div>").addClass("input-append").addClass("date").attr("data-date", dt).attr("data-date-format", "dd-mm-yyyy")
                                .append
                                (
                                    $("<input />").attr("size", "16").attr("type", "text").attr("value", dt)
                                    
                                )
                                .append
                                (
                                    $("<span></span>").addClass("add-on")
                                    .append
                                    (
                                        $("<i></i>").addClass("icon-th")
                                    )
                                )
                                .appendTo(question_div);
                                break;

                            case "input_box":
                                var inp = $("<input />").attr("type", "text");
                                if(typeof(e["value"]) + '' !== "undefined")
                                {
                                    inp.attr("value", e.value);
                                }
                                inp.appendTo(question_div);
                                inp.change(function(ev)
                                {
                                    change_fn(ev, $(this).val());
                                });
                                break;

                            case "textarea":
                                var ta = $("<textarea></textarea>");
                                if(typeof(e["value"]) + '' !== "undefined")
                                {
                                    var val = e.value;
                                    ta.val(val);
                                }
                                ta.appendTo(question_div);
                                break;

                            case "geolocation":
                                 var geo_ta = $("<textarea></textarea>").val("{\"latitude\":33.9980301,\"longitude\":-117.3306348}").css("display", "none");
                                 if (navigator.geolocation)
                                 {
                                    
                                    var update = function(location)
                                    {
                                        e.value.latitude = parseFloat(location.coords.latitude);
                                        e.value.longitude = parseFloat(location.coords.longitude);
                                        geo_ta.val(JSON.stringify({"latitude": location.coords.latitude, "longitude": location.coords.longitude}));
                                        $(".new_survey_question_div_" + key).find(".geolocation").locationpicker
                                        (
                                            {
                                                "location": e.value,                                
                                                "onchanged": function(loc)
                                                {
                                                    geo_ta.val(JSON.stringify(loc));
                                                    e.value = loc;
                                                }
                                            }
                                        );
                                    };
                                    navigator.geolocation.getCurrentPosition(update);
                                 }                                 
                                 $("<div></div>").addClass("geolocation").css("width", "320px").css("height", "200px")                                 
                                 .appendTo(question_div);
                                 geo_ta.appendTo(question_div);
                                 
                                break;

                            case "dropdown":
                                var sel = $("<select></select>");
                                $("<option></option>").attr("value", "n/a").text("Choose One").appendTo(sel);
                                $.each(e.choices, function(ii, choice)
                                {
                                    var o = $("<option></option>").attr("value", choice).text(choice)
                                    if(typeof(e["value"]) + '' !== "undefined")
                                    {
                                        if(e["value"] === o.attr("value"))
                                        {
                                            o.attr("selected", "selected");
                                        }
                                    }
                                    o.appendTo(sel);
                                });
                                sel.appendTo(question_div);
                                sel.change(function(ev)
                                {
                                    change_fn(ev, $(this).val());
                                });
                                break;

                            case "image":
                                $("<div></div>")
                                .append($("<hr />"))
                                .append
                                (
                                    $("<input />").addClass("survey_image").attr("type", "file").attr("accept", "image/*")
                                    .change(function()
                                    {
                                        var that = $(this);
                                        var formData = new FormData();

                                        var name = that.parent().parent().find("> p").first().text();
                                        var items_count = that.parent().prevAll("div").length;
                                        items_count++;
                                        name += (" " + (items_count + ''));

                                        formData.append("name", name);
                                        formData.append("fn", "survey_file_upload");
                                        formData.append("identifier", customer.identifier);
                                        formData.append("image", that[0].files[0]);

                                        var xhr = new XMLHttpRequest();
                                        (xhr.upload || xhr).addEventListener("progress", function(e)
                                        {
                                            var done = e.position || e.loaded
                                            var total = e.totalSize || e.total;
                                            var completion_percentage = (Math.round(done/total*100) + '') + "%";
                                            that.parent().find("> span").last().css("display", "block").text("Uploading (" + completion_percentage + ")");

                                        });
                                        xhr.addEventListener("load", function(e)
                                        {
                                            that.parent().find("> span").last().css("display", "none").text("0%");
                                        });
                                        xhr.open("POST", "./data");
                                        xhr.send(formData);
                                    })
                                )
                                .append
                                (
                                    $("<span></span>").css("display", "none").addClass("survey_image_uploading_span").text("0%")
                                )
                                .append($("<hr />"))
                                .appendTo(question_div);
                                $("<button></button>").addClass("btn").addClass("btn-success").text("+ New Image")
                                .click(function()
                                {
                                    $("<div></div>")
                                    .append($("<hr />"))
                                    .append
                                    (
                                        $("<input />").addClass("survey_image").attr("type", "file").attr("accept", "image/*")
                                        .change(function()
                                        {
                                            var that = $(this);
                                            var formData = new FormData();

                                            var name = that.parent().parent().find("> p").first().text();
                                            var items_count = that.parent().prevAll("div").length;
                                            items_count++;
                                            name += (" " + (items_count + ''));

                                            formData.append("name", name);
                                            formData.append("fn", "survey_file_upload");
                                            formData.append("identifier", customer.identifier);
                                            formData.append("image", that[0].files[0]);

                                            var xhr = new XMLHttpRequest();
                                            (xhr.upload || xhr).addEventListener("progress", function(e)
                                            {
                                                var done = e.position || e.loaded
                                                var total = e.totalSize || e.total;
                                                var completion_percentage = (Math.round(done/total*100) + '') + "%";
                                                that.parent().find("> span").last().css("display", "block").text("Uploading (" + completion_percentage + ")");

                                            });
                                            xhr.addEventListener("load", function(e)
                                            {
                                                that.parent().find("> span").last().css("display", "none").text("0%");
                                            });
                                            xhr.open("POST", "./data");
                                            xhr.send(formData);
                                        })
                                    )                                    
                                    .append
                                    (
                                        $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove")
                                        .click(function()
                                        {
                                            $(this).parent().remove();
                                        })
                                    )
                                    .append
                                    (
                                        $("<span></span>").css("display", "none").addClass("survey_image_uploading_span").text("0%")
                                    )
                                    .append
                                    (
                                        $("<hr />")
                                    )
                                    .insertBefore($(this));
                                })
                                .appendTo(question_div);
                                break;

                            case "multicheckbox":
                                var ul = $("<ul></ul>");
                                $.each(e.choices, function(ii, choice)
                                {
                                    $("<li></li>")
                                    .text(choice)
                                    .append
                                    (
                                        $("<input />").attr("type", "checkbox")
                                    )
                                    .appendTo(ul);
                                });
                                ul.appendTo(question_div);
                                break;
                            default:
                                break;
                        }
                        if(typeof(e["button"]) + '' !== "undefined")
                        {
                            $("<button></button>").addClass("btn").addClass("btn-primary").text(e.button).click(function()
                            {
                                e.button_click();
                            }).appendTo(question_div);
                        }
                        return question_div;
                    };
                    
                    $.each(survey_questions, function(key, e)
                    {
                        var question_div = render_question(key, e);
                        if(typeof(e.dependent_questions) + '' !== "undefined")
                        {
                            $.each(e.dependent_questions, function(ii, question)
                            {
                                var question_div2 = render_question(question.key, question);
                                question_div2.css("display", "none");
                                question_div2.appendTo(question_div);
                            });
                        }                        
                        question_div.appendTo(questions_div);
                    });                    
                    questions_div.find(".date").datepicker(
                        {
                            "format": "mm-dd-yyyy",
                            "autoClose": true
                        }
                    );

                    $("<br />").appendTo(questions_div);
                    $("<br />").appendTo(questions_div);
                    $("<button></button>").addClass("btn").addClass("btn-success").text("Complete Survey").click(function()
                    {
                        var ret = false;
                        $(".survey_image_uploading_span").each(function(iiiii, eeeee)
                        {
                            if($(eeeee).css("display").toLowerCase() !== "none")
                            {
                                window.alert("Image uploads are still in progress...try again in a few moments.");
                                ret = true;
                            }
                        });
                        if(ret)
                        {
                            return;
                        }

                        var survey_data = {};
                        var key_ordering = [];
                           
                        $(".new_survey_question_div").each(function(iii, eee)
                        {
                            if(ret || $(eee).css("display").toLowerCase() === "none")
                            {
                                return;
                            }
                            switch($(eee).data("type"))
                            {
                                case "date":
                                    survey_data[$(eee).data("key")] = $.trim($(eee).find("input").first().val());
                                    key_ordering.push($(eee).data("key"));
                                    if($.trim($(eee).find("input").first().val()).length === 0)
                                    {
                                        ret = true;
                                        window.alert("You must provide input for the following question: \"" + $(eee).find("> p").first().text() + "\"");
                                        $(eee)[0].scrollIntoView();
                                    }
                                    break;
                                case "input_box":
                                    survey_data[$(eee).data("key")] = $.trim($(eee).find("> input").first().val());
                                    key_ordering.push($(eee).data("key"));
                                    if($.trim($(eee).find("> input").first().val()).length === 0)
                                    {
                                        ret = true;
                                        window.alert("You must provide input for the following question: \"" + $(eee).find("> p").first().text() + "\"");
                                        $(eee)[0].scrollIntoView();
                                    }
                                    break;
                                case "textarea":
                                    survey_data[$(eee).data("key")] = $.trim($(eee).find("> textarea").first().val());
                                    key_ordering.push($(eee).data("key"));
                                    if($.trim($(eee).find("> textarea").first().val()).length === 0)
                                    {
                                        ret = true;
                                        window.alert("You must provide input for the following question: \"" + $(eee).find("> p").first().text() + "\"");
                                        $(eee)[0].scrollIntoView();
                                    }
                                    break;
                                case "geolocation":
                                    survey_data[$(eee).data("key")] = $.parseJSON($.trim($(eee).find("textarea").first().val()));
                                    key_ordering.push($(eee).data("key"));
                                    if($.trim($(eee).find("textarea").first().val()).length === 0)
                                    {
                                        ret = true;
                                        window.alert("You must provide input for the following question: \"" + $(eee).find("> p").first().text() + "\"");
                                        $(eee)[0].scrollIntoView();
                                    }                                    
                                    break;
                                case "dropdown":
                                    survey_data[$(eee).data("key")] = $.trim($(eee).find("select").first().val());
                                    key_ordering.push($(eee).data("key"));
                                    if(survey_data[$(eee).data("key")] === "n/a")
                                    {
                                        ret = true;
                                        window.alert("You must provide a selection for the following question: \"" + $(eee).find("> p").first().text() + "\"");
                                        $(eee)[0].scrollIntoView();
                                    }
                                    break;
                                case "image":
                                    survey_data[$(eee).data("key")] = "{image}"
                                    key_ordering.push($(eee).data("key"));
                                    var files = $(eee).find("input").first()[0].files;
                                    if(files.length === 0)
                                    {
                                        window.alert("You must upload an image for the following question: \"" + $(eee).find("> p").first().text() + "\"");
                                        ret = true;
                                        $(eee)[0].scrollIntoView();
                                    }
                                    break;
                                case "multicheckbox":
                                    var checked_count = 0;
                                    $(eee).find("input").each(function(iiii, eeee)
                                    {
                                        checked_count += ($(eeee)[0].checked * 1)
                                    });
                                    if(checked_count === 0)
                                    {
                                        window.alert("You must select at least one checkbox for the following question: \"" + $(eee).find("> p").first().text() + "\"");
                                        ret = true;
                                        $(eee)[0].scrollIntoView();
                                    }
                                    survey_data[$(eee).data("key")] = [];
                                    key_ordering.push($(eee).data("key"));
                                    $(eee).find("input").each(function(iiii, eeee)
                                    {
                                        if($(eeee)[0].checked)
                                        {
                                            survey_data[$(eee).data("key")].push($(eeee).parent().text());
                                        }
                                    });
                                    break;
                                default:
                                    break;
                            }
                        });
                        if(ret)
                        {
                            return;
                        }

                        $(this).remove();

                        var payload = {};
                        payload["fn"] = "survey_complete_v2"
                        payload["identifier"] = customer.identifier;
                        payload["data"] = JSON.stringify(survey_data);
                        payload["key_ordering"] = JSON.stringify(key_ordering);

                        $("#svy_customer_" + customer.identifier).css("opacity", "0.2");
                        $.post("./data", payload).done(function(resp)
                        {
                            $("#svy_customer_" + customer.identifier).remove();
                            //$("#svy_customer_" + customer.identifier).find(".cb_survey_complete")[0].checked = true;                            
                        });
                    }).appendTo(questions_div);

                    $("<button></button>").addClass("btn").addClass("btn-danger").text("Cancel Survey").click(function()
                    {
                        BootstrapDialog.show
                        (
                            {
                                "title": "Provide a reason",
                                "message": "<br /><textarea class='svy_cancel_reason' placeholder='Please provide an explanation to pass on to the rep...'></textarea><br />",
                                "buttons":
                                [
                                    {
                                        "label": "Continue",
                                        "cssClass": "btn-primary",
                                        "action": function(dialog)
                                        {
                                            $(".bootstrap-dialog-footer").find("button").remove();
                                            if($.trim($(".svy_cancel_reason").val()).length === 0)
                                            {
                                                window.alert("You must provide a reason.");
                                                return;
                                            }
                                            $.post("./data", {"fn": "new_survey_cancel", "identifier": customer.identifier, "reason": $.trim($(".svy_cancel_reason").val())}).done(function(resp)
                                            {
                                                $("#svy_customer_" + customer.identifier).remove();
                                                dialog.close();
                                            });
                                        }
                                    }
                                ]
                            }
                        )
                    }).appendTo(questions_div);

                    return questions_div;
                };

                var get_assessment_questions_div = function(customer)
                {
                    var questions_div = $("<div></div>").addClass("deal_questions").addClass("deal_questions_pa").css("display", "none");
                    questions_div.click(function(ev)
                    {
                        ev.stopPropagation();
                    });
                    $("<h3></h3>").text("Complete Electrical:").appendTo(questions_div);

                    $("<p></p>").text("Ran conduit").appendTo(questions_div);
                    $("<input />").attr("type", "checkbox").addClass("ran_conduit").appendTo(questions_div);
                    $("<br /><br />").appendTo(questions_div);

                    var y_n_dd0 = $("<div></div>").addClass("dropdown");
                    $("<p></p>").text("Did you do panel work").appendTo(y_n_dd0);
                    $("<select></select>").attr("id", "p_work_done")
                    .append
                    (
                        $("<option value='n/a'>Select One</option>")
                    )
                    .append
                    (
                        $("<option value='1'>Yes</option>")
                    ).append
                    (
                        $("<option value='0'>No</option>")
                    ).on("change", function()
                    {
                        var v = $(this).val();
                        if(v === "1")
                        {
                          $(this).parent().nextAll(".dropdown").first().css("display", "block");
                        }
                        else
                        {
                          $(this).parent().nextAll(".dropdown").first().css("display", "none");
                        }
                    }).appendTo(y_n_dd0);
                    y_n_dd0.appendTo(questions_div);

                    $("<br />").appendTo(questions_div);
                    $("<div></div>").addClass("dropdown").css("display", "none").append
                    (
                        $("<p></p>").text("Type of panel work")
                    )
                    .append
                    (
                        $("<select></select>").attr("id", "p_work_type_orig")
                        .append
                        (
                            $("<option value='n/a'>Select One</option>")
                        )
                        .append
                        (
                            $("<option value='RMA'>RMA</option>")
                        )
                        .append
                        (
                            $("<option value='Connector'>Connector</option>")
                        )
                        .append
                        (
                            $("<option value='Gut Change'>Gut Change</option>")
                        )
                        .append
                        (
                            $("<option value='Derate'>Derate</option>")
                        )
                        .append
                        (
                            $("<option value='Replace'>Replace</option>")
                        )
                        .append
                        (
                            $("<option value='Breaker Work'>Breaker Work</option>")
                        )
                    ).appendTo(questions_div);
                    $("<br />").appendTo(questions_div);

                    var y_n_dd = $("<div></div>").addClass("dropdown");
                    $("<p></p>").text("Is additional panel work required?").appendTo(y_n_dd);
                    $("<select></select>").attr("id", "p_work_required")
                    .append
                    (
                        $("<option value='n/a'>Select One</option>")
                    )
                    .append
                    (
                        $("<option value='1'>Yes</option>")
                    ).append
                    (
                        $("<option value='0'>No</option>")
                    ).on("change", function()
                    {
                        var v = $(this).val();
                        if(v === "1")
                        {
                          $(this).parent().nextAll(".dropdown").first().css("display", "block");
                        }
                        else
                        {
                          $(this).parent().nextAll(".dropdown").first().css("display", "none");
                        }
                    }).appendTo(y_n_dd);

                    y_n_dd.appendTo(questions_div);
                    $("<br />").appendTo(questions_div);
                    $("<div></div>").addClass("dropdown").css("display", "none").append
                    (
                        $("<p></p>").text("Type of panel work")
                    )
                    .append
                    (
                        $("<select></select>").attr("id", "p_work_type")
                        .append
                        (
                            $("<option value='n/a'>Select One</option>")
                        )
                        .append
                        (
                            $("<option value='RMA'>RMA</option>")
                        )
                        .append
                        (
                            $("<option value='Connector'>Connector</option>")
                        )
                        .append
                        (
                            $("<option value='Gut Change'>Gut Change</option>")
                        )
                        .append
                        (
                            $("<option value='Derate'>Derate</option>")
                        )
                        .append
                        (
                            $("<option value='Replace'>Replace</option>")
                        )
                        .append
                        (
                            $("<option value='Breaker Work'>Breaker Work</option>")
                        )
                    ).appendTo(questions_div);
                    $("<br />").appendTo(questions_div);

                    $("<div></div>").addClass("dropdown").append
                    (
                        $("<p></p>").text("Is a combiner box required?")
                    )
                    .append
                    (
                        $("<select></select>").attr("id", "combiner_box_yn")
                        .append
                        (
                            $("<option></option>").attr("value", "n/a").text("Select One")
                        )
                        .append
                        (
                            $("<option></option>").attr("value", "1").text("Yes")
                        )
                        .append
                        (
                            $("<option></option>").attr("value", "0").text("No")
                        )
                        .on("change", function()
                        {
                            var v = $(this).val();
                            if(v === "1")
                            {
                                $(this).parent().nextAll(".dropdown").first().css("display", "block");
                            }
                            else if(v === "0")
                            {
                                $(this).parent().nextAll(".dropdown").first().css("display", "none");
                            }
                        })
                    ).appendTo(questions_div);
                    $("<br />").appendTo(questions_div);

                    $("<div></div>").addClass("dropdown").css("display", "none").append
                    (
                        $("<p></p>").text("Installed combiner box")
                    )
                    .append
                    (
                        $("<input />").attr("type", "checkbox").addClass("installed_combiner_box")
                    ).appendTo(questions_div);
                    $("<br />").appendTo(questions_div);

                    $("<div></div>").addClass("dropdown").append
                    (
                        $("<p></p>").text("Installed disconnect box")
                    )
                    .append
                    (
                        $("<input />").attr("type", "checkbox").addClass("installed_disconnect_box")
                    )
                    .appendTo(questions_div);


                    $("<div></div>").addClass("dropdown").append
                    (
                        $("<p></p>").text("New BUSS Ratings")
                    )
                    .append
                    (
                        $("<input />").attr("type", "text").addClass("new_buss_ratings").css("text-indent", "0.5em").css("margin-left", "1em")
                    )
                    .appendTo(questions_div);
                    $("<br />").appendTo(questions_div);

                    $("<div></div>").addClass("dropdown")
                    .append
                    (
                        $("<p></p>").text("New Main Breaker Amps")
                    )
                    .append
                    (
                        $("<input />").attr("type", "text").addClass("new_breaker_amps").css("text-indent", "0.5em").css("margin-left", "1em")
                    )
                    .appendTo(questions_div);
                    $("<br />").appendTo(questions_div);

                    $("<div></div>").addClass("dropdown").append
                    (
                        $("<textarea></textarea>").attr("placeholder", "Your notes...").addClass("p_assessment_notes")
                    ).appendTo(questions_div);

                    $("<button></button>").text("Submit").addClass("btn").addClass("btn-primary").addClass("panel_sub_btn").click(function()
                    {
                        if($("#p_work_done").val() === "n/a")
                        {
                            window.alert("You must choose whether panel work was done");
                            return;
                        }
                        if($("#p_work_type_orig").val() === "n/a" && $("#p_work_done").val() === "1")
                        {
                            window.alert("If panel work was done, you must specify which type");
                            return;
                        }

                        if($("#p_work_required").val() === "n/a")
                        {
                            window.alert("You must choose whether additional panel work is required.");
                            return;
                        }
                        if($("#p_work_type").val() === "n/a" && $("#p_work_required").val() === "1")
                        {
                            window.alert("If additional panel work is specified as required, the type of panel work must also be provided.");
                            return;
                        }

                        if($("#combiner_box_yn").val() === "n/a")
                        {
                            window.alert("You must specify whether a combiner box is required");
                            return;
                        }

                        if($("#combiner_box_yn").val() === "1" && !$(".installed_combiner_box")[0].checked)
                        {
                            window.alert("If a combiner box is required, you must check off that is has been installed");
                            return;
                        }

                        $(this).remove();
                        var payload = {};
                        payload["fn"] = "submit_panel_job_info";
                        payload["identifier"] = customer.identifier;
                        payload["panel_work_required"] = ((($("#p_work_required").val() === "1") * 1) + '');
                        payload["original_panel_work_done"] = ((($("#p_work_done").val() === "1") * 1) + '');

                        var ret_early_part2 = false;
                        $.each(["new_buss_ratings", "new_breaker_amps"], function(iii, keyyy)
                        {
                            payload[keyyy] = $.trim($("." + keyyy).val());
                            if(payload[keyyy].length === 0)
                            {
                                ret_early_part2 = true;
                            }
                        });
                        if(ret_early_part2)
                        {
                            window.alert("You must provide values for both New BUSS Ratings and New Breaker Amps");
                            return;
                        }

                        payload["ran_conduit"] = (($(".ran_conduit")[0].checked * 1) + '');
                        payload["required_combiner_box"] = (((($("#combiner_box_yn").val() === "1") * 1) + ''));
                        if(payload["required_combiner_box"] === "1")
                        {
                            payload["installed_combiner_box"] = ((($(".installed_combiner_box")[0].checked) * 1) + '');
                        }
                        payload["installed_disconnect_box"] = ((($(".installed_disconnect_box")[0].checked) * 1) + '');

                        if(payload["panel_work_required"] === "1")
                        {
                            payload["panel_work_type"] = $("#p_work_type").val();
                        }
                        if(payload["original_panel_work_done"] === "1")
                        {
                            payload["original_panel_work_type"] = $("#p_work_type_orig").val();
                        }
                        payload["notes"] = $.trim($(".p_assessment_notes").val());

                        $.post("./data", payload).done(function(resp)
                        {
                            $("#svy_customer_" + customer.identifier).find(".cb_assessment_complete")[0].checked = true;
                            customer.assessment_complete = true;
                            if($("#svy_customer_" + customer.identifier).find(".cb_survey_complete")[0].checked && $("#svy_customer_" + customer.identifier).find(".cb_assessment_complete")[0].checked)
                            {
                                $("#svy_customer_" + customer.identifier).remove();
                            }
                            else
                            {
                                $("#svy_customer_" + customer.identifier).trigger("click");
                            }
                        });
                    }).appendTo(questions_div);

                    return questions_div;
                };

                if(!customer.survey_complete)
                {
                    get_survey_questions_div(customer).appendTo(deal_details_wrapper_div);
                }
                if(!customer.survey_complete && !customer.assessment_complete)
                {
                    $("<hr />").appendTo(deal_details_wrapper_div);
                }
                if(!customer.assessment_complete)
                {
                    get_assessment_questions_div(customer).appendTo(deal_details_wrapper_div);
                }



                deal_details_wrapper_div.appendTo($("#svy_customer_" + customer.identifier));
            }
            function addNewFilteredNote(customer, cb, n_key, comm_type, customer_response)
            {
                if(typeof(customer_response) + '' === "undefined")
                {
                    customer_response = "";
                }
                if(typeof(n_key) + '' === "undefined")
                {
                    n_key = "panel_work";
                }
                if(typeof(comm_type) + '' === "undefined")
                {
                    comm_type = "";
                }
                BootstrapDialog.show
                (
                    {
                        "title": "Adding a new note...",
                        "message": "<br /><textarea class='new_filtered_note' placeholder='The note...'></textarea><br />",
                        "buttons":
                        [
                            {
                                "label": "Cancel",
                                "cssClass": "btn-danger",
                                "action": function(d)
                                {
                                    d.close();
                                }
                            },
                            {
                                "label": "Save Note",
                                "cssClass": "btn-primary",
                                "action": function(dialog)
                                {
                                    $(".bootstrap-dialog-footer").find(".btn-primary").text("Saving...").css("opacity", "0.2");
                                    var payload = {"fn": "add_note_for_customer", "user_identifier": window.user_identifier, "identifier": customer.identifier, "has_file": "0", "txt": $.trim($(".bootstrap-dialog-message").find("textarea").val()), "nkey": n_key, "comm_type": comm_type};
                                    if(customer_response !== "")
                                    {
                                        payload["customer_response"] = customer_response;
                                    }
                                    $.post("./data", payload).done(function(resph)
                                    {
                                        if(typeof(cb) + '' !== "undefined")
                                        {
                                        	cb($(".bootstrap-dialog-message").find("textarea").val(), resph.identifier);
                                        }
                                        dialog.close();
                                    });
                                }
                            }
                        ]
                    }
                );
            }
            function showFilteredCustomerNotes(customer)
            {
                var html = $("<div></div>");
                $.each(customer.notes, function(i, e)
                {
                    $("<hr />").appendTo(html);
                    $("<p></p>").text(e).appendTo(html);
                    $("<hr />").appendTo(html);
                });

                BootstrapDialog.show
                (
                    {
                        "title": "Notes for " + customer.name,
                        "message": html.html(),
                        "buttons":
                        [
                            {
                                "label": "Close",
                                "cssClass": "btn-danger",
                                "action": function(dialog)
                                {
                                    dialog.close();
                                }
                            },
                            {
                                "label": "Add Additional Note",
                                "cssClass": "btn-primary",
                                "action": function(dialog)
                                {
                                    dialog.close();
                                    addNewFilteredNote(customer);
                                }
                            }
                        ]
                    }
                );
            }
            function permitDesignTabV2()
            {
                var app_area = $("#app_area");
                $("<h3></h3>").addClass("tmp_loading_h3").text("Loading").appendTo(app_area);
                var spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");
                var spacer_clone = spacer.clone();
                var main_div = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10");
                /*$("<p></p>").append
                (
                    $("<span></span>").addClass("badge").addClass("badge-default").addClass("solar_ready_complete2").text("Panel Assessment Complete")
                )
                .append
                (
                    $("<span></span>").addClass("badge").addClass("badge-default").addClass("solar_ready_complete1").text("Survey Complete")
                )
                .appendTo(main_div);*/
                $.post("./data", {"fn": "get_permit_design_customers_v2"}).done(function(resp)
                {
                    var state_map = window.states_mapping;
                    if(Object.keys(resp).length === 0)
                    {
                        $(".tmp_loading_h3").text("No customers are ready for permit design");
                    }
                    else
                    {
                        $(".tmp_loading_h3").remove();
                    }


                    $.each(Object.keys(resp), function(i, state)
                    {
                        var state_container = $("<div></div>").addClass("svy_state_container");
                        $("<h3></h3>").text(state_map[state]).appendTo(state_container);

                        $("<div></div>").addClass("pdesign_labels")
                        .append
                        (
                            $("<span></span>").text("Elect. Notes")
                        )
                        .append
                        (
                            $("<span></span>").text("Plan Set Received")
                        )
                        .appendTo(state_container);

                        var customers = resp[state];
                        $.each(customers, function(k, customer)
                        {
                            var cust_div = $("<div></div>").addClass("pdesign_customer_div").attr("id", "pdesign_customer_" + customer.identifier);

                            $("<p></p>").addClass("pdesign_customer_name")
                            .append
                            (
                                $("<span></span>").text(customer.name)
                                .click(function()
                                {
                                    showPermitDesignDetailsV2(customer);
                                })
                            )
                            .appendTo(cust_div);

                            var dt4 = $("<span></span>").addClass("pdesign_lbl_value");
                            dt4.html("&#128210;").attr("title", "Electrical Work Notes").click(function(ev)
                            {
                                ev.stopPropagation();
                                showFilteredCustomerNotes({"identifier": customer.identifier, "name": customer.name, "notes": customer.notes});
                            });
                            var dt5 = $("<input />").attr("type", "checkbox").on("change", function(ev)
                            {
                                $(this).css("opacity", "0.1");
                                $.post("/data", {"fn": "project_management_item_checkoff", "user": window.user_identifier, "checked": "1", "date": moment().format("YYYY-MM-DD"), "identifier": customer.identifier, "key": "plan_set_received"}).done(function(rrr)
                                {
                                    cust_div.remove();
                                    PMV2StageUpdate(customer.identifier)
                                });
                            });

                            dt5.appendTo(cust_div.find(".pdesign_customer_name"));
                            dt4.appendTo(cust_div.find(".pdesign_customer_name"));

                            cust_div.appendTo(state_container);
                        });
                        state_container.appendTo(main_div);
                    });
                    $.each([spacer, main_div, spacer_clone], function(i, e)
                    {
                        e.appendTo(app_area); 
                    });
                });
            }
            function permitDesignTab()
            {
                var app_area = $("#app_area");
                $("<h3></h3>").addClass("tmp_loading_h3").text("Loading").appendTo(app_area);
                var spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");
                var spacer_clone = spacer.clone();
                var main_div = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10");
                /*$("<p></p>").append
                (
                    $("<span></span>").addClass("badge").addClass("badge-default").addClass("solar_ready_complete2").text("Panel Assessment Complete")
                )
                .append
                (
                    $("<span></span>").addClass("badge").addClass("badge-default").addClass("solar_ready_complete1").text("Survey Complete")
                )
                .appendTo(main_div);*/
                $.post("./data", {"fn": "get_permit_design_customers"}).done(function(resp)
                {
                    var state_map = window.states_mapping;
                    if(Object.keys(resp).length === 0)
                    {
                        $(".tmp_loading_h3").text("No customers are ready for permit design");
                    }
                    else
                    {
                        $(".tmp_loading_h3").remove();
                    }


                    $.each(Object.keys(resp), function(i, state)
                    {
                        var state_container = $("<div></div>").addClass("svy_state_container");
                        $("<h3></h3>").text(state_map[state]).appendTo(state_container);

                        $("<div></div>").addClass("pdesign_labels")
                        .append
                        (
                            $("<span></span>").text("Elect. Notes")
                        )
                        .append
                        (
                            $("<span></span>").text("Stamps Received")
                        )
                        .append
                        (
                            $("<span></span>").text("Set Received")
                        )
                        .append
                        (
                            $("<span></span>").text("Set Requested")
                        ).appendTo(state_container);

                        var customers = resp[state];
                        $.each(customers, function(k, customer)
                        {
                            var cust_div = $("<div></div>").addClass("pdesign_customer_div").attr("id", "pdesign_customer_" + customer.identifier);

                            $("<p></p>").addClass("pdesign_customer_name").text(customer.name)
                            .appendTo(cust_div);

                            var dt1 = $("<span></span>").addClass("pdesign_lbl_value");
                            if(typeof(customer.checkoffs["check_plan_set_requested"]) + '' !== "undefined")
                            {
                                dt1.text(customer.checkoffs["check_plan_set_requested"]);
                            }
                            else
                            {
                                dt1.text("----------");
                            }

                            var dt2 = $("<span></span>").addClass("pdesign_lbl_value");
                            if(typeof(customer.checkoffs["check_plan_set_received"]) + '' !== "undefined")
                            {
                                dt2.text(customer.checkoffs["check_plan_set_received"]);
                            }
                            else
                            {
                                dt2.text("----------");
                            }

                            var dt3 = $("<span></span>").addClass("pdesign_lbl_value");
                            if(typeof(customer.questions["stamps_needed"]) + '' !== "undefined" && customer.questions["stamps_needed"] === "1")
                            {
                                if(typeof(customer.checkoffs["check_stamps_received"]) + '' !== "undefined")
                                {
                                    dt3.text(customer.checkoffs["check_stamps_received"]);
                                }
                                else
                                {
                                    dt3.text("----------");
                                }
                            }
                            else
                            {
                                dt3.html("&nbsp;&nbsp;&nbsp;N/A&nbsp;&nbsp;&nbsp;");
                            }

                            var dt4 = $("<span></span>").addClass("pdesign_lbl_value");
                            dt4.html("&#128210;").attr("title", "Electrical Work Notes").click(function()
                            {
                                showFilteredCustomerNotes({"identifier": customer.identifier, "name": customer.name, "notes": customer.notes});
                            });


                            dt4.appendTo(cust_div.find(".pdesign_customer_name"));
                            dt3.appendTo(cust_div.find(".pdesign_customer_name"));
                            dt2.appendTo(cust_div.find(".pdesign_customer_name"));
                            dt1.appendTo(cust_div.find(".pdesign_customer_name"));

                            cust_div.click(function()
                            {
                                showPermitDesignDetails(customer);
                            });
                            cust_div.appendTo(state_container);
                        });

                        state_container.appendTo(main_div);
                    });
                });

                $.each([spacer, main_div, spacer_clone], function(i, div)
                {
                    div.appendTo(app_area);
                });
            }
            window.temp_permit_design_interval = null;
            function showPermitDesignDetails(customer)
            {
                if(window.temp_permit_design_interval !== null)
                {
                    window.clearInterval(window.temp_permit_design_interval);
                }
                var save_question = function(k, v, d, r)
                {
                    if(typeof(r) + '' === "undefined")
                    {
                        r = false;
                    }
                    d.animate({opacity: 0.2}, 200, function()
                    {
                        $.post("./data", {"fn": "update_pdesign_questions", "identifier": customer.submission_identifier, "key": k, "value": v}).done(function(resp)
                        {
                            d.removeAttr("style");
                            customer.questions[k] = v;
                            if(r)
                            {
                                showPermitDesignDetails(customer);
                            }
                        });
                    });
                };

                if(typeof(window.JURISDICTIONS) + '' === "undefined")
                {
                    $.post("./data", {"fn": "read_setting", "value": "permitting_jurisdictions"}).done(function(resp)
                    {
                        window.JURISDICTIONS = resp.data;
                        showPermitDesignDetails(customer);
                    });
                    return;
                }
                $(".pdesign_details").remove();
                var deal_details_wrapper_div = $("<div></div>").addClass("pdesign_details");

                var display_items =
                [
                    {
                        "label": "Customer Address",
                        "value": function(obj)
                        {
                            return obj.address + "<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" + obj.city + ", " + obj.state + "<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" + obj.postal;
                        }
                    },
                    {
                        "label": "Customer Phone",
                        "value": function(obj)
                        {
                            return "<a href='tel:" + obj.customer_phone + "'>" + obj.customer_phone_formatted + "</a>";
                        }
                    },
                    {
                        "label": "Rep Name",
                        "value": function(obj)
                        {
                            return obj.rep.name;
                        }
                    },
                    {
                        "label": "Rep Phone",
                        "value": function(obj)
                        {
                            return "<a href='tel:" + obj.rep.phone + "'>" + obj.rep.phone_formatted + "</a>";
                        }
                    },
                    {
                        "label": "Docs Link",
                        "value": function(obj)
                        {
                            return "<a target='_blank' href='" + (obj["docs_link"] + '') + "'>Link</a>";
                        }
                    },
                    {
                        "label": "New BUSS Rating",
                        "value": function(obj)
                        {
                            return obj.new_buss_ratings
                        }
                    },
                    {
                        "label": "New Braker Amps",
                        "value": function(obj)
                        {
                            return obj.new_breaker_amps
                        }
                    }
                ];

                var table = $("<table></table>");
                var tbody = $("<tbody></tbody>");
                var tr = $("<tr></tr>");
                $.each(display_items, function(i, item)
                {
                    $("<td></td>")
                    .append
                    (
                        $("<b></b>").text(item.label)
                    ).appendTo(tr);
                });
                tr.appendTo(tbody);
                var tr2 = $("<tr></tr>");
                $.each(display_items, function(i, item)
                {
                    $("<td></td>").html(item.value(customer)).appendTo(tr2);
                });
                tr2.appendTo(tbody);
                $("<tr></tr>").append($("<td></td>").append($("<br />")).attr("colspan", display_items.length + '')).appendTo(tbody);
                $("<tr></tr>").append($("<td></td>").text("Utility #: " + customer.customer_utility_account_number)).appendTo(tbody);

                tbody.appendTo(table);

                table.appendTo(deal_details_wrapper_div);

                $("<hr />").appendTo(deal_details_wrapper_div);

                var questions_div = $("<div></div>").addClass("deal_questions").addClass("deal_questions_pa");
                questions_div.click(function(ev)
                {
                    ev.stopPropagation();
                });
                $("<h3></h3>").text("Permit Design Questions:").appendTo(questions_div);


                var dd1 = $("<div></div>").addClass("dropdown");
                $("<p></p>").text("What permitting jurisdiction is the customer in?").appendTo(dd1);

                var sel1 = $("<select></select>").addClass("pdesign_sel");
                $("<option value='n/a'>Select one</option>").appendTo(sel1);
                $.each(JURISDICTIONS, function(i, jurisdiction)
                {
                    if(jurisdiction.active)
                    {
                        $("<option></option>").attr("value", jurisdiction.value).text(jurisdiction.value_friendly).appendTo(sel1);
                    }
                });
                if(typeof(customer.questions["jurisdiction"]) + '' !== "undefined")
                {
                    sel1.find("option").each(function(i, e)
                    {
                        if($(e).attr("value") === customer.questions["jurisdiction"])
                        {
                            $(e).attr("selected", "selected");
                        }
                    });
                }
                sel1.change(function()
                {
                    if(sel1.val() !== "n/a")
                    {
                        save_question("jurisdiction", sel1.val(), dd1);
                    }
                });

                sel1.appendTo(dd1);
                dd1.appendTo(questions_div);
                $("<br />").appendTo(questions_div);

                var dd2 = $("<div></div>").addClass("dropdown");
                $("<p></p>").text("Are stamps needed?").appendTo(dd2);
                var sel2 = $("<select></select>").addClass("pdesign_sel");
                $("<option value='n/a'>Select One</option>").appendTo(sel2);
                $("<option value='1'>Yes</option>").appendTo(sel2);
                $("<option value='2'>No</option>").appendTo(sel2);

                if(typeof(customer.questions["stamps_needed"]) + '' !== "undefined")
                {
                    sel2.find("option").each(function(i, e)
                    {
                        if($(e).attr("value") === customer.questions["stamps_needed"])
                        {
                            $(e).attr("selected", "selected");
                        }
                    });
                }
                sel2.change(function()
                {
                    if(sel2.val() !== "n/a")
                    {
                        save_question("stamps_needed", sel2.val(), dd2, true);
                        if(sel2.val() === "1")
                        {
                            dd2.nextAll(".dropdown").eq(0).css("display", "block");
                        }
                        else
                        {
                            dd2.nextAll(".dropdown").eq(0).css("display", "none");
                        }

                    }
                });
                sel2.appendTo(dd2);
                dd2.appendTo(questions_div);
                $("<br />").appendTo(questions_div);

                var dd3 = $("<div></div>").addClass("dropdown").css("display", "none");
                if(customer.questions["stamps_needed"] + '' !== "undefined")
                {
                    if(customer.questions["stamps_needed"] === "1")
                    {
                        dd3.css("display", "block");
                    }
                }
                var stamp_questions_div = $("<div></div>").addClass("stamp_questions");
                $("<h4>Stamp Type(s):</h4>").appendTo(stamp_questions_div);
                $("<hr />").appendTo(stamp_questions_div);

                var cb1 = $("<input />").attr("type", "checkbox");
                if(typeof(customer.questions["structural_calculations_with_stamps"]) + '' !== "undefined")
                {
                    if(customer.questions["structural_calculations_with_stamps"] === "1")
                    {
                        cb1.attr("checked", "checked");
                    }
                }
                cb1.change(function()
                {
                    save_question("structural_calculations_with_stamps", ((cb1[0].checked * 1) + ''), stamp_questions_div);
                });
                $("<p></p>").text("Structural Calculations w/Stamps").append(cb1).appendTo(stamp_questions_div);

                var cb2 = $("<input />").attr("type", "checkbox");
                if(typeof(customer.questions["structural_stamps"]) + '' !== "undefined")
                {
                    if(customer.questions["structural_stamps"] === "1")
                    {
                        cb2.attr("checked", "checked");
                    }
                }
                cb2.change(function()
                {
                    save_question("structural_stamps", ((cb2[0].checked * 1) + ''), stamp_questions_div);
                });
                $("<p></p>").text("Structural Stamps").append(cb2).appendTo(stamp_questions_div);

                var cb3 = $("<input />").attr("type", "checkbox");
                if(typeof(customer.questions["electrical_stamps"]) + '' !== "undefined")
                {
                    if(customer.questions["electrical_stamps"] === "1")
                    {
                        cb3.attr("checked", "checked");
                    }
                }
                cb3.change(function()
                {
                    save_question("electrical_stamps", ((cb3[0].checked * 1) + ''), stamp_questions_div);
                });
                $("<p></p>").text("Electrical Stamps").append(cb3).appendTo(stamp_questions_div);

                var cb4 = $("<input />").attr("type", "checkbox");
                if(typeof(customer.questions["wet_seals_required"]) + '' !== "undefined")
                {
                    if(customer.questions["wet_seals_required"] === "1")
                    {
                        cb4.attr("checked", "checked");
                    }
                }
                cb4.change(function()
                {
                    save_question("wet_seals_required", ((cb4[0].checked * 1) + ''), stamp_questions_div);
                });
                $("<p></p>").text("Wet Seals Required").append(cb4).appendTo(stamp_questions_div);
                stamp_questions_div.appendTo(dd3);
                dd3.appendTo(questions_div);

                $("<br />").appendTo(questions_div);
                $("<h3></h3>").text("Checklist:").appendTo(questions_div);

                var checklist_info =
                {
                    "check_research_jurisdiction": "Research Jurisdiction (+ Update Google Sheet if necessary)",
                    "check_obtain_city_app_checklist": "Obtain City Application and Checklist"
                };
                if(sel2.val() === "1")
                {
                    checklist_info["check_request_stamp_services"] = "Request Stamp Services";
                }
                checklist_info["check_rpp_service_details_form"] = "RPP Service Details Form Complete";
                checklist_info["check_city_checklist_uploaded"] = "City Checklist Uploaded";
                checklist_info["check_final_layout_uploaded"] = "Final Layout Uploaded";
                checklist_info["check_roof_measurements_uploaded"] = "Roof Measurements Uploaded";
                checklist_info["check_roof_material_photo_uploaded"] = "Roof Material Photo Uploaded";
                checklist_info["check_roof_to_ground_photo_uploaded"] = "Roof to Ground Photo Uploaded";
                checklist_info["check_plan_set_requested"] = "Plan Set Requested";
                checklist_info["check_plan_set_received"] = "Plan Set Received";
                checklist_info["check_stamps_received"] = "Stamps Received";


                var checkoff_div = $("<div></div>").addClass("pp_checklist").addClass("permit_checklist");
                $.each(Object.keys(checklist_info), function(i, key)
                {
                    var date = customer.checkoffs[key] + '';
                    if(date === "undefined")
                    {
                        date = "";
                    }
                    var p = $("<p></p>")
                    .append
                    (
                        $("<span></span>").addClass("pp_checklist_nayme").text(checklist_info[key])
                    );

                    var cb = $("<input />").attr("type", "checkbox");
                    cb.addClass("cb_" + key);
                    if(date !== "")
                    {
                        cb.attr("checked", "checked");
                    }
                    if(key === "check_rpp_service_details_form")
                    {
                        cb.attr("disabled", "disabled");
                    }
                    else
                    {
                        cb.change(function()
                        {
                            cb.css("opacity", "0.2");
                            var checked = (cb[0].checked * 1) + '';
                            $.post("./data", {"fn": "pp_checkoff", "key": key, "checked": checked, "dt": moment().format("YYYY-MM-DD"), "identifier": customer.submission_identifier}).done(function(resp)
                            {
                                cb.removeAttr("style");
                                if(checked === "1")
                                {
                                    customer.checkoffs[key] = moment().format("YYYY-MM-DD");
                                    $(".cb_" + key).parent().find(".pp_checklist_dayte").text(moment().format("MM-DD-YYYY"));
                                }
                                else
                                {
                                    delete customer.checkoffs[key];
                                    $(".cb_" + key).parent().find(".pp_checklist_dayte").text("");
                                }

                            });
                        });
                    }

                    p.append
                    (
                        cb
                    ).append
                    (
                        $("<span></span>").addClass("pp_checklist_dayte").text(date)
                    );
                    if(["check_city_checklist_uploaded", "check_final_layout_uploaded", "check_roof_measurements_uploaded", "check_roof_material_photo_uploaded", "check_roof_to_ground_photo_uploaded"].indexOf(key) > -1)
                    {
                        p.addClass("indehnted");
                    }
                    if(["check_plan_set_received", "check_stamps_received"].indexOf(key) > -1)
                    {
                        p.css("display", "none");
                    }

                    p.appendTo(checkoff_div);
                });

                checkoff_div.appendTo(questions_div);

                questions_div.appendTo(deal_details_wrapper_div);

                deal_details_wrapper_div.appendTo($("#pdesign_customer_" + customer.identifier));
                window.temp_intervals.push(setInterval(function()
                {
                    if($(".pdesign_details").parent().attr("id").replace("pdesign_customer_", "") !== customer.identifier)
                    {
                        return;
                    }
                    var arr = ["check_city_checklist_uploaded", "check_final_layout_uploaded", "check_roof_measurements_uploaded", "check_roof_material_photo_uploaded", "check_roof_to_ground_photo_uploaded"];
                    var sum = 0;
                    $.each(arr, function(i, e)
                    {
                        if($(".cb_" + e).size() > 0)
                        {
                            sum += $(".cb_" + e)[0].checked;
                        }
                    });

                    $(".cb_check_rpp_service_details_form")[0].checked = (sum === arr.length);
                    if(!$(".cb_check_rpp_service_details_form")[0].checked)
                    {
                        $(".cb_check_rpp_service_details_form").removeAttr("checked");
                    }

                    if(typeof(customer.checkoffs["check_plan_set_requested"]) + '' !== "undefined")
                    {
                        $(".cb_check_plan_set_received").parent().css("display", "block");
                    }
                    else
                    {
                        $(".cb_check_plan_set_received").parent().css("display", "none");
                    }

                    if(typeof(customer.questions["stamps_needed"]) + '' !== "undefined" && customer.questions["stamps_needed"] === "1")
                    {

                        if(typeof(customer.checkoffs["check_plan_set_requested"]) + '' !== "undefined")
                        {
                            $(".cb_check_stamps_received").parent().css("display", "block");
                        }
                        else
                        {
                            $(".cb_check_stamps_received").parent().css("display", "none");
                        }
                    }
                    else
                    {
                        $(".cb_check_stamps_received").parent().css("display", "none");
                    }
                }, 500));
            }
            function showPermitDesignDetailsV2(customer)
            {
                $.post("./data", {"fn": "read_setting", "value": "permitting_jurisdictions"}).done(function(r)
                {
                    var sel = $("<select></select>").attr("id", "permit_design_update_jurisdiction");
                    $.each(r.data, function(i, item)
                    {
                        var opt = $("<option></option>").attr("value", item.value).text(item.value_friendly);
                        if(item.value === customer.jurisdiction)
                        {
                            opt.attr("selected", "selected");
                        }
                        opt.appendTo(sel);
                    });
                    $(".pdesign_details").remove();
                    var deal_details_wrapper_div = $("<div></div>").addClass("pdesign_details");

                    var display_items =
                    [
                        {
                            "label": "Customer Address",
                            "value": function(obj)
                            {
                                return obj.address + "<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" + obj.city + ", " + obj.state + "<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" + obj.postal;
                            }
                        },
                        {
                            "label": "Customer Phone",
                            "value": function(obj)
                            {
                                return "<a href='tel:" + obj.customer_phone + "'>" + obj.customer_phone_formatted + "</a>";
                            }
                        },
                        {
                            "label": "Rep Name",
                            "value": function(obj)
                            {
                                return obj.rep.name;
                            }
                        },
                        {
                            "label": "Rep Phone",
                            "value": function(obj)
                            {
                                return "<a href='tel:" + obj.rep.phone + "'>" + obj.rep.phone_formatted + "</a>";
                            }
                        },
                        {
                            "label": "System Size",
                            "value": function(obj)
                            {
                                return obj.system_size;
                            }
                        },
                        {
                            "label": "Jurisdiction",
                            "value": function(obj)
                            {
                                return $("<div></div>").append(sel).html();
                            }
                        }
                    ];

                    var table = $("<table></table>");
                    var tbody = $("<tbody></tbody>");
                    var tr = $("<tr></tr>");
                    $.each(display_items, function(i, item)
                    {
                        $("<td></td>")
                        .append
                        (
                            $("<b></b>").text(item.label)
                        ).appendTo(tr);
                    });
                    tr.appendTo(tbody);
                    var tr2 = $("<tr></tr>");
                    $.each(display_items, function(i, item)
                    {
                        $("<td></td>").html(item.value(customer)).appendTo(tr2);
                    });
                    tr2.appendTo(tbody);
                    $("<tr></tr>").append($("<td></td>").append($("<br />")).attr("colspan", display_items.length + '')).appendTo(tbody);
                    $("<tr></tr>").append($("<td></td>").text("Utility #: " + customer.customer_utility_account_number)).appendTo(tbody);

                    tbody.appendTo(table);

                    table.appendTo(deal_details_wrapper_div);
                    table.find("#permit_design_update_jurisdiction").change(function()
                    {
                        var that = $(this);
                        that.css("opacity", "0.1");
                        $.post("/data", {"fn": "set_jurisdiction_for_customer", "identifier": customer.identifier, "value": that.val()}).done(function(rrrrrrr)
                        {
                            that.css("opacity", "1.0");
                        });
                    });

                    $("<hr />").appendTo(deal_details_wrapper_div);

                    $.each(customer.key_ordering, function(i, key)
                    {
                        var question = customer.plan_set_data[key];
                        var question_div = $("<div></div>").addClass("plan_set_question");
                        var words = key.split("_");
                        var new_words = [];
                        $.each(words, function(ii, word)
                        {
                            var new_word = word[0].toUpperCase();
                            if(word.length > 1)
                            {
                                new_word += word.substring(1);
                            }
                            new_words.push(new_word);
                        });
                        $("<p></p>").text(new_words.join(" ")).appendTo(question_div);

                        switch(question.type)
                        {
                            case "dropdown":
                                var sel = $("<select></select>");
                                $("<option></option>").attr("value", "n/a").text("Choose One").appendTo(sel);
                                $.each(question.choices, function(ii, choice)
                                {
                                    var opt = $("<option></option>").attr("value", choice).text(choice);
                                    if(typeof(question["value"]) + '' !== "undefined")
                                    {
                                        if(question.value === choice)
                                        {
                                            opt.attr("selected", "selected");
                                        }
                                    }
                                    opt.appendTo(sel);
                                });
                                sel.change(function()
                                {
                                    var that = $(this);
                                    that.css("opacity", "0.1");
                                    if(that.val() !== "n/a")
                                    {
                                        question.value = that.val();
                                        $.post("/data", {"fn": "update_plan_set_details", "key": key, "value": that.val(), "identifier": customer.identifier}).done(function(rr)
                                        {
                                            that.css("opacity", "1.0");
                                        });                                    
                                    }
                                });
                                sel.appendTo(question_div);
                                break;

                            case "textarea":
                                var ta = $("<textarea></textarea>").attr("placeholder", "Type your notes here...");
                                ta.blur(function()
                                {
                                    var that = $(this);
                                    question.value = that.val();
                                    that.css("opacity", "0.1");
                                    $.post("/data", {"fn": "update_plan_set_details", "key": key, "value": that.val(), "identifier": customer.identifier}).done(function(rr)
                                    {
                                        that.css("opacity", "1.0");
                                    });
                                });
                                ta.appendTo(question_div);
                                if(typeof(question["value"]) + '' !== "undefined")
                                {
                                    ta.val(question.value);
                                }
                                break;

                            case "file":
                                $("<a></a>").attr("href", "https://storage.googleapis.com/" + window.app_bucket + "/PlanSetDetails/" + customer.identifier + "/" + key + "." + question.pic_ext).attr("target", "_blank").attr("download", key + "." + question.pic_ext)
                                .append
                                (
                                    $("<img />").addClass("img").addClass("img-responsive").addClass("plan_set_image").attr("src", "https://storage.googleapis.com/" + window.app_bucket + "/PlanSetDetails/" + customer.identifier + "/" + key + "." + question.pic_ext)
                                )
                                .appendTo(question_div);
                                break;
                            case "input_box":
                                var inp = $("<input />").attr("type", "text")
                                .on("blur", function()
                                {
                                    var that = $(this);
                                    question.value = that.val();
                                    that.css("opacity", "0.1");
                                    $.post("/data", {"fn": "update_plan_set_details", "key": key, "value": that.val(), "identifier": customer.identifier}).done(function(rr)
                                    {
                                        that.css("opacity", "1.0");
                                    });
                                });
                                if(typeof(question["value"]) + '' !== "undefined")
                                {
                                    inp.val(question.value);
                                }
                                inp.appendTo(question_div);
                                break;
                            default:
                                break;
                        }
                        question_div.appendTo(deal_details_wrapper_div);
                    });

                    deal_details_wrapper_div.appendTo($("#pdesign_customer_" + customer.identifier));
                });                
            }
            function editPermittingJurisdictions(data)
            {
                if(typeof(data) + '' === "undefined")
                {
                    $.post("./data", {"fn": "read_setting", "value": "permitting_jurisdictions"}).done(function(resp)
                    {
                        editPermittingJurisdictions(resp.data);
                    });
                    return;
                }
                var app_area = $("#app_area");
                var spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");
                var main_div = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10");
                var spacer_clone = spacer.clone();

                $("<h2></h2>").text("Permitting Jurisdictions:").appendTo(main_div);
                $("<hr />").appendTo(main_div);

                $("<button></button>").addClass("btn").addClass("btn-danger").html("&larr; Back").click(function()
                {
                    $("#manage_notifications_and_settings").trigger("click");
                }).appendTo(main_div);

                $("<button></button>").addClass("btn").addClass("btn-success").text("+ New Jurisdiction").click(function()
                {
                    BootstrapDialog.show
                    (
                        {
                            "title": "Name for new Jurisdiction",
                            "message": "<br /><input type='text' style='text-indent: 0.5em; width: 80%;' id='new_jurisdiction' placeholder='Name of Permitting Jurisdiction...' /><br />",
                            "buttons":
                            [
                                {
                                    "label": "Cancel",
                                    "cssClass": "btn-danger",
                                    "action": function(dialog)
                                    {
                                        dialog.close();
                                    }
                                },
                                {
                                    "label": "Add it!",
                                    "cssClass": "btn-primary",
                                    "action": function(dialog)
                                    {
                                        if($.trim($("#new_jurisdiction").val()).length > 0)
                                        {
                                            $.post("./data", {"fn": "jurisdiction_exists", "jurisdiction": $.trim($("#new_jurisdiction").val())}).done(function(resp)
                                            {
                                                if(resp.exists)
                                                {
                                                    window.alert("A jurisdiction with the same name already exists!");
                                                    return;
                                                }
                                                else
                                                {
                                                    $.post("./data", {"fn": "create_jurisdiction", "jurisdiction": $.trim($("#new_jurisdiction").val())}).done(function(resp2)
                                                    {
                                                        dialog.close();
                                                        clearApp(function()
                                                        {
                                                            editPermittingJurisdictions();
                                                        });

                                                    });
                                                }
                                            });
                                        }
                                    }
                                }
                            ]
                        }
                    )
                }).css("float", "right").appendTo(main_div);
                $("<p></p>").appendTo(main_div);

                $.each(data, function(i, item)
                {
                    var active_texts =
                    [
                        "Disabled",
                        "Active"
                    ];
                    var item_div = $("<div></div>").addClass("jurisdiction_item");
                    $("<p></p>").append($("<span></span>").addClass("permitting_val").text(item.value_friendly)).prepend
                    (
                        $("<span></span>").addClass("glyphicon").addClass("glyphicon-pencil").on("click", function()
                        {
                            $(this).next().off("blur").attr("contenteditable", "true").on("blur", function()
                            {
                                var that = this;
                                $(that).parent().css("opacity", "0.2");
                                $.post("./data", {"fn": "jurisdiction_exists", "value": $.trim($(that).text())}).done(function(resp)
                                {
                                    if($.trim($(that).text()) !== item.value_friendly)
                                    {
                                        if(resp.exists)
                                        {
                                            $(that).text(item.value_friendly);
                                            window.alert("The rename was unsuccessful, because a duplicate name already exists");
                                            $(this).removeAttr("contenteditable");
                                            $(this).parent().removeAttr("style");
                                            return;
                                        }
                                        else
                                        {
                                            $.post("./data", {"fn": "rename_jurisdiction", "value": $.trim($(that).text()), "original_value": item.value}).done(function(resp2)
                                            {
                                                item.value_friendly = $.trim($(that).text());
                                                var cpy = item.value_friendly;
                                                while(cpy.indexOf(" ") > -1)
                                                {
                                                    cpy = cpy.replace(" ", "_");
                                                }
                                                item.value = cpy.toLowerCase();
                                                $(that).removeAttr("contenteditable");
                                                $(that).parent().removeAttr("style");
                                            });
                                        }
                                    }
                                    else
                                    {
                                        $(that).removeAttr("contenteditable");
                                        $(that).parent().removeAttr("style");
                                    }
                                });
                            });
                            $(this).next()[0].focus();
                        })
                    ).appendTo(item_div);

                    var dd_div = $("<div></div>").addClass("dropdown");
                    $("<button></button>").attr("type", "button").addClass("btn").addClass("btn-default").text(active_texts[item.active * 1]).addClass("dropdown-toggle").attr("data-toggle", "dropdown").append
                    (
                        $("<span></span>").addClass("caret")
                    ).appendTo(dd_div);

                    $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu")
                    .append
                    (
                        $("<li></li>").attr("role", "presentation")
                        .append
                        (
                            $("<a></a>").attr("role", "menuitem").text("Active").attr("href", "javascript:void(0);").attr("tabindex", "-1")
                        )
                    )
                    .append
                    (
                        $("<li></li>").attr("role", "presentation")
                        .append
                        (
                            $("<a></a>").attr("role", "menuitem").text("Disabled").attr("href", "javascript:void(0);").attr("tabindex", "-1")
                        )
                    ).appendTo(dd_div);

                    dd_div.find("li").each(function(k, e)
                    {
                        $(e).click(function()
                        {
                            $(e).parent().parent().find(".btn").css("opacity", "0.5");
                            $.post("./data", {"fn": "activate_deactivate_jurisdiction", "jurisdiction": item.value, "active": ((($(e).prevAll("li").size() === 0) * 1) + '')}).done(function(resp)
                            {
                                $(e).parent().parent().find(".btn").removeAttr("style");
                                $(e).parent().prevAll(".btn").first().text($(e).text());
                                $("<span></span>").addClass("caret").appendTo($(e).parent().prevAll(".btn").first());
                            });
                        });
                    });

                    dd_div.appendTo(item_div);

                    item_div.appendTo(main_div);
                });

                $.each([spacer, main_div, spacer_clone], function(i, e)
                {
                    e.appendTo(app_area);
                });
            }
            function placeServiceScheduleArrows()
            {
                $(".fee_schedule_table").find(".arrow").remove();                
                var trs = $(".fee_schedule_table").find("tr");
                trs.each(function(i, e)
                {
                    if(i < 2)
                    {
                        return;
                    }
                    var up_arrow = $("<span></span>").addClass("up_arrow").addClass("arrow").html("&uarr;");
                    var down_arrow = $("<span></span>").addClass("down_arrow").addClass("arrow").html("&darr;");
                    if(i > 2)
                    {
                        up_arrow.appendTo($(e).find("td").last());
                    }
                    if(i !== trs.length - 1)
                    {
                        down_arrow.appendTo($(e).find("td").last());
                    }
                });
            }
            function editServices(services, point_cost)
            {
                if(typeof(services) + '' === "undefined")
                {
                    $.post("./data", {"fn": "read_setting", "value": "services_schedule"}).done(function(resp)
                    {
                        editServices(resp.data);
                    });
                    return;
                }
                if(typeof(point_cost) + '' === "undefined")
                {
                    $.post("./data", {"fn": "read_setting", "value": "services_point_cost"}).done(function(resp)
                    {
                        editServices(services, resp.data);
                    });
                    return;
                }
                var app_area = $("#app_area");
                var spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");
                var main_div = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10");
                var spacer_clone = spacer.clone();

                $("<h2></h2>").text("Point Cost:").appendTo(main_div);
                $("<span></span>").addClass("point_cost_dolla").text("$").appendTo(main_div);
                $("<input />").attr("type", "text").attr("value", point_cost + '').appendTo(main_div);
                $("<span></span>").addClass("label").addClass("label-primary").addClass("service_point_fee_save").text("Update Point Cost")
                .click(function()
                {
                    var valu = $.trim($(this).prev().val());
                    while(valu.indexOf("$") > -1)
                    {
                        valu = valu.replace("$", "");
                    }
                    while(valu.indexOf(",") > -1)
                    {
                        valu = value.replace(",", "");
                    }
                    valu = parseFloat(valu);
                    if(Number.isNaN(valu))
                    {
                        valu = parseFloat("0");
                    }
                    var that = $(this);
                    that.css("opacity", "0.1");
                    $.post("/data", {"fn": "write_setting", "value": "services_point_cost", "data": valu.toFixed(2)}).done(function(resp)
                    {
                        that.css("opacity", "1.0");
                    });
                })
                .appendTo(main_div);
                $("<h2></h2>").text("Services Fee Schedule:").appendTo(main_div);
                $("<hr />").appendTo(main_div);

                $("<button></button>").addClass("btn").addClass("btn-danger").html("&larr; Back").click(function()
                {
                    $("#manage_notifications_and_settings").trigger("click");
                }).appendTo(main_div);

                $("<button></button>").addClass("btn").css("margin-left", "1.25em").addClass("btn-success").text("+ New Item").click(function()
                {
                    var html = $("<div></div>");
                    $("<br />").appendTo(html);
                    $("<input />").attr("id", "new_fee_schedule_item_name").attr("type", "text").attr("placeholder", "Name the item").css("text-indent", "0.5em").appendTo(html);
                    $("<br />").appendTo(html);

                    BootstrapDialog.show
                    (
                        {
                            "title": "Creating a new fee schedule item...",
                            "message": html.html(),
                            "buttons":
                            [
                                {
                                    "label": "Cancel",
                                    "cssClass": "btn-danger",
                                    "action": function(dialog)
                                    {
                                        dialog.close();
                                    }
                                },
                                {
                                    "label": "Add it!",
                                    "cssClass": "btn-primary",
                                    "action": function(dialog)
                                    {
                                        if($.trim($("#new_fee_schedule_item_name").val()).length === 0)
                                        {
                                            window.alert("You must name the item");
                                            return;
                                        }

                                        $.post("./data", {"fn": "create_fee_schedule_item", "name": $.trim($("#new_fee_schedule_item_name").val())}).done(function(resp)
                                        {
                                            var val_friendly = $.trim($("#new_fee_schedule_item_name").val());
                                            var val_orig = val_friendly;
                                            val_friendly = val_friendly.toLowerCase();
                                            while(val_friendly.indexOf(" ") > -1)
                                            {
                                                val_friendly = val_friendly.replace(" ", "_");
                                            }

                                            $("<tr></tr>")
                                            .append
                                            (
                                                $("<td></td>").addClass("item_name").attr("data-name", val_friendly).text(val_orig)
                                            )
                                            .append
                                            (
                                                $("<td></td>").addClass("item_price")
                                                .append
                                                (
                                                    $("<span></span>").addClass("svc_dollar").text("$")
                                                )
                                                .append
                                                (
                                                    $("<span></span>").addClass("svc_price_actual").text("1.00")
                                                )
                                            )
                                            .append
                                            (
                                                $("<td></td>").addClass("item_per_kw")
                                                .append
                                                (
                                                    $("<input />").attr("type", "checkbox")
                                                )
                                            )
                                            .append
                                            (
                                                $("<td></td>").addClass("item_exposed_as_docs_composer_variable")
                                                .append
                                                (
                                                    $("<input />").attr("type", "checkbox")
                                                )
                                            )
                                            .append
                                            (
                                                $("<td></td>").addClass("item_listed_in_docs_composer")
                                                .append
                                                (
                                                    $("<input />").attr("type", "checkbox").attr("checked", "checked")
                                                )
                                            )
                                            .append
                                            (
                                                $("<td></td>").addClass("").text("0").addClass("svc_item_points")
                                            )
                                            .append
                                            (
                                                $("<td></td>").addClass("item_active")
                                                .append
                                                (
                                                    $("<input />").attr("type", "checkbox").attr("checked", "checked")
                                                )
                                            )
                                            .append
                                            (
                                                $("<td></td>")
                                            )
                                            .appendTo($(".fee_schedule_table tbody"));                                            
                                            dialog.close();
                                            placeServiceScheduleArrows();                                            
                                        });
                                    }
                                }
                            ]
                        }
                    );
                }).appendTo(main_div);

                var tbl = $("<table></table>").addClass("fee_schedule_table");
                var tbody = $("<tbody></tbody>");
                tbody.appendTo(tbl);

                $("<tr></tr>")
                .append
                (
                    $("<td></td>")
                    .append
                    (
                        $("<b></b>").text("Item")
                    )
                )
                .append
                (
                    $("<td></td>")
                    .append
                    (
                        $("<b></b>").text("Price")
                    )
                )
                .append
                (
                    $("<td></td>")
                    .append
                    (
                        $("<b></b>").text("Per KW?")
                    )
                )
                .append
                (
                    $("<td></td>")
                    .append
                    (
                        $("<b></b>").text("Item Exposed as Docs Composer Variable?")
                    )
                )
                .append
                (
                    $("<td></td>")
                    .append
                    (
                        $("<b></b>").text("Item Listed in Docs Composer Additional Services?")
                    )
                )
                .append
                (
                    $("<td></td>")
                    .append
                    (
                        $("<b></b>").text("Points")
                    )
                )
                .append
                (
                    $("<td></td>")
                    .append
                    (
                        $("<b></b>").text("Active")
                    )
                )
                .append
                (
                    $("<td></td>")
                    .append
                    (
                        $("<b></b>").text("Positioning")
                    )
                )
                .appendTo(tbody);

                $("<tr></tr>")
                .append
                (
                    $("<td></td>").html("&nbsp;")
                )
                .append
                (
                    $("<td></td>").html("&nbsp;")
                )
                .append
                (
                    $("<td></td>").html("&nbsp;")
                )
                .append
                (
                    $("<td></td>").html("&nbsp;")
                )
                .append
                (
                    $("<td></td>").html("&nbsp;")
                )
                .append
                (
                    $("<td></td>").html("&nbsp;")
                )
                .append
                (
                    $("<td></td>").html("&nbsp;")
                )
                .append
                (
                    $("<td></td>").html("&nbsp;")
                )
                .appendTo(tbody);

                $.each(services, function(i, service)
                {
                    var tr = $("<tr></tr>");
                    $("<td></td>").addClass("item_name").attr("data-name", service.value).text(service.value_friendly).appendTo(tr);

                    var price = service.price.toFixed(2);
                    if(price.indexOf(".") === -1)
                    {
                        price = price + ".00";
                    }
                    else if(price.split(".").length > 1)
                    {
                        var second_item = price.split(".")[1];
                        if(second_item.length === 1)
                        {
                            price = price + "." + second_item;
                        }
                    }

                    $("<td></td>").addClass("item_price").html("<span class='svc_dollar'>$</span><span class='svc_price_actual'>" + price + "</span>").appendTo(tr);

                    var cb = $("<input />").attr("type", "checkbox");
                    if(service.active)
                    {
                        cb.attr("checked", "checked");
                    }
                    var cb2 = $("<input />").attr("type", "checkbox");
                    if(service.per_kw === true)
                    {
                        cb2.attr("checked", "checked");
                    }
                    var cb3 = $("<input />").attr("type", "checkbox");
                    if(service.exposed_as_docs_composer_variable)
                    {
                        cb3.attr("checked", "checked");
                    }
                    var cb4 = $("<input />").attr("type", "checkbox");
                    if(service.listed_in_docs_composer_additional_services)
                    {
                        cb4.attr("checked", "checked");
                    }
                    $("<td></td>").addClass("item_per_kw").append(cb2).appendTo(tr);
                    $("<td></td>").addClass("item_exposed_as_docs_composer_variable").append(cb3).appendTo(tr);
                    $("<td></td>").addClass("item_listed_in_docs_composer").append(cb4).appendTo(tr);
                    $("<td></td>").addClass("svc_item_points").text(service.points + '').appendTo(tr);
                    $("<td></td>").addClass("item_active").append(cb).appendTo(tr);                    
                    $("<td></td>").appendTo(tr);

                    tr.appendTo(tbody);
                });
                tbl.appendTo(main_div);                

                tbl
                .delegate(".item_active input", "change", function()
                {
                    var active = ($(this)[0].checked * 1) + '';
                    $(this).css("opacity", "0.2");
                    var that = $(this);
                    $.post("./data", {"fn": "activate_deactivate_fee_schedule_item", "item": $(this).closest("tr").find("td").first().data("name"), "active": active}).done(function(resp)
                    {
                        that.removeAttr("style");
                    });
                })
                .delegate(".item_per_kw input", "change", function()
                {
                    var per_kw = ($(this)[0].checked * 1) + '';
                    $(this).css("opacity", "0.2");
                    var that = $(this);
                    $.post("/data", {"fn": "service_schedule_item_per_kw", "item": $(this).closest("tr").find("td").first().data("name"), "per_kw": per_kw}).done(function(resp333)
                    {
                        that.removeAttr("style");
                    });
                })
                .delegate(".item_exposed_as_docs_composer_variable input", "change", function()
                {
                    var exposed = ($(this)[0].checked * 1) + '';
                    $(this).css("opacity", "0.2");
                    var that = $(this);
                    $.post("/data", {"fn": "service_schedule_item_exposed_in_docs_composer", "item": $(this).closest("tr").find("td").first().data("name"), "exposed": exposed}).done(function(resp333)
                    {
                        that.removeAttr("style");
                    });
                })
                .delegate(".item_listed_in_docs_composer input", "change", function()
                {
                    var listed = ($(this)[0].checked * 1) + '';
                    $(this).css("opacity", "0.2");
                    var that = $(this);
                    $.post("/data", {"fn": "service_schedule_item_listed_in_docs_composer", "item": $(this).closest("tr").find("td").first().data("name"), "listed": listed}).done(function(resp333)
                    {
                        that.removeAttr("style");
                    });
                })
                .delegate(".item_price .svc_price_actual", "blur", function()
                {
                    var allowed_chars = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", ".", "-"];
                    var found_period = false;
                    var new_val = "";
                    $.each($(this).text().split(""), function(j, char)
                    {
                        if(allowed_chars.indexOf(char) > -1)
                        {
                            if(char === "." && !found_period)
                            {
                                new_val += char;
                                found_period = true;
                            }
                            else if(char !== ".")
                            {
                                new_val += char;
                            }
                        }
                    });
                    $(this).text($.trim(new_val));

                    $(this).css("opacity", "0.2");
                    var that = $(this);
                    $.post("./data", {"fn": "set_price_for_fee_schedule_item", "item": $(this).parent().prevAll("td").first().data("name"), "price": $(this).text()}).done(function(resp)
                    {
                        that.removeAttr("style");
                        that.removeAttr("contenteditable");
                    });
                })
                .delegate(".item_price .svc_price_actual", "click", function()
                {
                    $(this).attr("contenteditable", "true");
                    $(this)[0].focus();
                })
                .delegate(".item_name", "click", function()
                {
                    $(this).attr("contenteditable", "true");
                    $(this)[0].focus();
                })
                .delegate(".item_name", "blur", function()
                {
                    var that = $(this);
                    $.post("./data", {"fn": "rename_fee_schedule_item", "item": $(this).data("name"), "name": $.trim($(this).text())}).done(function(resp)
                    {
                        that.removeAttr("style");
                        that.removeAttr("contenteditable");
                    });
                })
                .delegate(".svc_item_points", "click", function()
                {
                    var that = $(this);
                    that.attr("contenteditable", "true");
                    that[0].focus();
                })
                .delegate(".svc_item_points", "blur", function()
                {
                    var that = $(this);
                    var parsed = parseFloat(that.text());
                    if(Number.isNaN(parsed))
                    {
                        parsed = parseFloat(0);
                    }
                    that.parent().css("opacity", "0.1");
                    $.post("./data", {"fn": "set_points_for_fee_schedule_item", "item": that.parent().find("td").first().data("name"), "points": parsed + ''}).done(function(resp)
                    {
                        that.parent().css("opacity", "1.0");
                    });
                })
                .delegate(".up_arrow", "click", function()
                {
                    var that = $(this);
                    var tb = that.closest("table");
                    tb.css("opacity", "0.1");
                    var this_tr = that.closest("tr");
                    this_tr.insertBefore(this_tr.prev());
                    var index_map = {};
                    $(".fee_schedule_table").find("tr").each(function(iiiii, eeeee)
                    {
                        if(iiiii > 1)
                        {
                            var el = $(eeeee);
                            index_map[el.find(".item_name").data("name")] = iiiii - 2;
                        }
                        
                    });
                    $.post("/data", {"fn": "update_fee_schedule_indexes", "index_map": JSON.stringify(index_map)}).done(function(rrr)
                    {
                        placeServiceScheduleArrows();
                        tb.css("opacity", "1.0");
                    });                    

                })
                .delegate(".down_arrow", "click", function()
                {
                    var that = $(this);
                    var tb = that.closest("table");
                    tb.css("opacity", "0.1");
                    var this_tr = that.closest("tr");
                    this_tr.insertAfter(this_tr.next());
                    var index_map = {};
                    $(".fee_schedule_table").find("tr").each(function(iiiii, eeeee)
                    {
                        if(iiiii > 1)
                        {
                            var el = $(eeeee);
                            index_map[el.find(".item_name").data("name")] = iiiii - 2;
                        }
                    });
                    $.post("/data", {"fn": "update_fee_schedule_indexes", "index_map": JSON.stringify(index_map)}).done(function(rrr)
                    {
                        placeServiceScheduleArrows();
                        tb.css("opacity", "1.0");
                    });                 
                })
                ;

                $.each([spacer, main_div, spacer_clone], function(i, e)
                {
                    e.appendTo(app_area);
                });
                placeServiceScheduleArrows();
            }
            function loadDocsComposer(bundle, formulas)
            {
                if(typeof(formulas) + '' === "undefined")
                {
                    var items = ["fx_Total_System_Cost",
                                      "fx_Promo_Length_In_Months",
                                      "fx_Promo_Bill",
                                      "fx_Total_System_Cost_After_Rebates",
                                      "fx_Solar_Bill_After_Promo",
                                      "fx_Cost_Of_Solar",
                                      "fx_Avg_Cost_Per_Kwh_Over_30_Years",
                                      "fx_Average_Bill_W_Utility",
                                      "fx_Utility_Bill_In_30_Years",
                                      "fx_30_Year_Utility_Cost",
                                      "fx_Year_1_Savings",
                                      "fx_30_Year_Savings",
                                      "fx_Per_Year_Avg_Savings",
                                      "fx_Federal_Tax_Credit",
                                      "fx_State_Tax_Credit",
                                      "fx_Solar_Bill_W_No_Tax_Credit",
                                      "fx_Cash_Down_CA",
                                      "fx_Cash_Down_UT",
                                      "fx_Cash_Down_TX",
                                      "fx_Cash_Down_CO",
                                      "fx_Cash_Down",
                                      "fx_Twenty_Percent_Of_System_Cost",
                                      "fx_Thirty_Percent_Of_System_Cost",
                                      "fx_Milestone_One",
                                      "fx_Seventy_Percent_Of_System_Cost",
                                      "fx_Eighty_Percent_Of_System_Cost",
                                      "fx_Milestone_Two",
                                      "fx_Annual_Escalator_Percentage",
                                      "fx_Highest_Monthly_Bill",
                                      "fx_Promotional_Bill_Label",
                                      "fx_Estimated_Year_One_Production_in_Kwh",
                                      "fx_Additional_Incentives",
                                      "fx_Market_Name",
                                      "fx_State_Tax_Credit_Label",
                                      "fx_Dividend_Pace_Financed_Amount",
                                      "fx_Dividend_Pace_Annual_Payment",
                                      "fx_Dividend_Pace_Monthly_Payment",
                                      "fx_Dividend_Pace_Annual_Payment_Times_Twenty",
                                      "fx_Dividend_Tax_Deduction_Benefit",
                                      "fx_Dividend_Net_Cost",
                                      "fx_Dividend_Thirty_Year_Difference"];

                    formulas = [];
                    $.each(items, function(i, e)
                    {
                        var formula = {};
                        formula["value"] = e;
                        var cpy = e + '';
                        while(cpy.indexOf("_") > -1)
                        {
                            cpy = cpy.replace("_", " ");
                        }
                        formula["value_friendly"] = cpy;
                        formulas.push(formula);
                    });
                    loadDocsComposer(undefined, formulas);
                        return;
                    
                }
                if(typeof(bundle) + '' === "undefined")
                {
                    var app_area = $("#app_area");
                    var spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");
                    var main_div = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10");
                    var spacer_clone = spacer.clone();

                    $("<button></button>").addClass("btn").addClass("btn-primary").text("Upload Closers' Signatures")
                    .click(function()
                    {
                        clearApp(function()
                        {
                            manageCloserSignatures();
                        });
                    })
                    .appendTo(main_div);

                    $("<h2></h2>").text("Document Bundles:").appendTo(main_div);

                    $.post("./data", {"fn": "read_setting", "value": "doc_bundles"}).done(function(resp)
                    {
                        $.each(resp.data, function(i, e)
                        {
                            $("<hr />").appendTo(main_div);
                            $("<h4></h4>").text(e.value_friendly).addClass("bundle_item").click(function()
                            {
                                clearApp(function()
                                {
                                    loadDocsComposer(e.value, formulas);
                                });
                            }).appendTo(main_div);
                            $("<hr />").appendTo(main_div);
                        });

                        $.each([spacer, main_div, spacer_clone], function(i, e)
                        {
                            e.appendTo(app_area);
                        });
                    });

                    return;
                }

                $.post("./data", {"fn": "enumerate_composed_documents", "bundle_key": bundle}).done(function(resp)
                {
                    var app_area = $("#app_area");
                    var spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");
                    var main_div = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10");
                    var spacer_clone = spacer.clone();

                    $("<h2></h2>").text("Docs Composer:").appendTo(main_div);
                    $("<hr />").appendTo(main_div);
                    $("<button></button>").addClass("btn").addClass("btn-success").text("+ New Document").click(function()
                    {
                        var html = $("<div></div>");
                        $("<br />").appendTo(html);
                        $("<input />").attr("type", "text").attr("id", "new_composed_doc_name").attr("placeholder", "Name of Document").appendTo(html);
                        $("<br />").appendTo(html);

                        BootstrapDialog.show
                        (
                            {
                                "title": "Name the doc!",
                                "message": html.html(),
                                "buttons":
                                [
                                    {
                                        "label": "Cancel",
                                        "cssClass": "btn-danger",
                                        "action": function(dialog)
                                        {
                                            dialog.close();
                                        }
                                    },
                                    {
                                        "label": "Continue",
                                        "cssClass": "btn-primary",
                                        "action": function(dialog)
                                        {

                                            var html2 = $("<div></div>");
                                            $("<p></p>").text("Upload PDF of document:").appendTo(html2);
                                            $("<input />").attr("type", "file").attr("id", "new_composed_doc_file").appendTo(html2);
                                            $("<input />").attr("type", "hidden").attr("id", "final_composed_doc_name").attr("value", $.trim($("#new_composed_doc_name").val())).val($.trim($("#new_composed_doc_name").val())).appendTo(html2);
                                            dialog.close();

                                            BootstrapDialog.show
                                            (
                                                {
                                                    "title": "Only PDFs, k?",
                                                    "message": html2.html(),
                                                    "buttons":
                                                    [
                                                        {
                                                            "label": "Cancel",
                                                            "cssClass": "btn-danger",
                                                            "action": function(dialog)
                                                            {
                                                                dialog.close();
                                                            }
                                                        },
                                                        {
                                                            "label": "Start Upload",
                                                            "cssClass": "btn-primary",
                                                            "action": function(dialog2)
                                                            {
                                                                var formData = new FormData();
                                                                var xhr = new XMLHttpRequest();


                                                                if($("#new_composed_doc_file").eq(0)[0].files.length > 0)
                                                                {
                                                                    if($("#new_composed_doc_file").val() !== "")
                                                                    {
                                                                        var filename_components = $.trim($("#new_composed_doc_file").val()).split(".");
                                                                        if(filename_components[filename_components.length - 1].toLowerCase() === "pdf")
                                                                        {
                                                                            formData.append("pdf", $("#new_composed_doc_file").eq(0)[0].files[0]);
                                                                            formData.append("fn", "docs_compose_local_upload");

                                                                            xhr.addEventListener("load", function(e)
                                                                            {
                                                                                $("#doc_upload_ol").find("li").eq(0).find("span").eq(1).removeClass("glyphicon-remove").addClass("glyphicon-check");
                                                                                var respjson = "";
                                                                                if(typeof(e["responseText"]) + '' === "undefined")
                                                                                {
                                                                                    respjson = e.target.responseText;
                                                                                }
                                                                                else
                                                                                {
                                                                                    respjson = e.responseText;
                                                                                }

                                                                                var local_id = $.parseJSON(respjson)["local_id"];

                                                                                var payload = {};
                                                                                payload["method"] = "POST";
                                                                                payload["path"] = "Convert/";
                                                                                payload["data"] = {}
                                                                                payload["data"]["url"] = "http://storage.googleapis.com/" + window.app_bucket + "/TempDocs/" + local_id + ".pdf";

                                                                                $.post("./data", {"fn": "compute_engine_payload_dispatch", "payload": JSON.stringify(payload), "response_content_type": "application/json"}).done(function(resp_a)
                                                                                {
                                                                                    var token = resp_a.token;
                                                                                    $("#doc_upload_ol").find("li").eq(1).find("span").eq(1).removeClass("glyphicon-remove").addClass("glyphicon-check");

                                                                                    window.doc_check_fn1 = function(token, local_id, base_time)
                                                                                    {
                                                                                        var payload2 = {};
                                                                                        payload2["method"] = "GET";
                                                                                        payload2["path"] = "Status/FileDownloaded/";
                                                                                        payload2["data"] = {"token": token};
                                                                                        $.post("./data", {"fn": "compute_engine_payload_dispatch", "payload": JSON.stringify(payload2), "response_content_type": "application/json"}).done(function(resp_b)
                                                                                        {
                                                                                            if(!resp_b.complete)
                                                                                            {
                                                                                                setTimeout(function()
                                                                                                {
                                                                                                    window.doc_check_fn1(token, local_id, base_time * 2);
                                                                                                }, base_time);
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                                $("#doc_upload_ol").find("li").eq(2).find("span").eq(1).removeClass("glyphicon-remove").addClass("glyphicon-check");
                                                                                                var payload3 = {};
                                                                                                payload3["method"] = "GET";
                                                                                                payload3["path"] = "Split/";
                                                                                                payload3["data"] = {"token": token};
                                                                                                $.post("./data", {"fn": "compute_engine_payload_dispatch", "payload": JSON.stringify(payload3), "response_content_type": "application/json"}).done(function(resp_c)
                                                                                                {
                                                                                                    if(resp_c.success)
                                                                                                    {
                                                                                                        $("#doc_upload_ol").find("li").eq(3).find("span").eq(1).removeClass("glyphicon-remove").addClass("glyphicon-check");
                                                                                                        var page_cnt = resp_c.count * 1;

                                                                                                        var payload4 = {};
                                                                                                        payload4["method"] = "GET";
                                                                                                        payload4["path"] = "Convert/JPEG/";
                                                                                                        payload4["data"] = {"token": token, "count": page_cnt + ''};

                                                                                                        $.post("./data", {"fn": "compute_engine_payload_dispatch", "payload": JSON.stringify(payload4), "response_content_type": "application/json"}).done(function(resp_d)
                                                                                                        {
                                                                                                            if(resp_d.success)
                                                                                                            {
                                                                                                                $("#doc_upload_ol").find("li").eq(4).find("span").eq(1).removeClass("glyphicon-remove").addClass("glyphicon-check");
                                                                                                                window.doc_check_fn2 = function(token, local_id, pages, base_time)
                                                                                                                {
                                                                                                                    var payload5 = {};
                                                                                                                    payload5["method"] = "GET";
                                                                                                                    payload5["path"] = "Status/JPEGsFinished/";
                                                                                                                    payload5["data"] = {"token": token, "count": pages + ''};

                                                                                                                    $.post("./data", {"fn": "compute_engine_payload_dispatch", "payload": JSON.stringify(payload5), "response_content_type": "application/json"}).done(function(resp_e)
                                                                                                                    {
                                                                                                                        if(!resp_e.complete)
                                                                                                                        {
                                                                                                                            setTimeout(function()
                                                                                                                            {
                                                                                                                                window.doc_check_fn2(token, local_id, pages, base_time * 2);
                                                                                                                            }, base_time);
                                                                                                                        }
                                                                                                                        else
                                                                                                                        {
                                                                                                                            $("#doc_upload_ol").find("li").eq(5).find("span").eq(1).removeClass("glyphicon-remove").addClass("glyphicon-check");
                                                                                                                            var payload6 = {};
                                                                                                                            payload6["method"] = "GET";
                                                                                                                            payload6["path"] = "Migrate/";
                                                                                                                            payload6["data"] = {"token": token};

                                                                                                                            $.post("./data", {"fn": "compute_engine_payload_dispatch", "payload": JSON.stringify(payload6), "response_content_type": "application/json"}).done(function(resp_f)
                                                                                                                            {
                                                                                                                                if(resp_f.success)
                                                                                                                                {
                                                                                                                                    $("#doc_upload_ol").find("li").eq(6).find("span").eq(1).removeClass("glyphicon-remove").addClass("glyphicon-check");

                                                                                                                                    window.doc_check_fn3 = function(token, local_id, pages, base_time)
                                                                                                                                    {
                                                                                                                                        var payload7 = {};
                                                                                                                                        payload7["method"] = "GET";
                                                                                                                                        payload7["path"] = "Status/GCSArrival/";
                                                                                                                                        payload7["data"] = {"token": token, "count": pages + ''};
                                                                                                                                        $.post("./data", {"fn": "compute_engine_payload_dispatch", "payload": JSON.stringify(payload7), "response_content_type": "application/json"}).done(function(resp_g)
                                                                                                                                        {
                                                                                                                                            if(!resp_g.success)
                                                                                                                                            {
                                                                                                                                                setTimeout(function()
                                                                                                                                                {
                                                                                                                                                    window.doc_check_fn3(token, local_id, pages, base_time * 2);
                                                                                                                                                }, base_time);
                                                                                                                                            }
                                                                                                                                            else
                                                                                                                                            {
                                                                                                                                                $("#doc_upload_ol").find("li").eq(7).find("span").eq(1).removeClass("glyphicon-remove").addClass("glyphicon-check");

                                                                                                                                                $.post("./data", {"fn": "finalize_composed_doc", "identifier": local_id, "token": token, "page_count": (pages + ''), "name": $.trim($("#final_composed_doc_name").val()),"bundle_key": bundle}).done(function(resp_h)
                                                                                                                                                {
                                                                                                                                                    $.each(BootstrapDialog.dialogs, function(iii, ddd)
                                                                                                                                                    {
                                                                                                                                                        ddd.close();
                                                                                                                                                        clearApp(function()
                                                                                                                                                        {
                                                                                                                                                            loadDocsComposer(bundle);
                                                                                                                                                        });
                                                                                                                                                    });
                                                                                                                                                });
                                                                                                                                            }
                                                                                                                                        });
                                                                                                                                    }

                                                                                                                                    window.doc_check_fn3(token, local_id, pages, 50);

                                                                                                                                }
                                                                                                                            });
                                                                                                                        }
                                                                                                                    });
                                                                                                                };
                                                                                                                window.doc_check_fn2(token, local_id, page_cnt, 50);
                                                                                                            }
                                                                                                        });

                                                                                                    }
                                                                                                });
                                                                                            }
                                                                                        });
                                                                                    };

                                                                                    window.doc_check_fn1(token, local_id, 50);

                                                                                });
                                                                            });

                                                                            var html3 = $("<div></div>");
                                                                            $("<p></p>").text("Document Upload Converstion Process").appendTo(html3);
                                                                            $("<hr />").appendTo(html3);
                                                                            $("<ol></ol>").attr("id", "doc_upload_ol")
                                                                            .append
                                                                            (
                                                                                $("<li></li>")
                                                                                .append
                                                                                (
                                                                                    $("<span></span>").text("Uploading PDF to Cloud Storage")
                                                                                )
                                                                                .append
                                                                                (
                                                                                    $("<span></span>").addClass("glyphicon").addClass("glyphicon").addClass("glyphicon-remove")
                                                                                )
                                                                            )
                                                                            .append
                                                                            (
                                                                                $("<li></li>")
                                                                                .append
                                                                                (
                                                                                    $("<span></span>").text("Downloading PDF on Compute Engine Machine")
                                                                                )
                                                                                .append
                                                                                (
                                                                                    $("<span></span>").addClass("glyphicon").addClass("glyphicon").addClass("glyphicon-remove")
                                                                                )
                                                                            )
                                                                            .append
                                                                            (
                                                                                $("<li></li>")
                                                                                .append
                                                                                (
                                                                                    $("<span></span>").text("PDF Downloaded on Compute Engine Machine")
                                                                                )
                                                                                .append
                                                                                (
                                                                                    $("<span></span>").addClass("glyphicon").addClass("glyphicon").addClass("glyphicon-remove")
                                                                                )
                                                                            )
                                                                            .append
                                                                            (
                                                                                $("<li></li>")
                                                                                .append
                                                                                (
                                                                                    $("<span></span>").text("Splitting PDF into Individual Pages")
                                                                                )
                                                                                .append
                                                                                (
                                                                                    $("<span></span>").addClass("glyphicon").addClass("glyphicon").addClass("glyphicon-remove")
                                                                                )
                                                                            )
                                                                            .append
                                                                            (
                                                                                $("<li></li>")
                                                                                .append
                                                                                (
                                                                                    $("<span></span>").text("Start PDF > JPEG Conversion @ 72 & 300 DPI")
                                                                                )
                                                                                .append
                                                                                (
                                                                                    $("<span></span>").addClass("glyphicon").addClass("glyphicon").addClass("glyphicon-remove")
                                                                                )
                                                                            )
                                                                            .append
                                                                            (
                                                                                $("<li></li>")
                                                                                .append
                                                                                (
                                                                                    $("<span></span>").text("JPEG Conversion Complete")
                                                                                )
                                                                                .append
                                                                                (
                                                                                    $("<span></span>").addClass("glyphicon").addClass("glyphicon").addClass("glyphicon-remove")
                                                                                )
                                                                            )
                                                                            .append
                                                                            (
                                                                                $("<li></li>")
                                                                                .append
                                                                                (
                                                                                    $("<span></span>").text("Begin Uploading JPEGs to Cloud Storage")
                                                                                )
                                                                                .append
                                                                                (
                                                                                    $("<span></span>").addClass("glyphicon").addClass("glyphicon").addClass("glyphicon-remove")
                                                                                )
                                                                            )
                                                                            .append
                                                                            (
                                                                                $("<li></li>")
                                                                                .append
                                                                                (
                                                                                    $("<span></span>").text("Finished Uploading JPEGs to Cloud Storage")
                                                                                )
                                                                                .append
                                                                                (
                                                                                    $("<span></span>").addClass("glyphicon").addClass("glyphicon").addClass("glyphicon-remove")
                                                                                )
                                                                            )
                                                                            .append
                                                                            (
                                                                                $("<li></li>")
                                                                                .append
                                                                                (
                                                                                    $("<span></span>").text("Deleting PDF from Cloud Storage")
                                                                                )
                                                                                .append
                                                                                (
                                                                                    $("<span></span>").addClass("glyphicon").addClass("glyphicon").addClass("glyphicon-remove")
                                                                                )
                                                                            )
                                                                            .appendTo(html3);

                                                                            if($.trim($("#final_composed_doc_name").val()).length === 0)
                                                                            {
                                                                                window.alert("You must name the doc");
                                                                                return;
                                                                            }

                                                                            $("<input />").attr("type", "hidden").attr("id", "final_composed_doc_name").attr("value", $.trim($("#final_composed_doc_name").val())).val($.trim($("#final_composed_doc_name").val())).appendTo(html3);
                                                                            dialog2.close();
                                                                            BootstrapDialog.show
                                                                            (
                                                                                {
                                                                                    "title": "Progress...",
                                                                                    "message": html3.html(),
                                                                                    "onshown": function(dialog)
                                                                                    {
                                                                                        xhr.open("POST", "./data");
                                                                                        xhr.send(formData);
                                                                                    }
                                                                                }
                                                                            );
                                                                        }
                                                                        else
                                                                        {
                                                                            window.alert("The file must be a PDF, and end with '.pdf'");
                                                                            return;
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        window.alert("The file must be a PDF, and end with '.pdf'");
                                                                        return;
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    window.alert("The file must be a PDF, and end with '.pdf'");
                                                                    return;
                                                                }
                                                            }
                                                        }
                                                    ]
                                                }
                                            );
                                        }
                                    }
                                ]
                            }
                        );
                    }).appendTo(main_div);
                    $("<button></button>").addClass("btn-danger").addClass("btn").addClass("docs_composer_back_1").html("&larr; Back").click(function()
                    {
                        clearApp(function()
                        {
                            loadDocsComposer();
                        });
                    }).appendTo(main_div);

                    $.each(resp.docs, function(i, doc)
                    {
                        var displayed_cb = $("<input />").addClass("displayed_cb").attr("type", "checkbox").attr("title", "If checked, the document will be visible in the customer signing process. Otherwise, it will simply be included w/o the customer's review");
                        if(doc.displayed)
                        {
                            displayed_cb.attr("checked", "checked");
                        }
                        displayed_cb.on("change", function(ev)
                        {
                            ev.stopPropagation();
                            var that = $(this);
                            that.css("opacity", "0.2");
                            $.post("./data", {"fn": "update_doc_display_status", "identifier": doc.identifier, "displayed": (that[0].checked * 1) + ''}).done(function(rog)
                            {
                                doc.displayed = that[0].checked;
                                that.css("opacity", "1.0");
                            });
                        })
                        .click(function(ev)
                        {
                                ev.stopPropagation();
                        });
                        $("<p></p>")
                        .addClass("composed_doc_item")
                        .attr("data-identifier", doc.identifier)
                        .append
                        (
                            $("<span></span>")
                            .addClass("actual_doc_name")
                            .text(doc.name)
                        )
                        .append
                        (
                            displayed_cb
                        )
                        .append
                        (
                            $("<span></span>")
                            .addClass("composed_doc_cnt")
                            .text("(" + (doc.page_count + '') + " pgs.)")
                        )
                        .prepend
                        (
                            $("<span></span>").addClass("symbola").html("&#128442;")
                        )
                        .append
                        (
                            $("<span></span>")
                            .addClass("glyphicon")
                            .addClass("glyphicon-remove")
                            .click(function(ev)
                            {
                                ev.stopPropagation();
                                if(window.confirm("Are you sure you would like to permanently remove " + doc.name + "?"))
                                {
                                    $.post("./data", {"fn": "drop_doc", "identifier": doc.identifier}).done(function(resp)
                                    {
                                        var el_to_remove = null;
                                        var ids = [];
                                        $(".composed_doc_item").each(function(ii, ee)
                                        {
                                            if($(ee).data("identifier") !== doc.identifier)
                                            {
                                                ids.push($(ee).data("identifier"));
                                            }
                                            else
                                            {
                                                el_to_remove = $(ee);
                                            }
                                        });
                                        if(ids.length > 0)
                                        {
                                            $.post("./data", {"fn": "update_doc_indexes", "bundle": bundle, "order": JSON.stringify(ids)}).done(function(resp)
                                            {
                                                if(el_to_remove !== null)
                                                {
                                                    el_to_remove.remove();
                                                }
                                            });
                                        }
                                        else
                                        {
                                            if(el_to_remove !== null)
                                            {
                                                el_to_remove.remove();
                                            }
                                        }
                                    });
                                }
                            })
                        )
                        .append
                        (
                            $("<span></span>")
                            .addClass("glyphicon")
                            .addClass("glyphicon-cog")
                            .click(function(ev)
                            {
                                ev.stopPropagation();
                                $(this).css("opacity", "0.2");
                                $(this).addClass("cog_faded");
                                ev.stopPropagation();
                                editCriteriaForDoc(doc, bundle);
                            })
                        )
                        .append
                        (
                            $("<span></span>")
                            .addClass("glyphicon")
                            .addClass("glyphicon-pencil")
                            .click(function(ev)
                            {
                                ev.stopPropagation();
                                var name_span = $(this).parent().find(".actual_doc_name");
                                name_span.attr("contenteditable", "true");
                                name_span.off("blur");
                                name_span.on("blur", function()
                                {
                                    $.post("./data", {"fn": "rename_doc", "identifier": doc.identifier, "name": $.trim(name_span.text())}).done(function(resp2)
                                    {
                                        doc.name = $.trim(name_span.text());
                                        name_span.removeAttr("contenteditable");
                                    });
                                });
                                name_span[0].focus();
                            })
                        )
                        .click(function()
                        {
                            loadDocView(doc, bundle, formulas);
                        })
                        .appendTo(main_div);
                    });

                    main_div.on("updatearrows", function()
                    {
                        $(".shiftdown").remove();
                        $(".shiftup").remove();

                        if($(".composed_doc_item").size() > 1)
                        {
                            $(".composed_doc_item").each(function(i, e)
                            {
                                if(i !== $(".composed_doc_item").size() - 1)
                                {
                                    $("<span></span>").addClass("shiftdown").html("&darr;").click(function(ev)
                                    {
                                        ev.stopPropagation();
                                        $(e).insertAfter($(e).next());
                                        main_div.trigger("updatearrows");

                                        var ids = [];
                                        $(".composed_doc_item").each(function(ii, ee)
                                        {
                                            ids.push($(ee).data("identifier"));
                                        });

                                        $.post("./data", {"fn": "update_doc_indexes", "bundle": bundle, "order": JSON.stringify(ids)}).done(function(resp)
                                        {
                                        });
                                    }).insertAfter($(e).find(".glyphicon-pencil"));
                                }

                                if(i !== 0)
                                {

                                    //if($(e).find(".shiftdown").size
                                    $("<span></span>").addClass("shiftup").html("&uarr;").click(function(ev)
                                    {
                                        ev.stopPropagation();
                                        $(e).prev().insertAfter($(e));
                                        main_div.trigger("updatearrows");

                                        var ids = [];
                                        $(".composed_doc_item").each(function(ii, ee)
                                        {
                                            ids.push($(ee).data("identifier"));
                                        });

                                        $.post("./data", {"fn": "update_doc_indexes", "bundle": bundle, "order": JSON.stringify(ids)}).done(function(resp)
                                        {
                                        });
                                    }).insertAfter($(e).find(".glyphicon-pencil"));
                                }
                            });
                        }
                    });
                    if(resp.docs.length === 0)
                    {
                        main_div.find("h2").first().text(main_div.find("h2").text() + " (No Docs Uploaded Yet)");
                    }

                    $.each([spacer, main_div, spacer_clone], function(i, div)
                    {
                        div.appendTo($("#app_area"));
                    });
                    main_div.trigger("updatearrows");
                });
            }
            function loadDocView(doc, bundle, formulas)
            {
                clearApp(function()
                {
                    var spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");
                    var main_div = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10");
                    var spacer_clone = spacer.clone();
                    var inner_row = $("<div></div>").addClass("row");
                    $("<div></div>")
                    .append
                    (
                        $("<buttton></button>").addClass("btn").addClass("btn-danger").html("&larr; Back").click(function()
                        {
                            clearApp(function()
                            {
                                loadDocsComposer(bundle, formulas);
                            });
                        })
                    ).appendTo(inner_row);

                    var add_img_div = function(i, doc)
                    {
                        var num = i + 1;
                        var d = $("<div></div>").addClass("col-xs-3").addClass("col-sm-3").addClass("col-md-3").addClass("col-lg-3")
                        .append
                        (
                            $("<img />").addClass("docs_thumbnail").attr("src", "//storage.googleapis.com/" + window.app_bucket + "/Images/Docs/" + doc.token + "/72/" + (num + '') + ".jpg")
                            .click(function()
                            {
                                templateDocumentPage(doc, i, bundle, formulas);
                            })
                        );
                        if(doc.page_count > 1)
                        {
                            $("<span></span>").addClass("doc_page_remove").addClass("glyphicon").addClass("glyphicon-remove")
                            .click(function()
                            {
                                if(window.confirm("Are you sure you would like to remove page #" + (num + '') + "? IT MAY CAUSE PROBLEMS IF A SIGNING PROCESS IS CURRENTLY IN PLACE!"))
                                {
                                    $(".doc_page_remove").remove();
                                    $("body").css("opacity", "0.1");
                                    $.post("./data", {"fn": "remove_docs_composer_page", "identifier": doc.identifier, "index": i + ''}).done(function(resp)
                                    {
                                        doc.page_count--;
                                        var cpy = [];
                                        $.each(doc.template_items, function(iii, eee)
                                        {
                                            if(iii !== i)
                                            {
                                                cpy.push(eee);
                                            }
                                        });
                                        doc.template_items = cpy;
                                        doc.token = resp.token;
                                        $("body").css("opacity", "1.0");
                                        loadDocView(doc, bundle, formulas);
                                    });
                                }
                            }).appendTo(d);
                        }
                        d.appendTo(inner_row);
                    };

                    for(var i = 0; i < doc.page_count; i++)
                    {
                        add_img_div(i, doc);
                    }

                    inner_row.appendTo(main_div);
                    $.each([spacer, main_div, spacer_clone], function(i, e)
                    {
                        e.appendTo($("#app_area"));
                    });
                });
            }
            window.active_template_el = null;
            function templateDocumentPage(doc, index, bundle, formulas, services)
            {
                if(typeof(services) + '' === "undefined")
                {
                    $.post("/data", {"fn": "read_setting", "value": "services_schedule"}).done(function(r)
                    {
                        templateDocumentPage(doc, index, bundle, formulas, r.data)
                    });
                    return;
                }
                clearApp(function()
                {
                    var spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");
                    var main_div = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10");
                    var spacer_clone = spacer.clone();

                    $("<div></div>").addClass("btn").addClass("btn-danger").html("&larr; Back").click(function()
                    {
                        clearApp(function()
                        {
                            loadDocView(doc, bundle, formulas);
                        });
                    }).appendTo(main_div);
                    $("<br />").appendTo(main_div);
                    $("<br />").appendTo(main_div);

                    var num = index + 1;

                    var dd = $("<div></div>").addClass("dropdown");
                    $("<button></button>").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("data-toggle", "dropdown").text("Insert Info")
                    .append
                    (
                        $("<span></span>").addClass("caret")
                    )
                    .appendTo(dd);

                    var copy_btn = $("<button></button>").addClass("btn").addClass("btn-primary").addClass("document_copy_button");
                    copy_btn.append
                    (
                        $("<span></span>").addClass("glyphicon").addClass("glyphicon-copy")
                    )
                    .append
                    (
                        $("<span></span>").text(" Copy Items to Another Page")
                    )
                    .click(function()
                    {
                        copyDocumentPage(doc, index);
                    });

                    var vars =
                    [
                        {"value": "customer_signature", "value_friendly": "Signature"},
                        //{"value": "contractor_signature", "value_friendly": "Contractor Sig"},
                        {"value": "customer_initials", "value_friendly": "Initials"},
                        {"value": "rep_signature", "value_friendly": "Rep Signature"},
                        {"value": "rep_name", "value_friendly": "Rep Name"},
                        {"value": "todays_date", "value_friendly": "Today's Date"},
                        {"value": "three_business_days", "value_friendly": "Three Business Days from Today"},
                        {"value": "day_after_NOC", "value_friendly": "Day After NOC"},
                        {"value": "customer_first", "value_friendly": "Customer First Name"},
                        {"value": "customer_last", "value_friendly": "Customer Last Name"},
                        {"value": "customer_name", "value_friendly": "Customer Name"},
                        {"value": "customer_address", "value_friendly": "Customer Address"},
                        {"value": "customer_email", "value_friendly": "Customer Email"},
                        {"value": "customer_phone", "value_friendly": "Customer Phone"},
                        {"value": "customer_address_city_state", "value_friendly": "Customer Address w/City & State"},
                        {"value": "customer_address_city_state_postal", "value_friendly": "Customer Address w/City, State & Postal"},
                        {"value": "customer_city", "value_friendly": "Customer City"},
                        {"value": "customer_city_state", "value_friendly": "Customer City & State"},
                        {"value": "customer_city_state_postal", "value_friendly": "Customer City, State, & Postal"},
                        {"value": "customer_state", "value_friendly": "Customer State"},
                        {"value": "customer_postal", "value_friendly": "Customer Postal"},
                        {"value": "customer_utility_number", "value_friendly": "Customer Utility #"},
                        {"value": "sp2_date", "value_friendly": "SP2 Date"},
                        {"value": "sp2_time", "value_friendly": "SP2 Time of Day"},
                        {"value": "system_size", "value_friendly": "System Size"},
                        {"value": "panel_module", "value_friendly": "Panel Module"},
                        {"value": "panel_qty", "value_friendly": "Panel/Inverter Quantity"},
                        {"value": "inverter_module", "value_friendly": "Inverter Module"},
                        {"value": "additional_services", "value_friendly": "Additional Services"},
                        {"value": "custom_addons", "value_friendly": "Custom Add-Ons"},
                        {"value": "racking_type", "value_friendly": "Racking Type"},
                        {"value": "system_image", "value_friendly": "System Image"},
                        {"value": "incentive", "value_friendly": "Incentive Option"},
                        {"value": "credit_card_number", "value_friendly": "Credit Card Number"},
                        {"value": "credit_card_expiration_month", "value_friendly": "Credit Card Expiration Month"},
                        {"value": "credit_card_expiration_year", "value_friendly": "Credit Card Expiration Year"},
                        {"value": "credit_card_expiration_date", "value_friendly": "Credit Card Expiration Date"},
                        {"value": "credit_card_cvv_num", "value_friendly": "Credit Card CVV Number"},
                        {"value": "utility_account_holder", "value_friendly": "Utility Acct. Holder"},
                        {"value": "fx_Contractor_Name", "value_friendly": "Contractor Name"},
                        {"value": "fx_Contractor_Street_Address", "value_friendly": "Contractor Street Address"},
                        {"value": "fx_Contractor_City", "value_friendly": "Contractor City"},
                        {"value": "fx_Contractor_State", "value_friendly": "Contractor State"},
                        {"value": "fx_Contractor_Zip", "value_friendly": "Contractor Zip Code"},
                        {"value": "fx_Contractor_City_State", "value_friendly": "Contractor City & State"},
                        {"value": "fx_Contractor_City_State_Zip", "value_friendly": "Contractor City, State & Zip"},
                        {"value": "fx_Contractor_Address_City_State_Zip", "value_friendly": "Contractor Address, City, State & Zip"},
                        {"value": "fx_Contractor_Phone_Number", "value_friendly": "Contractor Phone"},
                        {"value": "fx_Contractor_License_Number", "value_friendly": "Contractor License #"},
                        {"value": "fx_Contractor_Email", "value_friendly": "Contractor Email"},
                        {"value": "fx_Contractor_Insurance_Company", "value_friendly": "Contractor Insurance Company"},
                        {"value": "fx_Contractor_Insurance_Company_Phone_Number", "value_friendly": "Contractor Insurance Comp. Phone"},
                        {"value": "contractor_signature", "value_friendly": "Contractor Signature"},
                        {"value": "contractor_logo", "value_friendly": "Contractor Logo"}
                    ];

                    if(["rep_employment_docs", "rep_1_year_anniversary_docs", "w2_employee_docs"].indexOf(bundle) > -1)
                    {
                        vars =
                        [
                            {"value": "employee_first_name", "value_friendly": "Employee First Name"},
                            {"value": "employee_last_name", "value_friendly": "Employee Last Name"},
                            {"value": "employee_middle_name", "value_friendly": "Employee Middle Name"},
                            {"value": "employee_middle_initial", "value_friendly": "Employee Middle Initial"},
                            {"value": "employee_first_last", "value_friendly": "Employee First and Last Name"},
                            {"value": "business_name", "value_friendly": "Name of Business"},
                            {"value": "individual_sole_proprietor_checkbox", "value_friendly": "Individual/Sole Proprietor/LLC Checkbox"},
                            {"value": "c_corp_checkbox", "value_friendly": "C Corporation Checkbox"},
                            {"value": "s_corp_checkbox", "value_friendly": "S Corporation Checkbox"},
                            {"value": "partnership_checkbox", "value_friendly": "Partnership Checkbox"},
                            {"value": "trust_estate_checkbox", "value_friendly": "Trust/Estate Checkbox"},
                            {"value": "limited_liability_checkbox", "value_friendly": "Limited Liability Checkbox"},
                            {"value": "employee_address", "value_friendly": "Employee Address"},
                            {"value": "employee_city", "value_friendly": "Employee City"},
                            {"value": "employee_state", "value_friendly": "Employee State"},
                            {"value": "employee_postal", "value_friendly": "Employee Postal"},
                            {"value": "employee_full_address", "value_friendly": "Employee Full Address"},
                            {"value": "employee_city_state_zip", "value_friendly": "Employee City, State, & Postal"},
                            {"value": "residual_amount", "value_friendly": "Residual Amount"},
                            {"value": "employee_social_security", "value_friendly": "Employee Social Security"},
                            {"value": "employee_social_security_1", "value_friendly": "Employee Social Security Digit #1"},
                            {"value": "employee_social_security_2", "value_friendly": "Employee Social Security Digit #2"},
                            {"value": "employee_social_security_3", "value_friendly": "Employee Social Security Digit #3"},
                            {"value": "employee_social_security_4", "value_friendly": "Employee Social Security Digit #4"},
                            {"value": "employee_social_security_5", "value_friendly": "Employee Social Security Digit #5"},
                            {"value": "employee_social_security_6", "value_friendly": "Employee Social Security Digit #6"},
                            {"value": "employee_social_security_7", "value_friendly": "Employee Social Security Digit #7"},
                            {"value": "employee_social_security_8", "value_friendly": "Employee Social Security Digit #8"},
                            {"value": "employee_social_security_9", "value_friendly": "Employee Social Security Digit #9"},
                            {"value": "employee_ein", "value_friendly": "Employee EIN Number"},
                            {"value": "employee_ein_digital_1", "value_friendly": "Employee EIN Digit #1"},
                            {"value": "employee_ein_digital_2", "value_friendly": "Employee EIN Digit #2"},
                            {"value": "employee_ein_digital_3", "value_friendly": "Employee EIN Digit #3"},
                            {"value": "employee_ein_digital_4", "value_friendly": "Employee EIN Digit #4"},
                            {"value": "employee_ein_digital_5", "value_friendly": "Employee EIN Digit #5"},
                            {"value": "employee_ein_digital_6", "value_friendly": "Employee EIN Digit #6"},
                            {"value": "employee_ein_digital_7", "value_friendly": "Employee EIN Digit #7"},
                            {"value": "employee_ein_digital_8", "value_friendly": "Employee EIN Digit #8"},
                            {"value": "employee_ein_digital_9", "value_friendly": "Employee EIN Digit #9"},
                            {"value": "w2_line_A_indicator", "value_friendly": "W2 Line A Indicator"},
                            {"value": "w2_line_B_indicator", "value_friendly": "W2 Line B Indicator"},
                            {"value": "w2_line_C_indicator", "value_friendly": "W2 Line C Indicator"},
                            {"value": "w2_line_D_indicator", "value_friendly": "W2 Line D Indicator"},
                            {"value": "w2_line_E_indicator", "value_friendly": "W2 Line E Indicator"},
                            {"value": "w2_line_F_indicator", "value_friendly": "W2 Line F Indicator"},
                            {"value": "w2_line_G_indicator", "value_friendly": "W2 Line G Indicator"},
                            {"value": "w2_line_H_indicator", "value_friendly": "W2 Line H Indicator"},
                            {"value": "w2_file_single_checkbox", "value_friendly": "W2 Single Filing Checkbox"},
                            {"value": "w2_file_married_checkbox", "value_friendly": "W2 Married Filing Checkbox"},
                            {"value": "w2_file_single_married_checkbox", "value_friendly": "W2 Married but File Single Checkbox"},   
                            {"value": "w2_last_name_differs_checkbox", "value_friendly": "W2 Last Name Differs Checkbox"},
                            {"value": "w2_additional_witholding_amount", "value_friendly": "W2 Additional Withholding Amount"},
                            {"value": "employee_signature", "value_friendly": "Employee Signature"},
                            {"value": "employee_direct_deposit_name", "value_friendly": "Employee Direct Deposit Account Name"},
                            {"value": "employee_direct_deposit_bank_name", "value_friendly": "Employee Direct Deposit Bank Name"},
                            {"value": "employee_direct_deposit_account_number", "value_friendly": "Employee Direct Deposit Account Number"},
                            {"value": "employee_direct_deposit_routing_number", "value_friendly": "Employee Direct Deposit Routing Number"},
                            {"value": "employee_direct_deposit_account_type", "value_friendly": "Employee Direct Deposit Account Type"},
                            {"value": "todays_date", "value_friendly": "Today's Date"},
                            {"value": "employee_dob", "value_friendly": "Employee's DOB"},
                            {"value": "employee_email", "value_friendly": "Employee's Email Address"},
                            {"value": "employee_phone", "value_friendly": "Employee's Phone Number"},
                            {"value": "secondary_document_title", "value_friendly": "Secondary ID Document Title (Dl/US Passport)"},
                            {"value": "secondary_document_issuing_authority", "value_friendly": "Secondary ID Document Issuing Authority"},
                            {"value": "secondary_document_number", "value_friendly": "Secondary ID Document #"},
                            {"value": "secondary_document_expiration", "value_friendly": "Secondary ID Document Expiration Date"},
                            {"value": "recruiter_first_and_last", "value_friendly": "Recruiter First and Last Name"},
                            {"value": "rep_tier_a_commission", "value_friendly": "Rep Tier A Commission"},
                            {"value": "new_power_signature", "value_friendly": "New Power Signature"},
                            {"value": "user_emergency_name", "value_friendly": "Emergency Contact Name"},
                            {"value": "user_emergency_phone", "value_friendly": "Emergency Contact Phone"},
                            {"value": "fx_Market_Name", "value_friendly": "fx_Market_Name"},
                            {"value": "prior_work_title_1", "value_friendly": "Prior Work Title 1"},
                            {"value": "prior_work_title_2", "value_friendly": "Prior Work Title 2"},
                            {"value": "prior_work_title_3", "value_friendly": "Prior Work Title 3"},
                            {"value": "prior_work_title_4", "value_friendly": "Prior Work Title 4"},
                            {"value": "prior_work_title_5", "value_friendly": "Prior Work Title 5"},
                            {"value": "prior_work_title_6", "value_friendly": "Prior Work Title 6"},
                            {"value": "prior_work_title_7", "value_friendly": "Prior Work Title 7"},
                            {"value": "prior_work_title_8", "value_friendly": "Prior Work Title 8"},
                            {"value": "prior_work_date_1", "value_friendly": "Prior Work Date 1"},
                            {"value": "prior_work_date_2", "value_friendly": "Prior Work Date 2"},
                            {"value": "prior_work_date_3", "value_friendly": "Prior Work Date 3"},
                            {"value": "prior_work_date_4", "value_friendly": "Prior Work Date 4"},
                            {"value": "prior_work_date_5", "value_friendly": "Prior Work Date 5"},
                            {"value": "prior_work_date_6", "value_friendly": "Prior Work Date 6"},
                            {"value": "prior_work_date_7", "value_friendly": "Prior Work Date 7"},
                            {"value": "prior_work_date_8", "value_friendly": "Prior Work Date 8"},
                            {"value": "prior_work_description_1", "value_friendly": "Prior Work Description 1"},
                            {"value": "prior_work_description_2", "value_friendly": "Prior Work Description 2"},
                            {"value": "prior_work_description_3", "value_friendly": "Prior Work Description 3"},
                            {"value": "prior_work_description_4", "value_friendly": "Prior Work Description 4"},
                            {"value": "prior_work_description_5", "value_friendly": "Prior Work Description 5"},
                            {"value": "prior_work_description_6", "value_friendly": "Prior Work Description 6"},
                            {"value": "prior_work_description_7", "value_friendly": "Prior Work Description 7"},
                            {"value": "prior_work_description_8", "value_friendly": "Prior Work Description 8"},
                            {"value": "prior_work_num_items", "value_friendly": "Number of Prior Work Items"}
                        ];
                    }
                    if(bundle !== "rep_employment_docs")
                    {
                        $.each(formulas, function(i, formula)
                        {
                            vars.push(formula);
                        });
                    }
                    if(bundle === "rep_sales_docs")
                    {
                        $.each(services, function(iii, svc)
                        {
                            if(svc.exposed_as_docs_composer_variable)
                            {
                                vars.push({"value": "has_service_" + svc.value, "value_friendly": "Has Service - " + svc.value_friendly});
                            }
                        });
                    }
                    /*vars.sort(function(a, b)
                    {
                        return a.value_friendly.toLowerCase() > b.value_friendly.toLowerCase();
                    });*/

                    var ul = $("<ul></ul>").attr("role", "menu").addClass("dropdown-menu");
                    $.each(vars, function(i, obj)
                    {
                        $("<li></li>").attr("data-value", obj.value).attr("role", "presentation")
                        .append
                        (
                            $("<a></a>").attr("role", "menuitem").attr("href", "javascript:void(0);").attr("tabindex", "-1").text(obj.value_friendly)
                        )
                        .click(function()
                        {
                            $(this).parent().prevAll("button").first().css("opacity", "0.2");
                            var that = $(this);
                            $.post("./data", {"fn": "add_template_item", "identifier": doc.identifier, "idx": index + '', "value": obj.value, "value_friendly": obj.value_friendly}).done(function(resp)
                            {
                                that.parent().prevAll("button").removeAttr("style");
                                doc.template_items[index].push(resp);
                            });
                        })
                        .appendTo(ul);
                    });
                    ul.appendTo(dd);

                    dd.appendTo(main_div);
                    copy_btn.appendTo(main_div);

                    var img_div = $("<div></div>")
                    .append
                    (
                        $("<img />").addClass("doc_template_img").addClass("img").addClass("img-responsive").attr("src", "//storage.googleapis.com/" + window.app_bucket + "/Images/Docs/" + doc.token + "/72/" + (num + '') + ".jpg")
                    );

                    img_div.appendTo(main_div);

                    $.each([spacer, main_div, spacer_clone], function(i, e)
                    {
                        $(e).appendTo($("#app_area"));
                    });

                    main_div.delegate(".templated_text", "click", function(ev)
                    {

                    });

                    window.temp_intervals.push(setInterval(function()
                    {
                        var offset = $(".doc_template_img").first().offset();
                        var font_family_map =
                        {
                            "Times": "times_new_romanregular",
                            "DROIDSANS-BOLD": "droid_sansbold",
                            "Lato-Light": "latolight",
                            "Lato-Medium": "latomedium",
                            "Lato-Regular": "latoregular"
                        };
                        $.each(doc.template_items[index], function(i, template_item)
                        {
                            if($("#templated_text_" + template_item.identifier).size() === 0)
                            {
                                var aytch_tml = template_item.value_friendly;
                                if(template_item.value === "system_image")
                                {
                                    aytch_tml = "<span class='symbola' style='font-size: 3em !important'>&#128444;</span>";
                                }
                                if(["individual_sole_proprietor_checkbox", "c_corp_checkbox", "s_corp_checkbox", "partnership_checkbox", "trust_estate_checkbox", "limited_liability_checkbox"].indexOf(template_item.value) > -1)
                                {
                                    aytch_tml = "<span class='symbola'>&#9705;</span>";
                                }
                                if(template_item.value.indexOf("employee_social_security_") > -1 || template_item.value.indexOf("employee_ein_digital_") > -1)
                                {
                                    aytch_tml = "<span>X</span>";
                                }
                                $("<div></div>")
                                .attr("data-value", template_item.value)
                                .addClass("templated_text")
                                .attr("id", "templated_text_" + template_item.identifier)
                                .text(template_item.value_friendly)
                                .attr("data-x", template_item.x + '')
                                .attr("data-y", template_item.y + '')
                                .attr("data-width", template_item.width)
                                .attr("data-height", template_item.height)
                                .attr("data-font_size", template_item.font_size)
                                .attr("data-font_family", template_item.font_family)
                                .attr("data-text_align", template_item.text_align)
                                .attr("data-color", template_item.color)
                                .attr("data-format", template_item.format)
                                .html(aytch_tml)
                                .click(function()
                                {
                                    if(window.active_template_el !== null && $(this).attr("id").replace("templated_text_", "") === window.active_template_el.attr("id").replace("templated_text_", ""))
                                    {
                                        window.active_template_el = null;
                                    }
                                    else
                                    {
                                        window.active_template_el = $(this);
                                        $(".active").removeClass("active");
                                        $(this).addClass("active");
                                    }
                                })
                                .on("mouseenter", function()
                                {
                                    var temp_div = $("<div></div>");
                                    temp_div.addClass("dc_temp");
                                    temp_div.css("padding", "0.5em");
                                    $("<p></p>").text(template_item.value_friendly).css("text-align", "center").appendTo(temp_div);
                                    temp_div.css("position", "fixed").css("z-index", "1000");
                                    temp_div.css("font-size", "3em").css("color", "#FFFFFF").css("background", "rgba(0, 0, 0, 0.5");
                                    temp_div.css("width", "100%");
                                    temp_div.css("left", "0px");
                                    temp_div.css("top", "10px");
                                    temp_div.appendTo($("body"));
                                })
                                .on("mouseleave", function()
                                {
                                    $(".dc_temp").remove();
                                })
                                .appendTo($("body"));
                            }
                            else
                            {
                                var t = offset.top + template_item.y;
                                var l = offset.left + template_item.x
                                t = t + '';
                                l = l + '';
                                $("#templated_text_" + template_item.identifier)
                                .css("top", t + "px")
                                .css("left", l + "px")
                                .css("width", ((template_item.width + '') + 'px'))
                                .css("height", ((template_item.height + '') + 'px'))
                                .css("font-size", ((template_item.font_size + '') + "pt"))
                                .css("font-family", "'" + font_family_map[template_item.font_family] + "', " + font_family_map[template_item.font_family])
                                .css("text-align", template_item.text_align)
                                .css("color", template_item.color)
                                .css("text-align", template_item.text_align);
                            }
                        });

                        if(window.active_template_el !== null)
                        {
                            if($("#template_controls").size() === 0)
                            {
                                var sel1 =
                                $("<select></select>")
                                .append
                                (
                                    $("<option value='Times'>Times</option>")
                                )
                                .append
                                (
                                    $("<option value='Lato-Regular'>Lato Regular</option>")
                                )
                                .append
                                (
                                    $("<option value='Lato-Light'>Lato Light</option>")
                                )
                                .append
                                (
                                    $("<option value='Lato-Medium'>Lato Medium</option>")
                                )
                                .append
                                (
                                    $("<option value='DROIDSANS-BOLD'>Droid Sans Bold</option>")
                                );

                                sel1.find("option").each(function(i, e)
                                {
                                    if(window.active_template_el.data("font_family").indexOf($(e).attr("value")) > -1)
                                    {
                                        $(e).attr("selected", "selected");
                                    }
                                });
                                sel1.change(function()
                                {
                                    $(".doc_template_img").css("opacity", "0.2");
                                    var that = $(this);
                                    $.post("./data", {"fn": "update_template_item_font_family", "font_family": $(this).val(), "identifier": doc.identifier, "item_identifier": window.active_template_el.attr("id").replace("templated_text_", ""), "index": index + ''}).done(function(resp)
                                    {
                                        $(".doc_template_img").css("opacity", "1.0");
                                        var id = window.active_template_el.attr("id").replace("templated_text_", "");
                                        $.each(doc.template_items[index], function(k, ee)
                                        {
                                            if(ee.identifier === id)
                                            {
                                                ee.font_family = that.val();
                                                window.active_template_el.data("font_family", ee.font_family);
                                            }
                                        });
                                    });
                                });


                                var sel2 =
                                $("<select></select>")
                                .append
                                (
                                    $("<option value='left'>Left</option>")
                                )
                                .append
                                (
                                    $("<option value='right'>Right</option>")
                                )
                                .append
                                (
                                    $("<option value='center'>Centered</option>")
                                );

                                sel2.find("option").each(function(i, e)
                                {
                                    if($(e).attr("value") === window.active_template_el.data("text_align"))
                                    {
                                        $(e).attr("selected", "selected");
                                    }
                                });

                                sel2.change(function()
                                {
                                    var that = $(this);
                                    $(".doc_template_img").css("opacity", "0.2");
                                    $.post("./data", {"fn": "update_template_item_text_alignment", "align": $(this).val(), "identifier": doc.identifier, "item_identifier": window.active_template_el.attr("id").replace("templated_text_", ""), "index": index + ''}).done(function(resp)
                                    {
                                        $(".doc_template_img").css("opacity", "1.0");
                                        var id = window.active_template_el.attr("id").replace("templated_text_", "");
                                        $.each(doc.template_items[index], function(k, ee)
                                        {
                                            if(ee.identifier === id)
                                            {
                                                ee.text_align = that.val();
                                                window.active_template_el.data("text_align", ee.text_align);
                                            }
                                        });
                                    });
                                });

                                var sel3 =
                                $("<select></select>")
                                .append
                                (
                                    $("<option value='plain_text'>Plain Text</option>")
                                )
                                .append
                                (
                                    $("<option value='currency_dollar'>Currency (w/Dollar Sign)</option>")
                                )
                                .append
                                (
                                    $("<option value='currency_no_dollar'>Currency (w/o Dollar Sign)</option>")
                                );

                                sel3.find("option").each(function(i, e)
                                {
                                    if($(e).attr("value") === window.active_template_el.data("format"))
                                    {
                                        $(e).attr("selected", "selected");
                                    }
                                });

                                sel3.change(function()
                                {
                                    var that = $(this);
                                    $(".doc_template_img").css("opacity", "0.2");
                                    $.post("./data", {"fn": "update_template_item_format", "format": $(this).val(), "identifier": doc.identifier, "item_identifier": window.active_template_el.attr("id").replace("templated_text_", ""), "index": index + ''}).done(function(resp)
                                    {
                                        $(".doc_template_img").css("opacity", "1.0");
                                        var id = window.active_template_el.attr("id").replace("templated_text_", "");
                                        $.each(doc.template_items[index], function(k, ee)
                                        {
                                            if(ee.identifier === id)
                                            {
                                                ee.format = that.val();
                                                window.active_template_el.data("format", ee.format);
                                            }
                                        });
                                    });
                                });

                                var sel4 = $("<select></select>")
                                .append
                                (
                                    $("<option value='700|300'>750x300</option>")
                                )
                                .append
                                (
                                    $("<option value='350|150'>350x150</option>")
                                )
                                .append
                                (
                                    $("<option value='175|75'>175x75</option>")
                                )
                                .append
                                (
                                    $("<option value='100|43'>100x43</option>")
                                )
                                .append
                                (
                                    $("<option value='50|22'>50x22</option>")
                                );

                                sel4.find("option").each(function(i, e)
                                {
                                    if($(e).attr("value") === (window.active_template_el.data("width") + "|" + window.active_template_el.data("height")))
                                    {
                                        $(e).attr("selected", "selected");
                                    }
                                });

                                sel4.change(function()
                                {
                                    var that = $(this);
                                    $(".doc_template_img").css("opacity", "0.2");
                                    $.post("./data", {"fn": "update_template_item_width_height", "width": $(this).val().split("|")[0], "height": $(this).val().split("|")[1], "item_identifier": window.active_template_el.attr("id").replace("templated_text_", ""), "index": index + ''}).done(function(resp)
                                    {
                                        $(".doc_template_img").css("opacity", "1.0");
                                        var id = window.active_template_el.attr("id").replace("templated_text_", "");
                                        $.each(doc.template_items[index], function(k, ee)
                                        {
                                            if(ee.identifier === id)
                                            {
                                                ee.width = parseInt(that.val().split("|")[0]);
                                                ee.height = parseInt(that.val().split("|")[1]);
                                                window.active_template_el.data("width", ee.width);
                                                window.active_template_el.data("height", ee.height);
                                            }
                                        });
                                    });
                                });



                                var editor_div = $("<div></div>").attr("id", "template_controls")
                                .append
                                (
                                    $("<p></p>").text("X Offset:")
                                )
                                .append
                                (
                                    $("<input />").attr("type", "text").val(window.active_template_el.data("x")).attr("value", window.active_template_el.data("x"))
                                    .on("change", function()
                                    {
                                        $(".doc_template_img").css("opacity", "0.2");
                                        var allowed_chars = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"];
                                        var new_val = "";
                                        $.each($(this).val().split(""), function(j, char)
                                        {
                                            if(allowed_chars.indexOf(char) > -1)
                                            {
                                               new_val += char;
                                            }
                                        });
                                        $(this).val(new_val);
                                        var that = $(this);
                                        $.post("./data", {"fn": "update_template_item_x", "x": $(this).val(), "identifier": doc.identifier, "item_identifier": window.active_template_el.attr("id").replace("templated_text_", ""), "index": index + ''}).done(function(resp)
                                        {
                                            $(".doc_template_img").css("opacity", "1.0");
                                            var id = window.active_template_el.attr("id").replace("templated_text_", "");
                                            $.each(doc.template_items[index], function(k, ee)
                                            {
                                                if(ee.identifier === id)
                                                {
                                                    ee.x = parseInt(that.val());
                                                    window.active_template_el.data("x", ee.x);
                                                }
                                            });
                                        });
                                    })
                                )
                                .append
                                (
                                    $("<p></p>").text("Y Offset:")
                                )
                                .append
                                (
                                    $("<input />").attr("type", "text").val(window.active_template_el.data("y")).attr("value", window.active_template_el.data("y"))
                                    .on("change", function()
                                    {
                                        $(".doc_template_img").css("opacity", "0.2");
                                        var allowed_chars = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"];
                                        var new_val = "";
                                        $.each($(this).val().split(""), function(j, char)
                                        {
                                            if(allowed_chars.indexOf(char) > -1)
                                            {
                                               new_val += char;
                                            }
                                        });
                                        $(this).val(new_val);

                                        var that = $(this);
                                        $.post("./data", {"fn": "update_template_item_y", "y": $(this).val(), "identifier": doc.identifier, "item_identifier": window.active_template_el.attr("id").replace("templated_text_", ""), "index": index + ''}).done(function(resp)
                                        {
                                            $(".doc_template_img").css("opacity", "1.0");
                                            var id = window.active_template_el.attr("id").replace("templated_text_", "");
                                            $.each(doc.template_items[index], function(k, ee)
                                            {
                                                if(ee.identifier === id)
                                                {
                                                    ee.y = parseInt(that.val());
                                                    window.active_template_el.data("y", ee.y);
                                                }
                                            });
                                        });
                                    })
                                )
                                .append
                                (
                                    $("<button></button>").addClass("btn").addClass("btn-primary").text(" Reposition Item").prepend($("<span></span>").addClass("glyphicon").addClass("glyphicon-screenshot"))
                                    .click(function()
                                    {
                                        $("<div></div>").append($("<p></p>").text("Click on the top-left position for the desired template item's location")).addClass("click_helper_overlay").appendTo($("body"));
                                        $(".doc_template_img").off("click").addClass("z_index_300").on("click", function(ev)
                                        {
                                            $.post("./data", {"fn": "update_template_item_x_y", "x": ev.offsetX + '', "y": ev.offsetY + '', "identifier": doc.identifier, "item_identifier": window.active_template_el.attr("id").replace("templated_text", ""), "index": index + ''}).done(function(resp)
                                            {
                                                $("#template_controls").find("input").first().val(ev.offsetX + '').trigger("change");
                                                $("#template_controls").find("input").eq(1).val(ev.offsetY + '').trigger("change");
                                            });
                                            $(".click_helper_overlay").remove();
                                            $(".z_index_300").removeClass("z_index_300");
                                            $(".doc_template_img").off("click");
                                        });
                                    })
                                    .css("display", "block")
                                    .css("margin-top", "1em")
                                    .css("margin-bottom", "1em")
                                )
                                .append
                                (
                                    $("<p></p>").text("Width:")
                                )
                                .append
                                (
                                    $("<input />").attr("type", "text").val(window.active_template_el.data("width")).attr("value", window.active_template_el.data("width"))
                                    .on("change", function()
                                    {
                                        $(".doc_template_img").css("opacity", "0.2");
                                        var allowed_chars = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"];
                                        var new_val = "";
                                        $.each($(this).val().split(""), function(j, char)
                                        {
                                            if(allowed_chars.indexOf(char) > -1)
                                            {
                                               new_val += char;
                                            }
                                        });
                                        $(this).val(new_val);

                                        var that = $(this);
                                        $.post("./data", {"fn": "update_template_item_width", "width": $(this).val(), "identifier": doc.identifier, "item_identifier": window.active_template_el.attr("id").replace("templated_text_", ""), "index": index + ''}).done(function(resp)
                                        {
                                            $(".doc_template_img").css("opacity", "1.0");
                                            var id = window.active_template_el.attr("id").replace("templated_text_", "");
                                            $.each(doc.template_items[index], function(k, ee)
                                            {
                                                if(ee.identifier === id)
                                                {
                                                    ee.width = parseInt(that.val());
                                                    window.active_template_el.data("width", ee.width);
                                                }
                                            });
                                        });
                                    })
                                )
                                .append
                                (
                                    $("<p></p>").text("Height:")
                                )
                                .append
                                (
                                    $("<input />").attr("type", "text").val(window.active_template_el.data("height")).attr("value", window.active_template_el.data("height"))
                                    .on("change", function()
                                    {
                                        $(".doc_template_img").css("opacity", "0.2");
                                        var allowed_chars = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"];
                                        var new_val = "";
                                        $.each($(this).val().split(""), function(j, char)
                                        {
                                            if(allowed_chars.indexOf(char) > -1)
                                            {
                                               new_val += char;
                                            }
                                        });
                                        $(this).val(new_val);

                                        var that = $(this);
                                        $.post("./data", {"fn": "update_template_item_height", "height": $(this).val(), "identifier": doc.identifier, "item_identifier": window.active_template_el.attr("id").replace("templated_text_", ""), "index": index + ''}).done(function(resp)
                                        {
                                            $(".doc_template_img").css("opacity", "1.0");
                                            var id = window.active_template_el.attr("id").replace("templated_text_", "");
                                            $.each(doc.template_items[index], function(k, ee)
                                            {
                                                if(ee.identifier === id)
                                                {
                                                    ee.height = parseInt(that.val());
                                                    window.active_template_el.data("height", ee.height);
                                                }
                                            });
                                        });
                                    })
                                )
                                .append
                                (
                                    $("<p></p>").text("Font Size (Pts)")
                                )
                                .append
                                (
                                    $("<input />").attr("type", "text").val(window.active_template_el.data("font_size")).attr("value", window.active_template_el.data("font_size"))
                                    .on("change", function()
                                    {
                                        $(".doc_template_img").css("opacity", "0.2");
                                        var allowed_chars = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"];
                                        var new_val = "";
                                        $.each($(this).val().split(""), function(j, char)
                                        {
                                            if(allowed_chars.indexOf(char) > -1)
                                            {
                                               new_val += char;
                                            }
                                        });
                                        $(this).val(new_val);

                                        var that = $(this);
                                        $.post("./data", {"fn": "update_template_item_font_size", "font_size": $(this).val(), "identifier": doc.identifier, "item_identifier": window.active_template_el.attr("id").replace("templated_text_", ""), "index": index + ''}).done(function(resp)
                                        {
                                            $(".doc_template_img").css("opacity", "1.0");
                                            var id = window.active_template_el.attr("id").replace("templated_text_", "");
                                            $.each(doc.template_items[index], function(k, ee)
                                            {
                                                if(ee.identifier === id)
                                                {
                                                    ee.font_size = parseInt(that.val());
                                                    window.active_template_el.data("font_size", ee.font_size);
                                                }
                                            });
                                        });
                                    })
                                )
                                .append
                                (
                                    $("<p></p>").text("Text Color:")
                                )
                                .append
                                (
                                    $("<input />").attr("type", "text").val(window.active_template_el.data("color")).attr("value", window.active_template_el.data("color").toLowerCase())
                                    .on("change", function()
                                    {
                                        $(".doc_template_img").css("opacity", "0.2");
                                        $(this).val($(this).val().toLowerCase());
                                        var allowed_chars = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f", "#"];
                                        var new_val = "";
                                        var txt = $(this).val();
                                        var txt_split = txt.split("");
                                        $.each(txt_split, function(j, char)
                                        {
                                            if(allowed_chars.indexOf(char) > -1/* && new_val.length <= 6*/)
                                            {
                                                new_val += char;
                                            }
                                        });
                                        if(new_val.indexOf("#") === 0)
                                        {
                                            if(new_val.length === 7)
                                            {
                                                $(this).val(new_val);

                                                var that = $(this);
                                                $.post("./data", {"fn": "update_template_item_color", "color": $(this).val(), "identifier": doc.identifier, "item_identifier": window.active_template_el.attr("id").replace("templated_text_", ""), "index": index + ''}).done(function(resp)
                                                {
                                                    $(".doc_template_img").css("opacity", "1.0");
                                                    var id = window.active_template_el.attr("id").replace("templated_text_", "");
                                                    $.each(doc.template_items[index], function(k, ee)
                                                    {
                                                        if(ee.identifier === id)
                                                        {
                                                            ee.color = that.val();
                                                            window.active_template_el.data("color", ee.color);
                                                        }
                                                    });
                                                });

                                                return;
                                            }
                                        }
                                        $(".doc_template_img").css("opacity", "1.0");                                        
                                    })
                                )
                                .append
                                (
                                    $("<p></p>").text("Font Face:")
                                )
                                .append
                                (
                                    sel1
                                )
                                .append
                                (
                                    $("<p></p>").text("Text Alignment:")
                                )
                                .append
                                (
                                    sel2
                                )
                                .append
                                (
                                    $("<p></p>").text("Format")
                                )
                                .append
                                (
                                    sel3
                                )
                                .append
                                (
                                    $("<button></button>").addClass("btn").addClass("btn-danger").text("Remove Item").css("margin-top", "2em").css("display", "block").click(function()
                                    {
                                        $(this).css("opacity", "0.2");
                                        var that = $(this);
                                        var cpy = [];
                                        var id = window.active_template_el.attr("id").replace("templated_text_", "");
                                        for(var i = 0; i < doc.template_items[index].length; i++)
                                        {
                                            if(doc.template_items[index][i].identifier !== id)
                                            {
                                                cpy.push(doc.template_items[index][i]);

                                            }
                                            else
                                            {
                                                $.post("./data", {"fn": "remove_template_item", "index": index + '', "index2": i + '', "identifier": doc.identifier}).done(function(resp)
                                                {
                                                });
                                            }
                                        }
                                        doc.template_items[index] = cpy;
                                        window.active_template_el = null;
                                        templateDocumentPage(doc, index, bundle);

                                    })
                                );

                                /*if(window.active_template_el.data("value") === "customer_signature")
                                {
                                    editor_div.find("> p").eq(2).text("Width/Height");
                                    editor_div.find("> input").eq(2).replaceWith(sel4);
                                    editor_div.find("> p").eq(3).remove();
                                    editor_div.find("> input").eq(2).remove();
                                }*/
                                editor_div.appendTo($("body"));
                            }
                        }
                        else
                        {
                            $("#template_controls").remove();
                        }
                    }, 100));
                });
            }
            function copyDocumentPage(doc, index, bundle, doc_identifier, page_count)
            {
                if(typeof(bundle) + '' === "undefined")
                {
                    $.post("./data", {"fn": "read_setting", "value": "doc_bundles"}).done(function(resp)
                    {
                        var html = $("<div></div>");
                        $("<br />").appendTo(html);
                        var sel = $("<select></select>").attr("id", "copy_bundle_selection");
                        sel.append
                        (
                            $("<option value='n/a'>Choose a Bundle</option>")
                        );
                        $.each(resp.data, function(i, bundle)
                        {
                            $("<option value='" + bundle.value + "'>" + bundle.value_friendly + "</option>").appendTo(sel);
                        });


                        sel.appendTo(html);

                        $("<br />").appendTo(html);
                        BootstrapDialog.show
                        (
                            {
                                "title": "Choose a Bundle",
                                "message": html.html(),
                                "buttons":
                                [
                                    {
                                        "label": "Cancel",
                                        "cssClass": "btn-danger",
                                        "action": function(d)
                                        {
                                            d.close();
                                        }
                                    },
                                    {
                                        "label": "Continue",
                                        "cssClass": "btn-primary",
                                        "action": function(d)
                                        {
                                            if($("#copy_bundle_selection").val() === "n/a")
                                            {
                                                window.alert("You must choose a document bundle");
                                                return;
                                            }

                                            d.close();
                                            copyDocumentPage(doc, index, $("#copy_bundle_selection").val());
                                        }
                                    }
                                ]
                            }
                        );
                    });
                    return;
                }
                if(typeof(doc_identifier) + '' === "undefined")
                {
                    $.post("./data", {"fn": "enumerate_composed_documents", "bundle_key": bundle}).done(function(resp)
                    {
                        var html = $("<div></div>");
                        $("<br />").appendTo(html);
                        var sel = $("<select></select>").attr("id", "copy_document_selection");
                        sel.append
                        (
                            $("<option value='n/a'>Choose a Document</option>")
                        );
                        $.each(resp.docs, function(i, document)
                        {
                            $("<option value='" + document.identifier + "_" + (document.page_count + '') + "'>" + document.name + "</option>").appendTo(sel);
                        });


                        sel.appendTo(html);

                        $("<br />").appendTo(html);
                        BootstrapDialog.show
                        (
                            {
                                "title": "Choose a Document",
                                "message": html.html(),
                                "buttons":
                                [
                                    {
                                        "label": "Cancel",
                                        "cssClass": "btn-danger",
                                        "action": function(d)
                                        {
                                            d.close();
                                        }
                                    },
                                    {
                                        "label": "Continue",
                                        "cssClass": "btn-primary",
                                        "action": function(d)
                                        {
                                            if($("#copy_document_selection").val() === "n/a")
                                            {
                                                window.alert("You must choose a document");
                                                return;
                                            }

                                            d.close();
                                            copyDocumentPage(doc, index, bundle, $("#copy_document_selection").val().split("_")[0], $("#copy_document_selection").val().split("_")[1]);
                                        }
                                    }
                                ]
                            }
                        );
                    });
                    return;
                }
                var html = $("<div></div>");
                $("<br />").appendTo(html);
                var sel = $("<select></select>").attr("id", "copy_page_index_selection");
                sel.append
                (
                    $("<option value='n/a'>Choose a Page</option>")
                );
                for(var i = 0; i < page_count; i++)
                {
                    var num = i + 1;
                    $("<option value='" + (i + '') + "'>Page #" + (num + '') + "</option>").appendTo(sel);
                }


                sel.appendTo(html);

                $("<br />").appendTo(html);
                BootstrapDialog.show
                (
                    {
                        "title": "Choose a Page",
                        "message": html.html(),
                        "buttons":
                        [
                            {
                                "label": "Cancel",
                                "cssClass": "btn-danger",
                                "action": function(d)
                                {
                                    d.close();
                                }
                            },
                            {
                                "label": "Continue",
                                "cssClass": "btn-primary",
                                "action": function(d)
                                {
                                    if($("#copy_page_index_selection").val() === "n/a")
                                    {
                                        window.alert("You must choose a Page");
                                        return;
                                    }
                                    $(".bootstrap-dialog-footer").find(".btn-primary").css("opacity", "0.2").text("Copying...");
                                    $.post("./data", {"fn": "copy_document_template_items", "source": doc.identifier, "source_index": (index + ''), "destination": doc_identifier, "destination_index": $("#copy_page_index_selection").val()}).done(function(resp)
                                    {
                                        d.close();
                                        $("#docs_composer").trigger("click");
                                    });
                                }
                            }
                        ]
                    }
                );
            }
            function editCriteriaForDoc(doc, bundle, funds, utility_providers)
            {
                if(typeof(funds) === "undefined")
                {
                    $.post("./data", {"fn": "list_funding_sources"}).done(function(resp)
                    {
                        editCriteriaForDoc(doc, bundle, resp);
                    });
                    return;
                }
                if(typeof(utility_providers) === "undefined")
                {
                    $.post("./data", {"fn": "read_setting", "value": "utility_providers"}).done(function(resp)
                    {
                        editCriteriaForDoc(doc, bundle, funds, resp.data);
                    });
                    return
                }
                $(".cog_faded").removeAttr("style");

                var html = $("<div></div>");
                $("<p></p>").text("Description:").appendTo(html);
                $("<textarea></textarea>").attr("id", "doc_description").appendTo(html);
                $("<p></p>").text("Inclusion Criteria");
                $("<textarea></textarea>").attr("id", "doc_formula").appendTo(html);
                var dd = $("<div></div>").addClass("dropdown");
                $("<button></button>").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("data-toggle", "dropdown").text("Insert a variable/expression").append($("<span></span>").addClass("caret")).appendTo(dd);
                var ul = $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu");

                var vars =
                [
                    "cstPostal",
                    "cstCounty",
                    "cstState",
                    "cstFund",
                    "cstUtility",
                    "cstMarket"
                ];
                vars.push("---");
                vars.push("AND");
                vars.push("OR");
                vars.push("NOT");
                vars.push("IN");
                vars.push("---");
                $.each(utility_providers, function(i, e)
                {
                    vars.push(e.value);
                });
                vars.push("---");
                $.each(funds, function(i, e)
                {
                    if(i === 0 || i === funds.length - 1)
                    {
                        return;
                    }
                    vars.push(e.value);
                });

                if(["rep_employment_docs", "w2_employee_docs"].indexOf(bundle) > -1)
                {
                    vars = ["usrType", "usrState", "salesRep", "asstManager", "coManager", "salesDistrictManager", "regionalManager", "W2Employee", "solarPro", "solarProManager", "energyExpert", "salesManager", "---", "AND", "OR", "NOT", "IN"];
                }

                spacer_cnt = 0;
                $.each(vars, function(i, varr)
                {
                    $("<li></li>").attr("role", "presentation")
                    .attr("data-group", spacer_cnt + '')
                    .append
                    (
                        $("<a></a>").attr("role", "menuitem").attr("href", "javascript:void(0);").attr("tabindex", "-1").text(varr)
                    ).appendTo(ul);
                    if(varr === "---")
                    {
                        spacer_cnt += 1;
                    }
                });

                ul.addClass("criteria_vars_ul");
                ul.appendTo(dd);
                dd.appendTo(html);

                $("<button></button>").addClass("docs_help").addClass("btn").addClass("btn-primary").text("HELP").css("margin-top", "1em").appendTo(html);

                BootstrapDialog.show
                (
                    {
                        "title": "Criteria for " + doc.name,
                        "message": html.html(),
                        "onshown": function(dialog)
                        {
                            $("#doc_description").val(doc.criteria.description);
                            $("#doc_formula").val(doc.criteria.formula);
                            $(".criteria_vars_ul li").each(function(i, e)
                            {
                                $(e).click(function()
                                {
                                    if($(e).text() === "---")
                                    {
                                        return;
                                    }
                                    var v = $("#doc_formula").val();
                                    var txt = $(e).text();
                                    if(parseInt($(e).data("group")) > 1)
                                    {
                                        txt = "'" + txt + "'";
                                    }
                                    if(txt === "salesRep" || txt === "asstManager" || txt === "coManager" || txt === "salesDistrictManager" || txt === "regionalManager")
                                    {
                                        txt = "'" + txt + "'";
                                    }
                                    v += txt;
                                    $("#doc_formula").val(v);
                                });
                            });


                            $(".docs_help").click(function()
                            {
                                var html2 = $("<div></div>");
                                $("<p></p>").text("Equality Operator:").appendTo(html2);
                                $("<p></p>").text("A = B").appendTo(html2);
                                $("<p></p>").text("Returns true if A is equal to B").appendTo(html2);
                                $("<hr />").appendTo(html2);
                                $("<p></p>").text("Parentheses:").appendTo(html2);
                                $("<p></p>").html("Parentheses can be used to form complex expressions with the AND, OR, and NOT operators. Example:<br />cstPostal = 91711 AND (cstFund = hero OR cstFund = ca_greensky)<br />(If the customer postal code is 91711 and a) the fund is hero or b) the fund is california greensky.)").appendTo(html2);
                                $("<hr />").appendTo(html2);
                                $("<p></p>").text("Fund Format:").appendTo(html2);
                                $("<p></p>").text("cstFund = 'ca_greensky'").appendTo(html2);
                                $("<p></p>").text("(Single quotes required)").appendTo(html2);
                                $("<hr />").appendTo(html2);
                                $("<p></p>").text("County Format:").appendTo(html2);
                                $("<p></p>").text("Ex: cstCounty = 'Los Angeles County' OR cstCounty = 'San Diego County'").appendTo(html2);
                                $("<p></p>").text("(Single quotes required)").appendTo(html2);
                                $("<hr />").appendTo(html2);
                                $("<p></p>").text("City Format:").appendTo(html2);
                                $("<p></p>").text("Ex: cstCity = 'Corona'").appendTo(html2);
                                $("<p></p>").text("(Single quotes required)").appendTo(html2);
                                $("<hr />").appendTo(html2);
                                $("<p></p>").text("State Format:").appendTo(html2);
                                $("<p></p>").text("Two characteres, both lowercase.").appendTo(html2);
                                $("<hr />").appendTo(html2);
                                $("<p></p>").text("IN operator").appendTo(html2);
                                $("<p></p>").text("Example:").appendTo(html2);
                                $("<p></p>").text("cstPostal IN ['91711', '91776', '93940']").appendTo(html2);
                                $("<p></p>").text("cstCity IN ['San Diego', 'Murrieta', 'Temecula']").appendTo(html2);
                                $("<p></p>").text("If the customer postal is 91711, 91776, or 93940...evaluates to true.").appendTo(html2);

                                BootstrapDialog.show
                                (
                                    {
                                        "title": "Syntax",
                                        "message": html2.html(),
                                        "buttons":
                                        [
                                            {
                                                "label": "Got it",
                                                "cssClass": "btn-primary",
                                                "action": function(dialog2)
                                                {
                                                    dialog2.close();
                                                }
                                            }
                                        ]
                                    }
                                );
                            });
                        },
                        "buttons":
                        [
                            {
                                "label": "Cancel",
                                "cssClass": "btn-danger",
                                "action": function(dialog)
                                {
                                    dialog.close();
                                }
                            },
                            {
                                "label": "Save",
                                "cssClass": "btn-primary",
                                "action": function(dialog)
                                {
                                    $("#doc_formula").val($.trim($("#doc_formula").val()));
                                    if(validateCriteria($("#doc_formula").val(), funds, utility_providers, bundle))
                                    {
                                        var obj =
                                        {
                                            "description": $.trim($("#doc_description").val()),
                                            "formula": $.trim($("#doc_formula").val())
                                        };
                                        $(".bootstrap-dialog-footer").find(".btn-primary").css("opacity", "0.2").text("Saving...");
                                        $.post("./data", {"fn": "update_doc_criteria", "identifier": doc.identifier, "criteria": JSON.stringify(obj)}).done(function(resp)
                                        {
                                            doc.criteria = obj;
                                            dialog.close();
                                        });
                                    }
                                    else
                                    {
                                        window.alert("The formula cannot be evaluated.");
                                        return;
                                    }
                                }
                            }
                        ]
                    }
                );
            }
            function validateCriteria(str, funds, utility_providers, bundle)
            {
                while(str.indexOf(" IN [") > -1)
                {
                    idx = str.indexOf(" IN [");
                    var prev_word = "";
                    for(var i = 0; i < idx; i++)
                    {
                        prev_word += str[i];
                    }
                    prev_word = $.trim(prev_word);

                    var arr_str = "";
                    idx += 4;
                    for(var i = idx; str[i] !== "]"; i++)
                    {
                        arr_str += str[i];
                    }
                    arr_str += "]";

                    str = str.replace(prev_word + " IN " + arr_str, arr_str + ".indexOf(" + prev_word + ") > -1");
                }
                while(str.indexOf("AND") > -1)
                {
                    str = str.replace("AND", "&&");
                }
                while(str.indexOf("OR") > -1)
                {
                    str = str.replace("OR", "||");
                }
                while(str.indexOf("NOT") > -1)
                {
                    str = str.replace("NOT", "!");
                }
                while(str.indexOf(" ! ") > -1)
                {
                    str = str.replace(" ! ", "!");
                }
                while(str.indexOf("! ") > -1)
                {
                    str = str.replace("! ", "!");
                }
                while(str.indexOf(" = ") > -1)
                {
                    str = str.replace(" = ", " === ");
                }


                var replacement_map1 =
                {
                    "cstPostal": "'91711'",
                    "cstCounty": "'Los Angeles County'",
                    "cstState": "'ca'",
                    "cstFund": "'ca_greensky'",
                    "cstUtility": "'san_diego_gas_&_electric'",
                    "cstMarket": "'foo'",
                    "usrType": "'n/a'",
                    "usrState": "'CA'"
                };


                $.each(Object.keys(replacement_map1), function(i, key)
                {
                    while(str.indexOf(key) > -1)
                    {
                        str = str.replace(key, replacement_map1[key]);
                    }
                });

                var result = null;
                try
                {
                    result = eval(str);
                }
                catch(ex3)
                {
                }
                return (result === true || result === false);

            }
            function editElectricians(idk, electricians)
            {
                if(typeof(electricians) + '' === "undefined")
                {
                    $.post("./data", {"fn": "read_setting", "value": "electricians"}).done(function(resp)
                    {
                        editElectricians(idk, resp.data);
                    });
                    return;
                }

                var managers = electricians;
                var app_area = $("#app_area");
                var spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");
                var main_div = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10");
                var spacer_clone = spacer.clone();

                $("<button></button>").addClass("btn").addClass("btn-danger").attr("type", "button").html("&larr; Back").click(function()
                {
                    $("#manage_notifications_and_settings").trigger("click");
                }).appendTo(main_div);
                $("<button></button>").addClass("btn").addClass("btn-success").addClass("new_pm_btn").text("+ New Electrician").attr("type", "button").click(function()
                {
                    addElectrician();
                }).appendTo(main_div);

                var table = $("<table></table>");
                table.addClass("project_managers_tbl");
                var tbody = $("<tbody></tbody>");

                tbody.append
                (
                    $("<tr></tr>")
                    .append
                    (
                        $("<td></td>").text("Name:")
                    )
                    .append
                    (
                        $("<td></td>").text("Email:")
                    )
                    .append
                    (
                        $("<td></td>").text("Phone:")
                    )
                    .append
                    (
                        $("<td></td>").text("Remove Electrician Role")
                    )
                );

                $.each(managers, function(i, manager)
                {
                    $("<tr></tr>")
                    .append
                    (
                        $("<td></td>").text(manager.name)
                    )
                    .append
                    (
                        $("<td></td>").text(manager.email)
                    )
                    .append
                    (
                        $("<td></td>").addClass("pm_rid_item").text(manager.phone)
                    )
                    .append
                    (
                        $("<td></td>").append
                        (
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove").click(function()
                            {
                                if(window.confirm("Are you sure you would like to drop " + $(this).parent().prevAll("td").eq(-1).text() + " as an electrician?"))
                                {
                                    $(this).parent().parent().remove();
                                    $(".project_managers_tbl").animate({opacity: 0.2}, 250, function()
                                    {
                                        var r_ids = [];
                                        var add = function(iii, eee)
                                        {
                                            r_ids.push($(eee).text());
                                        };
                                        $(".pm_rid_item").each(add);

                                        $.post("./data", {"fn": "drop_electrician", "idx": i + ''}).done(function(rr)
                                        {
                                            $(".project_managers_tbl").removeAttr("style");
                                        });
                                    });
                                }
                            })
                        )
                    )
                    .appendTo(tbody);
                });

                tbody.appendTo(table);
                table.appendTo(main_div);

                $.each([spacer, main_div, spacer_clone], function(i, e)
                {
                    e.appendTo(app_area);
                });
            }
            function editProjectManagers(manager_rep_ids, managers)
            {
                if(typeof(managers) + '' === "undefined")
                {
                    $.post("./data", {"fn": "read_setting", "value": "project_managers"}).done(function(resp)
                    {
                        editProjectManagers(manager_rep_ids, resp.data);
                    });
                    return;
                }

                var app_area = $("#app_area");
                var spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");
                var main_div = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10");
                var spacer_clone = spacer.clone();

                $("<button></button>").addClass("btn").addClass("btn-danger").attr("type", "button").html("&larr; Back").click(function()
                {
                    $("#manage_notifications_and_settings").trigger("click");
                }).appendTo(main_div);
                $("<button></button>").addClass("btn").addClass("btn-success").addClass("new_pm_btn").text("+ New PM").attr("type", "button").click(function()
                {
                    addProjectManager();
                }).appendTo(main_div);

                var table = $("<table></table>");
                table.addClass("project_managers_tbl");
                var tbody = $("<tbody></tbody>");

                tbody.append
                (
                    $("<tr></tr>")
                    .append
                    (
                        $("<td></td>").text("Name:")
                    )
                    .append
                    (
                        $("<td></td>").text("Email:")
                    )
                    .append
                    (
                        $("<td></td>").text("Phone:")
                    )
                    .append
                    (
                        $("<td></td>").text("Remove PM Role")
                    )
                );

                $.each(managers, function(i, manager)
                {
                    $("<tr></tr>")
                    .append
                    (
                        $("<td></td>").text(manager.name)
                    )
                    .append
                    (
                        $("<td></td>").text(manager.email)
                    )
                    .append
                    (
                        $("<td></td>").addClass("pm_rid_item").text(manager.phone)
                    )
                    .append
                    (
                        $("<td></td>").append
                        (
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove").click(function()
                            {
                                if(window.confirm("Are you sure you would like to drop " + $(this).parent().prevAll("td").eq(-1).text() + " as a project manager?"))
                                {
                                    $(this).parent().parent().remove();
                                    $(".project_managers_tbl").animate({opacity: 0.2}, 250, function()
                                    {
                                        var r_ids = [];
                                        var add = function(iii, eee)
                                        {
                                            r_ids.push($(eee).text());
                                        };
                                        $(".pm_rid_item").each(add);

                                        $.post("./data", {"fn": "drop_project_manager", "idx": i + ''}).done(function(rr)
                                        {
                                            $(".project_managers_tbl").removeAttr("style");
                                        });
                                    });
                                }
                            })
                        )
                    )
                    .appendTo(tbody);
                });

                tbody.appendTo(table);
                table.appendTo(main_div);

                $.each([spacer, main_div, spacer_clone], function(i, e)
                {
                    e.appendTo(app_area);
                });
            }
            function addElectrician()
            {
                BootstrapDialog.show
                (
                    {
                        "title": "Adding a new Electrician",
                        "message": $("<div><div>")
                                   .append
                                   (
                                        $("<br />")
                                   )
                                   .append
                                   (
                                        $("<input />").attr("id", "pm_name").attr("type", "text").attr("placeholder", "Name...")
                                   )
                                   .append
                                   (
                                        $("<br />")
                                   )
                                   .append
                                   (
                                        $("<input />").attr("id", "pm_phone").attr("type", "text").attr("placeholder", "Phone #...")
                                   )
                                   .append
                                   (
                                        $("<br />")
                                   )
                                   .append
                                   (
                                        $("<input />").attr("id", "pm_email").attr("type", "text").attr("placeholder", "Email...")
                                   )
                                   .append
                                   (
                                        $("<br />")
                                   )
                                   .html(),
                        "buttons":
                        [
                            {
                                "label": "Cancel",
                                "cssClass": "btn-danger",
                                "action": function(dialog)
                                {
                                    dialog.close();
                                }
                            },
                            {
                                "label": "Add Electrician",
                                "cssClass": "btn-primary",
                                "action": function(dialog)
                                {
                                    $("#pm_name").val($.trim($("#pm_name").val()));
                                    if($("#pm_name").val().length === 0)
                                    {
                                        window.alert("The name is required.");
                                        return;
                                    }
                                    $("#pm_phone").val($.trim($("#pm_phone").val()));
                                    $("#pm_email").val($.trim($("#pm_email").val()));
                                    if($("#pm_phone").val().length === 0)
                                    {
                                        window.alert("The phone number is required.");
                                        return;
                                    }
                                    if($("#pm_email").val().length === 0)
                                    {
                                        window.alert("The email is required.");
                                        return;
                                    }

                                    var chars = $("#pm_phone").val().split("");
                                    var cpy = [];
                                    $.each(chars, function(i, char)
                                    {
                                        if(char === "0" || char === "1" || char === "2" || char === "3" || char === "4" || char == "5" || char === "6" || char === "7" || char === "8" || char === "9" || char === "0")
                                        {
                                            cpy.push(char);
                                        }
                                    });
                                    $("#pm_phone").val(cpy.join(""));

                                    $.post("./data", {"fn": "add_electrician", "name": $("#pm_name").val(), "phone": $("#pm_phone").val(), "email": $("#pm_email").val()}).done(function(resp)
                                    {
                                        $(".bootstrap-dialog-footer").find(".btn-primary").remove();
                                        var rep = resp.rep;
                                        $("<tr></tr>")
                                        .append
                                        (
                                            $("<td></td>").text($("#pm_name").val())
                                        )
                                        .append
                                        (
                                            $("<td></td>").text($("#pm_email").val())
                                        )
                                        .append
                                        (
                                            $("<td></td>").addClass("pm_rid_item").text($("#pm_phone").val())
                                        )
                                        .append
                                        (
                                            $("<td></td>").append
                                            (
                                                $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove").click(function()
                                                {
                                                    if(window.confirm("Are you sure you would like to drop " + $(this).parent().prevAll("td").eq(-1).text() + " as an electrician?"))
                                                    {
                                                        $(this).parent().parent().remove();
                                                        var that = $(this);
                                                        $(".project_managers_tbl").animate({opacity: 0.2}, 250, function()
                                                        {
                                                            var r_ids = [];
                                                            var add = function(iii, eee)
                                                            {
                                                                r_ids.push($(eee).text());
                                                            };
                                                            $(".pm_rid_item").each(add);

                                                            $.post("./data", {"fn": "drop_electrician", "idx": (that.parent().parent().prevAll("tr").size() - 1) + ''}).done(function(rr)
                                                            {
                                                                $(".project_managers_tbl").removeAttr("style");
                                                            });
                                                        });
                                                    }
                                                })
                                            )
                                        )
                                        .appendTo($(".project_managers_tbl").find("tbody"));
                                        dialog.close();
                                    });
                                }
                            }
                        ]
                    }
                );
            }
            function addProjectManager()
            {
                BootstrapDialog.show
                (
                    {
                        "title": "Adding a new Project Manager",
                        "message": $("<div><div>")
                                   .append
                                   (
                                        $("<br />")
                                   )
                                   .append
                                   (
                                        $("<input />").attr("id", "pm_name").attr("type", "text").attr("placeholder", "PM's name...")
                                   )
                                   .append
                                   (
                                        $("<br />")
                                   )
                                   .append
                                   (
                                        $("<input />").attr("id", "pm_phone").attr("type", "text").attr("placeholder", "PM's phone #...")
                                   )
                                   .append
                                   (
                                        $("<br />")
                                   )
                                   .append
                                   (
                                        $("<input />").attr("id", "pm_email").attr("type", "text").attr("placeholder", "PM's email...")
                                   )
                                   .append
                                   (
                                        $("<br />")
                                   )
                                   .html(),
                        "buttons":
                        [
                            {
                                "label": "Cancel",
                                "cssClass": "btn-danger",
                                "action": function(dialog)
                                {
                                    dialog.close();
                                }
                            },
                            {
                                "label": "Add as PM",
                                "cssClass": "btn-primary",
                                "action": function(dialog)
                                {
                                    $("#pm_name").val($.trim($("#pm_name").val()));
                                    if($("#pm_name").val().length === 0)
                                    {
                                        window.alert("The name is required.");
                                        return;
                                    }
                                    $("#pm_phone").val($.trim($("#pm_phone").val()));
                                    $("#pm_email").val($.trim($("#pm_email").val()));
                                    if($("#pm_phone").val().length === 0)
                                    {
                                        window.alert("The phone number is required.");
                                        return;
                                    }
                                    if($("#pm_email").val().length === 0)
                                    {
                                        window.alert("The email is required.");
                                        return;
                                    }

                                    var chars = $("#pm_phone").val().split("");
                                    var cpy = [];
                                    $.each(chars, function(i, char)
                                    {
                                        if(char === "0" || char === "1" || char === "2" || char === "3" || char === "4" || char == "5" || char === "6" || char === "7" || char === "8" || char === "9" || char === "0")
                                        {
                                            cpy.push(char);
                                        }
                                    });
                                    $("#pm_phone").val(cpy.join(""));

                                    $.post("./data", {"fn": "add_project_manager", "name": $("#pm_name").val(), "phone": $("#pm_phone").val(), "email": $("#pm_email").val()}).done(function(resp)
                                    {
                                        $(".bootstrap-dialog-footer").find(".btn-primary").remove();
                                        var rep = resp.rep;
                                        $("<tr></tr>")
                                        .append
                                        (
                                            $("<td></td>").text($("#pm_name").val())
                                        )
                                        .append
                                        (
                                            $("<td></td>").text($("#pm_email").val())
                                        )
                                        .append
                                        (
                                            $("<td></td>").addClass("pm_rid_item").text($("#pm_phone").val())
                                        )
                                        .append
                                        (
                                            $("<td></td>").append
                                            (
                                                $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove").click(function()
                                                {
                                                    if(window.confirm("Are you sure you would like to drop " + $(this).parent().prevAll("td").eq(-1).text() + " as a project manager?"))
                                                    {
                                                        $(this).parent().parent().remove();
                                                        var that = $(this);
                                                        $(".project_managers_tbl").animate({opacity: 0.2}, 250, function()
                                                        {
                                                            var r_ids = [];
                                                            var add = function(iii, eee)
                                                            {
                                                                r_ids.push($(eee).text());
                                                            };
                                                            $(".pm_rid_item").each(add);

                                                            $.post("./data", {"fn": "drop_project_manager", "idx": (that.parent().parent().prevAll("tr").size() - 1) + ''}).done(function(rr)
                                                            {
                                                                $(".project_managers_tbl").removeAttr("style");
                                                            });
                                                        });
                                                    }
                                                })
                                            )
                                        )
                                        .appendTo($(".project_managers_tbl").find("tbody"));
                                        dialog.close();
                                    });
                                }
                            }
                        ]
                    }
                );
            }
            function loadTeamView(funds)
            {
                if(typeof(funds) + '' === "undefined")
                {
                    $.post("./data", {"fn": "list_funding_sources"}).done(function(resp)
                    {
                        loadTeamView(resp);
                    });
                    return;
                }
                var app_area = $("#app_area");

                var spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");
                var main_div = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10");
                var spacer_clone = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");

                $("<h3></h3>").addClass("tmp_loading_h3").text("Loading...").appendTo(app_area);
                $.post("./data", {"fn": "team_view"}).done(function(resp)
                {
                    var state_map = window.states_mapping;
                    if(Object.keys(resp).length === 0)
                    {
                        $(".tmp_loading_h3").text("No customers are ready for the team view");
                    }
                    else
                    {
                        $(".tmp_loading_h3").remove();
                    }


                    $.each(Object.keys(resp), function(i, state)
                    {
                        var state_container = $("<div></div>").addClass("svy_state_container");
                        $("<h3></h3>").text(state_map[state]).appendTo(state_container);

                        var customers = resp[state];
                        $.each(customers, function(k, customer)
                        {
                            var cust_div = $("<div></div>").addClass("team_customer_div").attr("id", "team_customer_" + customer.identifier);

                            $("<p></p>").addClass("team_customer_name").text(customer.name)
                            .appendTo(cust_div);

                            cust_div.click(function(ev)
                            {
                                showTeamDetails(customer, funds);
                            });
                            cust_div.appendTo(state_container);
                        });

                        state_container.appendTo(main_div);
                    });

                    $.each([spacer, main_div, spacer_clone], function(i, e)
                    {
                        e.appendTo(app_area);
                    });
                });
            }
            function showTeamDetails(customer, funds)
            {
                var funds_map = {};
                $.each(funds, function(i, fund)
                {
                    funds_map[fund.value] = fund.value_friendly;
                });
                $(".deal_details").remove();
                var deal_details_wrapper_div = $("<div></div>").addClass("deal_details");

                var display_items =
                [
                    {
                        "label": "Customer Address",
                        "value": function(obj)
                        {
                            return obj.address + "<br />&nbsp;&nbsp;&nbsp;&nbsp;" + obj.city + ", " + obj.customer_state + "<br />&nbsp;&nbsp;&nbsp;&nbsp;" + obj.postal;
                        }
                    },
                    {
                        "label": "Customer Phone",
                        "value": function(obj)
                        {
                            return "<a href='tel:" + obj.customer_phone + "'>" + obj.customer_phone_formatted + "</a>";
                        }
                    },
                    {
                        "label": "Rep Name",
                        "value": function(obj)
                        {
                            return obj.rep.name;
                        }
                    },
                    {
                        "label": "Rep Phone",
                        "value": function(obj)
                        {
                            return "<a href='tel:" + obj.rep.phone + "'>" + obj.rep.phone_formatted + "</a>";
                        }
                    },
                    {
                        "label": "System Size",
                        "value": function(obj)
                        {
                            return obj.system_size
                        }
                    },
                    {
                        "label": "Fund",
                        "value": function(obj)
                        {
                            return funds_map[obj.fund];
                        }
                    }
                ];

                var table = $("<table></table>");
                var tbody = $("<tbody></tbody>");
                var tr = $("<tr></tr>");
                $.each(display_items, function(i, item)
                {
                    $("<td></td>")
                    .append
                    (
                        $("<b></b>").text(item.label)
                    ).appendTo(tr);
                });
                tr.appendTo(tbody);

                var tr2 = $("<tr></tr>");
                $.each(display_items, function(i, item)
                {
                    $("<td></td>").html(item.value(customer)).appendTo(tr2);
                });
                tr2.appendTo(tbody);
                tbody.appendTo(table);

                var display_items2 =
                [
                    {
                        "label": "NOC Date",
                        "value": function(obj)
                        {
                            if(obj.NOC === null)
                            {
                                return "Unavailable";
                            }
                            return obj.NOC;
                        }
                    },
                    {
                        "label": "Plan Set Received",
                        "value": function(obj)
                        {
                            if(typeof(obj.extra_info["check_plan_set_received"]) + '' !== "undefined")
                            {
                                return obj.extra_info["check_plan_set_received"];
                            }
                            return "Unavailable";
                        }
                    },
                    {
                        "label": "Scheduled Install Date",
                        "value": function(obj)
                        {
                            if(typeof(obj.extra_info["check_installation_date"]) + '' !== "undefined")
                            {
                                return obj.extra_info["check_installation_date"];
                            }
                            return "Unavailable";
                        },
                        "button":
                        {
                            "text": "Update",
                            "action": function()
                            {
                                var html = $("<div></div>");
                                html.append($("<p></p>").text("New Installation Date:"));
                                $("<div></div>").attr("id", "dtinstalldate").addClass("input-append-date").attr("data-date", moment().format("MM/DD/YYYY")).attr("data-date-format", "mm/dd/yyyy")
                                .append
                                (
                                    $("<input />").attr("value", moment().format("MM/DD/YYYY")).attr("type", "text").attr("size", "16")
                                )
                                .append
                                (
                                    $("<span></span>").addClass("add-on")
                                    .append
                                    (
                                        $("<i></i>").addClass("icon-th")
                                    )
                                ).appendTo(html);
                                BootstrapDialog.show
                                (
                                    {
                                        "title": "Change Installation Date",
                                        "message": html.html(),
                                        "buttons":
                                        [
                                            {
                                                "label": "Cancel",
                                                "cssClass": "btn-danger",
                                                "action": function(dialog)
                                                {
                                                    dialog.close();
                                                }
                                            },
                                            {
                                                "label": "Update",
                                                "cssClass": "btn-primary",
                                                "action": function(dialog)
                                                {
                                                    var vals = $("#dtinstalldate").find("input").first().val().split("/");
                                                    var new_dt = vals[2] + "-" + vals[0] + "-" + vals[1];
                                                    $.post("./data", {"fn": "pp_checkoff", "key": "check_installation_date", "checked": "1", "dt": new_dt, "identifier": packet.submission_identifier}).done(function(resp2)
                                                    {
                                                        packet.extra_info["check_installation_date"] = new_dt;
                                                        $(".deal_details").find("> table").eq(1).find("tr").eq(1).find("td").eq(2).text(vals.join("/"));
                                                        dialog.close();
                                                    });
                                                }
                                            }
                                        ],
                                        "onshown": function(dialog)
                                        {
                                            $("#dtinstalldate").find("input").datepicker(
                                            {
                                                format: "mm/dd/yyyy",
                                                autoClose: true
                                            });
                                        }
                                    }
                                );
                            }
                        }
                    },
                    {
                        "label": "Estimated KWH Production",
                        "value": function(obj)
                        {
                            if(typeof(obj.proposal["year_one_production"]) + '' !== "undefined")
                            {
                                return (parseFloat(obj.proposal["year_one_production"])).toFixed(2);
                            }
                            return "Unavailable";
                        }
                    },
                    {
                        "label": "Utility Number",
                        "value": function(obj)
                        {
                            return obj.utility_number;
                        }
                    },
                    {
                        "label": "Notes",
                        "value": function(obj)
                        {
                            return "<span class='symbola teamnotes'>&#128210;</span>"
                        }
                    }
                ];
                var table2 = $("<table></table>");
                var tbody2 = $("<tbody></tbody>");
                var tr3 = $("<tr></tr>");
                $.each(display_items2, function(i, item)
                {
                    $("<td></td>")
                    .append
                    (
                        $("<b></b>").text(item.label)
                    ).appendTo(tr3);
                });

                var tr4 = $("<tr></tr>");
                $.each(display_items2, function(i, item)
                {
                    var tee_d = $("<td></td>")
                    .append
                    (
                        $("<b></b>").html(item.value(customer))
                    );

                    if(typeof(item["button"]) + '' !== "undefined")
                    {
                        tee_d
                        .append
                        (
                            $("<br />")
                        )
                        .append
                        (
                            $("<button></button>").addClass("update_date_btn").addClass("btn").addClass("btn-primary").text(item.button.text).click(function(ev)
                            {
                                ev.stopPropagation();
                                item.button.action();
                            })
                        )
                    }
                    tee_d.appendTo(tr4)
                });
                tr3.appendTo(tbody2);
                tr4.appendTo(tbody2);
                tbody2.appendTo(table2);

                table.appendTo(deal_details_wrapper_div);
                table2.appendTo(deal_details_wrapper_div);
                deal_details_wrapper_div.find(".teamnotes").click(function()
                {
                   showFilteredCustomerNotes({"identifier": customer.identifier, "name": customer.name, "notes": customer.notes});
                });

                var checklist_div = $("<div></div>").addClass("pp_checklist");
                var ol = $("<ol></ol>");
                var checklist_info =
                {
                    "check_plan_set_sent_to_contractor": {"name": "Plan Set Sent to Contractor", "value": "check_plan_set_sent_to_contractor"},
                    "check_plan_set_sent_to_distributor": {"name": "Plan Set Sent to Distributor (CC warehouse manager notifying him that an order will follow shortly)", "value": "check_plan_set_sent_to_distributor"},
                    "check_plan_set_sent_to_placard_company": {"name": "Plan Set Sent to Placard Company", "value": "check_plan_set_sent_to_placard_company"}
                };

                if(customer.extra_info["panel_work_required"] === "1" || customer.extra_info["try_intercept"] === "1" || customer.extra_info["mpu_needed"] === "1")
                {
                    checklist_info["check_plan_set_sent_to_electrician"] = {"name": "Plan Set Sent to Electrician (Electrician Unknown)", "value": "check_plan_set_sent_to_electrician"};
                    if(typeof(customer.extra_info.electrician) + '' !== "undefined")
                    {
                        checklist_info["check_plan_set_sent_to_electrician"]["name"] = "Plan Set Sent to Electrician (" + customer.extra_info.electrician.name + ")";
                    }
                }
                else
                {
                    checklist_info["check_plan_set_sent_to_electrician"] = {"name": "No Panel Work Needed", "value": "check_plan_set_sent_to_electrician"};
                }
                checklist_info["check_plan_set_sent_to_make_stickers"] = {"name": "Plan Set Sent to Make Stickers", "value": "check_plan_set_sent_to_make_stickers"};

                var packet = customer;

                $.each(Object.keys(checklist_info), function(k, key)
                {
                    var ol2 = null;
                    var li = $("<li></li>");
                    $("<span></span>").addClass("pp_checkoff_description").text(checklist_info[key]["name"]).appendTo(li);
                    var input = $("<input />").attr("type", "checkbox").addClass("cb_" + key);

                    //console.log(
                    if(checklist_info[key]["name"] === "No Panel Work Needed")
                    {
                        input.attr("checked", "checked").attr("disabled", "disabled");
                    }
                    else if(typeof(packet.extra_info[key]) + '' !== "undefined" && typeof(checklist_info[key]["substeps"]) + '' === "undefined")
                    {
                        input.attr("checked", "checked");
                        $("<span></span>").addClass("pp_checkoff_dt").text(moment(packet.extra_info[key], "YYYY-MM-DD").format("MM/DD/YYYY")).appendTo(li);
                    }
                    input.click(function(ev)
                    {
                        ev.stopPropagation();
                    });
                    input.on("change", function(ev)
                    {
                        if($(this).attr("disabled") + '' === "disabled")
                        {
                            return;
                        }
                        var that = this;
                        var checked = ($(that)[0].checked * 1) + '';
                        var checkbox = $(that);

                        var checkoff_fn = function(packet, checkbox, checked)
                        {
                            $.post("./data", {"fn": "pp_checkoff", "key": key, "checked": checked, "dt": moment().format("YYYY-MM-DD"), "identifier": packet.submission_identifier}).done(function(resp2)
                            {
                                checkbox.removeAttr("style");
                                if(checkbox[0].checked)
                                {
                                    $("<span></span>").addClass("pp_checkoff_dt").text(moment().format("MM/DD/YYYY")).appendTo(checkbox.parent());
                                }
                                else
                                {
                                    checkbox.parent().find(".pp_checkoff_dt").remove();
                                }

                            });
                        };

                        checkoff_fn(packet, checkbox, checked);
                        packet.extra_info[key] = moment().format("MM/DD/YYYY");
                    });
                    input.prependTo(li);
                    li.appendTo(ol);
                });
                ol.appendTo(checklist_div);

                $("<h5></h5>").text("TEAM Checklist:").appendTo(deal_details_wrapper_div);
                checklist_div.appendTo(deal_details_wrapper_div);

                deal_details_wrapper_div.appendTo($("#team_customer_" + customer.identifier));
            }
            function showIncompleteProposals()
            {
                var app_area = $("#app_area");

                var spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");
                var main_div = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10");
                var spacer_clone = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");

                $("<h3></h3>").addClass("tmp_loading_h3").text("Loading...").appendTo(app_area);

                $.post("./data", {"fn": "query_incomplete_proposals"}).done(function(resp)
                {
                    $(".tmp_loading_h3").remove();
                    $.each(resp.results, function(i, result)
                    {
                        var result_div = $("<div></div>").addClass("incomplete_proposal_result");
                        result_div.text(result.name).addClass("i_p_" + result.identifier);
                        result_div.click(function()
                        {
                            $(".i_p_reason").remove();
                            $("<p></p>").html("Reason:<br />" + result.reason).addClass("i_p_reason").appendTo($(this));
                        });

                        result_div.appendTo(main_div);
                    });
                });

                $.each([spacer, main_div, spacer_clone], function(i, e)
                {
                    $(e).appendTo(app_area);
                });
            }
            function showPanelWorkView(electricians)
            {
                var app_area = $("#app_area");
                if(app_area.find("h3").size() === 0)
                {
                    $("<h3></3>").text("Loading...").appendTo(app_area);
                }

                if(typeof(electricians) + '' === "undefined")
                {
                    $.post("./data", {"fn": "read_setting", "value": "electricians"}).done(function(r)
                    {
                        showPanelWorkView(r.data);
                    });
                    return;
                }

                $.post("./data", {"fn": "get_panel_work_view"}).done(function(resp)
                {
                    app_area.find("h3").text("Panel Work Customers");
                    $("<hr />").appendTo(app_area);

                    var elecs = resp;
                    $.each(elecs, function(i, e)
                    {
                        var e_customers_div = $("<div></div>").css("margin-top", "1.25em");
                        $.each(e.customers, function(k, customer)
                        {
                            $("<div></div>").addClass("e_customer")
                            .append
                            (
                                $("<span></span>").text(customer.name)
                                .click(function()
                                {
                                    newPanelWorkCustomerDetails($(this).parent(), customer, electricians);
                                })
                            )
                            .appendTo(e_customers_div);
                        });
                        $("<div></div>").addClass("electrician_name").text(e.name)
                        .append
                        (
                            $("<span></span>").addClass("e_phone").text(e.phone)
                        )
                        .append
                        (
                            $("<span></span>").addClass("e_email").text(e.email)
                        )
                        .append
                        (
                            e_customers_div
                        )
                        .appendTo(app_area);
                    });
                });
            }
            function newPanelWorkCustomerDetails(jqDiv, customer, electricians)
            {
                $(".new_pwork_cust_details").remove();
                var display_items =
                [
                    {
                        "label": "Customer Name",
                        "cell": function(obj)
                        {
                            return $("<span></span>").text(obj.name);
                        }
                    },
                    {
                        "label": "Address",
                        "cell": function(obj)
                        {
                            return $("<p></p>").html(obj.address + "<br />" + obj.city + ", " + obj.state + "<br />" + obj.postal);
                        }
                    },
                    {
                        "label": "Phone",
                        "cell": function(obj)
                        {
                            return $("<span></span>").text(obj.phone);
                        }
                    },
                    {
                        "label": "Utility Number",
                        "cell": function(obj)
                        {
                            return $("<span></span>").text(obj.utility_number);
                        }
                    },
                    {
                        "label": "Notes",
                        "cell": function(obj)
                        {
                            return
                            $("<span class='symbola'>&#128210;</span>")

                        }
                    }
                ];

                var table = $("<table></table>");
                table.addClass("qqq_table");
                var tbody = $("<tbody></tbody>");
                var tr = $("<tr></tr>");

                $.each(display_items, function(i, e)
                {
                    tr.append($("<td></td>").append($("<b></b>").text(e.label)));
                });
                var tr2 = $("<tr></tr>");
                $.each(display_items, function(i, e)
                {

                    if(e.label !== "Notes")
                    {
                        tr2.append
                        (
                            $("<td></td>")
                            .append
                            (
                                e.cell(customer)
                            )
                        );
                    }
                    else
                    {
                        tr2.append
                        (
                            $("<td></td>")
                            .append
                            (
                                $("<span class='symbola'></span>")
                                .html("&#128210")
                                .click(function()
                                {
                                    showFilteredCustomerNotes(customer);
                                })
                            )
                        );
                    }
                });

                tr.appendTo(tbody);
                tr2.appendTo(tbody);
                tbody.appendTo(table);

                var main_div = $("<div></div>").addClass("new_pwork_cust_details");
                table.appendTo(main_div);
                $("<hr />").appendTo(main_div);
                $("<h4></h4>").text("Ratings:").appendTo(main_div);
                $("<p></p>").css("font-weight", "bold").text("BUSS Rating:").appendTo(main_div);
                $("<p></p>").text(customer.extra_info["new_buss_ratings"]).appendTo(main_div);
                $("<p></p>").css("font-weight", "bold").text("Main Breaker Rating:").appendTo(main_div);
                $("<p></p>").text(customer.extra_info["new_breaker_amps"]).appendTo(main_div);
                $("<p></p>").css("font-weight", "bold").text("Solar Breaker:").appendTo(main_div);
                $("<p></p>").text(customer.extra_info["solar_breaker"]).appendTo(main_div);
                $("<hr />").appendTo(main_div);
                $("<h4></h4>").text("Checklist:").appendTo(main_div);

                if(customer.extra_info["try_intercept"] === "1" && customer.state === "UT")
                {
                    customer["account_type"] = "intercept";
                }
                else if(customer.extra_info["try_intercept"] === "1" && customer.state === "CA")
                {
                    customer["account_type"] = "intercept_verification";
                }
                else if(customer.extra_info["mpu_needed"] === "1")
                {
                    customer["account_type"] = "mpu";
                }
                else if(customer.extra_info["panel_work_required"] === "1")
                {
                    if(customer.extra_info["panel_work_type"] === "breaker_work")
                    {
                        customer["account_type"] = "breaker_work";
                    }
                    else if(customer.extra_info["panel_work_type"] === "move_main")
                    {
                        customer["account_type"] = "move_main";
                    }
                    else if(customer.extra_info["panel_work_type"] === "derate")
                    {
                        customer["account_type"] = "derate";
                    }
                }

                var checkoff_items =
                {
                    "intercept":
                    [
                        {
                            "label": "Scheduled With Utility",
                            "key": "echeck_intercept_scheduled_with_utility",
                            "type": "standard_checkbox"
                        },
                        {
                            "label": "Scheduled for Date",
                            "key": "echeck_intercept_scheduled_for_date",
                            "type": "standard_checkbox"
                        },
                        {
                            "label": "Completed",
                            "type": "standard_checkbox",
                            "key": "echeck_intercept_complete"
                        }
                    ],
                    "intercept_verification":
                    [
                        {
                            "label": "Contact Utility to Determine Feasibility",
                            "key": "echeck_intercept_verification_contact_utility",
                            "type": "show_date"
                        },
                        {
                            "label": "Determined Feasible, All Complete",
                            "key": "echeck_intercept_verification_complete",
                            "type": "standard_checkbox"
                        },
                        {
                            "label": "Not Feasible, Reassignment as MPU Required",
                            "key": "echeck_intercept_verification_botched",
                            "type": "reassignment"
                        }
                    ],
                    "mpu":
                    [
                        {
                            "label": "Contact Utility for LR Removal",
                            "key": "echeck_mpu_contact_utility_lr_removal",
                            "type": "standard_checkbox"
                        },
                        {
                            "label": "Scheduled For Date (1)",
                            "key": "echeck_mpu_scheduledfor_date1",
                            "type": "date_choice"
                        },
                        {
                            "label": "Contact Utility for Power Disconnect/Reconnect Scheduling",
                            "key": "echeck_mpu_disconnect_reconnect",
                            "type": "standard_checkbox"
                        },
                        {
                            "label": "Scheduled for Date (2)",
                            "key": "echeck_mpu_scheduledfor_date2",
                            "type": "date_choice"
                        },
                        {
                            "label": "Scheduled w/Crew",
                            "key": "echeck_mpu_crew_scheduled",
                            "type": "date_choice"
                        },
                        {
                            "label": "Scheduled for Date (3)",
                            "key": "echeck_mpu_scheduledfor_date3",
                            "type": "date_choice"
                        },
                        {
                            "label": "Work Completed",
                            "key": "echeck_mpu_work_completed",
                            "type": "show_date"
                        },
                        {
                            "label": "Utility Reconnect",
                            "key": "echeck_mpu_reconnect",
                            "type": "show_date"
                        }
                    ],
                    "breaker_work":
                    [
                    ],
                    "move_main":
                    [
                        {
                            "label": "Contact Utility for LR Removal",
                            "key": "echeck_move_main_contact_utility_lr",
                            "type": "standard_checkbox"
                        },
                        {
                            "label": "Done by Date",
                            "key": "echeck_move_main_doneby_date",
                            "type": "date_choice"
                        },
                        {
                            "label": "Schedule w/Crew",
                            "key": "echeck_move_main_crew_schedule",
                            "type": "standard_checkbox"
                        },
                        {
                            "label": "Scheduled for Date",
                            "key": "echeck_move_main_scheduled_for",
                            "type": "date_choice"
                        },
                        {
                            "label": "Work Completed",
                            "key": "echeck_move_main_completed",
                            "type": "show_date"
                        },
                        {
                            "label": "Contact Utility to Re-Lock LR",
                            "key": "echeck_move_main_contact_utility_lr2",
                            "type": "show_date"
                        }
                    ]
                };
                checkoff_items["derate"] = $.parseJSON(JSON.stringify(checkoff_items["move_main"]));
                $.each(checkoff_items["derate"], function(ii, ee)
                {
                    ee.key = ee.key.replace("echeck_move_main", "echeck_derate");
                });

                var checkoff_div = $("<div></div>").addClass("qqq_checkoff");
                var target_items = checkoff_items[customer["account_type"]];
                $.each(target_items, function(i, item)
                {
                    var check_div = $("<div></div>").css("position", "relative");
                    $("<p></p>").text(item.label).appendTo(check_div);
                    var input = $("<input />").attr("type", "checkbox");
                    var date_span = null;
                    if(customer.extra_info[item.key] + '' !== "undefined")
                    {
                        input.attr("checked", "checked");
                        if(item.type === "show_date" || item.type === "date_choice")
                        {
                            date_span = $("<span></span>").addClass("echeck_dt").text(moment(customer.extra_info[item.key], "YYYY-MM-DD").format("MM/DD/YYYY"));
                        }
                    }
                    input.change(function(ev)
                    {
                        var that = $(this);
                        ev.stopPropagation();
                        switch(item.type)
                        {
                            case "standard_checkbox":
                                if($(this)[0].checked)
                                {
                                    customer.extra_info[item.key] = moment().format("YYYY-MM-DD");
                                    $.post("./data", {"fn": "electrical_checkoff", "key": item.key, "identifier": customer.identifier, "value": moment().format("YYYY-MM-DD")});
                                }
                                else
                                {
                                    $.post("./data", {"fn": "electrical_checkoff_remove", "key": item.key, "identifier": customer.identifier});
                                }
                                break;

                            case "show_date":
                                if($(this)[0].checked)
                                {
                                    customer.extra_info[item.key] = moment().format("YYYY-MM-DD");
                                    $.post("./data", {"fn": "electrical_checkoff", "key": item.key, "identifier": customer.identifier, "value": moment().format("YYYY-MM-DD")});
                                    that.closest(".e_customer").find("> span").first().trigger("click");
                                }
                                else
                                {
                                    that.closest("div").find(".echeck_dt").remove();
                                    delete customer.extra_info[item.key];
                                    $.post("./data", {"fn": "electrical_checkoff_remove", "key": item.key, "identifier": customer.identifier});
                                }
                                break;

                            case "reassignment":
                                if($(this)[0].checked)
                                {
                                    var that = $(this);
                                    that[0].checked = false;
                                    var html = $("<select></select>");
                                    $("<select></select>").attr("id", "electrician_designation")
                                    .append
                                    (
                                        $("<option value='n/a'>Choose an Electrician</option>")
                                    )
                                    .appendTo(html);
                                    $.each(electricians, function(i, electrician)
                                    {
                                        $("<option></option>").attr("value", electrician.name).text(electrician.name).appendTo(html.find("select"));
                                    });

                                    BootstrapDialog.show
                                    (
                                        {
                                            "title": "Reassign the Electrician (Job will become MPU)",
                                            "message": html.html(),
                                            "buttons":
                                            [
                                                {
                                                    "label": "Cancel",
                                                    "cssClass": "btn-danger",
                                                    "action": function(dialog)
                                                    {
                                                        dialog.close();
                                                        that[0].checked = false;
                                                    }
                                                },
                                                {
                                                    "label": "Reassign",
                                                    "cssClass": "btn-primary",
                                                    "action": function(dialog)
                                                    {
                                                        if($("#electrician_designation").val() !== "n/a")
                                                        {
                                                            $.post("./data", {"fn": "reassign_as_mpu", "identifier": customer.identifier, "electrician": $("#electrician_designation").val()}).done(function(resp)
                                                            {
                                                                dialog.close();
                                                                $("#pwork_btn").trigger("click");
                                                            });
                                                        }

                                                    }
                                                }
                                            ]
                                        }
                                    );
                                }
                                break;

                            case "date_choice":
                                if(that[0].checked)
                                {
                                    that[0].checked = false;
                                    var html = $("<div></div>");
                                    html.append
                                    (
                                        $("<div></div>")
                                        .addClass("input-append-date")
                                        .attr("data-date", moment().format("MM-DD-YYYY"))
                                        .attr("data-date-format", "dd-mm-yyyy")
                                        .append
                                        (
                                            $("<input />")
                                            .addClass("echeck_pickadate")
                                            .attr("size", "16")
                                            .attr("type", "text")
                                            .attr("value", moment().format("MM-DD-YYYY"))
                                        )
                                        .append
                                        (
                                            $("<span></span>")
                                            .addClass("add-on")
                                            .append
                                            (
                                                $("<i></i>")
                                                .addClass("icon-th")
                                            )
                                        )
                                    );
                                    BootstrapDialog.show
                                    (
                                        {
                                            "title": "Choose a Date",
                                            "message": "<br />" + html.html() + "<br />",
                                            "buttons":
                                            [
                                                {
                                                    "label": "Cancel",
                                                    "cssClass": "btn-danger",
                                                    "action": function(dialog)
                                                    {
                                                        dialog.close();
                                                    }
                                                },
                                                {
                                                    "label": "Confirm Date",
                                                    "cssClass": "btn-primary",
                                                    "action": function(dialog)
                                                    {
                                                        var mom = moment($(".echeck_pickadate").val(), "MM-DD-YYYY");
                                                        customer.extra_info[item.key] = mom.format("YYYY-MM-DD");
                                                        $.post("./data", {"fn": "electrical_checkoff", "key": item.key, "identifier": customer.identifier, "value": mom.format("YYYY-MM-DD")});
                                                        that.closest(".e_customer").find("> span").first().trigger("click");
                                                        dialog.close();
                                                    }
                                                }
                                            ],
                                            "onshown": function(dialog)
                                            {
                                                $(".echeck_pickadate").datepicker
                                                (
                                                    {
                                                        "format": "mm-dd-yyyy",
                                                        "autoClose": true
                                                    }
                                                )
                                            }
                                        }
                                    );
                                }
                                else
                                {
                                    that.closest("div").find(".echeck_dt").remove();
                                    delete customer.extra_info[item.key];
                                    $.post("./data", {"fn": "electrical_checkoff_remove", "key": item.key, "identifier": customer.identifier});
                                }
                                break;
                            default:
                                break;
                        }
                    });
                    input.appendTo(check_div);
                    if(date_span !== null)
                    {
                        date_span.appendTo(check_div);
                    }
                    check_div.appendTo(checkoff_div);
                });
                checkoff_div.appendTo(main_div);

                main_div.appendTo(jqDiv);
            }
            function slideMaker()
            {
            	var app_area = $("#app_area");
            	$("<h3></h3>").text("Loading...").appendTo(app_area);
            	$.post("./data", {"fn": "enumerate_slides"}).done(function(resp)
            	{
            		app_area.find("h3").remove();
            		$("<button></button>").addClass("btn").addClass("btn-success").text("+ New Presentation")
            		.click(function()
            		{
            			addNewSlide(resp.functions);
            		}).appendTo(app_area);
            		$("<br />").appendTo(app_area);
            		$("<h2></h2>").text("Presentations:").appendTo(app_area);
            		$("<hr />").appendTo(app_area);
            		$.each(resp.slides, function(i, slide)
            		{
            			$("<div></div>").addClass("slide_set").attr("id", "slide_set_" + slide.identifier)
            			.append
            			(
            				$("<span></span>").addClass("slide_set_name").text(slide.name)
            			)
                        .append
                        (
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove").click(function()
                            {
                            if(window.confirm("Are you sure you would like to delete the presentation?"))
                            {
                                var that = $(this);
                                $.post("./data", {"fn": "delete_slide", "identifier": slide.identifier}).done(function(r)
                                {
                                that.parent().remove();
                                });
                            }
                            })
                        )
                        .append
                        (
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-duplicate").click(function()
                            {
                                showCopyDialogForSlide(slide);
                            })
                        )
            			.append
            			(
            				$("<span></span>").addClass("glyphicon").addClass("glyphicon-cog").click(function()
            				{
            					editSlideOptions(slide);
            				})
            			)
            			.append
            			(
            				$("<span></span>").addClass("glyphicon").addClass("glyphicon-pencil").click(function()
            				{
            					renameSlide(slide);
            				})
            			)
            			.append
            			(
            				$("<span></span>").addClass("symbola").addClass("symbola-tv").html("&#128250;").click(function()
            				{
            					editSlidesForSlide(slide, resp.functions);
            				})
            			)
                        .append
                        (
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-play-circle").click(function()
                            {
                                previewSlidesPresentation(slide);
                            })
                        )
            			.appendTo(app_area);
            		});
            	});
            }
            function previewSlidesPresentation(slide, entity_type, result_set, identifier)
            {
                if(typeof(entity_type) + '' === "undefined")
                {
                    BootstrapDialog.show
                    (
                        {
                            "title": "Choose a Presentation Entity Type",
                            "message": "<br /><select id='preview_presentation_entity_type'><option value='customer'>Customer</option><option value='rep'>Field App User</option></select><br />",
                            "buttons":
                            [
                                {
                                    "label": "Cancel",
                                    "cssClass": "btn-danger",
                                    "action": function(dialog)
                                    {
                                        dialog.close();
                                    }
                                },
                                {
                                    "label": "Continue",
                                    "cssClass": "btn-primary",
                                    "action": function(dialog)
                                    {
                                        dialog.close();
                                        previewSlidesPresentation(slide, $("#preview_presentation_entity_type").val());
                                    }
                                }
                            ]
                        }
                    );
                    return;
                }
                if(typeof(result_set) + '' === "undefined")
                {
                    BootstrapDialog.show
                    (
                        {
                            "title": "Enter a search query",
                            "message": "<br /><input type='text' id='slides_preview_search_query' placeholder='Search by name...' /><br />",
                            "buttons":
                            [
                                {
                                    "label": "Go Back",
                                    "cssClass": "btn-danger",
                                    "action": function(dialog)
                                    {
                                        dialog.close();
                                        previewSlidesPresentation(slide);
                                    }
                                },
                                {
                                    "label": "Search",
                                    "cssClass": "btn-primary",
                                    "action": function(dialog)
                                    {
                                        $(".bootstrap-dialog-footer").find(".btn-primary").css("opacity", "0.2").text("Searching...");
                                        $.post("./data", {"fn": "slides_presentation_search", "entity_type": entity_type, "query": $.trim($("#slides_preview_search_query").val())}, function(r)
                                        {
                                            dialog.close();
                                            previewSlidesPresentation(slide, entity_type, r.results)
                                        });
                                    }
                                }
                            ]
                        }
                    );
                    return;
                }
                if(typeof(identifier) + '' === "undefined")
                {
                    var html = $("<div></div>");
                    $("<br />").appendTo(html);
                    if(result_set.length > 0)
                    {
                        $.each(result_set, function(i, result)
                        {
                            $("<p></p>").addClass("slide_preview_search_result").attr("data-identifier", result.identifier).text(result.name).appendTo(html);
                        });
                    }
                    else
                    {
                        $("<h2></h2>").text("No results found").appendTo(html);
                    }
                    $("<br />").appendTo(html);
                    $("<br />").appendTo(html);

                    BootstrapDialog.show
                    (
                        {
                            "title": "Choose (click) on a result",
                            "message": html.html(),
                            "buttons":
                            [
                                {
                                    "label": "Back to search",
                                    "cssClass": "btn-danger",
                                    "action": function(dialog)
                                    {
                                        previewSlidesPresentation(slide, entity_type);
                                    }
                                }
                            ],
                            "onshown": function(d)
                            {
                                $(".bootstrap-dialog-body").find("p").each(function(i, e)
                                {
                                    $(e).click(function()
                                    {
                                        if(window.confirm("Preview presentation with " + $(e).text() + " as the selected entity?"))
                                        {
                                            d.close();
                                            previewSlidesPresentation(slide, entity_type, result_set, $(e).data("identifier"));
                                        }
                                    });
                                });
                            }
                        }
                    );
                    return;
                }
                BootstrapDialog.show
                (
                    {
                        "title": "Here's the link",
                        "message": "<br /><p><a target='_blank' href='/present/" + slide.identifier + "/" + entity_type + "/" + identifier + "/'>Prevew Link</a></p><br />",
                        "buttons":
                        [
                            {
                                "label": "Close",
                                "cssClass": "btn-danger",
                                "action": function(d)
                                {
                                    d.close();
                                }
                            }
                        ]
                    }
                );
            }
            function renameSlide(slide)
            {
            	var span = $("#slide_set_" + slide.identifier).find(".slide_set_name");
            	span.attr("contenteditable", "true")
            	.on("blur", function()
            	{
            		var txt = $(this).text();
            		if($.trim(txt).length > 0)
            		{
            			$.post("./data", {"fn": "rename_slide", "identifier": slide.identifier, "name": $.trim(txt)}).done(function(r)
            			{
            				slide.name = $.trim(txt);
            				span.off("blur");
            				span.removeAttr("contenteditable");
            				span[0].blur();
            			});
            		}
            	});
            	span[0].focus();
            }
            function editSlideOptions(slide, markets)
            {
                if(typeof(markets) + '' === "undefined")
                {
                    $.post("./data", {"fn": "list_markets"}).done(function(r)
                    {
                        editSlideOptions(slide, r.markets);
                    });
                    return;
                }   
            	var html = $("<div></div>");
                var curr_bg = rgb2hex(slide.options.background).toUpperCase();
                var curr_clr = rgb2hex(slide.options["color"]).toUpperCase();
                
            	html.append
            	(
            		$("<p></p>").text("Default Slide Background Color:")
            	);
            	html.append
            	(
            		$("<input />").attr("type", "color").attr("value", curr_bg).addClass("edit_slide_bg_color")
            	);
            	html.append
            	(
            		$("<p></p>").text("Default Slide Text Color:")
            	)
            	html.append
            	(
            		$("<input />").attr("type", "color").attr("value", curr_clr).addClass("edit_slide_txt_color")
            	);
                html.append
                (
                    $("<hr />")
                );
                html.append
                (
                	$("<p></p>").text("Applicable Offices")
                );
                html.append
                (
                	$("<ul></ul>").attr("id", "applicable_offices_ul")
                );
                $.each(markets, function(i, market)
                {
                	var inp = $("<input />").attr("type", "checkbox");
                	if(Object.keys(slide.applicable_offices).indexOf(market.identifier) > -1)
                	{
                		inp.attr("checked", "checked");
                	}
                	$("<li></li>").attr("data-identifier", market.identifier).text(market.name)
                	.prepend
                	(
                		inp
                	)
                	.appendTo(html.find("ul").first());
                });
                html.append
                (
                    $("<p></p>").css("clear", "both").css("position", "relative").css("top", "2em").css("margin-bottom", "2em").text("Youtube Assets:")
                )
                html.append
                (
                    $("<hr />")
                );
                $("<div></div>").addClass("youtube_container").appendTo(html);
                var ol = $("<ol></ol>");
                if(Object.keys(slide.options).indexOf("youtube_assets") > -1)
                {
                    $.each(slide.options["youtube_assets"], function(i, e)
                    {
                        $("<li></li>").text(e).appendTo(ol);
                    });
                    
                }
                else
                {
                    slide.options["youtube_assets"] = [];
                }
                ol.appendTo(html);
                $("<span></span>").addClass("label").addClass("label-success").text("Add Youtube Asset").appendTo(html);
                $("<p></p>").text("").appendTo(html);
                $("<p></p>").text("").appendTo(html);
                $("<p></p>").css("margin-bottom", "0em").text("Local Functions").appendTo(html);
                $("<hr />").css("margin-top", "0em").appendTo(html);
                $.each(slide.options["local_functions"], function(ii, lfn)
                {
                	$("<div></div>").addClass("local_fn_listing").text("Local Function #" + ((ii + 1) + ''))
                	.append
                	(
                		$("<span></span>").addClass("glyphicon").addClass("glyphicon-pencil").addClass("lfn_pencil")                		
                	)
                	.appendTo(html);
                });
                $("<p></p>").text(" ").appendTo(html);
                $("<span></span>").addClass("label").addClass("label-success").text("Add Local Function").appendTo(html);
                $("<p></p>").text("").appendTo(html);
                $("<p></p>").text("").appendTo(html);
                $("<p></p>").css("margin-bottom", "0em").text("Web Assets").appendTo(html);
                $("<hr />").css("margin-top", "0em").appendTo(html);
                var assets_table = $("<table></table>").addClass("web_assets_tbl");
                var assets_tbody = $("<tbody></tbody>");
                $("<tr></tr>")
                .append
                (
                	$("<th></th>").text("Name")
                )
                .append
                (
                	$("<th></th>").text("URL")
                )
                .append
                (
                	$("<th></th>").text("Delete")
                )
                .appendTo(assets_tbody);
                
                $.each(slide.options["web_assets"], function(ii, asset)
                {
                	$("<tr></tr>")
                	.append
                	(
                		$("<td></td>").text(asset.name)
                	)
                	.append
                	(
                		$("<td></td>")
                		.append
                		(
                			$("<a></a>").text("Link").attr("href", asset.url)
                		)
                	)
                	.append
                	(
                		$("<td></td>")
                		.append
                		(
                			$("<span></span>").addClass("glyphicon").addClass("glyphicon-remove").addClass("drop-web-asset")
                		)
                	)
                	.appendTo(assets_tbody);
                });
                assets_tbody.appendTo(assets_table);
                assets_table.appendTo(html);
                $("<span></span>").addClass("label").addClass("label-success").text("Add Web Asset").appendTo(html);

            	BootstrapDialog.show
            	(
            		{
            			"title": "Change Options/Defaults for " + slide.name,
            			"message": html.html(),
            			"buttons":
            			[
            				{
            					"label": "Cancel",
            					"cssClass": "btn-danger",
            					"action": function(d)
            					{
            						d.close();
            					}
            				},
            				{
            					"label": "Save",
            					"cssClass": "btn-primary",
            					"action": function(d)
            					{
            						var applicable_offices = [];
            						$(".bootstrap-dialog-body").find("ul").find("li").each(function(iii, eee)
            						{
            							if($(eee).find("input")[0].checked)
            							{
            								slide.applicable_offices[$(eee).data("identifier")] = "1";
            							}
            						});
                                    var bg = coerceToRGBA($(".edit_slide_bg_color").val());
                                    var color = coerceToRGBA($(".edit_slide_txt_color").val());
                                    $.post("./data", {"fn": "update_slide_default_options", "background": bg, "color": color, "identifier": slide.identifier, "youtube_assets": JSON.stringify(slide.options["youtube_assets"]), "applicable_offices": JSON.stringify(slide.applicable_offices)}).done(function(r)
                                    {
                                        slide.options["background"] = bg;
                                        slide.options["color"] = color;
                                        d.close();
                                    });
            					}
            				}
            			],
                        "onshown": function(d)
                        {
                            $(".bootstrap-dialog-body").find(".label-success").eq(0).click(function()
                            {
                                var url = window.prompt("Please enter the youtube URL:");
                                if((typeof(url) + '').toLowerCase() === "string")
                                {
                                    url = $.trim(url);
                                    $("<li></li>").text(url).appendTo($(".bootstrap-dialog-body").find("ol"));
                                    slide.options["youtube_assets"].push(url);
                                }
                            });
                            
                            $(".bootstrap-dialog-body").find(".label-success").eq(1).click(function()
                            {
                            	$.post("./data", {"fn": "add_local_function_to_slide", "identifier": slide.identifier}).done(function(rr)
                            	{
                            		d.close();
	                                slide.options["local_functions"].push("");
    	                            editSlideOptions(slide, markets);
                            	});                            	
                            });
                            $(".bootstrap-dialog-body").find(".label-success").eq(2).click(function()
                            {
                            	addWebAssetToSlide(slide, markets);
                            	d.close();
                            });
                            
                            $(".lfn_pencil").each(function(ii, ee)
                            {
                            	$(ee).click(function()
								{
									d.close();
									editLocalFunction(slide, markets, ii);
								})
                            });
                            $(".web_assets_tbl").find(".glyphicon-remove").each(function(ii, ee)
                            {
                            	$(ee).click(function()
                            	{
                            		if(window.confirm("Are you sure you would like to drop the '" + $(ee).parent().prev().prev().text() + "' asset?"))
                            		{
                            			$(ee).closest("table").css("opacity", "0.1");
                            			$.post("./data", {"fn": "drop_web_asset_from_slide", "identifier": slide.identifier, "idx": (ii + '')}).done(function(r)
                            			{
                            				var new_assets = [];
                            				$.each(slide.options["web_assets"], function(iii, eee)
                            				{
                            					if(iii !== ii)
                            					{
                            						new_assets.push(eee);
                            					}
                            				});
                            				slide.options["web_assets"] = new_assets;
                            				$(ee).closest("table").css("opacity", "1.0");
                            				$(ee).closest("table").find("tr").eq(ii + 1).remove();                            				
                            			});
                            		}
                            	});
                            });                            
                        }
            		}
            	);
            }
            function addWebAssetToSlide(slide, markets)
            {
            	var html = $("<div></div>");
            	$("<p></p>").text("Name this Asset:").appendTo(html);
            	$("<input />").attr("type", "text").appendTo(html);
            	$("<p></p>").text("URL for Asset:").appendTo(html);
            	$("<input />").attr("type", "text").appendTo(html);
            	$("<br />").appendTo(html);
            	$("<p></p>").text(" ").appendTo(html);
            	
            	BootstrapDialog.show
            	(
            		{
            			"title": "Adding a new web asset",
            			"message": html.html(),
            			"buttons":
            			[
            				{
            					"label": "Cancel",
            					"cssClass": "btn-danger",
            					"action": function(d)
            					{
            						d.close();
            						editSlideOptions(slide, markets);
            					}
            				},
            				{
            					"label": "Add it!",
            					"cssClass": "btn-primary",
            					"action": function(d)
            					{
            						var inp1 = $(".bootstrap-dialog-body").find("input").first();
            						var inp2 = $(".bootstrap-dialog-body").find("input").last();
            						
            						if($.trim(inp1.val()).length === 0)
            						{
            							window.alert("You must name the asset!");
            							return;
            						}
            						if($.trim(inp2.val()).length === 0)
            						{
            							window.alert("You must provide a URL for the asset!");
            							return;
            						}
            						
            						var n = $.trim(inp1.val());
            						var u = $.trim(inp2.val());
            						$(".bootstrap-dialog-footer").find(".btn-primary").text("Adding...").css("opacity", "0.2");
            						var asset_data = {"name": n, "url": u};
            						$.post("./data", {"fn": "add_web_asset_to_slide", "identifier": slide.identifier, "asset": JSON.stringify(asset_data)}).done(function(r)
            						{
            							slide.options["web_assets"].push(asset_data);
            							d.close();
            							editSlideOptions(slide, markets);            							
            						});
            						
            					}
            				}
            			]
            		}
            	)
            }
            function editLocalFunction(slide, markets, index)
            {
            	var html = $("<div></div>");
            	$("<p></p>").text("Function Definition:").appendTo(html);
            	$("<textarea></textarea>").css("background", "rgba(0, 0, 0, 0.5)").css("padding", "0.5em").css("border", "0px solid #000").css("min-height", "8em").css("width", "100%").appendTo(html);
            	var num = index + 1;
            	BootstrapDialog.show
            	(
            		{
            			"title": "Editing Local Function #" + (num + ''),
            			"message": html.html(),
            			"buttons":
            			[
            				{
            					"label": "Cancel",
            					"cssClass": "btn-danger",
            					"action": function(d)
            					{
            						d.close();
            						editSlideOptions(slide, markets);            						
            					}
            				},
            				{
            					"label": "Save",
            					"cssClass": "btn-primary",
            					"action": function(d)
            					{
            						var def = $(".bootstrap-dialog-body").find("textarea").first().val();
            						slide.options["local_functions"][index] = def;
            						$.post("./data", {"fn": "update_slide_local_definition", "identifier": slide.identifier, "idx": (index + ''), "definition": def}).done(function(r)
            						{            							
            							d.close();
            							editSlideOptions(slide, markets);
            						});
            						
            					}
            				}
            			],
            			"onshown": function(d)
            			{
            				$(".bootstrap-dialog-body").find("textarea").val(slide.options["local_functions"][index]);
            			}
            		}
            	);
            }
            function addNewSlide(fn_list)
            {
            	var html = $("<div></div>");
            	html.append($("<p></p>").text("Name the presentation:"));
            	$("<input />").attr("type", "text").addClass("slide_name_input").attr("placeholder", "Name...").appendTo(html);

            	BootstrapDialog.show
            	(
            		{
            			"title": "Creating a new presentation",
            			"message": html.html(),
            			"buttons":
            			[
            				{
            					"label": "Cancel",
            					"cssClass": "btn-danger",
            					"action": function(d)
            					{
            						d.close();
            					}
            				},
            				{
            					"label": "Create",
            					"cssClass": "btn-primary",
            					"action": function(d)
            					{
            						if($.trim($(".slide_name_input").val()).length === 0)
            						{
            							window.alert("You must provide a name...");
            							return;
            						}
            						$(".bootstrap-dialog-footer").find(".btn-primary").css("opacity", "0.2").text("Creating...");
            						$.post("./data", {"fn": "create_new_slide", "name": $.trim($(".slide_name_input").val())}).done(function(resp2)
            						{
            							d.close();
            							$("#slides_maker").trigger("click");
            						});
            					}
            				}
            			]
            		}
            	);
            }
            function browseForExistingSlideImage(slide, offset)
            {
                if(typeof(offset) + '' === "undefined")
                {
                    offset = 0;
                }
                var orig_offset = offset;
                var imgs = $.parseJSON(JSON.stringify(slide.image_assets));
                imgs.reverse();

                var html = $("<div></div>");
                var idx = offset;
                var cnt = 0;

                var thumbs = [];
                while(cnt < 5)
                {
                    if(idx < imgs.length)
                    {
                        var img_item = imgs[idx];
                        thumbs.push($("<img />").addClass("img").addClass("img-responsive").attr("data-identifier", img_item.identifier).attr("data-extension", img_item.extension).addClass("slide_browse_thumb").attr("src", "https://storage.googleapis.com/" + window.app_bucket + "/SlideImages/" + slide.identifier + "/" + img_item.identifier + "." + img_item.extension));
                    }
                    cnt++;
                    idx++;
                }
                var html = $("<div></div>");
                html.append($("<p></p>").text("Choose an image"));
                html.append($("<br />"));
                var btns = [];
                if(imgs.length === 0)
                {
                    $("<h4></h4>").text("(No Image Assets Available)").appendTo(html);
                    btns.push
                    (
                        {
                            "label": "OK",
                            "cssClass": "btn-primary",
                            "action": function(d)
                            {
                                d.close();
                                addImageToSlide(slide);
                            }
                        }
                    );
                }
                else
                {
                    $.each(thumbs, function(i, thumb)
                    {
                        thumb.appendTo(html);
                    });
                    if(orig_offset !== 0)
                    {
                        btns.push
                        (
                            {
                                "label": "Previous Images",
                                "cssClass": "btn-primary",
                                "action": function(d)
                                {
                                    d.close();
                                    browseForExistingSlideImage(slide, orig_offset - 5);
                                }
                            }
                        );
                    }
                    if((orig_offset + 5) < imgs.length)
                    {
                        btns.push
                        (
                            {
                                "label": "Next",
                                "cssClass": "btn-primary",
                                "action": function(d)
                                {
                                    d.close();
                                    browseForExistingSlideImage(slide, orig_offset + 5);
                                }
                            }
                        );
                    }
                    btns.push
                    (
                        {
                            "label": "Choose selected image",
                            "cssClass": "btn-success",
                            "action": function(d)
                            {
                                if($(".slide_image_selected_in_browsing").size() > 0)
                                {
                                    var sel_img = $(".slide_image_selected_in_browsing").first();
                                    $(".bootstrap-dialog-footer").find(".btn-success").css("opacity", "0.2");
                                    $.post("./data", {"fn": "add_new_slide_component_item", "slide_item_identifier": slide.children[window.slides_maker_slide_index].identifier, "identifier": slide.identifier, "subview_index": (window.slides_maker_subview_index + ''), "type": "image", "image_identifier": sel_img.data("identifier"), "image_extension": sel_img.data("extension")}).done(function(r)
                                    {
                                        slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index].push(r.item);
                                        d.close();
                                    });
                                }
                                else
                                {
                                    window.alert("You must first choose a slide");
                                }
                            }
                        }
                    );
                    btns.push
                    (
                        {
                            "label": "Back",
                            "cssClass": "btn-danger",
                            "action": function(d)
                            {
                                d.close();
                                addImageToSlide(slide);
                            }
                        }
                    );
                }

                BootstrapDialog.show
                (
                    {
                        "title": "Select an Image",
                        "message": html.html(),
                        "buttons": btns,
                        "onshown": function(d)
                        {
                            $(".bootstrap-dialog-body").find(".slide_browse_thumb").each(function(i, e)
                            {
                                $(e).click(function()
                                {
                                    $(".slide_image_selected_in_browsing").removeClass("slide_image_selected_in_browsing");
                                    $(e).addClass("slide_image_selected_in_browsing");
                                });
                            });
                            $(".bootstrap-dialog-footer").css("clear", "both");
                        }
                    }
                );
            }
            function addImageToSlide(slide)
            {
                var html = $("<div></div>");
                $("<br />").appendTo(html);
                $("<p></p>").text("Select an option").appendTo(html);
                $("<br />").appendTo(html);
                BootstrapDialog.show
                (
                    {
                        "title": "Upload New Image or Use Existing Image?",
                        "message": html.html(),
                        "buttons":
                        [
                            {
                                "label": "Cancel",
                                "cssClass": "btn-danger",
                                "action": function(d)
                                {
                                    d.close();

                                }
                            },
                            {
                                "label": "Upload New",
                                "cssClass": "btn-primary",
                                "action": function(d)
                                {
                                    d.close();
                                    var html2 = $("<div></div>");
                                    $("<p></p>").text("Choose an image file").appendTo(html2);
                                    $("<input />").attr("type", "file").attr("id", "slide_img_upload_inp").appendTo(html2);

                                    BootstrapDialog.show
                                    (
                                        {
                                            "title": "Select the file",
                                            "message": html2.html(),
                                            "buttons":
                                            [
                                                {
                                                    "label": "Cancel",
                                                    "cssClass": "btn-danger",
                                                    "action": function(d2)
                                                    {
                                                        d2.close();
                                                        addImageToSlide(slide);
                                                    }
                                                },
                                                {
                                                    "label": "Upload",
                                                    "cssClass": "btn-primary",
                                                    "action": function(d2)
                                                    {
                                                        $(".bootstrap-dialog-footer").find(".btn-primary").text("Uploading...").css("opacity", "0.2");
                                                        var formData = new FormData();

                                                        formData.append("fn", "upload_slide_image");
                                                        formData.append("identifier", slide.identifier);
                                                        formData.append("img", $("#slide_img_upload_inp")[0].files[0]);

                                                        var xhr = new XMLHttpRequest();

                                                        xhr.addEventListener("load", function(e)
                                                        {
                                                            slide.image_assets.push($.parseJSON(e.target.responseText)["image"]);
                                                            d2.close();
                                                            browseForExistingSlideImage(slide);
                                                        });
                                                        xhr.open("POST", "/data");
                                                        xhr.send(formData);
                                                    }
                                                }
                                            ]
                                        }
                                    );
                                }
                            },
                            {
                                "label": "Use Existing",
                                "cssClass": "btn-primary",
                                "action": function(d)
                                {
                                    d.close();
                                    browseForExistingSlideImage(slide);
                                }
                            },
                            {
                                "label": "CAD Photo",
                                "cssClass": "btn-primary choosecad",
                                "action": function(d)
                                {
                                    $(".choosecad").css("opacity", "0.1");
                                    $.post("./data",
                                    {
                                        "fn": "add_new_slide_component_item",
                                        "slide_item_identifier": slide.children[window.slides_maker_slide_index].identifier,
                                        "identifier": slide.identifier,
                                        "subview_index": (window.slides_maker_subview_index + ''),
                                        "type": "image",
                                        "image_identifier": "cad_photo",
                                        "image_extension": "jpg"
                                    }).done(function(rrr)
                                    {
                                        slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index].push(rrr.item);
                                        d.close();
                                    });
                                }
                            }
                        ]
                    }
                );
            }
            function createNewSlideComponent(slide)
            {
                var html = $("<div></div>");
                $("<p></p>").text("Choose an Item Type:").appendTo(html);
                $("<select></select>").attr("id", "slide_component_type")
                .append
                (
                    $("<option value='text'>Text</option>")
                )
                .append
                (
                    $("<option value='rectangle'>Shape</option>")
                )
                .append
                (
                    $("<option value='img'>Image</option>")
                )
                .append
                (
                    $("<option value='user_input'>User Input</option>")
                )
                .append
                (
                    $("<option value='two_dimensional_graph'>2-D Graph</option>")
                )
                .appendTo(html);

                BootstrapDialog.show
                (
                    {
                        "title": "Adding a New Item",
                        "message": html.html(),
                        "buttons":
                        [
                            {
                                "label": "Cancel",
                                "cssClass": "btn-danger",
                                "action": function(d)
                                {
                                    d.close()
                                }
                            },
                            {
                                "label": "Add it!",
                                "cssClass": "btn-primary",
                                "action": function(d)
                                {
                                    if($("#slide_component_type").val() === "img")
                                    {
                                        d.close();
                                        addImageToSlide(slide);
                                        return;
                                    }
                                    $(".bootstrap-dialog-footer").find(".btn-primary").text("Adding...").css("opacity", "0.2");
                                    $.post("./data", {"fn": "add_new_slide_component_item", "slide_item_identifier": slide.children[window.slides_maker_slide_index].identifier, "identifier": slide.identifier, "subview_index": (window.slides_maker_subview_index + ''), "type": $("#slide_component_type").val()}).done(function(r)
                                    {
                                        slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index].push(r.item);
                                        d.close();
                                    });
                                }
                            }
                        ]
                    }
                );
            }
            function editSlidesForSlide(slide, function_list)
            {
            	window.slides_maker_slide_index = 0;
            	window.slides_maker_subview_index = 0;
            	clearApp(function()
            	{
            		var app_area = $("#app_area");
            		$("<h3></h3>").text("Editing '" + slide.name + "' Slideshow").appendTo(app_area);
                    $("<button></button>").addClass("btn").addClass("btn-success").addClass("add_slide_item_btn").text("Add an Item")
                    .click(function()
                    {
                        createNewSlideComponent(slide);
                    }).appendTo(app_area);
                    $("<button></button>").addClass("btn").addClass("btn-danger").addClass("slides_maker_back_btn").html("&larr; Back").click(function()
                    {
                        $("#slides_maker").trigger("click");
                    }).appendTo(app_area);
                    $("<input />")
                    .attr("type", "color")
                    .attr("id", "change_slide_view_bg_color")
                    .attr("value", rgb2hex(coerceToRGBA(slide.children[window.slides_maker_slide_index].options["background"]).toUpperCase()))
                    .on("change", function()
                    {
                        var val = coerceToRGBA($(this).val());
                        slide.children[window.slides_maker_slide_index].options["background"] = val;
                        $.post("./data", {"fn": "update_background_color_for_slide_item", "identifier": slide.children[window.slides_maker_slide_index].identifier, "value": val})
                        .done(function(r)
                        {

                        });
                    }).appendTo(app_area);
                    $("<span></span>").addClass("label").addClass("label-primary").addClass("label-change-slide-background-color").text("Slide Background-Color").appendTo(app_area);
                    $("<input />")
                    .attr("type", "color")
                    .attr("id", "change_slide_view_txt_color")
                    .attr("value", rgb2hex(coerceToRGBA(slide.children[window.slides_maker_slide_index].options["color"]).toUpperCase()))
                    .on("change", function()
                    {
                        var val = coerceToRGBA($(this).val());
                        slide.children[window.slides_maker_slide_index].options["color"] = val;
                        $.post("./data", {"fn": "update_default_text_color_for_slide_item", "identifier": slide.children[window.slides_maker_slide_index].identifier, "value": val})
                        .done(function(r)
                        {

                        });
                    }).appendTo(app_area);
                    $("<span></span>").addClass("label").addClass("label-primary").addClass("label-change-slide-default-text-color").text("Default Text Color").appendTo(app_area);


            		$("<hr />").appendTo(app_area);
            		var sv_dd = $("<div></div>").addClass("dropdown").addClass("subview_changer");
            		var btn = $("<button></button>").addClass("btn").addClass("btn-default").addClass("dropdown-toggle").attr("data-toggle", "dropdown");
            		btn.appendTo(sv_dd);
            		var sv_ul = $("<ul></ul>").attr("role", "menu").addClass("dropdown-menu");

            		$.each(slide.children[window.slides_maker_slide_index].views, function(i, e)
            		{
            			var li = $("<li></li>").attr("role", "presentation").addClass("sv_choice");
            			var num = i + 1;
            			num += '';
                        li.append
                        (
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove").click(function(ev)
                            {
                                ev.stopPropagation();
                                dropSubview($(this), slide);
                            })
                        )
            			li.append
            			(
            				$("<a></a>").attr("href", "javascript:void(0);").attr("tabindex", "-1").text("View #" + num)
            			);
            			li.click(function()
            			{
            				window.slides_maker_subview_index = li.prevAll("li").size();
                            var b = $(this).parent().prevAll(".btn").first();
                            b.text($(this).text());
                            $("<span></span>").addClass("caret").appendTo(b);
            		    });

                        li.appendTo(sv_ul);
            		});
                    sv_ul
                    .append
                    (
                        $("<li></li>").attr("role", "presentation")
                        .append
                        (
                            $("<a></a>")
                            .attr("href", "javascript:void(0);")
                            .attr("tabindex", "-1")
                            .text("Add View")
                        )
                        .click(function()
                        {
                            var that = $(this);
                            that.parent().prevAll(".btn").css("opacity", "0.1");
                            $.post("./data", {"fn": "add_subview_to_slide_item", "identifier": slide.children[window.slides_maker_slide_index].identifier}).done(function(r)
                            {
                                slide.children[window.slides_maker_slide_index].views.push(r.view);
                                var li2 = $("<li></li>").attr("role", "presentation").addClass("sv_choice");
                    			var num = slide.children[window.slides_maker_slide_index].views.length;
                    			num += '';
                                li2.append
                                (
                                    $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove").click(function(ev)
                                    {
                                        ev.stopPropagation();
                                        dropSubview($(this), slide);
                                    })
                                )
                    			li2.append
                    			(
                    				$("<a></a>").attr("href", "javascript:void(0);").attr("tabindex", "-1").text("View #" + num)
                    			);
                    			li2.click(function()
                    			{
                    				window.slides_maker_subview_index = li2.prevAll("li").size();
                                    var b = $(this).parent().prevAll(".btn").first();
                                    b.text($(this).text());
                                    $("<span></span>").addClass("caret").appendTo(b);
                    		    });

                                li2.insertAfter(sv_ul.find("li").eq(-2));
                                that.parent().prevAll(".btn").css("opacity", "1.0");
                                li2.trigger("click");
                            });
                        })
                    );
                    sv_ul.appendTo(sv_dd);
                    sv_dd.appendTo(app_area);
                    $("<button></button>").addClass("btn").addClass("btn-primary").addClass("swap_slide_pos").text("Switch Slide Postions")
                    .click(function()
                    {
                        swapSlidePositions(slide, function_list);
                    }).appendTo(app_area);


            		var slides_div = $("<div></div>").addClass("slide_selector");
                    $("<p></p>").text("Choose a Slide").appendTo(slides_div);
                    for(var i = 0; i < slide.slide_count; i++)
            		{
            			var num = i + 1;
            			num += '';

            			$("<div></div>").text(num).appendTo(slides_div)
                        .append
                        (
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove")
                            .click(function(ev)
                            {
                                ev.stopPropagation();
                                dropSlideItem(slide, $(this).parent().prevAll("div").size(), function_list);
                            })
                        )
                        .append
                        (
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-cog")
                            .click(function(ev)
                            {
                                ev.stopPropagation();
                                editOptionsForSlideItem(slide, $(this).parent().prevAll("div").size());
                            })
                        )
            			.click(function()
            			{
            				activateNewSlideIndex($(this).prevAll("div").size(), slide);
            			});
            		}
                    $("<span></span>").addClass("label").addClass("label-success").text("+ New Slide")
                    .click(function()
                    {
                        var that = $(this);
                        that.parent().css("opacity", "0.1");
                        $.post("./data", {"fn": "add_additional_slide", "identifier": slide.identifier}).done(function(r)
                        {
                            slide.children.push(r.child);
                            slide.slide_count += 1;
                            $("<div></div>").text(($(".slide_selector > div").size() + 1) + '')
                            .append
                            (
                                $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove")
                                .click(function(ev)
                                {
                                    ev.stopPropagation();
                                    dropSlideItem(slide, slide.slide_count - 1, function_list);
                                })
                            )
                            .click(function()
                			{
                				activateNewSlideIndex($(this).prevAll("div").size(), slide);
                			})
                            .insertAfter($(".slide_selector > div").last());
                            that.parent().css("opacity", "1.0");
                        });
                    })
                    .appendTo(slides_div);
            		slides_div.appendTo(app_area);
            		$("<div></div>").attr("id", "slide_view").appendTo(app_area);

            		slides_div.find("> div").first().trigger("click");
                    sv_ul.find("li").first().trigger("click");
            		window.temp_intervals.push
            		(
            			setInterval(function()
            			{
            				renderSlides(slide, function_list);
            			}, 100)
            		);
            	});
            }
            function editOptionsForSlideItem(slide, idx)
            {
                var c = net.brehaut.Color(slide.children[idx].options["background"]);
                var c2 = net.brehaut.Color(slide.children[idx].options["color"]);
                var html = $("<div></div>");
                $("<p></p>").text("Background Color for Slide:").appendTo(html);
                $("<input />").attr("type", "color").attr("value", c.toString()).appendTo(html);
                $("<p></p>").text("Default Text Color for Slide:").appendTo(html);
                $("<input />").attr("type", "color").attr("value", c2.toString()).appendTo(html);
                BootstrapDialog.show
                (
                    {
                        "title": "Editing Options for Slide #" + ((idx + 1) + ''),
                        "message": html.html(),
                        "buttons":
                        [
                            {
                                "label": "Cancel",
                                "cssClass": "btn-danger",
                                "action": function(d)
                                {
                                    d.close();
                                }
                            },
                            {
                                "label": "OK",
                                "cssClass": "btn-primary",
                                "action": function(d)
                                {
                                    var bod = $(".bootstrap-dialog-body");
                                    var c4 = net.brehaut.Color(("#" + bod.find("input").first().val()).replace("##", "#"));
                                    var c4_str = "rgba(" + (parseInt(c4.toRGB()["red"] * 255) + '') + "," + (parseInt(c4.toRGB()["green"] * 255) + '') + "," + (parseInt(c4.toRGB()["blue"] * 255) + '') + ",1.0)";
                                    var c5 = net.brehaut.Color(("#" + bod.find("input").eq(1).val()).replace("##", "#"));
                                    var c5_str = "rgba(" + (parseInt(c5.toRGB()["red"] * 255) + '') + "," + (parseInt(c5.toRGB()["green"] * 255) + '') + "," + (parseInt(c5.toRGB()["blue"] * 255) + '') + ",1.0)";
                                    $.post("./data", {"fn": "update_slide_color_options", "identifier": slide.children[idx].identifier, "idx": (idx + ''), "background": c4_str, "color": c5_str}).done(function(r)
                                    {
                                        slide.children[idx].options["background"] = c4_str;
                                        slide.children[idx].options["color"] = c5_str;
                                        if(window.slides_maker_slide_index === idx)
                                        {
                                            $("#slide_view").css("background-color", "rgb(" + (parseInt(c4.toRGB()["red"] * 255) + '') + ", " + (parseInt(c4.toRGB()["green"] * 255) + '') + ", " + (parseInt(c4.toRGB()["blue"] * 255) + '') + ")");
                                        }
                                        d.close();

                                    });
                                }
                            }
                        ]
                    }
                );
            }
            function dropSlideItem(slide, slide_index, fn_list)
            {
                if($(".slide_selector > div").eq(slide_index).hasClass("active_slide"))
                {
                    window.alert("The active slide cannot be deleted, please switch to another slide before marking for deletion.");
                    return;
                }
                var that = $(".slide_selector > div").eq(slide_index);
                if(window.confirm("Are you sure you would like to delete Slide #" + that.text()))
                {
                    $(".slide_selector > div").eq(slide_index).remove();
                    $(".slide_view_item").remove();

                    $(".slide_selector").css("opacity", "0.1");
                    $.post("./data", {"fn": "drop_slide_item", "identifier": slide.identifier, "item_identifier": slide.children[slide_index].identifier}).done(function(r)
                    {
                        slide.slide_count -= 1;
                        var cpy = [];
                        for(var i = 0; i < slide.children.length; i++)
                        {
                            if(i !== slide_index)
                            {
                                slide.children[i].idx = cpy.length;
                                cpy.push(slide.children[i]);
                            }
                        }
                        slide.children = cpy;
                        editSlidesForSlide(slide, fn_list);
                    });
                }
            }
            function activateNewSlideIndex(idx, slide)
            {
                window.slides_maker_slide_index = idx;
                window.slides_maker_subview_index = 0;
                $(".active_slide").removeClass("active_slide");
                $(".slide_selector > div").eq(idx).addClass("active_slide");
                var dd = $(".subview_changer");
                items_to_delete = [];
                dd.find("ul").find("li").each(function(i, e)
                {
                    if(i === dd.find("li").size() - 1)
                    {
                        return;
                    }
                    items_to_delete.push($(e));
                });
                $.each(items_to_delete, function(i, e)
                {
                    $(e).remove();
                });
                $.each(slide.children[window.slides_maker_slide_index].views, function(i, e)
                {
                    var li = $("<li></li>").attr("role", "presentation").addClass("sv_choice");
                    var num = i + 1;
                    num += '';
                    li.append
                    (
                        $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove").click(function(ev)
                        {
                            ev.stopPropagation();
                            dropSubview($(this), slide);
                        })
                    )
                    li.append
                    (
                        $("<a></a>").attr("href", "javascript:void(0);").attr("tabindex", "-1").text("View #" + num)
                    );
                    li.click(function()
                    {
                        window.slides_maker_subview_index = li.prevAll("li").size();
                        var b = $(this).parent().prevAll(".btn").first();
                        b.text($(this).text());
                        $("<span></span>").addClass("caret").appendTo(b);
                    });

                    li.insertBefore(dd.find("li").last());
                });
                if($("#slide_view").css("background-color") !== slide.children[window.slides_maker_slide_index].options["background"])
                {
                    $("#slide_view").css("background-color", slide.children[window.slides_maker_slide_index].options["background"]);
                }

                dd.find("li").first().trigger("click");
            }
            function rgb2hex(rgb)
            {
                 rgb = rgb.match(/^rgba?[\s+]?\([\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?/i);
                 var val = (rgb && rgb.length === 4) ? "#" +
                  ("0" + parseInt(rgb[1],10).toString(16)).slice(-2) +
                  ("0" + parseInt(rgb[2],10).toString(16)).slice(-2) +
                  ("0" + parseInt(rgb[3],10).toString(16)).slice(-2) : '';
                 return val.toUpperCase();
            }
            function coerceToRGBA(color_str)
            {
                var red;
                var green;
                var blue;
                var alpha;
                if(color_str.indexOf("#") > -1)
                {
                    var cpy = color_str.replace("#", "");
                    cpy = $.trim(cpy);
                    var r_str = cpy[0] + cpy[1];
                    var g_str = cpy[2] + cpy[3];
                    var b_str = cpy[4] + cpy[5];

                    var red = parseInt(r_str.toUpperCase(), 16);
                    var green = parseInt(g_str.toUpperCase(), 16);
                    var blue = parseInt(b_str.toUpperCase(), 16);

                    alpha = 1.0;
                }
                if(color_str.indexOf("rgba") > -1)
                {
                    while(color_str.indexOf(" ") > -1)
                    {
                        color_str = color_str.replace(" ", "");
                    }
                    color_str = color_str.replace("(", "").replace(")", "");
                    color_str = color_str.replace("rgba", "");
                    var vals = color_str.split(",");
                    red = parseInt(vals[0]);
                    green = parseInt(vals[1]);
                    blue = parseInt(vals[2]);
                    alpha = parseFloat(vals[3]);
                }
                else if(color_str.indexOf("rgb") > -1)
                {
                    while(color_str.indexOf(" ") > -1)
                    {
                        color_str = color_str.replace(" ", "");
                    }
                    color_str = color_str.replace("(", "").replace(")", "");
                    color_str = color_str.replace("rgb", "");
                    var vals = color_str.split(",");
                    red = parseInt(vals[0]);
                    green = parseInt(vals[1]);
                    blue = parseInt(vals[2]);
                    alpha = 1.0;
                }
                return "rgba(" + (red + '') + "," + (green + '') + "," + (blue + '') + "," + (alpha.toFixed(2) + '') + ")";
            }
            function editSlideGraph(slide, index, item)
            {
                var html = $("<div></div>");
                $("<p></p>").text("Width").appendTo(html);
                $("<input />").attr("type", "text").attr("id", "sitem_width").attr("value", item["width"] + '').appendTo(html);
                $("<p></p>").text("Height").appendTo(html);
                $("<input />").attr("type", "text").attr("id", "sitem_height").attr("value", item["height"] + '').appendTo(html);
                $("<br />").appendTo(html);
                $("<br />").appendTo(html);
                $("<p></p>").text("Data Type Coercion:").appendTo(html);
                $("<select></select>").css("background", "#555555").attr("id", "x_data_type")
                .append
                (
                    $("<option value='none'>None</option>")
                )
                .append
                (
                    $("<option value='integer'>Integer</option>")
                )
                .append
                (
                    $("<option value='decimal'>Decimal</option>")
                )
                .append
                (
                    $("<option value='currency'>Currency</option>")
                )
                .appendTo(html);
                $("<br />").appendTo(html);
                $("<p></p>").text("Chart Type").appendTo(html);
                $("<select></select>").css("background", "#555555").attr("id", "chart_rendering_type")
                .append
                (
                    $("<option></option>").attr("value", "plot").text("Plot")
                )
                .append
                (
                    $("<option></option>").attr("value", "b-chart").text("Bar Chart")
                )
                .appendTo(html);
                $("<h2></h2>").text("X Axis:").appendTo(html);

                html.find("#x_data_type").find("option").each(function(i, e)
                {
                    if($(e).attr("value") === "x_format")
                    {
                        $(e).attr("selected", "selected");
                    }
                });
                $("<span></span>").addClass("x_axis_fill_color_lbl").text("Fill Color:").appendTo(html);
                $("<input />").attr("type", "color").attr("value", item["x_color"]).attr("id", "x_axis_fill_color").appendTo(html);
                $("<p></p>").html("function x_axis_data(customer)<br />{<br />").appendTo(html);
                $("<textarea></textarea>").addClass("ta_xfn").appendTo(html);
                $("<p></p>").html("}").appendTo(html);
                $("<p></p>").appendTo(html);
                $("<h2></h2>").text("Y Axis:").appendTo(html);
                $("<span></span>").addClass("y_axis_fill_color_lbl").text("Fill Color:").appendTo(html);
                $("<input />").attr("type", "color").attr("id", "y_axis_fill_color").attr("value", item["y_color"]).appendTo(html);

                $("<p></p>").html("function y_axis_data(customer)<br />{<br />").appendTo(html);
                $("<textarea></textarea>").addClass("ta_yfn").appendTo(html);
                $("<p></p>").html("}").appendTo(html);
                $("<p></p>").appendTo(html);


                BootstrapDialog.show
                (
                    {
                        "title": "Editing 2-D Graph",
                        "message": html.html(),
                        "buttons":
                        [
                            {
                                "label": "Close",
                                "cssClass": "btn-danger",
                                "action": function(d)
                                {
                                    d.close();
                                }
                            },
                            {
                                "label": "Save",
                                "cssClass": "btn-primary",
                                "action": function(d)
                                {
                                    var dat =
                                    {
                                        "y_function": $.trim($(".ta_yfn").val()),
                                        "x_function": $.trim($(".ta_xfn").val()),
                                        "x_color": $("#x_axis_fill_color").val(),
                                        "y_color": $("#y_axis_fill_color").val(),
                                        "y_format": $("#x_data_type").val(),
                                        "chart_type": $("#chart_rendering_type").val(),
                                        "width": $.trim($("#sitem_width").val()).digits(),
                                        "height": $.trim($("#sitem_height").val()).digits()
                                    };
                                    $.each(Object.keys(dat), function(iii, key)
                                    {
                                        var vv = dat[key];
                                        if(["width", "height"].indexOf(key) > -1)
                                        {
                                            vv = parseInt(vv);
                                        }
                                        item[key] = vv;
                                    });
                                    $.post("./data", {"fn": "update_presentation_item_graph", "data": JSON.stringify(dat), "identifier": slide.identifier,  "slide_item_identifier": slide.children[window.slides_maker_slide_index].identifier, "subview_index": (window.slides_maker_subview_index + ''), "item_index": (index + '')}).done(function(rrrrr)
                                    {
                                        d.close();
                                    });
                                }
                            }
                        ],
                        "onshown": function(d)
                        {
                            var body = $(".bootstrap-dialog-body");
                            body.find("#chart_rendering_type").find("option").each(function(ii, ee)
                            {
                                if($(ee).attr("value") === item["chart_type"])
                                {
                                    body.find("#chart_rendering_type")[0].selectedIndex = ii;
                                }
                            });
                            body.find("#x_data_type").find("option").each(function(ii, ee)
                            {
                                if($(ee).attr("value") === item["y_format"])
                                {
                                    $(ee).parent()[0].selectedIndex = ii;
                                }
                            });
                            body.find(".ta_xfn").val(item["x_function"]);
                            body.find(".ta_yfn").val(item["y_function"]);
                        }
                    }
                );
            }
            function showItemEditControls(slide, index, function_list, jqDiv)
            {
            	var item = null;            	
            	$.each(slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index], function(i, it)
            	{
            		if(item !== null)
            		{
            			return;
            		}
            		if(it.identifier === jqDiv.attr("id").replace("slide_view_item_", ""))
            		{
            			item = it;
            			index = i;
            		}
            	});
            	if(item === null)
            	{
            		return;
            	}
                if(item.type === "two_dimensional_graph")
                {
                    editSlideGraph(slide, index, item, function_list);
                    return;
                }
                if($("#slide_item_edit_controls").size() > 0)
                {
                    $("#slide_item_edit_controls").remove();
                }

                var edit_controls = $("<div></div>").attr("id", "slide_item_edit_controls");
                edit_controls.addClass("edit_controls_" + item.type);
                $("<h5></h5>").text("Edit Controls").appendTo(edit_controls);

                $("<span></span>").addClass("edit_itemx").text("X: " + item.x + '').appendTo(edit_controls);
                $("<span></span>").addClass("edit_itemy").text("Y: " + item.y + '').appendTo(edit_controls);
                $("<span></span>").addClass("edit_itemz").text("Z: " + index + '').appendTo(edit_controls);
                if(item.type === "rectangle" || item.type === "image")
                {
                    $("<span></span>").addClass("edit_itemw").text("W: " + item["width"] + '').appendTo(edit_controls);
                    $("<span></span>").addClass("edit_itemh").text("H: " + item["height"] + '').appendTo(edit_controls);
                }
                $("<span></span>").addClass("fs_label").addClass("label").addClass("label-primary").text("Font-Size").appendTo(edit_controls);

                if(parseInt(index) > 0)
                {
                    $("<span></span>").addClass("label").addClass("label-primary").addClass("presentation_move_down").html("&darr;").attr("title", "Move Down")
                    .click(function()
                    {
                        var curr_index = index;
                        $.post("./data",
                        {
                            "fn": "move_presentation_item_down",
                            "index": index + '',
                            "identifier": slide.children[window.slides_maker_slide_index].identifier,
                            "subview_index": window.slides_maker_subview_index + ''
                        }).done(function(r)
                        {
                            var cpy = $.parseJSON(JSON.stringify(slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index]));
                            var item_a = $.parseJSON(JSON.stringify(cpy[curr_index * 1]));
                            var item_b = $.parseJSON(JSON.stringify(cpy[(curr_index * 1) - 1]));

                            cpy[curr_index * 1] = item_b;
                            cpy[(curr_index * 1) - 1] = item_a;

                            slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index] = cpy;
                            $("#slide_view").empty();
                            $("#slide_item_edit_controls").remove();
                        });
                    }).appendTo(edit_controls);
                }
                if(parseInt(index) < (slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index].length - 1))
                {
                    $("<span></span>")
                    .addClass("label")
                    .addClass("label-primary")
                    .addClass("presentation_move_up")
                    .html("&uarr;")
                    .attr("title", "Move Up")
                    .click(function()
                    {
                        var curr_index = index;
                        $.post("./data",
                        {
                            "fn": "move_presentation_item_up",
                            "index": index + '',
                            "identifier": slide.children[window.slides_maker_slide_index].identifier,
                            "subview_index": window.slides_maker_subview_index + ''
                        }).done(function(r)
                        {
                            var cpy = $.parseJSON(JSON.stringify(slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index]));
                            var item_a = $.parseJSON(JSON.stringify(cpy[curr_index * 1]));
                            var item_b = $.parseJSON(JSON.stringify(cpy[(curr_index * 1) + 1]));

                            cpy[curr_index * 1] = item_b;
                            cpy[(curr_index * 1) + 1] = item_a;

                            slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index] = cpy;
                            $("#slide_view").empty();
                            $("#slide_item_edit_controls").remove();
                        });
                    }).appendTo(edit_controls);
                }
                if(edit_controls.find(".presentation_move_up").size() + edit_controls.find(".presentation_move_down").size() === 2)
                {
                    edit_controls.addClass("both_movements");
                }

                $("<select></select>").attr("id", "slide_item_font_weight")
                .append
                (
                    $("<option value='normal'>Normal</option>")
                )
                .append
                (
                    $("<option value='bold'>Bold</option>")
                )
                .on("change", function()
                {
                    var val = $(this).val();
                    slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index][index]["font-weight"] = val;
                    $.post("./data", {"fn": "update_text_item_font_weight", "value": val, "slide_item_identifier": slide.children[window.slides_maker_slide_index].identifier, "subview_index": (window.slides_maker_subview_index + ''), "item_index": (index + '')});
                })
                .appendTo(edit_controls);
                $("<input />").attr("type", "text").attr("value", item["font-size"]).attr("id", "slide_item_edit_font_size")
                .on("change", function()
                {
                    var val = $(this).val().digits();
                    if(val !== null)
                    {
                        slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index][index]["font-size"] = val;
                        $.post("./data", {"fn": "update_text_item_font_size", "value": val, "slide_item_identifier": slide.children[window.slides_maker_slide_index].identifier, "subview_index": (window.slides_maker_subview_index + ''), "item_index": (index + '')});
                    }
                }).appendTo(edit_controls);
                var font_sel = $("<select></select>").attr("id", "slide_item_edit_font_family");
                var fonts =
                [
                    {"display": "Bitter", "value": "Bitter"},
                    {"display": "EB Garamond", "value": "EB Garamond"},
                    {"display": "Inconsolata", "value": "Inconsolata"},
                    {"display": "Maven Pro", "value": "Maven Pro"},
                    {"display": "Poiret One", "value": "Poiret One"},
                    {"display": "Roboto Condensed", "value": "Roboto Condensed"},
                    {"display": "Roboto", "value": "Roboto"},
                    {"display": "Yellowtail", "value": "Yellowtail"},
                    {"display": "Lato Light", "value": "latolight"},
                    {"display": "Lato Medium", "value": "latomedium"},
                    {"display": "Lato Regular", "value": "latoregular"},
                    {"display": "Lato Black", "value": "latoblack"},
                    {"display": "Lato Bold", "value": "latobold"}
                ];
                $.each(fonts, function(i, font)
                {
                    var opt = $("<option></option>").attr("value", font.value).text(font.display);
                    if(opt.attr("value") === item["font-family"])
                    {
                        opt.attr("selected", "selected");
                    }
                    opt.appendTo(font_sel);
                });
                font_sel
                .on("change", function()
                {
                    var val = $(this).val();
                    slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index][index]["font-family"] = val;
                    $.post("./data", {"fn": "update_text_item_font_family", "value": val, "slide_item_identifier": slide.children[window.slides_maker_slide_index].identifier, "subview_index": (window.slides_maker_subview_index + ''), "item_index": (index + '')});

                })
                .appendTo(edit_controls);
                var binding_sel = $("<select></select>").attr("id", "data_binding_sel_presentation");
                binding_sel.append($("<option value='n/a'>None</option>"));
                var binding_opts = 
                {
                    "cust_first": "Customer First Name",
                    "cust_last": "Customer Last Name",
                    "cust_name": "Customer Name",
                    "cust_city": "Customer City",
                    "cust_state": "Customer State",
                    "cust_address": "Customer Address",
                    "cust_postal": "Customer Postal",
                    "highest_monthly_bill": "Highest Monthly Bill",
                    "annual_electric_bill": "Annual Electric Spending",
                    "annual_kilowatts_used": "Annual Kilowatts Used",
                    "average_bill": "Average Bill",
                    "thirty_year_utility_cost": "Thirty Year Utility Cost",
                    "current_avg_cost_per_kwh": "Current Average Cost Per Kwh",
                    "federal_tax_credit": "Federal Tax Credit",
                    "estimated_bill_in_30_years": "Estimated Bill in 30 Years",
                    "user_input_1": "User Input #1",
                    "user_input_2": "User Input #2",
                    "user_input_3": "User Input #3",
                    "user_input_4": "User Input #4",
                    "user_input_5": "User Input #5"                    
                };
                $.each(slide.options["local_functions"], function(iii, fn)
                {
                	binding_opts["local_function_" + (iii + '')] = "Local Function #" + ((iii + 1) + '');
                });
                $.each(function_list, function(iii, fn)
                {
                    binding_opts[fn] = fn;
                });
                if(item["type"] === "text")
                {
                    $("<span></span>").addClass("data-bound-label").addClass("label").addClass("label-primary").text("Data-Binding").appendTo(edit_controls);
                    $.each(binding_opts, function(kkk, vvv)
                    {
                        $("<option></option>").attr("value", kkk).text(vvv).appendTo(binding_sel);
                    });
                    if(Object.keys(item).indexOf("data_binding") > -1)
                    {
                        if(item["data_binding"] !== "n/a")
                        {
                            binding_sel.find("option").each(function(iiiii, eeeee)
                            {
                                if($(eeeee).attr("value") === item["data_binding"])
                                {
                                    $(eeeee).attr("selected", "selected");
                                }
                            });
                        }
                    }
                    binding_sel.on("change", function()
                    {
                        $("#slide_view_item_" + slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index]["identifier"]).text("{data-bound}");
                        var val = $(this).val();
                        slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index][index]["data_binding"] = val;
                        $.post("./data", {"fn": "update_data_binding_for_slide_item_component", "value": val, "slide_item_identifier": slide.children[window.slides_maker_slide_index].identifier, "subview_index": (window.slides_maker_subview_index + ''), "item_index": (index + '')}).done(function(ddd)
                        {                            
                        });
                    });
                    binding_sel.appendTo(edit_controls);

                    $("<span></span>").addClass("data-format-label").addClass("label").addClass("label-primary").text("Data-Binding Format").appendTo(edit_controls);
                    $("<br />").appendTo(edit_controls);
                    var formatting_sel = $("<select></select>").attr("id", "data_binding_format_sel_presentation");
                    $("<option></option>").attr("value", "text").text("Text").appendTo(formatting_sel);
                    $("<option></option>").attr("value", "percentage").text("Percentage").appendTo(formatting_sel);
                    $("<option></option>").attr("value", "integer").text("Integer").appendTo(formatting_sel);
                    $("<option></option>").attr("value", "currency").text("Currency").appendTo(formatting_sel);
                    if(Object.keys(item).indexOf("data_formatting") > -1)
                    {
                        formatting_sel.find("option").each(function(iiiii, eeeee)
                        {
                            if($(eeeee).attr("value") === item["data_formatting"])
                            {
                                $(eeeee).attr("selected", "selected");
                            }
                        });
                    }
                    formatting_sel.on("change", function(ev)
                    {
                        var val = $(this).val();
                        slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index][index]["data_formatting"] = val;
                        $.post("./data", {"fn": "update_data_formatting_for_slide_item_component", "value": val, "slide_item_identifier": slide.children[window.slides_maker_slide_index].identifier, "subview_index": (window.slides_maker_subview_index + ''), "item_index": (index + '')}).done(function(ddd)
                        {                            
                        });
                    });
                    formatting_sel.appendTo(edit_controls);                  
                }
                window.color_change_req = null;
                $("<input />").attr("type", "color").attr("id", "edit_slide_item_color").attr("value", rgb2hex(item["color"]))
                .on("change", function()
                {
                    var val = $(this).val();
                    if(val[0] !== "#")
                    {
                        val = "#" + val;
                    }
                    val = coerceToRGBA(val);
                    slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index][index]["color"] = val;
                    if(window.color_change_req !== null)
                    {
                        window.color_change_req.abort();                        
                    }
                    window.color_change_req = 
                    $.post("./data", {"fn": "update_text_item_color", "value": val, "slide_item_identifier": slide.children[window.slides_maker_slide_index].identifier, "subview_index": (window.slides_maker_subview_index + ''), "item_index": (index + '')})
                    .done(function(rrrrrrr)
                    {
                        window.color_change_req = null;
                    });

                }).appendTo(edit_controls);

                edit_controls.find("#slide_item_font_weight option").each(function(i, e)
                {
                    if($(e).attr("value") === item["font-weight"])
                    {
                        $(e).attr("selected", "selected");
                    }
                });

                if(item.type === "rectangle" || item.type === "image" || item.type === "user_input")
                {
                    $("<span></span>")
                    .addClass("label")
                    .addClass("label-primary")
                    .addClass("pres-width-label")
                    .text("Width:")
                    .appendTo(edit_controls);

                    $("<input />").
                    attr("type", "range")
                    .attr("value", item["width"] + '')
                    .attr("step", "1")
                    .attr("min", "1")
                    .attr("max", "700")
                    .attr("id", "edit_pres_item_width")
                    .on("input", function()
                    {
                        var v = $(this).val().digits();
                        if(v !== null)
                        {
                            var i_v = parseInt(v);
                            slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index][index]["width"] = i_v;
                            $(".edit_itemw").text("W: " + v);
                        }
                    })
                    .on("change", function()
                    {
                        var v = $(this).val().digits();
                        if(v !== null)
                        {
                            var i_v = parseInt(v);
                            slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index][index]["width"] = i_v;
                            $(".edit_itemw").text("W: " + v);
                            $.post("./data",
                                {"fn": "update_presentation_item_width",
                                "value": v,
                                "slide_item_identifier": slide.children[window.slides_maker_slide_index].identifier,
                                "subview_index": (window.slides_maker_subview_index + ''),
                                "item_index": (index + '')}
                            );
                        }
                    })
                    .appendTo(edit_controls);

                    $("<span></span>")
                    .addClass("label")
                    .addClass("label-primary")
                    .addClass("pres-height-label")
                    .text("Height:")
                    .appendTo(edit_controls);

                    $("<input />").
                    attr("type", "range")
                    .attr("value", item["height"] + '')
                    .attr("step", "1")
                    .attr("min", "1")
                    .attr("max", "700")
                    .attr("id", "edit_pres_item_height")
                    .on("input", function()
                    {
                        var v = $(this).val().digits();
                        if(v !== null)
                        {
                            var i_v = parseInt(v);
                            slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index][index]["height"] = i_v;
                            $(".edit_itemh").text("H: " + v);
                        }
                    })
                    .on("change", function()
                    {
                        var v = $(this).val().digits();
                        if(v !== null)
                        {
                            var i_v = parseInt(v);
                            slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index][index]["height"] = i_v;
                            $(".edit_itemh").text("H: " + v);
                            $.post("./data",
                                {"fn": "update_presentation_item_height",
                                "value": v,
                                "slide_item_identifier": slide.children[window.slides_maker_slide_index].identifier,
                                "subview_index": (window.slides_maker_subview_index + ''),
                                "item_index": (index + '')}
                            );
                        }
                    })
                    .appendTo(edit_controls);

                    if(item.type !== "image")
                    {
                        $("<span></span>").addClass("label").addClass("label-primary").addClass("rect_bg_color").text("Background Color:")
                        .appendTo(edit_controls);

                        $("<input />")
                        .attr("type", "color")
                        .attr("value", rgb2hex(item["color"]))
                        .attr("id", "slide_edit_background_clr")
                        .on("change", function(ev)
                        {
                            var v = coerceToRGBA($(this).val());
                            slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index][index]["background"] = v;                            
                        })
                        .on("blur", function(ev)
                        {
                            var v = coerceToRGBA($(this).val());
                            slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index][index]["background"] = v;
                            $.post("./data",
                                {"fn": "update_presentation_item_shape_background_color",
                                "value": v,
                                "slide_item_identifier": slide.children[window.slides_maker_slide_index].identifier,
                                "subview_index": (window.slides_maker_subview_index + ''),
                                "item_index": (index + '')}
                            );
                        })
                        .appendTo(edit_controls);

                        $("<span></span>").addClass("label").addClass("label-primary").addClass("label-shape-border-thickness").text("Border Thickness:")
                        .appendTo(edit_controls);

                        $("<input />")
                        .attr("type", "text")
                        .attr("value", item["border-width"] + '')
                        .attr("id", "edit_item_border_width")
                        .on("change", function()
                        {
                            var v = $(this).val().digits();
                            if(v !== null)
                            {
                                slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index][index]["border-width"] = parseInt(v);
                                $.post("./data",
                                    {"fn": "update_presentation_item_shape_border_width",
                                    "value": v,
                                    "slide_item_identifier": slide.children[window.slides_maker_slide_index].identifier,
                                    "subview_index": (window.slides_maker_subview_index + ''),
                                    "item_index": (index + '')}
                                );
                            }
                        }).appendTo(edit_controls);

                        $("<span></span>").addClass("label").addClass("label-primary").text("Border Radius").addClass("label-border-radius").appendTo(edit_controls);

                        $("<input />")
                        .attr("type", "text")
                        .attr("id", "edit_item_border_radius")
                        .attr("value", (item["border-radius"] + ''))
                        .on("change", function()
                        {
                            var v = $(this).val().digits();
                            if(v !== null)
                            {
                                slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index][index]["border-radius"] = parseInt(v);
                                $.post("./data",
                                    {"fn": "update_presentation_item_shape_border_radius",
                                    "value": v,
                                    "slide_item_identifier": slide.children[window.slides_maker_slide_index].identifier,
                                    "subview_index": (window.slides_maker_subview_index + ''),
                                    "item_index": (index + '')}
                                );
                            }
                        }).appendTo(edit_controls);

                        $("<span></span>").addClass("label").addClass("label-primary").addClass("label-border-color").text("Border Color:").appendTo(edit_controls);

                        $("<input />")
                        .attr("type", "color")
                        .attr("value", rgb2hex(item["border-color"]))
                        .attr("id", "slide_edit_border_clr")
                        .on("change", function(ev)
                        {
                            var v = coerceToRGBA($(this).val());
                            slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index][index]["border-color"] = v;                            
                        })
                        .on("blur", function(ev)
                        {
                            var v = coerceToRGBA($(this).val());
                            slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index][index]["border-color"] = v;
                            $.post("./data",
                                {"fn": "update_presentation_item_shape_border_color",
                                "value": v,
                                "slide_item_identifier": slide.children[window.slides_maker_slide_index].identifier,
                                "subview_index": (window.slides_maker_subview_index + ''),
                                "item_index": (index + '')}
                            );
                        })
                        .appendTo(edit_controls);
                    }
                    $("<span></span>").addClass("label").addClass("label-primary").addClass("label-click-handler").text("Slide Click Transition").appendTo(edit_controls);

                    var click_handler_sel = $("<select></select>").attr("id", "slide_item_edit_click_functionality");
                    $("<option value='n/a'>Nothing</option>").appendTo(click_handler_sel);

                    for(var i = 0; i < slide.children.length; i++)
                    {
                        var num = i + 1;
                        num += '';
                        $("<option></option>").attr("value", "goto_slide_" + (i + '')).text("Goto Slide #" + num).appendTo(click_handler_sel);
                    }
                    if(Object.keys(slide.options).indexOf("youtube_assets") > -1)
                    {
                        $.each(slide.options["youtube_assets"], function(i, e)
                        {
                            $("<option></option>").attr("value", "youtube_" + e).text(e).appendTo(click_handler_sel);
                        });
                    }
                    if(Object.keys(slide.options).indexOf("web_assets") > -1)
                    {
                    	$.each(slide.options["web_assets"], function(i, e)
                    	{
                    		$("<option></option>").attr("value", "web_asset_" + e.url).text(e.name).appendTo(click_handler_sel);
                    	});
                    }
                    click_handler_sel.find("option").each(function(i, e)
                    {
                        if($(e).attr("value") === item["on_click"])
                        {
                            $(e).attr("selected", "selected");
                        }
                    });
                    click_handler_sel.change(function()
                    {
                        slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index][index]["on_click"] = click_handler_sel.val();
                        $.post("./data",
                            {"fn": "update_presentation_item_on_click",
                            "value": click_handler_sel.val(),
                            "slide_item_identifier": slide.children[window.slides_maker_slide_index].identifier,
                            "subview_index": (window.slides_maker_subview_index + ''),
                            "item_index": (index + '')}
                        );
                    });
                    click_handler_sel.appendTo(edit_controls);
                }
				if(item["type"] === "user_input")
				{
					$("<span></span>").addClass("label").addClass("label-primary").addClass("label-user-input-default-text").text("Default Text:").appendTo(edit_controls);
					$("<input />").attr("id", "slide_edit_user_input_val").attr("type", "text").attr("value", item["value"])
					.on("change", function(ev)
					{
						slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index][index]["value"] = $.trim($(this).val());
						$.post("./data",
						{"fn": "update_presentation_item_user_input_value",
						"value": $.trim($(this).val()),
						"slide_item_identifier": slide.children[window.slides_maker_slide_index].identifier,
						"subview_index": (window.slides_maker_subview_index + ''),
						"item_index": (index + '')});
							
					})
					.appendTo(edit_controls);
				}
                $("<button></button>").addClass("btn").addClass("btn-danger").text("Remove Item")
                .css("margin-top", "3em").css("clear", "both").css("float", "left")
                .click(function()
                {
                    var that = $(this);
                    that.css("opacity", "0.2").text("Removing...");
                    $.post("./data", {"fn": "remove_slide_item_component", "identifier": slide.children[window.slides_maker_slide_index].identifier, "view_index": (window.slides_maker_subview_index + ''), "item_index": (index + '')})
                    .done(function(r)
                    {
                        var identifier_to_remove = slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index][index]["identifier"];
                        var cpy = [];
                        $.each(slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index], function(i, el)
                        {
                            if(i !== index)
                            {
                                cpy.push(el);
                            }
                        });
                        slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index] = cpy;
                        that.remove();
                        edit_controls.remove();

                        $("#slide_view_item_" + identifier_to_remove).remove();
                    });
                }).appendTo(edit_controls);

                edit_controls.insertAfter($("#slide_view"));
            }
            function renderSlides(slide, function_list)
            {
            	var slide_view = $("#slide_view");
                var curr_bg_color = coerceToRGBA(slide_view.css("background-color"));

                if(curr_bg_color !== coerceToRGBA(slide.children[window.slides_maker_slide_index].options["background"]))
                {
                    slide_view.css("background-color", coerceToRGBA(slide.children[window.slides_maker_slide_index].options["background"]));
                }
                var hex_val = rgb2hex(slide.children[window.slides_maker_slide_index].options["background"]);
                if(hex_val !== $("#change_slide_view_bg_color").val().toUpperCase())
                {
                    $("#change_slide_view_bg_color").val(hex_val);
                }
                var hex_val2 = rgb2hex(slide.children[window.slides_maker_slide_index].options["color"]);
                if(hex_val2 !== $("#change_slide_view_txt_color").val().toUpperCase())
                {
                    $("#change_slide_view_txt_color").val(hex_val2);
                }

                var fontweight_clsmap =
                {
                    "normal": "normal_font_weight",
                    "bold": "bold_font_weight"
                };
            	$.each(slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index], function(i, e)
            	{
            		if($("#slide_view_item_" + e.identifier).size() === 0)
            		{
            			switch(e.type)
            			{
            				case "text":
            					$("<div></div>")
                                .attr("id", "slide_view_item_" + e.identifier)
                                .addClass("slide_view_item")
                                .addClass("slide_view_index_" + (window.slides_maker_slide_index + ''))
                                .addClass("slide_view_subindex_" + (window.slides_maker_subview_index + ''))
                                .css("z-index", ((12 + i) + ''))
                                .on("dblclick", function(evv)
                                {
                                	evv.stopPropagation();
                                    showItemEditControls(slide, $(this).prevAll(".slide_view_item").size(), function_list, $(this));
                                    if(Object.keys(slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index][i]).indexOf("data_binding") > -1)
                                    {
                                        if(slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index][i]["data_binding"] !== "n/a")
                                        {
                                            return;
                                        }
                                    }
                                    $(this).attr("contenteditable", "true")
                                    .off("blur")
                                    .off("paste")
                                    .on("paste", function(ev)
                                    {
                                        ev.preventDefault();
                                        var text = ev.originalEvent.clipboardData.getData("text/plain");
                                        document.execCommand("insertHTML", false, text);
                                        $(this).trigger("keyup");
                                        $(this).trigger("blur");
                                    })
                                    .on("keyup", function(ev)
                                    {
                                        slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index][i].value = $(this).text();
                                    })
                                    .on("blur", function(ev)
                                    {
                                        $(this).removeAttr("contenteditable");
                                        var txt = $(this).text();
                                        $.post("./data", {"fn": "update_slite_item_text_value", "identifier": e.identifier, "slide_item_identifier": slide.children[window.slides_maker_slide_index].identifier, "subview_index": (window.slides_maker_subview_index + ''), "txt": txt});
                                    });
                                    $(this)[0].focus();
                                })
                                .appendTo(slide_view)
                                .draggable
                                (
                                    {
                                        "start": function(ev, ui)
                                        {
                                            showItemEditControls(slide, $(ui.helper[0]).prevAll(".slide_view_item").size(), function_list,  $(ui.helper[0]));
                                        },
                                        "stop": function(ev, ui)
                                        {
                                            var x = ui.position.left;
                                            var y = ui.position.top;
                                            if(x < 0)
                                            {
                                                x = 0;
                                            }
                                            if(y < 0)
                                            {
                                                y = 0;
                                            }
                                            if(x > 695)
                                            {
                                                x = 695;
                                            }
                                            if(y > 695)
                                            {
                                                y = 695;
                                            }
                                            x = parseInt(x);
                                            y = parseInt(y);
                                            slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index][i].x = x;
                                            slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index][i].y = y;
                                            $(".edit_itemx").text("X: " + (x + ''));
                                            $(".edit_itemy").text("Y: " + (y + ''));
                                            $.post("./data", {"fn": "update_slide_item_x_y", "identifier": slide.children[window.slides_maker_slide_index].identifier, "subview_index": (window.slides_maker_subview_index + ''), "index": (i + ''), "x": (x + ''), "y": (y + '')});
                                            $(ui.helper).css("width", "auto").css("height", "auto");
                                        }
                                    }
                                );
            					break;
                            case "rectangle":
                                $("<div></div>")
                                .attr("id", "slide_view_item_" + e.identifier)
                                .addClass("slide_view_item")
                                .addClass("slide_view_index_" + (window.slides_maker_slide_index + ''))
                                .addClass("slide_view_subindex_" + (window.slides_maker_subview_index + ''))
                                .css("z-index", ((12 + i) + ''))
                                .on("dblclick", function(evv)
                                {
                                	evv.stopPropagation();
                                    showItemEditControls(slide, $(this).prevAll(".slide_view_item").size(), function_list, $(this));
                                })
                                .appendTo(slide_view)
                                .draggable
                                (
                                    {
                                        "start": function(ev, ui)
                                        {
                                            showItemEditControls(slide, $(ui.helper[0]).prevAll(".slide_view_item").size(), function_list, $(ui.helper[0]));
                                        },
                                        "stop": function(ev, ui)
                                        {
                                            var x = ui.position.left;
                                            var y = ui.position.top;
                                            if(x < 0)
                                            {
                                                x = 0;
                                            }
                                            if(y < 0)
                                            {
                                                y = 0;
                                            }
                                            if(x > 700)
                                            {
                                                x = 700;
                                            }
                                            if(y > 700)
                                            {
                                                y = 700;
                                            }
                                            x = parseInt(x);
                                            y = parseInt(y);
                                            slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index][i].x = x;
                                            slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index][i].y = y;
                                            $(".edit_itemx").text("X: " + (x + ''));
                                            $(".edit_itemy").text("Y: " + (y + ''));
                                            $.post("./data", {"fn": "update_slide_item_x_y", "identifier": slide.children[window.slides_maker_slide_index].identifier, "subview_index": (window.slides_maker_subview_index + ''), "index": (i + ''), "x": (x + ''), "y": (y + '')});
                                            $(ui.helper).css("width", "auto").css("height", "auto");
                                        }
                                    }
                                );
                                break;

                            case "image":
                                var src = "https://storage.googleapis.com/" + window.app_bucket + "/SlideImages/" + slide.identifier + "/" + e.image_identifier + "." + e.image_extension;
                                if(e.image_identifier === "cad_photo")
                                {
                                    src = "https://storage.googleapis.com/" + window.app_bucket + "/SlideImages/cad_photo.jpg";
                                }
                                $("<div></div>")
                                .attr("id", "slide_view_item_" + e.identifier)
                                .addClass("slide_view_item")
                                .addClass("slide_view_index_" + (window.slides_maker_slide_index + ''))
                                .addClass("slide_view_subindex_" + (window.slides_maker_subview_index + ''))
                                .css("z-index", ((12 + i) + ''))
                                .append
                                (
                                    $("<img />")
                                    .css("display", "block")
                                    .css("width", (e.width + '') + 'px')
                                    .css("max-width", (e.width + '') + 'px')
                                    .css("height", (e.height + '') + 'px')
                                    .css("max-height", (e.height + '') + 'px')
                                    .attr("src", src)
                                )
                                .on("dblclick", function(evv)
                                {
                                	evv.stopPropagation();
                                    showItemEditControls(slide, $(this).prevAll(".slide_view_item").size(), function_list, $(this));
                                })
                                .appendTo(slide_view)
                                .draggable
                                (
                                    {
                                        "start": function(ev, ui)
                                        {
                                            showItemEditControls(slide, $(ui.helper[0]).prevAll(".slide_view_item").size(), function_list, $(ui.helper[0]));
                                        },
                                        "stop": function(ev, ui)
                                        {
                                            var x = ui.position.left;
                                            var y = ui.position.top;
                                            if(x < 0)
                                            {
                                                x = 0;
                                            }
                                            if(y < 0)
                                            {
                                                y = 0;
                                            }
                                            if(x > 700)
                                            {
                                                x = 700;
                                            }
                                            if(y > 700)
                                            {
                                                y = 700;
                                            }
                                            x = parseInt(x);
                                            y = parseInt(y);
                                            slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index][i].x = x;
                                            slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index][i].y = y;
                                            $(".edit_itemx").text("X: " + (x + ''));
                                            $(".edit_itemy").text("Y: " + (y + ''));
                                            $.post("./data", {"fn": "update_slide_item_x_y", "identifier": slide.children[window.slides_maker_slide_index].identifier, "subview_index": (window.slides_maker_subview_index + ''), "index": (i + ''), "x": (x + ''), "y": (y + '')});
                                            if(e.type !== "image")
                                            {
                                                $(ui.helper).css("width", "auto").css("height", "auto");
                                            }
                                        }
                                    }
                                );
                                break;

                            case "user_input":
                                $("<div></div>")
                                .css("font-family", "Arial, Helvetica, sans-serif")
                                .attr("id", "slide_view_item_" + e.identifier)
                                .addClass("slide_view_item")
                                .addClass("slide_view_index_" + (window.slides_maker_slide_index + ''))
                                .addClass("slide_view_subindex_" + (window.slides_maker_subview_index + ''))
                                .css("z-index", ((12 + i) + ''))
                                .css("width", (e.width + '') + 'px')
                                .css("max-width", (e.width + '') + 'px')
                                .css("height", (e.height + '') + 'px')
                                .css("max-height", (e.height + '') + 'px')
                                .on("dblclick", function(evv)
                                {
                                	evv.stopPropagation();
                                    showItemEditControls(slide, $(this).prevAll(".slide_view_item").size(), function_list, $(this));
                                })
                                .draggable
                                (
                                    {
                                        "start": function(ev, ui)
                                        {
                                            showItemEditControls(slide, $(ui.helper[0]).prevAll(".slide_view_item").size(), function_list, $(ui.helper[0]));
                                        },
                                        "stop": function(ev, ui)
                                        {
                                            var x = ui.position.left;
                                            var y = ui.position.top;
                                            if(x < 0)
                                            {
                                                x = 0;
                                            }
                                            if(y < 0)
                                            {
                                                y = 0;
                                            }
                                            if(x > 695)
                                            {
                                                x = 695;
                                            }
                                            if(y > 695)
                                            {
                                                y = 695;
                                            }
                                            x = parseInt(x);
                                            y = parseInt(y);
                                            slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index][i].x = x;
                                            slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index][i].y = y;
                                            $(".edit_itemx").text("X: " + (x + ''));
                                            $(".edit_itemy").text("Y: " + (y + ''));
                                            $.post("./data", {"fn": "update_slide_item_x_y", "identifier": slide.children[window.slides_maker_slide_index].identifier, "subview_index": (window.slides_maker_subview_index + ''), "index": (i + ''), "x": (x + ''), "y": (y + '')});
                                            $(ui.helper).css("width", "auto").css("height", "auto");
                                        }
                                    }
                                )
                                .appendTo(slide_view);
                                break;

                            case "two_dimensional_graph":
                                $("<div></div>")
                                .css("font-family", "Arial, Helvetica, sans-serif")
                                .attr("id", "slide_view_item_" + e.identifier)
                                .addClass("slide_view_item")
                                .addClass("slide_view_index_" + (window.slides_maker_slide_index + ''))
                                .addClass("slide_view_subindex_" + (window.slides_maker_subview_index + ''))
                                .css("z-index", ((12 + i) + ''))
                                .on("dblclick", function(evv)
                                {
                                	evv.stopPropagation();
                                    showItemEditControls(slide, $(this).prevAll(".slide_view_item").size(), function_list, $(this));
                                })
                                .draggable
                                (
                                    {
                                        "start": function(ev, ui)
                                        {
                                            //showItemEditControls(slide, $(ui.helper[0]).prevAll(".slide_view_item").size(), function_list);
                                        },
                                        "stop": function(ev, ui)
                                        {
                                            var x = ui.position.left;
                                            var y = ui.position.top;
                                            if(x < 0)
                                            {
                                                x = 0;
                                            }
                                            if(y < 0)
                                            {
                                                y = 0;
                                            }
                                            if(x > 695)
                                            {
                                                x = 695;
                                            }
                                            if(y > 695)
                                            {
                                                y = 695;
                                            }
                                            x = parseInt(x);
                                            y = parseInt(y);
                                            slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index][i].x = x;
                                            slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index][i].y = y;
                                            $(".edit_itemx").text("X: " + (x + ''));
                                            $(".edit_itemy").text("Y: " + (y + ''));
                                            $.post("./data", {"fn": "update_slide_item_x_y", "identifier": slide.children[window.slides_maker_slide_index].identifier, "subview_index": (window.slides_maker_subview_index + ''), "index": (i + ''), "x": (x + ''), "y": (y + '')});
                                            $(ui.helper).css("width", "auto").css("height", "auto");
                                        }
                                    }
                                )
                                .appendTo(slide_view);
                                break;
            			}
            		}
            	});

                $.each(slide.children[window.slides_maker_slide_index].views[window.slides_maker_subview_index], function(i, e)
                {
                    var el = $("#slide_view_item_" + e.identifier);
                    var top = el.css("top");
                    var target_top = (e.y + '') + 'px';
                    var left = el.css("left");
                    var target_left = (e.x + '') + 'px';
                    if(top !== target_top && !el.hasClass("ui-draggable-dragging"))
                    {
                      el.css("top", target_top);
                    }
                    if(left !== target_left && !el.hasClass("ui-draggable-dragging"))
                    {
                      el.css("left", target_left);
                    }

                    var value = el.text();
                    var target_value = e.value;
                    if(Object.keys(e).indexOf("data_binding") > -1)
                    {
                        if(e["data_binding"] !== "n/a")
                        {
                            target_value = "{data-bound}";
                        }
                    }
                    if(value !== target_value && e.type === "text")
                    {
                      if(el.attr("contenteditable") !== "true")
                      {
                        el.text(target_value);
                      }
                    }
                    if(el.hasClass("normal_font_weight") && e["font-weight"] !== "normal")
                    {
                        el.removeClass("normal_font_weight");
                    }
                    if(el.hasClass("bold_font_weight") && e["font-weight"] !== "bold")
                    {
                        el.removeClass("bold_font_weight");
                    }
                    if(e["font-weight"] === "normal" && !el.hasClass("normal_font_weight"))
                    {
                        el.addClass("normal_font_weight");
                    }
                    if(e["font-weight"] === "bold" && !el.hasClass("bold_font_weight"))
                    {
                        el.addClass("bold_font_weight");
                    }
                    if(e["type"] === "rectangle")
                    {
                        var curr_el_bg = coerceToRGBA(el.css("background-color"));
                        if(curr_el_bg !== e["background"])
                        {
                            el.css("background-color", e["background"]);
                        }

                        var curr_el_width = el.css("width").digits();
                        if(curr_el_width === null)
                        {
                            curr_el_width = "0";
                        }
                        var target_width = e["width"] + '';
                        if(curr_el_width !== target_width)
                        {
                            el.css("width", target_width).css("min-width", target_width);
                        }

                        var curr_el_height = el.css("height").digits();
                        if(curr_el_height === null)
                        {
                            curr_el_height = 0;
                        }

                        var target_height = e["height"] + '';
                        if(curr_el_height !== target_height)
                        {
                            el.css("height", target_height).css("min-height", target_height);
                        }

                        var curr_border_thickness = el.css("border-width").digits();
                        var target_border_thickness = e["border-width"] + '';
                        if(curr_border_thickness !== target_border_thickness)
                        {
                            el.css("border-width", ((target_border_thickness + '') + 'px'));
                        }

                        var curr_border_radius = el.css("border-radius");
                        if(curr_border_radius.indexOf(" ") > -1)
                        {
                            curr_border_radius = curr_border_radius.split(" ");
                            curr_border_radius = curr_border_radius[0];
                        }
                        curr_border_radius = curr_border_radius.digits();

                        var target_border_radius = e["border-radius"] + '';
                        if(target_border_radius !== curr_border_radius)
                        {
                            var border_radius_str = target_border_radius + "px " + target_border_radius + "px " + target_border_radius + "px " + target_border_radius + "px";
                            el.css("border-radius", border_radius_str);
                        }

                        var curr_border_color = coerceToRGBA(el.css("border-color"));
                        var target_border_color = e["border-color"];
                        if(curr_border_color !== target_border_color)
                        {
                            el.css("border-color", target_border_color);
                        }

                    }
                    if(e["type"] === "image")
                    {
                        var curr_el_width = el.css("width").digits();
                        if(curr_el_width === null)
                        {
                            curr_el_width = "0";
                        }
                        var target_width = e["width"] + '';
                        if(curr_el_width !== target_width)
                        {
                            el.css("width", target_width).css("min-width", target_width);
                        }

                        var curr_el_height = el.css("height").digits();
                        if(curr_el_height === null)
                        {
                            curr_el_height = 0;
                        }

                        var target_height = e["height"] + '';
                        if(curr_el_height !== target_height)
                        {
                            el.css("height", target_height).css("min-height", target_height);
                        }

                        var curr_img_width = el.find("img").css("width").digits();
                        var target_img_width = e["width"] + '';
                        if(curr_img_width !== target_img_width)
                        {
                            el.find("img").css("width", target_img_width + 'px');
                        }

                        var curr_img_height = el.find("img").css("height").digits();
                        var target_img_height = e["height"] + '';
                        if(curr_img_height !== target_img_height)
                        {
                            el.find("img").css("height", target_img_height + 'px');
                        }

                        var curr_min_width = el.find("img").css("min-width").digits();
                        var target_min_width = e["width"] + '';
                        if(curr_min_width !== target_min_width)
                        {
                            el.find("img").css("min-width", target_min_width + 'px');
                        }

                        var curr_max_width = el.find("img").css("max-width").digits();
                        var target_max_width = e["width"] + '';
                        if(curr_max_width !== target_max_width)
                        {
                            el.find("img").css("max-width", target_max_width + 'px');
                        }

                        var curr_min_height = el.find("img").css("min-height").digits();
                        var target_min_height = e["height"] + '';
                        if(curr_min_height !== target_min_height)
                        {
                            el.find("img").css("min-height", target_min_height + 'px');
                        }

                        var curr_max_height = el.find("img").css("max-height").digits();
                        var target_max_height = e["height"] + '';
                        if(curr_max_height !== target_max_height)
                        {
                            el.find("img").css("max-height", target_max_height + 'px');
                        }

                    }
                    if(e["type"] === "user_input")
                    {                    	
                        if(el.find("span").size() === 0)
                        {
                            $("<span></span>").text(e["value"]).addClass("user_input_placeholder").appendTo(el);
                        }
                        
                        var target_txt = e["value"];
                        if(target_txt !== el.find(".user_input_placeholder").first().text())
                        {
                        	el.find(".user_input_placeholder").text(target_txt);
                        }
                        var curr_el_bg = coerceToRGBA(el.css("background-color"));
                        if(curr_el_bg !== e["background"])
                        {
                            el.css("background-color", e["background"]);
                        }

                        var curr_el_width = el.css("width").digits();
                        if(curr_el_width === null)
                        {
                            curr_el_width = "0";
                        }

                        var target_width = e["width"] + '';
                        if(curr_el_width !== target_width)
                        {
                            el.css("width", target_width + 'px').css("min-width", target_width + 'px');
                        }

                        var target_height = e["height"] + '';
                        var curr_el_height = el.css("height").digits();
                        if(curr_el_height !== target_height)
                        {
                            el.css("height", target_height).css("min-height", target_height).css("max-height", target_height).css("height", target_height);
                        }

                        var curr_border_thickness = el.css("border-width").digits();
                        var target_border_thickness = e["border-width"] + '';
                        if(curr_border_thickness !== target_border_thickness)
                        {
                            el.css("border-width", ((target_border_thickness + '') + 'px'));
                        }

                        var curr_border_radius = el.css("border-radius");
                        if(curr_border_radius.indexOf(" ") > -1)
                        {
                            curr_border_radius = curr_border_radius.split(" ");
                            curr_border_radius = curr_border_radius[0];
                        }
                        curr_border_radius = curr_border_radius.digits();

                        var target_border_radius = e["border-radius"] + '';
                        if(target_border_radius !== curr_border_radius)
                        {
                            var border_radius_str = target_border_radius + "px " + target_border_radius + "px " + target_border_radius + "px " + target_border_radius + "px";
                            el.css("border-radius", border_radius_str);
                        }

                        var curr_border_color = coerceToRGBA(el.css("border-color"));
                        var target_border_color = e["border-color"];
                        if(curr_border_color !== target_border_color)
                        {
                            el.css("border-color", target_border_color);
                        }
                    }

                    if(e["type"] !== "two_dimensional_graph")
                    {
                        var curr_font_size = el.css("font-size").digits();
                        var target_font_size = e["font-size"].digits();
                        if(curr_font_size !== target_font_size)
                        {
                            el.css("font-size", (target_font_size + 'px'));
                        }

                        var curr_font_family = el.css("font-family");
                        if(curr_font_family.indexOf(",") > -1)
                        {
                            curr_font_family = curr_font_family.split(",")[0];
                        }
                        curr_font_family = $.trim(curr_font_family);
                        var target_font_family = e["font-family"];
                        if(target_font_family !== curr_font_family)
                        {
                            el.css("font-family", target_font_family);
                        }

                        var curr_item_txt_color = coerceToRGBA(el.css("color"));
                        var target_item_txt_color = coerceToRGBA(e["color"]);
                        if(curr_item_txt_color !== target_item_txt_color)
                        {
                            el.css("color", target_item_txt_color);
                        }
                    }
                    else
                    {
                        var curr_el_width = el.css("width").digits();
                        if(curr_el_width === null)
                        {
                            curr_el_width = "0";
                        }
                        var target_width = e["width"] + '';
                        if(curr_el_width !== target_width)
                        {
                            el.css("width", target_width).css("min-width", target_width);
                        }

                        var curr_el_height = el.css("height").digits();
                        if(curr_el_height === null)
                        {
                            curr_el_height = 0;
                        }

                        var target_height = e["height"] + '';
                        if(curr_el_height !== target_height)
                        {
                            el.css("height", target_height).css("min-height", target_height);
                        }

                        if(el.find("img").size() === 0)
                        {
                            $("<img />").css("display", "block").css("width", "100%").css("height", "100%").attr("src", "/bootstrap/images/checkers.png").appendTo(el);
                            el.css("background", "rgba(255,255,255,1.0)");
                        }
                    }

                });
                $(".slide_view_item").each(function(i, e)
                {
                    if(!$(e).hasClass("slide_view_index_" + (window.slides_maker_slide_index + '')))
                    {
                        $(e).remove();
                    }
                    else if(!$(e).hasClass("slide_view_subindex_" + (window.slides_maker_subview_index + '')))
                    {
                        $(e).remove();
                    }
                });
                idxs_to_remove = [];
                $(".sv_choice").each(function(i, e)
                {
                    var num = (i + 1) + '';
                    if($.trim($("e").find("a").first().text() !== "View #" + num))
                    {
                        $(e).find("a").first().text("View #" + num);
                    }
                    if(i === slide.children[window.slides_maker_slide_index].views.length)
                    {
                        idxs_to_remove.push(i);
                    }
                });
                $.each(idxs_to_remove, function(i, e)
                {
                    $(".sv_choice").eq(e).remove();
                });
            }
            function dropSubview(glyph, slide)
            {
                var li = glyph.parent();
                var ul = li.parent();

                if(li.prevAll("li").size() === 0)
                {
                    window.alert("The primary view cannot be removed.");
                    return;
                }
                ul.css("opacity", "0.1");
                var idx = li.prevAll("li").size();
                var first = $(".sv_choice").first();
                $.post("./data", {"fn": "drop_subview", "index": (idx + ''), "identifier": slide.children[window.slides_maker_slide_index].identifier}).done(function(r)
                {
                    ul.css("opacity", "1.0");
                    $(".sv_choice").first().trigger("click");
                    var cpy = [];
                    views = slide.children[window.slides_maker_slide_index].views;
                    $.each(views, function(i, view)
                    {
                        if(i !== idx)
                        {
                            cpy.push(view);
                        }
                    });

                    slide.children[window.slides_maker_slide_index].views = cpy;
                });
            }
            function locatePMCustomer(qry)
            {
                qry = qry.toLowerCase();
                var matches = [];
                $(".pm_group").each(function(i, e)
                {
                    var data = $.parseJSON($(e).find(".pm_projs").val());
                    $.each(data, function(k, item)
                    {
                        if($.trim(item.customer_name.toLowerCase()).indexOf(qry) > -1)
                        {
                            var obj = $.parseJSON(JSON.stringify(item));
                            obj["group_idx"] = i;
                            matches.push(obj);
                        }
                    });
                });

                if(matches.length === 1)
                {
                    $(".pm_search_results").remove();
                    $(".pm_group").eq(matches[0].group_idx).trigger("click", [matches[0].identifier]);
                }
                else if(matches.length > 1)
                {
                    $(".pm_search_results").remove();

                    var sr_div = $("<div></div>").addClass("pm_search_results");
                    sr_div.append
                    (
                        $("<span></span>").text("X").addClass("pm_search_close")
                        .click(function()
                        {
                                sr_div.remove();
                        })
                    );

                    $.each(matches, function(iii, match)
                    {
                        $("<p></p>").text(match.customer_name + ", " + match.address + ", " + match.city + ", " + match.state)
                        .click(function()
                        {
                            $(".pm_group").eq(match.group_idx).trigger("click", [match.identifier]);
                        })
                        .appendTo(sr_div);
                    });
                    sr_div.insertAfter($(".pm_search").first());
                }
                else
                {
                    $(".pm_search_results").remove();
                    var old_val = $(".pm_search").val();
                    $(".pm_search").val("No matches :(");
                    setTimeout(function()
                    {
                        $(".pm_search").val(old_val);
                    }, 1500);
                }
            }
            function showProjectManagementTabV2()
            {
                clearApp(function()
                {
                    var app_area = $("#app_area");
                    var spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");
                    var main_div = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10");
                    var pm_div = $("<div></div>").addClass("pm_v2_wrapper");
                    var spacer_clone = spacer.clone();

                    $("<h2></h2>").text("Loading...").appendTo(app_area);

                    $.post("/data2", {"fn": "get_customers_for_pm_tab_v2"}).done(function(resp)
                    {
                        app_area.find("h2").remove();

                        $("<input />").attr("type", "text").attr("id", "pm_v2_search_box").attr("placeholder", "Locate a Customer by Name...")
                        .blur(function()
                        {
                            var that = $(this);
                            var query = $.trim(that.val());
                            if(query.length === 0)
                            {
                                return;
                            }
                            $(".pm_v2_search_match").remove();
                            query = query.toLowerCase();
                            var customers = [];
                            var identifiers_found = [];
                            $(".pm_v2_wrapper").find(".json").each(function(i, e)
                            {
                                var json = $.parseJSON($(e).val());
                                if(typeof(json.length) + '' === "number")
                                {
                                    $.each(json, function(ii, ee)
                                    {
                                        if(identifiers_found.indexOf(ee.identifier) === -1)
                                        {
                                            identifiers_found.push(ee.identifier);
                                            customers.push({"identifier": ee.identifier, "name": ee.name});
                                        }
                                    });
                                }
                                else
                                {
                                    $.each(Object.keys(json), function(ii, key)
                                    {
                                        $.each(json[key], function(iii, eee)
                                        {
                                            if(identifiers_found.indexOf(eee.identifier) === -1)
                                            {
                                                identifiers_found.push(eee.identifier);
                                                customers.push({"identifier": eee.identifier, "name": eee.name});
                                            }
                                        });
                                    });
                                }
                            });

                            var matches = [];
                            $.each(customers, function(i, customer)
                            {
                                if(customer.name.toLowerCase().indexOf(query) > -1)
                                {
                                    matches.push(customer);
                                }
                            });
                            if(matches.length === 0)
                            {
                                that.val("No results, try again");
                                setTimeout(function()
                                {
                                    that.val("");
                                }, 1500);
                            }
                            else
                            {
                                $.each(matches, function(i, e)
                                {
                                    var p = $("<p></p>").addClass("pm_v2_search_match").text(e.name).data("identifier", e.identifier)
                                    .click(function()
                                    {
                                        $(".pm_v2_search_match").remove();
                                        var found = false;
                                        $(".pm_group_v2").each(function(ii, ee)
                                        {
                                            if(found)
                                            {
                                                return;
                                            }
                                            $(ee).trigger("click");
                                            $(".pm_v2_customer").each(function(iii, eee)
                                            {
                                                if(found)
                                                {
                                                    return;
                                                }
                                                if($(eee).data("identifier") === e.identifier)
                                                {
                                                    found = true;
                                                    $(eee)[0].scrollIntoView();
                                                    $(eee).trigger("click");
                                                }
                                            });
                                        });
                                    });
                                    p.insertAfter(that);
                                    if(matches.length === 1)
                                    {
                                        p.trigger("click");
                                    }
                                });
                            }
                        })
                        .appendTo(pm_div);

                        $("<input />").attr("type", "text").attr("id", "pm_v2_addie_search").attr("placeholder", "Search by address...")
                        .blur(function()
                        {
                            var that = $(this);
                            var query = $.trim(that.val());
                            if(query.length === 0)
                            {
                                return;
                            }
                            $(".pm_v2_search_match").remove();
                            query = query.toLowerCase();

                            $.post("/data", {"fn": "pm_addy_search", "identifiers": JSON.stringify(resp.all_identifiers), "query": query}).done(function(resp2)
                            {  
                                if(resp2.results.length === 0)
                                {
                                    that.val("No results, try again");
                                
                                    setTimeout(function()
                                    {
                                        that.val("");
                                    }, 1500);
                                }
                                else
                                {
                                    $.each(resp2.results, function(i, result)
                                    {
                                        var p = $("<p></p>").addClass("pm_v2_search_match").text(result.name + " | " + result.address).data("identifier", result.identifier)
                                        .click(function()
                                        {
                                            $(".pm_v2_search_match").remove();
                                            var found = false;
                                            $(".pm_group_v2").each(function(ii, ee)
                                            {
                                                if(found)
                                                {
                                                    return;
                                                }
                                                $(ee).trigger("click");
                                                $(".pm_v2_customer").each(function(iii, eee)
                                                {
                                                    if(found)
                                                    {
                                                        return;
                                                    }
                                                    if($(eee).data("identifier") === result.identifier)
                                                    {
                                                        found = true;
                                                        $(eee)[0].scrollIntoView();
                                                        $(eee).trigger("click");
                                                    }
                                                });
                                            });
                                        });
                                        p.insertAfter(that);
                                        if(resp2.results.length === 1)
                                        {
                                            p.trigger("click");
                                        }
                                    });
                                }
                            });
                        }).appendTo(pm_div);

                        $("<select></select>").attr("id", "pm_filter_sel")
                        .append
                        (
                            $("<option></option>").attr("value", "-1").text("Search by Criteria")
                        )
                        .append
                        (
                            $("<option></option>").attr("value", "0").text("Search Panel Work Required (Including PTO Received)")
                        )
                        .append
                        (
                            $("<option></option>").attr("value", "1").text("Search Panel Work Required (Excluding PTO Received)")
                        )
                        .append
                        (
                            $("<option></option>").attr("value", "2").text("Search Attachment Type Set to 'Other' (Including PTO Received)")
                        )
                        .append
                        (
                            $("<option></option>").attr("value", "3").text("Search Attachment Type Set to 'Other' (Excluding PTO Received)")
                        )
                        .change(function()
                        {
                            $(".pm_v2_search_match").remove();
                            var that5 = $(this);
                            var parsed = parseInt(that5.val());
                            if(parsed >= 0)
                            {
                                var include_pto_received = (parsed === 0 || parsed === 2);
                                var fns = 
                                [
                                    function()
                                    {
                                        $.each(resp.all_projects, function(ii, project)
                                        {
                                            if(!include_pto_received && project.pto_received)
                                            {
                                                return;
                                            }
                                            if(project.panel_work_needed)
                                            {
                                                var p = $("<p></p>").addClass("pm_v2_search_match").text(project.name).data("identifier", project.identifier);
                                                p.click(function()
                                                {
                                                    $(".pm_v2_search_match").remove();
                                                    var found = false;
                                                    $(".pm_group_v2").each(function(iiii, eeee)
                                                    {
                                                        if(found)
                                                        {
                                                            return;
                                                        }
                                                        $(eeee).trigger("click");
                                                        $(".pm_v2_customer").each(function(iiiii, eeeee)
                                                        {
                                                            if(found)
                                                            {
                                                                return;
                                                            }
                                                            if($(eeeee).data("identifier") === project.identifier)
                                                            {
                                                                found = true;
                                                                $(eeeee)[0].scrollIntoView();
                                                                $(eeeee).trigger("click");
                                                            }
                                                        });
                                                    });
                                                });
                                                p.insertAfter(that5);
                                            }
                                        });
                                    },
                                    function()
                                    {
                                        $.each(resp.all_projects, function(ii, project)
                                        {
                                            if(!include_pto_received && project.pto_received)
                                            {
                                                return;
                                            }
                                            if(project.panel_work_needed)
                                            {
                                                var p = $("<p></p>").addClass("pm_v2_search_match").text(project.name).data("identifier", project.identifier);
                                                p.click(function()
                                                {
                                                    $(".pm_v2_search_match").remove();
                                                    var found = false;
                                                    $(".pm_group_v2").each(function(iiii, eeee)
                                                    {
                                                        if(found)
                                                        {
                                                            return;
                                                        }
                                                        $(eeee).trigger("click");
                                                        $(".pm_v2_customer").each(function(iiiii, eeeee)
                                                        {
                                                            if(found)
                                                            {
                                                                return;
                                                            }
                                                            if($(eeeee).data("identifier") === project.identifier)
                                                            {
                                                                found = true;
                                                                $(eeeee)[0].scrollIntoView();
                                                                $(eeeee).trigger("click");
                                                            }
                                                        });
                                                    });
                                                });
                                                p.insertAfter(that5);
                                            }
                                        });
                                    },
                                    function()
                                    {
                                        $.each(resp.all_projects, function(ii, project)
                                        {
                                            if(!include_pto_received && project.pto_received)
                                            {
                                                return;
                                            }
                                            if(project.attachment_type === "Other")
                                            {
                                                var p = $("<p></p>").addClass("pm_v2_search_match").text(project.name).data("identifier", project.identifier);
                                                p.click(function()
                                                {
                                                    $(".pm_v2_search_match").remove();
                                                    var found = false;
                                                    $(".pm_group_v2").each(function(iiii, eeee)
                                                    {
                                                        if(found)
                                                        {
                                                            return;
                                                        }
                                                        $(eeee).trigger("click");
                                                        $(".pm_v2_customer").each(function(iiiii, eeeee)
                                                        {
                                                            if(found)
                                                            {
                                                                return;
                                                            }
                                                            if($(eeeee).data("identifier") === project.identifier)
                                                            {
                                                                found = true;
                                                                $(eeeee)[0].scrollIntoView();
                                                                $(eeeee).trigger("click");
                                                            }
                                                        });
                                                    });
                                                });
                                                p.insertAfter(that5);
                                            }
                                        });
                                    },
                                    function()
                                    {
                                        $.each(resp.all_projects, function(ii, project)
                                        {
                                            if(!include_pto_received && project.pto_received)
                                            {
                                                return;
                                            }
                                            if(project.attachment_type === "Other")
                                            {
                                                var p = $("<p></p>").addClass("pm_v2_search_match").text(project.name).data("identifier", project.identifier);
                                                p.click(function()
                                                {
                                                    $(".pm_v2_search_match").remove();
                                                    var found = false;
                                                    $(".pm_group_v2").each(function(iiii, eeee)
                                                    {
                                                        if(found)
                                                        {
                                                            return;
                                                        }
                                                        $(eeee).trigger("click");
                                                        $(".pm_v2_customer").each(function(iiiii, eeeee)
                                                        {
                                                            if(found)
                                                            {
                                                                return;
                                                            }
                                                            if($(eeeee).data("identifier") === project.identifier)
                                                            {
                                                                found = true;
                                                                $(eeeee)[0].scrollIntoView();
                                                                $(eeeee).trigger("click");
                                                            }
                                                        });
                                                    });
                                                });
                                                p.insertAfter(that5);
                                            }
                                        });
                                    }
                                ];
                                fns[parsed]();
                            }
                        })
                        .appendTo(pm_div);
                        $("<br />").appendTo(pm_div);
                        $("<br />").appendTo(pm_div);


                        $("<div></div>").addClass("pm_group_v2").text("Unassigned").attr("data-identifier", "unassigned").data("name", "Unassigned")
                        .append
                        (
                            $("<span></span>").addClass("project_tally").text(resp["unassigned"].length + '')
                        )
                        .append
                        (
                            $("<input />").attr("type", "hidden").addClass("json").attr("value", JSON.stringify(resp["unassigned"]))
                        )
                        .appendTo(pm_div);

                        $.each(Object.keys(resp["projects"]), function(i, pm_identifier)
                        {
                            var tally = 0;
                            Object.keys(resp["projects"][pm_identifier]).map(function(stage, arr)
                            {
                                tally += resp["projects"][pm_identifier][stage].length;
                            });
                            $("<div></div>").addClass("pm_group_v2").attr("data-identifier", pm_identifier).attr("data-name", resp.pm_identifier_name_dict[pm_identifier]).text(resp.pm_identifier_name_dict[pm_identifier])
                            .append
                            (
                                $("<span></span>").addClass("project_tally").text(tally + '')
                            )
                            .append
                            (
                                $("<input />").attr("type", "hidden").addClass("json").attr("value", JSON.stringify(resp["projects"][pm_identifier]))
                            )
                            .appendTo(pm_div);
                        });

                        $("<div></div>").addClass("pm_group_v2").text("PTO Received").attr("data-identifier", "pto_received").attr("data-name", "PTO Received")
                        .append
                        (
                            $("<span></span>").addClass("project_tally").text(resp["pto_received"].length + '')
                        )
                        .append
                        (
                            $("<input />").attr("type", "hidden").addClass("json").attr("value", JSON.stringify(resp["pto_received"]))
                        )
                        .appendTo(pm_div);

                        pm_div.appendTo(main_div);

                        $.each([spacer, main_div, spacer_clone], function(i, e)
                        {
                            e.appendTo(app_area);
                        });

                        $(".pm_group_v2").on("click", function(ev)
                        {
                            if(!$(ev.target).hasClass("pm_group_v2"))
                            {
                                return;
                            }
                            $(".pm_customers_wrapper_v2").remove();
                            $(".pm_sub_group").remove();
                            var that = $(this);
                            var identifier = $(this).data("identifier");
                            var data = $.parseJSON($(this).find("input").first().val());
                            if(identifier === "pto_received" || identifier === "unassigned")
                            {
                                var wrapper_div = $("<div></div>").addClass("pm_customers_wrapper_v2");                                
                                $.each(data, function(i, customer)
                                {
                                    $("<p></p>").addClass("pm_v2_customer").attr("data-identifier", customer.identifier).html(customer.name + "<span class='signed_days_ago_pm_tab'>" + (customer.days_ago + '') + "</span>")
                                    .click(function()
                                    {
                                        showProjectManagementDetailsV2($(this).data("identifier"), $(this), ".pm_detail_cust_name");
                                    })
                                    .appendTo(wrapper_div);
                                });
                                wrapper_div.appendTo(that);
                            }
                            else
                            {
                                window.auto_expand = true;
                                var txt_map = 
                                {
                                    "stage_1": "Stage 1 - Commission Review",
                                    "stage_2": "Stage 2 - Plan Set Creation",
                                    "stage_3": "Stage 3 - Permitting",
                                    "stage_4": "Stage 4 - Installation",
                                    "stage_5": "Stage 5 - Inspection & Services",
                                    "stage_6": "Stage 6 - Pending PTO"
                                }
                                $.each([1, 2, 3, 4, 5, 6].map(function(e, i) {return "stage_" + (e + '');}), function(i, stage)
                                {
                                    var d = $("<div></div>").addClass("pm_sub_group").attr("data-key", stage).text(txt_map[stage])
                                    .append
                                    (
                                        $("<span></span>").addClass("project_tally").text(data[stage].length + '')
                                    )
                                    .append
                                    (
                                        $("<input />").attr("type", "hidden").addClass("json").attr("value", JSON.stringify(data[stage]))
                                    );
                                    d.appendTo(that);

                                    d.trigger("click");
                                });
                                window.auto_expand = false;
                            }
                        });
                        app_area.off("click", ".pm_sub_group");
                        app_area.on("click", ".pm_sub_group", function(ev)
                        {
                            if(!$(ev.target).hasClass("pm_sub_group"))
                            {
                                return;
                            }
                            ev.stopPropagation();                            
                            var that = $(this);
                            if(that.find(".pm_customers_wrapper_v2").size() === 0)
                            {
                                var data = $.parseJSON($(this).find("input").first().val());
                                if(!window.auto_expand)
                                {
                                    $(".pm_customers_wrapper_v2").remove();
                                }
                                var wrapper_div = $("<div></div>").addClass("pm_customers_wrapper_v2");                                
                                $.each(data, function(i, customer)
                                {
                                    $("<p></p>").addClass("pm_v2_customer").attr("data-identifier", customer.identifier).html(customer.name + "<span class='signed_days_ago_pm_tab'>" + (customer.days_ago + '') + "</span>")
                                    .click(function()
                                    {
                                        showProjectManagementDetailsV2($(this).data("identifier"), $(this), ".pm_detail_cust_name");
                                    })
                                    .appendTo(wrapper_div);
                                });
                                wrapper_div.appendTo(that);
                            }
                            else
                            {
                                that.find(".pm_customers_wrapper_v2").addClass("pm_hack");
                                $(".pm_customers_wrapper_v2").each(function(i, e)
                                {
                                    if(!$(e).hasClass("pm_hack"))
                                    {
                                        $(e).remove();
                                    }
                                });
                                $(".pm_hack").removeClass("pm_hack");
                            }
                        });
                        showPendingElectricalCustomers(main_div, resp.pending_electricals);
                        window.temp_intervals.push
                        (
                            setInterval(function()
                            {
                                showPendingElectricalCustomers(main_div);
                            }, 1000 * 60 * 2)
                        );
                    });                    
                });
            }
            function showPendingElectricalCustomers(div, data)
            {
                if(typeof(data) + '' === "undefined")
                {
                    $.post("/data2", {"fn": "get_customers_for_pm_tab_v2"}).done(function(r)
                    {
                        showPendingElectricalCustomers(div, r.pending_electricals);
                    });
                    return;
                }
                var auto_click = ($(".pending_electrical_customers").length > 0);
                $(".pending_electrical_list").remove();
                $("<div></div>").addClass("pending_electrical_list")
                .append
                (
                    $("<p></p>").text("Pending Additional Panel/Roof Assessments").addClass("pending_electrical_clicker")
                    .append
                    (
                        $("<span></span>").addClass("electrical_tally").text(data.length + '')
                    )
                    .click(function()
                    {
                        $(".pending_electrical_customers").remove();
                        var that = $(this);
                        var data2 = $.parseJSON(that.closest(".pending_electrical_list").first().find("input").first().val());
                        $.each(data2, function(i, customer)
                        {
                            var cust_p = $("<p></p").addClass("pending_electrical_customers").text(customer.name).attr("data-identifier", customer.identifier);
                            cust_p.click(function()
                            {
                                var that2 = $(this);
                                var txt = that2.text();
                                $("#pm_v2_search_box").val(txt).trigger("blur");
                            });
                            cust_p.appendTo($(".pending_electrical_list").first());
                        });
                    })
                )
                .append
                (
                    $("<input />").attr("type", "hidden").addClass("pending_assessment_json").attr("value", JSON.stringify(data))
                )
                .insertBefore($(".pm_group_v2").last());
                if(auto_click)
                {
                    $(".pending_electrical_clicker").trigger("click");
                }
            }
            function showProjectManagementTab()
            {
                var app_area = $("#app_area");
                var spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");
                var main_div = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10");
                var spacer_clone = spacer.clone();

                $("<h2></h2>").text("Loading...").appendTo(app_area);

                $.post("./data", {"fn": "get_customers_for_pm_tab"}).done(function(resp)
                {
                    app_area.find("h2").remove();
                    $("<input />").attr("type", "text").addClass("pm_search").attr("placeholder", "Locate a customer by name...")
                    .on("blur", function()
                    {
                        locatePMCustomer($.trim($(this).val()));
                    }).appendTo(app_area);
                    var keys = Object.keys(resp);

                    var keys_cpy = [];
                    keys_cpy.push("{AAA}");
                    $.each(keys, function(i, key)
                    {
                        if(key !== "PTO Received" && key !== "Unassigned")
                        {
                            keys_cpy.push(key);
                        }
                    });
                    keys_cpy.push("PTO Received");
                    keys_cpy[0] = "Unassigned";
                    keys = keys_cpy;

                    $.each(keys, function(i, pm)
                    {
                        var div = $("<div></div>").addClass("pm_group");
                        $("<span></span>").addClass("pm_name_item").text(pm).appendTo(div);
                        $("<span></span>").addClass("pm_hyphen").text("-").appendTo(div);
                        $("<span></span>").addClass("pm_tally").text((resp[pm].length + '') + " Projects").appendTo(div);
                        $("<input />").attr("type", "hidden").addClass("pm_projs").appendTo(div);

                        div.bind("click", function(ev, optional_identifier)
                        {
                            var special_p = null;
                            var has_optional_identifier = ((typeof(optional_identifier) + '') !== "undefined");
                            ev.stopPropagation();
                            $(".pm_customers_wrapper").remove();
                            var items = $.parseJSON($(this).find("input").val());
                            var div2 = $("<div></div>").addClass("pm_customers_wrapper");
                            $.each(items, function(ii, item)
                            {
                                var p = $("<p></p>").text(item.customer_name).attr("data-identifier", item.identifier);
                                if(i === 0 && item.panel_work_completed)
                                {
                                    p.addClass("pwork_completed_highlight");
                                }
                                p.click(function(ev2)
                                {
                                    ev2.stopPropagation();
                                    p.css("opacity", "0.3").text("Loading...");
                                    showProjectManagementDetails(p.data("identifier"), p);
                                });
                                if(has_optional_identifier && item.identifier === optional_identifier)
                                {
                                    special_p = p;
                                }
                                p.appendTo(div2);
                            });
                            div2.insertAfter(div);
                            if(special_p !== null)
                            {
                                special_p[0].scrollIntoView();
                                special_p.trigger("click");
                            }

                        });
                        div.appendTo(main_div);
                        div.find("input").val(JSON.stringify(resp[pm]));

                    });
                    var unassigned_idx = -1
                    main_div.find("> div").each(function(i, e)
                    {
                        if($(e).find(".pm_name_item").text().toLowerCase === "Unassigned")
                        {
                            unassigned_idx = i;
                        }
                    });
                    if(unassigned_idx > -1 && (unassigned_idx !== 0))
                    {
                        main_div.find("> div").eq(unassigned_idx).prependTo(main_div);
                    }
                    $.each([spacer, main_div, spacer_clone], function(i, e)
                    {
                        e.appendTo(app_area);
                    });
                });
            }
            function editPMNote(li)
            {
                var html2 = $("<div></div>");
                $("<textarea></textarea>").css("width", "100%").css("background", "#000").css("padding", "0.5em").css("min-height", "5em").appendTo(html2);
                BootstrapDialog.show
                (
                    {
                        "title": "Editing Note",
                        "message": html2.html(),
                        "buttons":
                        [
                            {
                                "label": "Cancel",
                                "cssClass": "btn-danger",
                                "action": function(d)
                                {
                                    d.close();
                                }
                            },
                            {
                                "label": "Save",
                                "cssClass": "btn-primary",
                                "action": function(d)
                                {
                                    $(".bootstrap-dialog-footer").find(".btn-primary").text("Updating...");
                                    $.post("/data", {"fn": "update_customer_note", "identifier": li.data("identifier"), "content": $.trim($(".bootstrap-dialog-body").find("textarea").first().val())}).done(function(r)
                                    {
                                        var new_txt = $.trim($(".bootstrap-dialog-body").find("textarea").first().val());
                                        while(new_txt.indexOf("\r") > -1)
                                        {
                                            new_txt = new_txt.replace("\r", "");
                                        }
                                        var span = null;
                                        var cloned = null;
                                        if(li.find("span").size() > 0)
                                        {
                                            span = li.find("span").first();
                                            cloned = span.clone(true);
                                        }                                                                                
                                        li.text(new_txt);
                                        var new_html = li.html();
                                        while(new_html.indexOf("\n") > -1)
                                        {
                                            new_html = new_html.replace("\n", "<br />");
                                        }
                                        li.html(new_html);
                                        if(span !== null)
                                        {
                                            cloned.prependTo(li);
                                        }                                        
                                        d.close();
                                    });
                                }
                            }
                        ],
                        "onshown": function(d)
                        {
                            var txt = li.html();
                            while(txt.indexOf("<br>") > -1)
                            {
                                txt = txt.replace("<br>", "||||||||||");
                            }
                            while(txt.indexOf("<br />") > -1)
                            {
                                txt = txt.replace("<br />", "||||||||||");
                            }
                            while(txt.indexOf("<BR>") > -1)
                            {
                                txt = txt.replace("<BR>", "||||||||||");
                            }
                            while(txt.indexOf("<BR />") > -1)
                            {
                                txt = txt.replace("<BR />", "||||||||||");
                            }
                            var div = $("<div></div>").html(txt);
                            txt = div.text();
                            txt = txt.split("||||||||||").join("\n");
                            $(".bootstrap-dialog-body").find("textarea").val(txt);
                        }
                    }
                );
            }
            function updatePMV2Tallies()
            {
                $(".pm_v2_wrapper").find(".json").each(function(i, e)
                {
                    var json = $.parseJSON($(e).val());
                    var new_tally = 0;
                    if(typeof(json.length) + '' !== "undefined")
                    {
                        new_tally = json.length;
                    }
                    else
                    {
                        new_tally = 0;
                        Object.keys(json).map(function(key, ii)
                        {
                            new_tally += json[key].length;
                        });
                    }
                    $(e).prevAll(".project_tally").text(new_tally + '');
                });
            }
            function showProjectManagementDetailsV2(identifier, div, selector)
            {
                var old_div_html= div.html();
                div.text("Loading...");
                var kustomer = {};
                var updateSystemInfo = function(id)
                {
                    $("#pm_customer_details_info_" + id).css("opacity", "0.2");
                    $.post("./data", {"fn": "get_updated_system_details_info", "identifier": id}).done(function(r)
                    {
                        $("#pm_customer_details_info_" + id).find("td").each(function(i, e)
                        {
                            if($(e).text() === "System Size")
                            {
                                $(e).next().text(r.system_size + '');
                            }
                            else if($(e).text() === "System Cost")
                            {
                                $(e).next().text(currencyFormat(parseFloat(r.total_system_cost)));
                            }
                            else if($(e).text() === "GS Incentive Check")
                            {
                                $(e).next().text(currencyFormat(parseFloat(r.gs_incentive)));
                            }
                            else if($(e).text() === "Estimated Annual Production")
                            {
                                var prod = r.production;
                                while(prod.indexOf("$") > -1)
                                {
                                    prod = prod.replace("$", "");
                                }
                                while(prod.indexOf(",") > -1)
                                {
                                    prod = prod.replace(",", "");
                                }
                                prod = parseFloat(prod);
                                var formatted = currencyFormat(prod);
                                formatted = formatted.replace("$", "");
                                formatted = formatted.split(".")[0];
                                $(e).next().text(formatted);
                            }
                        });
                        $("#pm_customer_details_info_" + id).css("opacity", "1.0");
                    });
                }
                if($("#pm_customer_details_info_" + identifier).size() > 0)
                {
                    $("#pm_customer_details_info_" + identifier).remove();
                }
                var project_details_div = $("<div></div>").addClass("pm_customer_details_info").attr("id", "pm_customer_details_info_" + identifier);

                var cust_nayme = "";
                $.post("./data", {"fn": "get_pm_details_for_customer", "identifier": identifier}).done(function(resp)
                {
                    var customer = resp;
                    kustomer = customer;
                    cust_nayme = customer.customer_first_name + " " + customer.customer_last_name;
                    $("<p></p>").addClass("pm_detail_cust_name").text(customer.customer_first_name + " " + customer.customer_last_name).appendTo(project_details_div);
                    var mgr = div.closest(".pm_group_v2").data("name");
                    var is_unassigned = (mgr === "Unassigned");
                    var is_pto_received = (mgr === "PTO Received");
                    if(is_pto_received)
                    {
                        project_details_div.addClass("pto_received_details");
                    }
                    $("<p></p>").addClass("pm_detail_pm_name").text("Project Assigned To: ")
                    .append
                    (
                        $("<span></span>").addClass("pm_actual_pm_name").text(mgr)
                    ).appendTo(project_details_div);
                    $("<span></span>").addClass("pm_save_me").append
                    (
                        $("<i></i>").addClass("fa").addClass("fa-life-ring")
                    )
                    .click(function()
                    {
                        var group_div = $(this).parent().parent().prev();
                        var save_cb = function()
                        {
                            $(".pm_v2_wrapper").find(".json").each(function(i, e)
                            {
                                var json = $.parseJSON($(e).val());
                                if(typeof(json.length) + '' === "undefined")
                                {
                                    var new_json = {};
                                    $.each(Object.keys(json), function(ii, key)
                                    {
                                        new_json[key] = [];
                                        $.each(json[key], function(iii, eee)
                                        {
                                            if(eee.identifier !== customer.identifier)
                                            {
                                                new_json[key].push(eee)
                                            }
                                        });
                                    });
                                    $(e).attr("value", JSON.stringify(new_json)).val(JSON.stringify(new_json));
                                }
                                else
                                {
                                    var new_json = [];
                                    $.each(json, function(ii, ee)
                                    {
                                        if(ee.identifier !== customer.identifier)
                                        {
                                            new_json.push(ee);
                                        }
                                    });
                                    $(e).attr("value", JSON.stringify(new_json)).val(JSON.stringify(new_json));
                                }
                                
                            });
                            updatePMV2Tallies();
                            project_details_div.prev().remove();
                            project_details_div.remove();
                        };
                        saveCustomer(customer.identifier, [project_details_div, project_details_div.prev()], customer.customer_first_name + " " + customer.customer_last_name, save_cb);
                    }).appendTo(project_details_div);
                    $("<span></span>").addClass("pm_pencil").addClass("glyphicon").addClass("glyphicon-pencil").click(function()
                    {
                        editCustomerDetailsPMTab(customer, div);
                    }).appendTo(project_details_div);                  

                    if(!is_unassigned)
                    {
                        $("<span></span>").addClass("glyphicon").addClass("glyphicon-refresh")
                        .click(function()
                        {
                            var reassignment_html = $("<div></div>");
                            $("<p></p>").text("Choose a project manager").appendTo(reassignment_html);
                            var reassignment_sel = $("<select></select>").attr("id", "pm_reassignment_sel");

                            $.each({{ project_managers|safe }}, function(iii, eee)
                            {
                                $("<option></option>").text(eee.name).attr("value", eee.identifier).appendTo(reassignment_sel);
                            });
                            reassignment_sel.appendTo(reassignment_html);
                            $("<p></p>").appendTo(reassignment_html);

                            BootstrapDialog.show
                            (
                                {
                                    "title": "Reassign to a different project manager",
                                    "message": reassignment_html.html(),
                                    "buttons":
                                    [
                                        {
                                            "label": "Cancel",
                                            "cssClass": "btn-danger",
                                            "action": function(d)
                                            {
                                                d.close();
                                            }
                                        },
                                        {
                                            "label": "Reassign",
                                            "cssClass": "btn-primary",
                                            "action": function(d)
                                            {
                                                $(".bootstrap-dialog-footer").find(".btn-primary").css("opacity", "0.2").text("Reassigning...");
                                                $.post("./data", {"fn": "update_project_management_item", "key": "project_manager", "value": $(".bootstrap-dialog-body").find("select").first().val(), "identifier": div.data("identifier")}).done(function(r)
                                                {
                                                    d.close();
                                                    $("#project_management_v2").trigger("click");
                                                });
                                            }
                                        }
                                    ]
                                }
                            );
                        }).appendTo(project_details_div);
                    }
                    var close_span = $("<span></span>").addClass("pm_close_btn").text("X").click(function()
                    {
                        project_details_div.remove();
                    });
                    if(is_unassigned)
                    {
                        close_span.css("top", "0em");
                    }
                    close_span.appendTo(project_details_div);

                    $("<hr />").css("clear", "both").appendTo(project_details_div);

                    /*var base_price = 0;
                    $.each(customer.rep.scale.scales, function(ii, ee)
                    {
                        if(ee.tier === "A")
                        {
                            base_price = parseFloat(ee.price);
                        }
                    });*/

                    var fund_opts = [];
                    fund_opts.push("Choose One");
                    $.each(customer.funds, function(iii, eee)
                    {
                        fund_opts.push(eee["value_friendly"]);
                    });

                    var display_items =
                    [
                        [
                            {
                                "name": "Customer Name",
                                "editable": false,
                                "type": "text",
                                "value": function(obj)
                                {
                                    return obj.customer_first_name + " " + obj.customer_last_name;
                                }

                            },
                            {
                                "name": "Customer Address",
                                "editable": true,
                                "type": "text",
                                "key": "customer_address",
                                "value": function(obj)
                                {
                                    return obj.customer_address;
                                },
                                "transform": function(txt)
                                {
                                    return $.trim(txt);
                                },
                                "validation": function(txt)
                                {
                                    return $.trim(txt).length > 0;
                                }
                            },
                            {
                                "name": "Customer City",
                                "editable": true,
                                "type": "text",
                                "key": "customer_city",
                                "value": function(obj)
                                {
                                    return obj.customer_city;
                                },
                                "transform": function(txt)
                                {
                                    return $.trim(txt);
                                },
                                "validation": function(txt)
                                {
                                    return $.trim(txt).length > 0;
                                }
                            },
                            {
                                "name": "Customer Postal",
                                "editable": true,
                                "type": "text",
                                "key": "customer_postal",
                                "value": function(obj)
                                {
                                    return obj.customer_postal;
                                },
                                "transform": function(txt)
                                {
                                    var digits = txt.digits();
                                    if(digits !== null)
                                    {
                                        return digits;
                                    }
                                    return "";
                                },
                                "validation": function(txt)
                                {
                                    return txt.digits() !== null && txt.digits().length === 5;
                                }
                            },
                            {
                                "name": "Customer State",
                                "editable": false,
                                "type": "text",
                                "value": function(obj)
                                {
                                    return obj.customer_state;
                                }
                            },
                            {
                                "name": "Customer Email",
                                "key": "customer_email",
                                "editable": true,
                                "type": "text",
                                "value": function(obj)
                                {
                                    return obj.customer_email;
                                },
                                "transform": function(txt)
                                {
                                    return $.trim(txt).toLowerCase();
                                },
                                "validation": function(txt)
                                {
                                    return $.trim(txt).length > 0;
                                }
                            },
                            {
                                "name": "Customer Phone",
                                "key": "customer_phone",
                                "editable": true,
                                "type": "text",
                                "value": function(obj)
                                {
                                    return obj.customer_phone
                                },
                                "transform": function(txt)
                                {
                                    var v = txt.digits();
                                    if(v === null)
                                    {
                                        return "";
                                    }
                                    return v;
                                },
                                "validation": function(txt)
                                {
                                    var v = txt.digits();
                                    return ((v !== null) && (v.length === 10));
                                },
                                "aftersave_value": function(txt)
                                {
                                    var chars = txt.digits().split('');
                                    return "(" + chars[0] + chars[1] + chars[2] + ") " + chars[3] + chars[4] + chars[5] + "-" + chars[6] + chars[7] + chars[8] + chars[9];
                                }
                            }
                        ],
                        [
                            {
                                "name": "Rep Name",
                                "editable": false,
                                "value": function(obj)
                                {
                                    return obj.rep.name
                                },
                                "type": "text"
                            },
                            {
                                "name": "Rep Phone",
                                "editable": false,
                                "value": function(obj)
                                {
                                    return obj.rep.phone
                                },
                                "type": "text"
                            },
                            {
                                "name": "Rep Email",
                                "editable": false,
                                "value": function(obj)
                                {
                                    return "<a href='mailto:" + obj.rep.email + "'>" + obj.rep.email + "</a>";
                                },
                                "type": "text"
                            },
                            {
                                "name": "Solar Pro",
                                "editable": false,
                                "value": function(obj)
                                {
                                    return "<p>" + obj.solar_pro + "</p>";
                                },
                                "type": "text"
                            },
                            {
                                "name": "Closer Name",
                                "editable": false,
                                "value": function(obj)
                                {
                                    var ret = "";
                                    if(Object.keys(obj).indexOf("closer") > -1)
                                    {
                                        ret += obj.closer.name;
                                    }
                                    else
                                    {
                                        ret += "N/A";
                                    }
                                    ret += " <span class='label label-primary label-mod-closer'>Update Closer</span>";
                                    return ret;
                                },
                                "type": "text"
                            },
                            {
                                "name": "Closing Notes",
                                "editable": false,
                                "type": "text",
                                "value": function(obj)
                                {
                                    if(obj.closing_notes === null)
                                    {
                                        return "(None provided)";
                                    }
                                    return obj.closing_notes;
                                }
                            },
                            {
                                "name": "Closer Email",
                                "editable": false,
                                "value": function(obj)
                                {
                                    if(Object.keys(obj).indexOf("closer") > -1)
                                    {
                                        return "<a href='mailto:" + obj.closer.email + "'>" + obj.closer.email + "</a>";
                                    }
                                    return "N/A";
                                },
                                "type": "text"
                            }
                        ],
                        [
                            {
                                "name": "Panel Count",
                                "editable": true,
                                "key": "panel_qty",
                                "type": "multiple_choice",
                                "choices":
                                [
                                    "01",
                                    "02",
                                    "03",
                                    "04",
                                    "05",
                                    "06",
                                    "07",
                                    "08",
                                    "09",
                                    "10",
                                    "11",
                                    "12",
                                    "13",
                                    "14",
                                    "15",
                                    "16",
                                    "17",
                                    "18",
                                    "19",
                                    "20",
                                    "21",
                                    "22",
                                    "23",
                                    "24",
                                    "25",
                                    "26",
                                    "27",
                                    "28",
                                    "29",
                                    "30",
                                    "31",
                                    "32",
                                    "33",
                                    "34",
                                    "35",
                                    "36",
                                    "37",
                                    "38",
                                    "39",
                                    "40",
                                    "41",
                                    "42",
                                    "43",
                                    "44",
                                    "45",
                                    "46",
                                    "47",
                                    "48",
                                    "49",
                                    "50",
                                    "51",
                                    "52",
                                    "53",
                                    "54",
                                    "55",
                                    "56",
                                    "57",
                                    "58",
                                    "59",
                                    "60",
                                    "61",
                                    "62",
                                    "63",
                                    "64",
                                    "65",
                                    "66",
                                    "67",
                                    "68",
                                    "69",
                                    "70",
                                    "71",
                                    "72",
                                    "73",
                                    "74",
                                    "75",
                                    "76",
                                    "77",
                                    "78",
                                    "79",
                                    "80",
                                    "81",
                                    "82",
                                    "83",
                                    "84",
                                    "85",
                                    "86",
                                    "87",
                                    "88",
                                    "89",
                                    "90",
                                    "91",
                                    "92",
                                    "93",
                                    "94",
                                    "95",
                                    "96",
                                    "97",
                                    "98",
                                    "99"
                                ],
                                "value": function(obj)
                                {
                                    return obj.proposal["panel_qty"] + '';
                                },
                                "transform": function(txt)
                                {
                                    return parseInt(txt) + '';
                                },
                                "blur": function()
                                {
                                    updateSystemInfo(identifier);
                                }
                            },
                            {
                                "name": "Panel Type",
                                "editable": false,
                                "type": "text",
                                "value": function(obj)
                                {
                                    return obj.proposal.panel_type.substring(0, obj.proposal.panel_type.indexOf("[[[")) + "<input type='hidden' value='" + obj.proposal.panel_type + "' />";
                                }
                            },
                            {
                                "name": "Estimated Annual Production",
                                "editable": false,
                                "type": "text",
                                "value": function(obj)
                                {
                                    var replaced = obj.proposal.year_one_production;
                                    while(replaced.indexOf(",") > -1)
                                    {
                                        replaced = replaced.replace(",", "");
                                    }
                                    return currencyFormat(parseFloat(replaced)).replace("$", "");
                                }
                            },
                            {
                                "name": "System Size",
                                "editable": false,
                                "type": "text",
                                "value": function(obj)
                                {
                                    return obj.proposal.system_size + '';
                                }
                            },
                            {
                                "name": "System Cost",
                                "editable": false,
                                "type": "text",
                                "value": function(obj)
                                {
                                    return currencyFormat(parseFloat(obj.total_system_cost));
                                }
                            },
                            {
                                "name": "Last Contract Price Signed",
                                "editable": false,
                                "type": "text",
                                "value": function(obj)
                                {
                                    return obj.last_system_cost_signed
                                }
                            }
                        ],
                        [
                            {
                                "name": "Signed Date",
                                "editable": true,
                                "key": "signed_date",
                                "type": "date",
                                "value": function(obj)
                                {

                                    var mom = moment(obj.signed_date, "YYYY-MM-DD");;
                                    if(mom.year() === 1970)
                                    {
                                        return "Specify Date";
                                    }
                                    return mom.format("MM/DD/YYYY");
                                }
                            },
                            {
                                "name": "Welcome Call Date",
                                "editable": true,
                                "type": "date",
                                "key": "welcome_call_date",
                                "value": function(obj)
                                {
                                    var date = "Specify in checklist below...";
                                    if(Object.keys(obj.project_management_checkoffs).indexOf("welcome_call_completed") > -1)
                                    {
                                        if(Object.keys(obj.project_management_checkoffs["welcome_call_completed"]).indexOf("date") > -1)
                                        {
                                            var date = moment(obj.project_management_checkoffs["welcome_call_completed"]["date"], "YYYY-MM-DD").format("MM/DD/YYYY");
                                        }
                                    }
                                    return $("<div></div>").append($("<span></span>").addClass("pm_upper_area_welcome_call_date").text(date)).html();
                                }
                            },
                            {
                                "name": "Roof Work Needed",
                                "editable": true,
                                "key": "roof_work_needed",
                                "type": "yes_no",
                                "value": function(obj)
                                {
                                    return {"0": "No", "1": "Yes"}[obj.roof_work_needed];
                                }
                            },
                            {
                                "name": "New Layout Needed",
                                "editable": true,
                                "type": "yes_no",
                                "key": "new_layout_needed",
                                "value": function(obj)
                                {
                                    return {"0": "No", "1": "Yes"}[obj.new_layout_needed];
                                }
                            }
                        ],
                        [
                            {
                                "name": "Fund",
                                "editable": true,
                                "key": "fund",
                                "type": "multiple_choice",
                                "choices": fund_opts,
                                "value": function(obj)
                                {
                                    var fnd = "N/A";
                                    $.each(obj.funds, function(i, fund)
                                    {
                                        if(fund["value"] === customer.fund)
                                        {
                                            fnd = fund["value_friendly"];
                                        }
                                    });
                                    return fnd;
                                },
                                "transform": function(txt)
                                {
                                    var ret = "n/a";
                                    $.each(customer.funds, function(iii, fund)
                                    {
                                        if(fund.value_friendly === txt)
                                        {
                                            ret = fund.value;
                                        }
                                    });
                                    return ret;
                                },
                                "blur": function(txt)
                                {
                                    showProjectManagementDetailsV2(customer.identifier, div, selector);
                                }
                            },
                            {
                                "name": "Commission",
                                "editable": true,
                                "key": "tier_option",
                                "type": "multiple_choice",
                                "choices": ["A", "B", "C", "D", "E"].map(function(obj, arr_idx)
                                {
                                    if(arr_idx === 0)
                                    {
                                        return "Standard Commission"
                                    }
                                    var b_price = parseFloat(customer.commission_options["A"]);
                                    var this_price = parseFloat(customer.commission_options[obj]);
                                    return "-" + currencyFormat(Math.abs(this_price)) + "/KW";
                                }),
                                "value": function(obj)
                                {
                                    var b_price = parseFloat(customer.commission_options["A"]);
                                    var choices = ["A", "B", "C", "D", "E"].map(function(obj, arr_idx)
                                    {
                                        if(arr_idx === 0)
                                        {
                                            return "Standard Commission";
                                        }
                                        return "-" + currencyFormat(Math.abs(customer.commission_options[obj])) + "/KW";
                                    });
                                    var num = obj.commission_option;
                                    num = num.toUpperCase();
                                    num = num.replace("TIER_", "");
                                    num = num.charCodeAt(num) - 65;
                                    return choices[num];
                                },
                                "transform": function(txt)
                                {
                                    var ret_val = "";
                                    var b_price = parseFloat(customer.commission_options["A"]);
                                    $.each(["A", "B", "C", "D", "E"], function(iiiii, eeeee)
                                    {
                                        if(iiiii === 0)
                                        {
                                            text = "Standard Commission";
                                        }
                                        else
                                        {
                                            text = "-" + currencyFormat(Math.abs(customer.commission_options[eeeee])) + "/KW";
                                        }
                                        if(txt === text)
                                        {
                                            ret_val = String.fromCharCode(65 + iiiii);
                                        }
                                    });
                                    return ret_val;
                                },
                                "blur": function()
                                {
                                    updateSystemInfo(identifier);
                                }
                            },
                            {
                                "name": "Commission Reviewed",
                                "type": "yes_no",
                                "editable": true,
                                "key": "commission_reviewed",
                                "value": function(obj)
                                {
                                    return {"0": "No", "1": "Yes"}[obj.commission_reviewed];
                                }
                            },
                            {
                                "name": "Jurisdiction",
                                "type": "multiple_choice",
                                "editable": true,
                                "key": "jurisdiction",
                                "choices": customer.jurisdictions.filter(function(a)
                                {
                                    return a.active === true;
                                })
                                .map(function(a)
                                {
                                    return a.value_friendly;
                                }),
                                "value": function(obj)
                                {
                                    if(obj.jurisdiction === "")
                                    {
                                        return obj.jurisdiction;
                                    }
                                    var ret_val = "";
                                    $.each(obj.jurisdictions, function(iiiii, eeeee)
                                    {
                                        if(eeeee.value === obj.jurisdiction)
                                        {
                                            ret_val = eeeee.value_friendly;
                                        }
                                    });
                                    return ret_val;
                                },
                                "transform": function(txt)
                                {
                                    var text = "";
                                    $.each(customer.jurisdictions, function(iiiii, eeeee)
                                    {
                                        if(eeeee.value_friendly === txt)
                                        {
                                            text = eeeee.value;
                                        }
                                    });
                                    return text;
                                }
                            },
                            {
                                "name": "Verified By",
                                "key": "verified_by",
                                "type": "multiple_choice",
                                "editable": true,
                                "choices": ["Not Yet Verified", "Online Map", "Via Telephone"],
                                "value": function(obj)
                                {
                                    return obj.verified_by;
                                },
                                "transform": function(txt)
                                {
                                    return txt;
                                }
                            },
                            {
                                "name": "Utility Acct #",
                                "key": "utility_number",
                                "type": "text",
                                "editable": true,
                                "value": function(obj)
                                {
                                    return obj.customer_utility_account_number;
                                },
                                "transform": function(txt)
                                {
                                    return $.trim(txt);
                                },
                                "validation": function(txt)
                                {
                                    return $.trim(txt).length > 0;
                                }
                            },
                            {
                                "name": "Meter #",
                                "key": "meter_number",
                                "type": "text",
                                "editable": true,
                                "value": function(obj)
                                {
                                    return obj.meter_number;
                                },
                                "transform": function(txt)
                                {
                                    return $.trim(txt);
                                },
                                "validation": function(txt)
                                {
                                    return $.trim(txt).length > 0;
                                }
                            },
                            {
                                "name": "Offset",
                                "key": "offset",
                                "editable": false,
                                "type": "multiple_choice",
                                "choices": ["UT-70", "UT-90", "CA-TOU", "Partial", "0%", "1%", "2%", "3%", "4%", "5%", "6%", "7%", "8%", "9%", "10%", "11%", "12%", "13%", "14%", "15%", "16%", "17%", "18%", "19%", "20%", "21%", "22%", "23%", "24%", "25%", "26%", "27%", "28%", "29%", "30%", "31%", "32%", "33%", "34%", "35%", "36%", "37%", "38%", "39%", "40%", "41%", "42%", "43%", "44%", "45%", "46%", "47%", "48%", "49%", "50%", "51%", "52%", "53%", "54%", "55%", "56%", "57%", "58%", "59%", "60%", "61%", "62%", "63%", "64%", "65%", "66%", "67%", "68%", "69%", "70%", "71%", "72%", "73%", "74%", "75%", "76%", "77%", "78%", "79%", "80%", "81%", "82%", "83%", "84%", "85%", "86%", "87%", "88%", "89%", "90%", "91%", "92%", "93%", "94%", "95%", "96%", "97%", "98%", "99%", "100%"],
                                "value": function(obj)
                                {
                                    return obj.proposal.offset;
                                },
                                "transform": function(txt)
                                {
                                    return txt;
                                },
                                "validation": function(txt)
                                {
                                    return true;
                                }
                            }
                        ]
                    ];
                    if(customer.fund.toLowerCase().indexOf("greensky") > -1)
                    {
                        var outer_idx = display_items.length - 1;
                        display_items[outer_idx].push
                        (
                            {
                                "name": "Greensky Amount Correct",
                                "key": "greensky_amount_correct",
                                "editable": true,
                                "type": "yes_no",
                                "value": function(obj)
                                {
                                    return {"0": "No", "1": "Yes"}[obj.greensky_amount_correct];
                                }
                            }
                        );
                        display_items[outer_idx].push
                        (
                            {
                                "name": "GS Incentive Check",
                                "key": "gs_incentive_check",
                                "type": "text",
                                "editable": false,
                                "value": function(obj)
                                {
                                    return currencyFormat(parseFloat(obj.gs_incentive));
                                }
                            }
                        );
                    }

                    $.each(display_items, function(i, group)
                    {
                        var group_tbl = $("<table></table>").addClass("pm_detail_group");
                        $("<tbody></tbody>").appendTo(group_tbl);
                        var tbody = group_tbl.find("tbody");
                        $.each(group, function(ii, item)
                        {

                            var tr = $("<tr></tr>");
                            $("<td></td>").addClass("pm_lbl_td").text(item.name).appendTo(tr);
                            var value_td = $("<td></td>").addClass("pm_value_td");

                            var item_to_append = null;
                            switch(item.type)
                            {
                                case "text":
                                    var span = $("<span></span>").html(item.value(customer));
                                    if(item.editable)
                                    {
                                        span.css("cursor", "cell").on("dblclick", function(ev)
                                        {
                                            var old_value = span.text();
                                            span.off("blur");
                                            span.on("blur", function()
                                            {
                                                var new_value = $(this).text();
                                                var transformed = item.transform(new_value);
                                                if(item.validation(transformed))
                                                {
                                                    $.post("./data", {"fn": "update_project_management_item", "key": item.key, "value": transformed, "identifier": identifier}).done(function(resp2)
                                                    {
                                                        if(typeof(item["aftersave_value"]) + '' !== "undefined")
                                                        {
                                                            transformed = item.aftersave_value(transformed);
                                                        }
                                                        span.removeAttr("contenteditable");
                                                        span.text(transformed);
                                                    });
                                                }
                                                span.removeAttr("contenteditable");
                                            });
                                            span.attr("contenteditable", "true");
                                            span[0].focus();
                                        });
                                    }
                                    else
                                    {
                                        span.css("cursor", "no-drop");
                                    }
                                    item_to_append = span;
                                    break;

                                case "multiple_choice":
                                    var vall = item.value(customer);
                                    var sel = $("<select></select>").addClass("pm_multiple_choice_select");
                                    if(!item.editable)
                                    {
                                        sel.attr("disabled", "disabled");
                                    }
                                    $.each(item.choices, function(iiii, eeee)
                                    {
                                        var opt = $("<option></option>").attr("value", eeee).text(eeee).appendTo(sel);
                                        if(item.key === "panel_count" || item.key === "panel_qty")
                                        {
                                            if((parseInt(eeee) + '') === vall)
                                            {
                                                opt.attr("selected", "selected");
                                            }
                                        }
                                        else if(item.key === "tier_option")
                                        {
                                            var vvv = item.value(customer);
                                            if(vvv === opt.attr("value"))
                                            {
                                                opt.attr("selected", "selected");
                                            }
                                        }
                                        else if(item.key === "jurisdiction")
                                        {
                                            for(var n = 0; n < customer.jurisdictions.length; n++)
                                            {
                                                var value_friendly = customer.jurisdictions[n].value_friendly;
                                                var valll = customer.jurisdictions[n].value;
                                                var customer_juris = customer.jurisdiction;
                                                if(customer_juris === valll)
                                                {
                                                    if(opt.attr("value") === value_friendly)
                                                    {
                                                        opt.attr("selected", "selected");
                                                    }
                                                }
                                            }
                                        }
                                        else
                                        {
                                            if(item.value(customer) === opt.attr("value"))
                                            {
                                                opt.attr("selected", "selected");
                                            }
                                        }
                                        opt.appendTo(sel);
                                    });
                                    sel.on("change", function()
                                    {
                                        var transformed = item.transform(sel.val());
                                        sel.css("opacity", "0.3");
                                        $.post("./data", {"fn": "update_project_management_item", "key": item.key, "value": transformed, "identifier": identifier}).done(function(r2)
                                        {
                                            sel.removeAttr("style");
                                            if(typeof(item["blur"]) + '' !== "undefined")
                                            {
                                                item.blur();
                                            }
                                        });
                                    });
                                    item_to_append = sel;
                                    break;

                                case "yes_no":
                                    var sel = $("<select></select>").addClass("pm_multiple_choice_select");
                                    if(!item.editable)
                                    {
                                        sel.attr("disabled", "disabled");
                                    }
                                    $("<option value='0'>No</option>").appendTo(sel);
                                    $("<option value='1'>Yes</option>").appendTo(sel);
                                    var vall = item.value(customer);
                                    sel.find("option").each(function(iiiii, eeeee)
                                    {
                                        if($(eeeee).text() === vall)
                                        {
                                            $(eeeee).attr("selected", "selected");
                                        }
                                    });
                                    sel.on("change", function()
                                    {
                                        var transformed = sel.val();
                                        sel.css("opacity", "0.3");
                                        $.post("./data", {"fn": "update_project_management_item", "key": item.key, "value": transformed, "identifier": identifier}).done(function(r2)
                                        {
                                            sel.removeAttr("style");
                                            if(typeof(item["blur"]) + '' !== "undefined")
                                            {
                                                item.blur();
                                            }
                                        });
                                    });
                                    item_to_append = sel;
                                    break;

                                case "date":
                                    var span = $("<span></span>").html(item.value(customer));
                                    if(item.editable)
                                    {
                                        span.css("cursor", "cell").on("dblclick", function(ev)
                                        {
                                            var datehtml = $("<div><p>Choose a date:</p><br /></div>");
                                            var date_div = $("<div></div>").attr("id", "pm_sel_date").addClass("input-append").addClass("date");
                                            var d_val = $(this).text();
                                            var d_val2 = moment().format("MM/DD/YYYY");
                                            if(d_val === "Please Specify" || d_val === "Specify Date")
                                            {
                                                date_div.attr("data-date", d_val2);
                                            }
                                            else
                                            {
                                                date_div.attr("data-date", d_val);
                                            }
                                            date_div.attr("data-date-format", "mm/dd/yyyy");


                                            date_div.append
                                            (
                                                $("<input />").addClass("span2").attr("size", "16").attr("type", "text").attr("value", date_div.attr("data-date"))
                                            )
                                            .append
                                            (
                                                $("<span></span>").addClass("add-on")
                                                .append
                                                (
                                                    $("<i></i>").addClass("icon-th")
                                                )
                                            );
                                            date_div.appendTo(datehtml);

                                            BootstrapDialog.show
                                            (
                                                {
                                                    "title": "Updating Date - " + item.name,
                                                    "message": datehtml.html(),
                                                    "buttons":
                                                    [
                                                        {
                                                            "label": "Cancel",
                                                            "cssClass": "btn-danger",
                                                            "action": function(dialog)
                                                            {
                                                                dialog.close();
                                                            }
                                                        },
                                                        {
                                                            "label": "Update",
                                                            "cssClass": "btn-primary",
                                                            "action": function(dialog)
                                                            {
                                                                
                                                                $(".bootstrap-dialog-footer").find(".btn-primary").css("opacity", "0.3").text("Updating...");
                                                                var date_valu = $.trim($("#pm_sel_date").find("input").first().val());

                                                                if(date_valu.length === 10)
                                                                {
                                                                    if(item.name === "Welcome Call Date")
                                                                    {
                                                                        var d_format = "MM/DD/YYYY";
                                                                        var mom = moment(date_valu, d_format);
                                                                        $.post("./data", {"fn": "project_management_item_checkoff", "user": window.user_identifier, "key": "welcome_call_completed", "date": mom.format("YYYY-MM-DD"), "identifier": identifier, "checked": "0", "payroll_fix_hack": "1"}).done(function(r2)
                                                                        {
                                                                            if(typeof(item["blur"]) + '' !== "undefined")
                                                                            {
                                                                                item.blur();
                                                                            }
                                                                            span.text(mom.format("MM/DD/YYYY"));
                                                                            dialog.close();
                                                                            PMV2StageUpdate(identifier)
                                                                        });
                                                                    }
                                                                    else
                                                                    {
                                                                        var d_format = "MM/DD/YYYY";
                                                                        var mom = moment(date_valu, d_format);
                                                                        $.post("./data", {"fn": "update_project_management_item", "key": item.key, "value": mom.format("YYYY-MM-DD"), "identifier": identifier}).done(function(r2)
                                                                        {
                                                                            if(typeof(item["blur"]) + '' !== "undefined")
                                                                            {
                                                                                item.blur();
                                                                            }
                                                                            span.text(mom.format("MM/DD/YYYY"));
                                                                            dialog.close();
                                                                        });
                                                                    }                                                                    
                                                                }                                                                
                                                            }
                                                        }
                                                    ],
                                                    "onshown": function(d)
                                                    {
                                                        $("#pm_sel_date").find("input")
                                                        .datepicker
                                                        (
                                                            {
                                                                format: "mm/dd/yyyy",
                                                                autoClose: true
                                                            }
                                                        );
                                                    }
                                                }
                                            );
                                        });
                                    }
                                    else
                                    {
                                        span.css("cursor", "no-drop");
                                    }
                                    item_to_append = span;
                                    break;

                                default:
                                    break;
                            }
                            if(item_to_append !== null)
                            {
                                item_to_append.appendTo(value_td);
                            }
                            value_td.appendTo(tr);
                            tr.appendTo(tbody);
                        });
                        if(i > 0 && (i % 2 !== 0))
                        {
                            group_tbl.addClass("pm_detail_group_odd");
                        }
                        group_tbl.appendTo(project_details_div);
                        if(group_tbl.hasClass("pm_detail_group_odd"))
                        {
                            $("<hr />").addClass("pm_hr").appendTo(project_details_div);
                        }
                    });
                    $("<div></div>").css("clear", "both").css("width", "100%").css("min-height", "0.5em").text(" ").appendTo(project_details_div);
                    $("<hr />").appendTo(project_details_div);
                    if(customer.tree_notes !== null)
                    {
                        $("<span></span>").addClass("label").addClass("label-primary").text("Click to See Tree Trimming Notes").css("cursor", "pointer")
                        .click(function()
                        {
                            var html9 = $("<div></div>");
                            $("<p></p>").text(customer.tree_notes).appendTo(html9);

                            BootstrapDialog.show
                            (
                                {
                                    "title": "Tree Trimming Notes",
                                    "message": html9.html(),
                                    "buttons":
                                    [
                                        {
                                            "label": "OK",
                                            "cssClass": "btn-primary",
                                            "action": function(d9)
                                            {
                                                d9.close();
                                            }
                                        }
                                    ]
                                }
                            )
                        })
                        .appendTo(project_details_div);
                        $("<hr />").appendTo(project_details_div);
                    }
                    $("<h4></h4>").text("Notes:").appendTo(project_details_div);
                    $("<h4></h4>").attr("id", "cust_comm_log_h4").text("Comm. Log").appendTo(project_details_div);
                    var notes_ul = $("<ul></ul>").addClass("pm_notes_ul");
                    $.each(customer.notes, function(iiiii, note)
                    {          
                        while(note.indexOf("\r") > -1)
                        {
                            note = note.replace("\r", "");
                        }
                        var li = $("<li></li>");
                        if(Object.keys(customer.notes_idx_identifier_map).indexOf(iiiii + '') > -1)
                        {
                            li.attr("data-identifier", customer.notes_idx_identifier_map[iiiii + '']);
                            li.text(note);
                            var html = li.html();
                            while(html.indexOf("\n") > -1)
                            {
                                html = html.replace("\n", "<br />");
                            }
                            li.html(html);
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-pencil")
                            .click(function()
                            {
                                editPMNote($(this).parent());
                            }).prependTo(li);
                        }
                        else
                        {
                            li.html(note);
                        }
                                                
                        li.appendTo(notes_ul);
                    });
                    var comm_tbl = $("<table></table>").addClass("pm_comm_tbl");
                    var comm_tbody = $("<tbody></tbody>");
                    $.each(customer.comm_items, function(iiiiii, comm)
                    {
                        var tr = $("<tr></tr>");
                        $("<td></td>").text(moment(comm.timestamp, "YYYY-MM-DD hh:mm:ss").format("MM/DD/YYYY hh:mm:ss a")).appendTo(tr);
                        $("<td></td>").text(comm.type).appendTo(tr);
                        $("<td></td>").text("Customer Responded: " + comm.response).appendTo(tr);
                        var content = comm.content;
                        while(content.indexOf("\r") > -1)
                        {
                            content = content.replace("\r", "");
                        }
                        var content_td = $("<td></td>").text(content);
                        var html = content_td.html();
                        while(html.indexOf("\n") > -1)
                        {
                            html = html.replace("\n", "<br />");
                        }
                        content_td.attr("data-identifier", comm.identifier);
                        content_td.html(html);
                        content_td.appendTo(tr);
                        $("<td></td>").append
                        (
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-pencil").addClass("comm-pencil")
                            .click(function()
                            {
                                editPMNote($(this).parent().prev());
                            })
                        )
                        .appendTo(tr);
                        tr.appendTo(comm_tbody);
                    });
                    notes_ul.appendTo(project_details_div);
                    comm_tbody.appendTo(comm_tbl);
                    comm_tbl.appendTo(project_details_div);

                    $("<button></button>").addClass("btn").addClass("btn-primary").text("Add Note").addClass("pm_add_note_btn")
                    .click(function()
                    {
                        addNewFilteredNote(customer, function(content, note_identifier)
                        {
                            var li = $("<li></li>");
                            li.attr("data-identifier", note_identifier);
                            li.text(content);
                            var html = li.html();
                            while(html.indexOf("\n") > -1)
                            {
                                html = html.replace("\n", "<br />");
                            }
                            li.html(html);
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-pencil")
                            .click(function()
                            {
                                editPMNote($(this).parent());
                            }).prependTo(li);
                            li.appendTo(notes_ul);
                        });

                    }).appendTo(project_details_div);
                    $("<button></button>").addClass("btn").addClass("btn-primary").text("Add Communication").addClass("pm_add_communication_btn")
                    .click(function()
                    {
                        var dia_html = $("<div></div>");
                        $("<select></select>").attr("id", "pm_sel_comm_type")
                        .append
                        (
                            $("<option></option>").attr("value", "Email").text("Email")
                        )
                        .append
                        (
                            $("<option></option>").attr("value", "Text Message").text("Text Message")
                        )
                        .append
                        (
                            $("<option></option>").attr("value", "Phone Call").text("Phone Call")
                        )
                        .append
                        (
                            $("<option></option>").attr("value", "n/a").text("Other")
                        )
                        .appendTo(dia_html);
                        $("<p></p>").appendTo(dia_html);
                        $("<p></p>").text("Did your customer respond?").appendTo(dia_html);
                        $("<select></select>").attr("id", "sel_cust_response_note")
                        .append
                        (
                            $("<option></option>").attr("value", "1").text("Yes")
                        )
                        .append
                        (
                            $("<option></option>").attr("value", "0").text("No")
                        )
                        .appendTo(dia_html);
                        $("<p></p>").appendTo(dia_html);
                        $("<p></p>").attr("id", "pm_other_hint").text("Specify Other Communication Type Below:").css("display", "none").appendTo(dia_html);
                        $("<input />").css("display", "none").attr("type", "text").attr("id", "pm_other_type_input").appendTo(dia_html);

                        BootstrapDialog.show
                        (
                            {
                                "title": "Specify Communication Type",
                                "message": dia_html.html(),
                                "buttons":
                                [
                                    {
                                        "label": "Cancel",
                                        "cssClass": "btn-danger",
                                        "action": function(dia)
                                        {
                                            dia.close();
                                        }
                                    },
                                    {
                                        "label": "Continue",
                                        "cssClass": "btn-primary",
                                        "action": function(dia)
                                        {
                                            var c_type = $("#pm_sel_comm_type").val();
                                            if($("#pm_sel_comm_type").val() === "n/a")
                                            {
                                                var typ = $.trim($("#pm_other_type_input").val());
                                                if(typ.length === 0)
                                                {
                                                    window.alert("Please specify the communication type");
                                                    return;
                                                }
                                                dia.close();
                                                
                                                if(c_type === "n/a")
                                                {
                                                    c_type = typ; 
                                                }
                                                addNewFilteredNote(customer, function()
                                                {
                                                    showProjectManagementDetailsV2(identifier, div, "#cust_comm_log_h4")                     
                                                }, "cust_comm", c_type, $("#sel_cust_response_note").val());
                                            }
                                            else
                                            {
                                                dia.close();
                                                addNewFilteredNote(customer, function()
                                                {
                                                    showProjectManagementDetailsV2(identifier, div, "#cust_comm_log_h4")                     
                                                }, "cust_comm", c_type, $("#sel_cust_response_note").val());
                                            }
                                        }
                                    }
                                ],
                                "onshown": function(dia)
                                {
                                    $("#pm_sel_comm_type").change(function()
                                    {
                                        if($(this).val() === "n/a")
                                        {
                                            $("#pm_other_hint").css("display", "block");
                                            $("#pm_other_type_input").css("display", "block");
                                        }
                                    });
                                }
                            }
                        )
                    }).appendTo(project_details_div);
                    $("<hr />").appendTo(project_details_div);

                    if(is_unassigned)
                    {
                        $("<b></b>").text("Assign Project To:").appendTo(project_details_div);
                        var pm_change_sel = $("<select></select>").addClass("pm_multiple_choice_select").css("margin-left", "1em");
                        $("<option value='n/a'>Choose One</option>").appendTo(pm_change_sel);
                        $.each({{ project_managers|safe }}, function(iiiii, eeeee)
                        {
                            $("<option></option>").attr("value", eeeee.identifier).text(eeeee.name).appendTo(pm_change_sel);
                        });
                        /*$.each(customer.project_managers.map(function(pm) { return pm.name;}), function(iiiii, eeeee)
                        {
                            $("<option></option>").attr("value", eeeee).text(eeeee).appendTo(pm_change_sel);
                        });*/
                        pm_change_sel.change(function()
                        {
                            if(pm_change_sel.val() === "n/a")
                            {
                                return;
                            }
                            /*if($(".missing_docs_sel").val() === "n/a")
                            {
                                window.alert("You must first specify whether there are missing docs.");
                                pm_change_sel[0].selectedIndex = 0;
                                return;
                            }*/
                            pm_change_sel.css("opacity", "0.3");
                            $.post("./data", {"fn": "update_project_management_item", "key": "project_manager", "value": pm_change_sel.val(), "identifier": div.data("identifier")}).done(function(rrr)
                            {
                                pm_change_sel.css("opacity", "1.0");
                            });
                            var pm_name = "";
                            var pm_identifier = "";
                            $.each({{ project_managers|safe }}, function(iiiii, eeeee)
                            {
                                if(eeeee.identifier === pm_change_sel.val())
                                {
                                    pm_name = eeeee.name;
                                    pm_identifier = eeeee.identifier;
                                }
                            });


                            project_details_div.find(".pm_actual_pm_name").text(pm_name);
                            $(".pm_name_item").each(function(iiiii, eeeee)
                            {
                                if($(eeeee).text() === pm_name)
                                {
                                    var div_items = $(eeeee).nextAll("input").first().val();
                                    div_items = $.parseJSON(div_items);
                                    div_items.push
                                    (
                                        {"identifier": div.data("identifier"), "customer_name": cust_nayme}
                                    );
                                    $(eeeee).nextAll("input").first().val(JSON.stringify(div_items));
                                    div.remove();
                                    project_details_div.remove();

                                    var pm_tally = parseInt($(eeeee).nextAll(".pm_tally").text().replace(" Projects", ""));
                                    pm_tally += 1;
                                    $(eeeee).nextAll(".pm_tally").text((pm_tally + '') + " Projects");

                                    var unassigned_tally = parseInt($(".pm_tally").first().text().replace(" Projects", ""));
                                    unassigned_tally -= 1;
                                    $(".pm_tally").first().text((unassigned_tally + '') + " Projects");
                                }
                            });
                            var json = $.parseJSON(div.closest(".pm_group_v2").find("> .json").first().val());
                            var json_cpy = [];
                            var item_to_push = null;
                            $.each(json, function(iiiii, eeeee)
                            {
                                if(eeeee.identifier !== customer.identifier)
                                {
                                    json_cpy.push(eeeee);
                                }
                                else
                                {
                                    item_to_push = eeeee;
                                }
                            });
                            div.closest(".pm_group_v2").find("> .json").first().attr("value", JSON.stringify(json_cpy)).val(JSON.stringify(json_cpy));
                            var tally = parseInt(div.closest(".pm_group_v2").find("> .project_tally").first().text());
                            tally--;
                            div.closest(".pm_group_v2").find("> .project_tally").first().text(tally + '');

                            $(".pm_group_v2").each(function(iiiii, eeeee)
                            {
                                if($(eeeee).data("identifier") === pm_identifier)
                                {
                                    var json2 = $.parseJSON($(eeeee).find("> .json").first().val());
                                    json2["stage_1"].push(item_to_push);
                                    $(eeeee).find("> .json").first().attr("value", JSON.stringify(json2)).val(JSON.stringify(json2));

                                    var tally2 = parseInt($(eeeee).find("> .project_tally").text());
                                    tally2++;
                                    $(eeeee).find("> .project_tally").text(tally2 + '');

                                }
                            });

                            $("#pm_customer_details_info_" + customer.identifier).remove();
                            div.remove();
                        });
                        pm_change_sel.appendTo(project_details_div);

                        $("<br />").appendTo(project_details_div);
                        $("<hr />").appendTo(project_details_div);
                        $("<h4></h4>").text("Panel Assessment Info:").appendTo(project_details_div);
                        if(customer.electrical === null)
                        {
                            $("<div></div>").addClass("electrical_specifics").text("Not yet provided").appendTo(project_details_div);
                            $("<button></button>").addClass("btn").addClass("btn-primary").addClass("unassigned_elec_set_btn").text("Provide Panel Assessment")
                            .click(function()
                            {
                                updatePanelAssessmentPM(customer);
                            }).appendTo(project_details_div);                            
                        }
                        else
                        {
                            $("<div></div>").addClass("electrical_specifics").appendTo(project_details_div);
                            refreshElectrical(customer, project_details_div);
                        }
                        var btn = $("<span></span>").addClass("label").addClass("label-primary").appendTo(project_details_div).addClass("tenative_install_btn");
                        if(Object.keys(kustomer.project_management_checkoffs).indexOf("install") > -1)
                        {
                            if(Object.keys(kustomer.project_management_checkoffs.install).indexOf("date") > -1)
                            {
                                btn.text("Tentative Installation Date: " + moment(kustomer.project_management_checkoffs.install.date, "YYYY-MM-DD").format("MM/DD/YYYY"));
                            }                                
                        }
                        else
                        {
                            btn.text("Provide Tentative Install Date");
                        }
                        btn.click(function()
                        {
                            var date_to_show = moment();
                            if(Object.keys(kustomer.project_management_checkoffs).indexOf("install") > -1)
                            {
                                if(Object.keys(kustomer.project_management_checkoffs.install).indexOf("date") > -1)
                                {
                                    date_to_show = moment(kustomer.project_management_checkoffs.install.date, "YYYY-MM-DD");
                                }
                            }
                            var date_html = $("<div></div>");
                            $("<p></p>").text("Provide the tentative date for installation:").appendTo(date_html);
                            $("<div></div>").addClass("input-append").addClass("date").attr("data-date", date_to_show.format("MM-DD-YYYY")).attr("data-date-format", "mm-dd-yyyy")
                            .append
                            (
                                $("<input />").attr("size", "16").attr("type", "text").attr("value", date_to_show.format("MM-DD-YYYY"))
                            )
                            .append
                            (
                                $("<span></span>").addClass("add-on")
                                .append
                                (
                                    $("<i></i>").addClass("icon-th")
                                )
                            )
                            .appendTo(date_html);

                            BootstrapDialog.show
                            (
                                {
                                    "title": "Provide the update",
                                    "message": date_html.html(),
                                    "buttons":
                                    [
                                        {
                                            "label": "Cancel",
                                            "cssClass": "btn-danger",
                                            "action": function(d)
                                            {
                                                d.close();
                                            }
                                        },
                                        {
                                            "label": "Save",
                                            "cssClass": "btn-primary",
                                            "action": function(d)
                                            {
                                                $(".bootstrap-dialog-footer").find(".btn-primary").text("Saving...");
                                                var input = $(".bootstrap-dialog-body").find(".date").find("input").first();
                                                var vals = input.val().split("-");
                                                var new_dt = vals[2] + "-" + vals[0] + "-" + vals[1];
                                                var identifier = kustomer.identifier;

                                                $.post("./data", {"identifier": identifier, "fn": "project_management_item_checkoff", "user": window.user_identifier, "key": "install", "checked": "0", "date": new_dt}).done(function(rrrrrrrr)
                                                {
                                                    d.close();
                                                    PMV2StageUpdate(identifier);
                                                    $("#pm_customer_details_info_" + identifier).prevAll("p").first().trigger("click");
                                                });
                                            }
                                        }
                                    ],
                                    "onshown": function(d)
                                    {
                                        $(".bootstrap-dialog-body").find(".date").datepicker
                                        (
                                            {
                                                "autoClose": true,
                                                "format": "mm-dd-yyyy"
                                            }
                                        );
                                        var input = $(".bootstrap-dialog-body").find(".date").find("input").first();
                                        $.each(["keyup", "keydown", "keypress"], function(iiiii, evv)
                                        {
                                            input.on(evv, function(evv2)
                                            {
                                                evv2.preventDefault();
                                            });
                                        });
                                    }
                                }
                            );
                        });
                        btn.appendTo(project_details_div);
                        $("<div></div>").css("clear", "both").appendTo(project_details_div);
                        $("<hr />").appendTo(project_details_div);
                        $("<h2></h2>").text("Plan Set").appendTo(project_details_div);
                        var btn_text1 = "Plan Set in Progress";
                        if(Object.keys(kustomer.project_management_checkoffs).indexOf("plan_set_in_progress") > -1)
                        {
                            if(Object.keys(kustomer.project_management_checkoffs.plan_set_in_progress).indexOf("date") > -1)
                            {
                                btn_text1 += (" " + moment(kustomer.project_management_checkoffs.plan_set_in_progress.date, "YYYY-MM-DD").format("MM/DD/YYYY"));
                            }
                        }                        
                        $("<button></button>").addClass("btn").addClass("btn-primary").addClass("unassigned_plan_set_in_progress_btn").text(btn_text1)
                        .click(function()
                        {
                            var new_html = $("<div></div>");
                            $("<p></p>").text("Provide the date:").appendTo(new_html);
                            $("<br />").appendTo(new_html);
                            $("<br />").appendTo(new_html);
                            $("<br />").appendTo(new_html);
                            $("<br />").appendTo(new_html);
                            $("<br />").appendTo(new_html);
                            $("<br />").appendTo(new_html);
                            $("<br />").appendTo(new_html);
                            $("<br />").appendTo(new_html);
                            var date_value = moment().format("MM/DD/YYYY");
                            if(Object.keys(kustomer.project_management_checkoffs).indexOf("plan_set_in_progress") > -1)
                            {
                                if(Object.keys(kustomer.project_management_checkoffs.plan_set_in_progress).indexOf("date") > -1)
                                {
                                    date_value = moment(kustomer.project_management_checkoffs.plan_set_in_progress.date, "YYYY-MM-DD").format("MM/DD/YYYY");
                                }
                            }
                            $("<div></div>").addClass("input-append").addClass("date").attr("data-date", date_value).attr("data-date-format", "mm/dd/yyyy")
                            .append
                            (
                                $("<input />").addClass("span2").attr("size", "16").attr("type", "text").attr("value", date_value)
                            )
                            .append
                            (
                                $("<span></span>").addClass("add-on")
                                .append
                                (
                                    $("<i></i>").addClass("icon-th")
                                )
                            )
                            .appendTo(new_html);

                            BootstrapDialog.show
                            (
                                {
                                    "title": "Plan Set in Progress Date",
                                    "message": new_html.html(),
                                    "buttons":
                                    [
                                        {
                                            "label": "Cancel",
                                            "cssClass": "btn-danger",
                                            "action": function(d)
                                            {
                                                d.close();
                                            }
                                        },
                                        {
                                            "label": "Update",
                                            "cssClass": "btn-primary",
                                            "action": function(d)
                                            {
                                                $(".bootstrap-dialog-footer").find(".btn-primary").text("Updating...");
                                                var dt = moment($(".bootstrap-dialog-body").find("input").first().val(), "MM/DD/YYYY");
                                                var checked = "0";
                                                var now = moment(moment().format("YYYY-MM-DD"), "YYYY-MM-DD");
                                                if(dt.isAfter(now))
                                                {
                                                    //checked = "0";
                                                }
                                                var new_dt = dt.format("YYYY-MM-DD");
                                                $.post("./data", {"identifier": kustomer.identifier, "fn": "project_management_item_checkoff", "user": window.user_identifier, "key": "plan_set_in_progress", "checked": checked, "date": new_dt}).done(function(rrrrrrrr)
                                                {
                                                    d.close();
                                                    PMV2StageUpdate(kustomer.identifier)
                                                    $("#pm_customer_details_info_" + kustomer.identifier).prev().trigger("click");
                                                });
                                            }
                                        }
                                    ],
                                    "onshown": function(d)
                                    {
                                        $(".bootstrap-dialog-body").find(".date").datepicker
                                        (
                                            {
                                                "autoClose": true,
                                                "format": "mm/dd/yyyy"
                                            }
                                        );
                                        $.each(["keyup", "keydown", "keypress"], function(iiiiiii, evvvvv)
                                        {
                                            $(".bootstrap-dialog-body").find("input").on(evvvvv, function(evvvvv2)
                                            {
                                                evvvvv2.preventDefault();
                                            });
                                        });
                                    }
                                }                                
                            );

                        }).appendTo(project_details_div);

                        var btn_text2 = "Plan Set Completed";
                        if(Object.keys(kustomer.project_management_checkoffs).indexOf("plan_set_completed") > -1)
                        {
                            if(Object.keys(kustomer.project_management_checkoffs.plan_set_completed).indexOf("date") > -1)
                            {
                                btn_text2 += (" " + moment(kustomer.project_management_checkoffs.plan_set_completed.date, "YYYY-MM-DD").format("MM/DD/YYYY"));
                            }
                        }
                        $("<button></button>").addClass("btn").addClass("btn-primary").addClass("unassigned_plan_set_completed").text(btn_text2)
                        .click(function()
                        {
                            var new_html = $("<div></div>");
                            $("<p></p>").text("Provide the date:").appendTo(new_html);
                            $("<br />").appendTo(new_html);
                            $("<br />").appendTo(new_html);
                            $("<br />").appendTo(new_html);
                            $("<br />").appendTo(new_html);
                            $("<br />").appendTo(new_html);
                            $("<br />").appendTo(new_html);
                            $("<br />").appendTo(new_html);
                            $("<br />").appendTo(new_html);
                            var date_value = moment().format("MM/DD/YYYY");
                            if(Object.keys(kustomer.project_management_checkoffs).indexOf("plan_set_completed") > -1)
                            {
                                if(Object.keys(kustomer.project_management_checkoffs.plan_set_completed).indexOf("date") > -1)
                                {
                                    date_value = moment(kustomer.project_management_checkoffs.plan_set_completed, "YYYY-MM-DD").format("MM/DD/YYYY");
                                }
                            }
                            $("<div></div>").addClass("input-append").addClass("date").attr("data-date", date_value).attr("data-date-format", "mm/dd/yyyy")
                            .append
                            (
                                $("<input />").addClass("span2").attr("size", "16").attr("type", "text").attr("value", date_value)
                            )
                            .append
                            (
                                $("<span></span>").addClass("add-on")
                                .append
                                (
                                    $("<i></i>").addClass("icon-th")
                                )
                            )
                            .appendTo(new_html);

                            BootstrapDialog.show
                            (
                                {
                                    "title": "Plan Set Completed Date",
                                    "message": new_html.html(),
                                    "buttons":
                                    [
                                        {
                                            "label": "Cancel",
                                            "cssClass": "btn-danger",
                                            "action": function(d)
                                            {
                                                d.close();
                                            }
                                        },
                                        {
                                            "label": "Update",
                                            "cssClass": "btn-primary",
                                            "action": function(d)
                                            {
                                                $(".bootstrap-dialog-footer").find(".btn-primary").text("Updating...");
                                                var dt = moment($(".bootstrap-dialog-body").find("input").first().val(), "MM/DD/YYYY");
                                                var checked = "1";
                                                var now = moment(moment().format("YYYY-MM-DD"), "YYYY-MM-DD");
                                                if(dt.isAfter(now))
                                                {
                                                    //checked = "0";
                                                }
                                                var new_dt = dt.format("YYYY-MM-DD");
                                                $.post("./data", {"identifier": kustomer.identifier, "fn": "project_management_item_checkoff", "user": window.user_identifier, "key": "plan_set_completed", "checked": checked, "date": new_dt}).done(function(rrrrrrrr)
                                                {
                                                    d.close();
                                                    PMV2StageUpdate(kustomer.identifier);
                                                    $("#pm_customer_details_info_" + kustomer.identifier).prev().trigger("click");
                                                });
                                            }
                                        }
                                    ],
                                    "onshown": function(d)
                                    {
                                        $(".bootstrap-dialog-body").find(".date").datepicker
                                        (
                                            {
                                                "autoClose": true,
                                                "format": "mm/dd/yyyy"
                                            }
                                        );
                                        $.each(["keyup", "keydown", "keypress"], function(iiiiiii, evvvvv)
                                        {
                                            $(".bootstrap-dialog-body").find("input").on(evvvvv, function(evvvvv2)
                                            {
                                                evvvvv2.preventDefault();
                                            });
                                        });
                                    }
                                }                                
                            );
                        }).appendTo(project_details_div);
                        $("<br />").appendTo(project_details_div);
                        $("<br />").appendTo(project_details_div);
                        $("<h2></h2>").text("Welcome Call:").appendTo(project_details_div);

                        var existing_mom = moment();
                        if(Object.keys(kustomer.project_management_checkoffs).indexOf("welcome_call_completed") > -1)
                        {
                            if(Object.keys(kustomer.project_management_checkoffs.welcome_call_completed).indexOf("date") > -1)
                            {
                                existing_mom = moment(kustomer.project_management_checkoffs.welcome_call_completed.date, "YYYY-MM-DD");
                            }
                        }

                        var btn_text2 = "Mark as Welcome Call Complete";
                        if(Object.keys(kustomer.project_management_checkoffs).indexOf("welcome_call_completed") > -1)
                        {
                            if(Object.keys(kustomer.project_management_checkoffs.welcome_call_completed).indexOf("date") > -1)
                            {
                                btn_text2 = "Update Welcome Call Date (" + existing_mom.format("MM/DD/YYYY") + ")";
                            }
                        }
                    


                        $("<button></button>").addClass("btn").addClass("btn-primary").text(btn_text2).attr("id", "unassigned_wc_complete_btn")
                        .click(function()
                        {
                            var existing_mom2 = moment();
                            if(Object.keys(kustomer.project_management_checkoffs).indexOf("welcome_call_completed") > -1)
                            {
                                if(Object.keys(kustomer.project_management_checkoffs.welcome_call_completed).indexOf("date") > -1)
                                {
                                    existing_mom2 = moment(kustomer.project_management_checkoffs.welcome_call_completed.date, "YYYY-MM-DD");
                                }
                            }
                            var html = $("<div></div>");
                            $("<p></p>").text("Specify the Welcome Call Date:").appendTo(html);
                            for(var cnt = 0; cnt < 10; cnt++)
                            {
                                $("<br />").appendTo(html);
                            }
                            
                            
                            

                            $("<div></div>").addClass("input-append").addClass("date").attr("data-date", existing_mom2.format("MM-DD-YYYY")).attr("data-date-format", "mm-dd-yyyy")
                            .append
                            (
                                $("<input />").attr("size", "16").attr("type", "text").attr("value", existing_mom2.format("MM-DD-YYYY"))
                            )
                            .append
                            (
                                $("<span></span>").addClass("add-on")
                                .append
                                (
                                    $("<i></i>").addClass("icon-th")
                                )
                            )
                            .appendTo(html);

                            BootstrapDialog.show
                            (
                                {
                                    "title": "Welcome Call Complete - Please Specify a Date",
                                    "message": html.html(),
                                    "buttons":
                                    [
                                        {
                                            "label": "Cancel",
                                            "cssClass": "btn-danger",
                                            "action": function(d)
                                            {
                                                d.close();
                                            }
                                        },
                                        {
                                            "label": "Update",
                                            "cssClass": "btn-primary",
                                            "action": function(d)
                                            {
                                                var mom = moment($(".bootstrap-dialog-body").find("input").first().val(), "MM/DD/YYYY");
                                                $.post("./data", {"fn": "project_management_item_checkoff", "user": window.user_identifier, "key": "welcome_call_completed", "date": mom.format("YYYY-MM-DD"), "identifier": kustomer.identifier, "checked": "0"}).done(function(r2)
                                                {
                                                    d.close();
                                                    PMV2StageUpdate(kustomer.identifier)
                                                    $("#unassigned_wc_complete_btn").text("Update Welcome Call Date (" + mom.format("MM/DD/YYYY") + ")");
                                                    kustomer.project_management_checkoffs["welcome_call_completed"] = {"checked": true, "date": mom.format("YYYY-MM-DD")};
                                                });  
                                            }
                                        }
                                    ],
                                    "onshown": function(d)
                                    {
                                        $(".bootstrap-dialog-body").find(".date").datepicker
                                        (
                                            {
                                                "autoClose": true,
                                                "format": "mm/dd/yyyy"
                                            }
                                        );
                                        $.each(["keyup", "keydown", "keypress"], function(iiiiiii, evvvvv)
                                        {
                                            $(".bootstrap-dialog-body").find("input").on(evvvvv, function(evvvvv2)
                                            {
                                                evvvvv2.preventDefault();
                                            });
                                        });
                                    }
                                }
                            )


                        }).appendTo(project_details_div);
                    }
                    else
                    {
                        $("<b></b>").text("Are docs missing?").appendTo(project_details_div);
                        $("<br />").appendTo(project_details_div);                        
                        var missing_docs_sel = $("<select></select>").addClass("missing_docs_sel");
                        $("<option></option>").attr("value", "n/a").text("Choose One").appendTo(missing_docs_sel);
                        $("<option></option>").text("No").attr("value", "0").appendTo(missing_docs_sel);
                        $("<option></option>").attr("value", "1").text("Yes").appendTo(missing_docs_sel);
                        missing_docs_sel.find("option").each(function(index2, option)
                        {
                            option = $(option);
                            if(option.attr("value") === customer.missing_docs)
                            {
                                option.attr("selected", "selected");
                            }
                        });
                        missing_docs_sel.appendTo(project_details_div);
                        $("<hr />").appendTo(project_details_div);

                        missing_docs_sel.change(function()
                        {
                            var save_status = function(cb)
                            {
                                if(typeof(cb) + '' === "undefined")
                                {
                                    cb = function(){};
                                }
                                missing_docs_sel.css("opacity", "0.1");
                                var status_value = missing_docs_sel.val();
                                if(status_value === "n/a")
                                {
                                    status_value = "1";
                                }
                                $.post("/data2", {"fn": "update_missing_docs_status", "identifier": customer.identifier, "status": status_value}).done(function()
                                {
                                    missing_docs_sel.css("opacity", "1.0");
                                    cb();
                                });
                            };
                            if(missing_docs_sel.val() === "0")
                            {
                                save_status();
                            }
                            else if(missing_docs_sel.val() === "1")
                            {
                                missing_docs_sel[0].selectedIndex = 0;

                                var html5 = $("<div></div>");
                                $("<p></p>").text("Please describe the documents that are missing...").appendTo(html5);
                                $("<textarea></textarea>").addClass("missing_docs_ta").appendTo(html5);

                                BootstrapDialog.show
                                (
                                    {
                                        "title": "Missing Docs for" + customer.customer_first_name + " " + customer.customer_last_name,
                                        "message": html5.html(),
                                        "buttons":
                                        [
                                            {
                                                "label": "Cancel",
                                                "cssClass": "btn-danger",
                                                "action": function(d)
                                                {
                                                    d.close();
                                                }
                                            },
                                            {
                                                "label": "Save",
                                                "cssClass": "btn-primary",
                                                "action": function(d)
                                                {
                                                    var notes = $.trim($(".missing_docs_ta").val());
                                                    if(notes.length === 0)
                                                    {
                                                        window.alert("You must describe the missing documents.");
                                                        return;
                                                    }
                                                    var full_note_msg = "Date: " + moment().format("MM/DD/YYYY") + " MISSING DOCS NOTIFICATION SENT TO REP with this message: \"Hey " + customer.rep.name.split(" ")[0] + ", the PM says your customer (" + customer.customer_first_name + " " + customer.customer_last_name + ") is missing the following docs: " + notes + ". Please get these docs and email to newpower@newpower.net. If we don’t received these docs in 5 days the customer will be marked as a cancel.";
                                                    
                                                    $(".bootstrap-dialog-footer").find(".btn-primary").text("Saving...").css("opacity", "0.1");
                                                    $.post("/data", {"fn": "add_note_for_customer", "user_identifier": window.user_identifier, "identifier": customer.identifier, "has_file": "0", "txt": full_note_msg, "nkey": "panel_work", "comm_type": ""}).done(function()
                                                    {
                                                        $.post("/data2", {"fn": "notify_rep_for_missing_docs", "identifier": customer.identifier, "notes": notes}).done(function()
                                                        {
                                                            save_status(function()
                                                            {
                                                                missing_docs_sel[0].selectedIndex = 2;
                                                                d.close();
                                                            });
                                                        });
                                                    });                                                    
                                                }
                                            }
                                        ]
                                    }
                                );
                            }
                        });
                        $("<h4></h4>").text("Panel Assessment Info:").appendTo(project_details_div);
                        if(customer.electrical === null)
                        {
                            $("<div></div>").addClass("electrical_specifics").text("Not yet provided").appendTo(project_details_div);
                        }
                        else
                        {
                            $("<div></div>").addClass("electrical_specifics").appendTo(project_details_div);
                            refreshElectrical(customer, project_details_div);
                        }
                        $("<hr />").appendTo(project_details_div);
                        $("<h4></h4>").text("Permit Details:").appendTo(project_details_div);
                        project_details_div.append
                        (
                            $("<p></p>").attr("id", "show_permit_status_pm").text("Permit Number: " + customer.permit_number)
                        );

                        if(project_details_div.find("#show_permit_status_pm").size() === 0)
                        {
                            //$("<p><p>").attr("id", "show_permit_status_pm").text("Permit Number: " + customer.permit_number).appendTo(project_details_div);
                        }
                        var perm_history_div = $("<div></div>").addClass("permit_history");
                        if(customer.permit_history.length > 0)
                        {
                            $("<button></button>").addClass("btn").addClass("btn-primary").addClass("update_permit_pm").text("Provide Permit Status Update")
                            .click(function()
                            {
                                provideAdditionalPermitStatusUpdate(customer);
                            }).appendTo(perm_history_div);
                            $("<div></div>").appendTo(perm_history_div);
                        }
                        $("<div></div>").addClass("pm_history_container").text("Permit History:").appendTo(perm_history_div);
                        $.each(customer.permit_history, function(iiiii, eeeee)
                        {
                            $("<div></div>").addClass("pm_permit_history_item").text(eeeee.status + " - " + moment(eeeee.date, "YYYY-MM-DD").format("MM/DD/YYYY"))
                            .append
                            (
                                $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove")
                                .click(function()
                                {
                                    if(window.confirm("Are you sure you would like to remove this item?"))
                                    {
                                        removePermitHistoryItem(customer, $(this).prevAll(".pm_permit_history_item").size());
                                        $(this).parent().remove();
                                    }

                                })
                            )
                            .appendTo(perm_history_div.find(".pm_history_container"));
                        });
                        perm_history_div.appendTo(project_details_div);
                        $("<hr />").appendTo(project_details_div);

                        $("<h4></h4>").text("Communications:").appendTo(project_details_div);
                        var communications_ul = $("<ul></ul>").addClass("pm_communication_buttons");

                        var equipment_ordered_cb = $("<input />").attr("type", "checkbox").attr("disabled", "disabled");
                        var equipment_ordered_button = $("<button></button>").attr("type", "button").text("Equipment Ordered").addClass("btn").addClass("btn-primary");
                        var equipment_ordered_span = $("<span></span>").addClass("customer_communication_date").text(moment(customer.equipment_ordered_email_sent_date, "YYYY-MM-DD").format("MM/DD/YYYY"));
                        equipment_ordered_button.click(function()
                        {
                            var old_txt = $(this).text();
                            var that = $(this);
                            that.text("Sending Email...");
                            $.post("/data", {"fn": "send_equipment_ordered_email", "identifier": identifier}).done(function()
                            {
                                that.text(old_txt).attr("disabled", "disabled");
                                that.prev().prev()[0].checked = true;
                                that.prev().text(moment().format("MM/DD/YYYY"));

                                $("#pm_customer_details_info_" + identifier).find(".standard_checkoff_pm_li").each(function(index, li)
                                {
                                    if($(li).data("key") === "equipment_ordered")
                                    {
                                        $(li).find("input").first()[0].checked = true;
                                        $(li).find("input").first().trigger("change");
                                    }
                                });
                            });
                        });                        
                        if(customer.equipment_ordered_email_sent)
                        {
                            equipment_ordered_cb.attr("checked", "checked");
                            equipment_ordered_button.attr("disabled", "disabled");
                        }

                        $("<li></li>").attr("data-key", "equipment_ordered_email_sent")
                        .append
                        (
                            equipment_ordered_cb
                        )
                        .append
                        (
                            equipment_ordered_span
                        )
                        .append
                        (
                            equipment_ordered_button
                        )
                        .appendTo(communications_ul);

                        var install_cb = $("<input />").attr("type", "checkbox").attr("disabled", "disabled");
                        var install_button = $("<button></button>").attr("type", "button").text("Install").addClass("btn").addClass("btn-primary");
                        var install_span = $("<span></span>").addClass("customer_communication_date").text(moment(customer.install_email_sent_date, "YYYY-MM-DD").format("MM/DD/YYYY"));
                        install_button.click(function()
                        {
                            var old_txt = $(this).text();
                            var that = $(this);
                            that.text("Sending Email...");
                            $.post("/data", {"fn": "send_install_email", "identifier": identifier}).done(function()
                            {
                                that.text(old_txt);//.attr("disabled", "disabled");
                                that.prev().prev()[0].checked = true;
                                that.prev().text(moment().format("MM/DD/YYYY"));
                            });
                        });                        
                        if(customer.install_email_sent)
                        {
                            install_cb.attr("checked", "checked");
                            //install_button.attr("disabled", "disabled");
                        }
                        $("<li></li>").attr("data-key", "install_email_sent")
                        .append
                        (
                            install_cb
                        )
                        .append
                        (
                            install_span
                        )
                        .append
                        (
                            install_button
                        )
                        .appendTo(communications_ul);

                        var inspection_passed_cb = $("<input />").attr("type", "checkbox").attr("disabled", "disabled");
                        var inspection_passed_button = $("<button></button>").attr("type", "button").text("City Building Inspection Passed").addClass("btn").addClass("btn-primary");
                        var inspection_passed_span = $("<span></span>").addClass("customer_communication_date").text(moment(customer.inspection_passed_email_sent_date, "YYYY-MM-DD").format("MM/DD/YYYY"));
                        inspection_passed_button.click(function()
                        {
                            var old_txt = $(this).text();
                            var that = $(this);
                            that.text("Sending Email...");
                            $.post("/data", {"fn": "send_inspection_passed_email", "identifier": identifier}).done(function()
                            {
                                that.text(old_txt).attr("disabled", "disabled");
                                that.prev().prev()[0].checked = true;
                                that.prev().text(moment().format("MM/DD/YYYY"));

                                $("#pm_customer_details_info_" + identifier).find(".standard_checkoff_pm_li").each(function(index, li)
                                {
                                    if($(li).data("key") === "final_inspection")
                                    {
                                        $(li).find("input").first()[0].checked = true;
                                        $(li).find("input").first().trigger("change");
                                    }
                                });
                            });
                        });                        
                        if(customer.inspection_passed_email_sent)
                        {
                            inspection_passed_cb.attr("checked", "checked");
                            inspection_passed_button.attr("disabled", "disabled");
                        }
                        $("<li></li>").attr("data-key", "inspection_passed_email_sent")
                        .append
                        (
                            inspection_passed_cb
                        )
                        .append
                        (
                            inspection_passed_span
                        )
                        .append
                        (
                            inspection_passed_button
                        )
                        .appendTo(communications_ul);

                        if(["southern_california_edison", "san_diego_gas_&_electric"].indexOf(customer.utility_provider) > -1)
                        {
                            var pto_received_cb = $("<input />").attr("type", "checkbox").attr("disabled", "disabled");
                            var pto_received_button = $("<button></button>").attr("type", "button").text("PTO Received").addClass("btn").addClass("btn-primary");
                            var pto_received_span = $("<span></span>").addClass("customer_communication_date").text(moment(customer.pto_received_email_sent_date, "YYYY-MM-DD").format("MM/DD/YYYY"));
                            pto_received_button.click(function()
                            {
                                var old_txt = $(this).text();
                                var that = $(this);
                                that.text("Sending Email...");
                                $.post("/data", {"fn": "send_pto_received_email", "identifier": identifier}).done(function()
                                {
                                    that.text(old_txt).attr("disabled", "disabled");
                                    that.prev().prev()[0].checked = true;
                                    that.prev().text(moment().format("MM/DD/YYYY"));

                                    $("#pm_customer_details_info_" + identifier).find(".standard_checkoff_pm_li").each(function(index, li)
                                    {
                                        if($(li).data("key") === "received_pto")
                                        {
                                            $(li).find("input").first()[0].checked = true;
                                            $(li).find("input").first().trigger("change");
                                        }
                                    });
                                });
                            });                        
                            if(customer.pto_received_email_sent)
                            {
                                pto_received_cb.attr("checked", "checked");
                                pto_received_button.attr("disabled", "disabled");
                            }
                            $("<li></li>").attr("data-key", "pto_received_email_sent")
                            .append
                            (
                                pto_received_cb
                            )
                            .append
                            (
                                pto_received_span
                            )
                            .append
                            (
                                pto_received_button
                            )
                            .appendTo(communications_ul);
                        }


                        communications_ul.appendTo(project_details_div);                        

                        $("<hr />").appendTo(project_details_div);
                        $("<h4></h4>").text("Checklist:").appendTo(project_details_div);
                        $("<button></button>").addClass("btn").addClass("btn-primary").addClass("pm_extra_todo").text("Add additional checkoff item")
                        .click(function()
                        {
                            addAdditionalTodoItem(customer);
                        }).appendTo(project_details_div);
                        $("<button></button>").addClass("btn").addClass("btn-primary").addClass("signing_link_gen").text("Generate Signing Link")
                        .click(function()
                        {
                            $.post("./data", {"fn": "shorten_url", "url": "https://" + document.domain + "/sign/" + customer.identifier}).done(function(r5)
                            {
                                BootstrapDialog.show
                                (
                                    {
                                        "title": "Signing Link",
                                        "message": r5.url,
                                        "buttons":
                                        [
                                            {
                                                "label": "OK",
                                                "cssClass": "btn-primary",
                                                "action": function(ddd)
                                                {
                                                    ddd.close();
                                                }
                                            }
                                        ]
                                    }
                                );
                            });
                        }).appendTo(project_details_div);
                        $("<button></button>").addClass("btn").addClass("btn-primary").addClass("pm_modify_svcs").text("Modify Additional Services")
                        .click(function()
                        {
                            $(this).remove();
                            modifyAdditionalServices(customer, updateSystemInfo);
                        }).appendTo(project_details_div);
                        $("<p></p>").css("clear", "both").appendTo(project_details_div);
                        $.post("/data", {"fn": "read_setting", "value": "project_management_checkoffs"}).done(function(p_m_c_data)
                        {
                            var checklist_1 = p_m_c_data.data.checklist_1;
                            var checklist_2 = p_m_c_data.data.checklist_2;
                            
                            $.each(checklist_1, function(iiiii, item)
                            {
                                item["appears_after"] = null;
                            });$.each(checklist_2, function(iiiii, item)
                            {
                                item["appears_after"] = null;
                            });

                            $.each(kustomer.qualified_checkoffs, function(iii, eee)
                            {
                                checklist_2.push({"name": eee.value_friendly, "type": "checkbox", "key": eee.value, "appears_after": eee.appears_after});
                            }); 
                            $.each(kustomer.extra_project_specifics, function(iii, eee)
                            {
                                checklist_2.push(eee);
                            });
                            

                            $.each([checklist_1, checklist_2], function(ii, list)
                            {
                                var checkoff_ul = $("<ul></ul>").addClass("pm_checkoff_ul");
                                $.each(list, function(iii, list_item)
                                {
                                    var li = $("<li></li>").addClass("standard_checkoff_pm_li").attr("data-key", list_item.key);
                                    if(list_item.appears_after !== null)
                                    {
                                        li.attr("data-appears_after", list_item.appears_after);
                                    }
                                    var name_span = $("<span></span>").addClass("pm_checkoff_item_name").text(list_item.name);
                                    if(list_item.type === "checkbox")
                                    {
                                        var n_a = false;
                                        var cb = $("<input />").attr("type", "checkbox");
                                        var date_span = $("<span></span>").addClass("pm_checkoff_datespan").text("Specify Date");
                                        if(typeof(kustomer.project_management_checkoffs[list_item.key]) + '' !== "undefined")
                                        {
                                            if(typeof(kustomer.project_management_checkoffs[list_item.key]["checked"]) + '' !== "undefined")
                                            {
                                                if(kustomer.project_management_checkoffs[list_item.key]["checked"] === true)
                                                {
                                                    cb.attr("checked", "checked");
                                                }
                                            }
                                            if(typeof(kustomer.project_management_checkoffs[list_item.key]["date"]) + '' !== "undefined")
                                            {
                                                if(kustomer.project_management_checkoffs[list_item.key]["date"].indexOf("1800") === -1)
                                                {
                                                    date_span.text(moment(kustomer.project_management_checkoffs[list_item.key]["date"], "YYYY-MM-DD").format("MM/DD/YYYY"));
                                                } 
                                                else
                                                {
                                                    date_span.text("N/A");
                                                    n_a = true;
                                                }
                                            }
                                        }
                                        if(n_a)
                                        {
                                            date_span.addClass("pm_not_applicable");
                                        }
                                        date_span.on("dblclick", function(ev)
                                        {
                                            if($(this).hasClass("pm_not_applicable"))
                                            {
                                                return;
                                            }
                                            var datehtml = $("<div><p>Choose a date:</p><br /></div>");
                                            $("<div></div>").css("min-height", "150px").appendTo(datehtml);
                                            var date_div = $("<div></div>").attr("id", "pm_sel_date").addClass("input-append").addClass("date");
                                            var mom;
                                            if(date_span.text() !== "Specify Date")
                                            {
                                                mom = moment(date_span.text(), "MM/DD/YYYY");
                                            }
                                            else
                                            {
                                                mom = moment();
                                            }

                                            date_div.attr("data-date", mom.format("MM/DD/YYYY"));
                                            date_div.attr("data-date-format", "mm/dd/yyyy");

                                            date_div.append
                                            (
                                                $("<input />").addClass("span2").attr("size", "16").attr("type", "text").attr("value", mom.format("MM/DD/YYYY"))
                                            )
                                            .append
                                            (
                                                $("<span></span>").addClass("add-on")
                                                .append
                                                (
                                                    $("<i></i>").addClass("icon-th")
                                                )
                                            );
                                            date_div.appendTo(datehtml);
                                            
                                            var extra_onshown_fn = function(){};
                                            
                                            if(["permit_to_city", "install", "final_inspection"].indexOf(list_item.key) > -1)
                                            {
                                                $("<p></p>").text("Assigned To:").appendTo(datehtml);
                                                var sel = $("<select></select>").addClass("event_owner_sel").attr("multiple", "multiple");
                                                var admins = {{admins|safe}};
                                                admins.unshift({"name": "Nobody", "identifier": "-1"});
                                                $.each(admins, function(iiiii, admin)
                                                {
                                                    var opt = $("<option></option>").attr("value", admin.identifier).text(admin.name);
                                                    var owners = $.parseJSON(kustomer[list_item.key + "_event_owners"]);
                                                    if(owners.indexOf(admin.identifier) > -1)
                                                    {
                                                        opt.attr("selected", "selected");
                                                    }
                                                    opt.appendTo(sel);
                                                });
                                                sel.appendTo(datehtml);
                                                sel.attr("size", sel.find("option").size());
                                                $("<p></p>").text("Details:").appendTo(datehtml);
                                                $("<textarea></textarea>").addClass("pm_event_details_ta").appendTo(datehtml);
                                                extra_onshown_fn = function()
                                                {
                                                    $(".pm_event_details_ta").first().val(kustomer[list_item.key + "_details"]);
                                                };
                                            }
                                            BootstrapDialog.show
                                            (
                                                {
                                                    "title": "Updating Date - " + list_item.name,
                                                    "message": datehtml.html(),
                                                    "buttons":
                                                    [
                                                        {
                                                            "label": "Cancel",
                                                            "cssClass": "btn-danger",
                                                            "action": function(dialog)
                                                            {
                                                                dialog.close();
                                                            }
                                                        },
                                                        {
                                                            "label": "Remove the Existing Date",
                                                            "cssClass": "btn-danger",
                                                            "action": function(dialog)
                                                            {
                                                                if(cb[0].checked)
                                                                {
                                                                    window.alert("You must first remove the checkoff for this item.");
                                                                    dialog.close();
                                                                    return;
                                                                }
                                                                //delete kustomer.project_management_checkoffs[list_item.key]["date"];
                                                                date_span.text("Specify Date");
                                                                $.post("/data", {"fn": "remove_project_management_checkoff_date", "key": list_item.key, "identifier": kustomer.identifier}).done(function(rrrrra)
                                                                {
                                                                    dialog.close();
                                                                });                                                            
                                                            }
                                                        },
                                                        {
                                                            "label": "Mark as Non-Applicable",
                                                            "cssClass": "btn-warning",
                                                            "action": function(dialog)
                                                            {
                                                                $.post("/data", {"fn": "mark_project_management_item_as_non_applicable", "key": list_item.key, "identifier": kustomer.identifier}).done(function(rrrrr)
                                                                {
                                                                    $(".bootstrap-dialog-footer").find(".btn-warning").text("Applying...");
                                                                    $("#pm_customer_details_info_" + kustomer.identifier).prev().trigger("click");
                                                                    dialog.close();
                                                                });
                                                            }
                                                        },
                                                        {
                                                            "label": "Update",
                                                            "cssClass": "btn-primary",
                                                            "action": function(dialog)
                                                            {
                                                                $(".bootstrap-dialog-footer").find(".btn-primary").css("opacity", "0.3").text("Updating...");
                                                                var date_valu = $.trim($(".bootstrap-dialog-body").find("input").last().val());

                                                                var d_format = "MM/DD/YYYY";
                                                                if(date_valu.indexOf("-") > -1)
                                                                {
                                                                    d_format = "MM-DD-YYYY";
                                                                }
                                                                var mom2 = moment(date_valu, d_format);
                                                                var cb_checked = (date_span.prevAll("input").first()[0].checked * 1) + '';
                                                                var owners = ["-1"];
                                                                if($(".bootstrap-dialog-body").find(".event_owner_sel").length === 1)
                                                                {
                                                                    owners = $(".bootstrap-dialog-body").find(".event_owner_sel").val();
                                                                }
                                                                
                                                                $.post("./data", {"fn": "project_management_item_checkoff", "user": window.user_identifier, "key": list_item.key, "date": mom2.format("YYYY-MM-DD"), "identifier": identifier, "checked": cb_checked, "owners": JSON.stringify(owners), "details": $.trim($(".pm_event_details_ta").val())}).done(function(r2)
                                                                {
                                                                    kustomer[list_item.key + "_event_owners"] = JSON.stringify(owners);
                                                                    kustomer[list_item.key + "_details"] = $.trim($(".pm_event_details_ta").val());
                                                                    date_span.css("display", "inline-block").text(mom2.format("MM/DD/YYYY"));
                                                                    dialog.close();
                                                                    PMV2StageUpdate(kustomer.identifier);
                                                                });
                                                            }
                                                        }
                                                    ],
                                                    "onshown": function(d)
                                                    {
                                                        $(".bootstrap-dialog-body").last().find("input")
                                                        .datepicker
                                                        (
                                                            {
                                                                format: "mm/dd/yyyy",
                                                                autoClose: true
                                                            }
                                                        );
                                                        extra_onshown_fn();
                                                    }
                                                }
                                            );
                                        });
                                        cb.on("change", function()
                                        {
                                            if(["panel_assessment", "electrical", "plan_set_ordered", "permit_status", "install"].indexOf(list_item.key) === -1)
                                            {
                                                cb.closest(".pm_customer_details_info").css("opacity", "0.1");
                                            }                                            
                                            cb.css("opacity", "0.1");
                                            var checked = $(this)[0].checked;
                                            if(checked === true)
                                            {
                                                cb[0].checked = false;
                                            }
                                            else
                                            {
                                                cb[0].checked = true;
                                            }

                                            var d_txt = cb.nextAll(".pm_checkoff_datespan").first().text();
                                            var dayte_valuu = moment().format("YYYY-MM-DD");
                                            if(d_txt !== "Specify Date")
                                            {
                                                dayte_valuu = moment(d_txt, "MM/DD/YYYY").format("YYYY-MM-DD");
                                            }
                                            var save = function(completion_fn)
                                            {
                                                if(typeof(completion_fn) + '' === "undefined")
                                                {
                                                    completion_fn = function(){};
                                                }
                                                $.post("./data", {"identifier": identifier, "fn": "project_management_item_checkoff", "user": window.user_identifier, "key": list_item.key, "checked": (checked * 1) + '', "date": dayte_valuu}).done(function(rrr)
                                                {
                                                    cb.css("opacity", "1.0");
                                                    cb[0].checked = checked;
                                                    var mom3 = moment(rrr.date, "YYYY-MM-DD");
                                                    date_span.text(mom3.format("MM/DD/YYYY")).css("display", "inline-block");
                                                    completion_fn();
                                                    setTimeout(function()
                                                    {
                                                        cb.closest(".pm_customer_details_info").css("opacity", "1.0");
                                                        PMV2StageUpdate(identifier);
                                                    }, 2500);
                                                });
                                            };
                                            if(list_item.key === "panel_assessment")
                                            {
                                                if(checked)
                                                {
                                                    updatePanelAssessmentPM(customer, function()
                                                    {
                                                        save();
                                                    });
                                                }
                                                else
                                                {
                                                    save();
                                                }
                                                return;
                                            }
                                            if(list_item.key === "plan_set_completed")
                                            {
                                                if(checked)
                                                {
                                                    var plan_set_html = $("<div></div>");
                                                    $("<p></p>").text("Was there a layout change?").appendTo(plan_set_html);
                                                    $("<select></select>").attr("id", "plan_set_change_sel")
                                                    .append
                                                    (
                                                        $("<option></option>").attr("value", "n/a").text("Choose One")
                                                    )
                                                    .append
                                                    (
                                                        $("<option></option>").attr("value", "1").text("Yes")
                                                    )
                                                    .append
                                                    (
                                                        $("<option></option>").attr("value", "0").text("No")
                                                    )
                                                    .appendTo(plan_set_html);
                                                    $("<p></p>").css("display", "none").attr("id", "describe_details_p").text("Describe the change in layout").appendTo(plan_set_html);
                                                    $("<textarea></textarea").attr("id", "describe_details-ta").css("display", "none").attr("placeholder", "Please be as detailed as possible...").appendTo(plan_set_html);

                                                    BootstrapDialog.show
                                                    (
                                                        {
                                               
                                                            "title": "Details",
                                                            "message": plan_set_html.html(),
                                                            "buttons":
                                                            [
                                                                {
                                                                    "label": "Cancel",
                                                                    "cssClass": "btn-danger",
                                                                    "action": function(plan_set_dialog)
                                                                    {
                                                                        plan_set_dialog.close();
                                                                    }
                                                                },
                                                                {
                                                                    "label": "Save",
                                                                    "cssClass": "btn-primary",
                                                                    "action": function(plan_set_dialog)
                                                                    {
                                                                        var trimmed = $.trim($("#describe_details-ta").val());
                                                                        if($("#plan_set_change_sel").val() === "n/a")
                                                                        {
                                                                            window.alert("You must choose an option");
                                                                            return;
                                                                        }
                                                                        if($("#plan_set_change_sel").val() === "1")
                                                                        {
                                                                            
                                                                            if(trimmed.length === 0)
                                                                            {
                                                                                window.alert("You must specify the change in layout.");
                                                                                return;
                                                                            }
                                                                            $.post("/data", {"fn": "plan_set_layout_change", "identifier": identifier, "details": trimmed}).done(function()
                                                                            {
                                                                                plan_set_dialog.close();
                                                                                save();
                                                                            });
                                                                        }
                                                                        else
                                                                        {
                                                                            plan_set_dialog.close();
                                                                            save();
                                                                        }
                                                                    }
                                                                }
                                                            ],
                                                            "onshown": function()
                                                            {
                                                                $("#plan_set_change_sel").change(function()
                                                                {
                                                                    if($("#plan_set_change_sel").val() === "1")
                                                                    {
                                                                        $("#describe_details-ta, #describe_details_p").css("display", "block");
                                                                    }
                                                                    else
                                                                    {
                                                                        $("#describe_details-ta, #describe_details_p").css("display", "none");
                                                                    }
                                                                });
                                                            }
                                                        }
                                                    )

                                                    return;
                                                }
                                            }
                                            if(list_item.key === "welcome_email_sent")
                                            {
                                                if(checked)
                                                {
                                                    $("#pm_customer_details_info_" + identifier).find(".pm_communication_buttons").find("li").each(function(index, element)
                                                    {
                                                        var el = $(element);
                                                        if(el.data("key") === "welcome_email_sent")
                                                        {
                                                            var dt = el.find(".customer_communication_date").first().text();
                                                            if(dt === "--/--/--")
                                                            {
                                                                el.find("button").first().trigger("click");
                                                            }
                                                        }                                                        
                                                    });
                                                }
                                                save();
                                                return;
                                            }
                                            if(list_item.key === "received_pto")
                                            {
                                                if(checked)
                                                {
                                                    $("#pm_customer_details_info_" + identifier).find(".pm_communication_buttons").find("li").each(function(index, element)
                                                    {
                                                        var el = $(element);
                                                        if(el.data("key") === "pto_received_email_sent")
                                                        {
                                                            var dt = el.find(".customer_communication_date").first().text();
                                                            if(dt === "--/--/--")
                                                            {
                                                                el.find("button").first().trigger("click");
                                                            }
                                                        }                                                        
                                                    });
                                                }
                                                save();
                                            }
                                            if(list_item.key === "final_inspection")
                                            {
                                                if(checked)
                                                {
                                                    $("#pm_customer_details_info_" + identifier).find(".pm_communication_buttons").find("li").each(function(index, element)
                                                    {
                                                        var el = $(element);
                                                        if(el.data("key") === "inspection_passed_email_sent")
                                                        {
                                                            var dt = el.find(".customer_communication_date").first().text();
                                                            if(dt === "--/--/--")
                                                            {
                                                                el.find("button").first().trigger("click");
                                                            }
                                                        }                                                        
                                                    });
                                                }
                                                save();
                                                return;
                                            }
                                            if(list_item.key === "equipment_ordered")
                                            {
                                                if(checked)
                                                {
                                                    $("#pm_customer_details_info_" + identifier).find(".pm_communication_buttons").find("li").each(function(index, element)
                                                    {
                                                        var el = $(element);
                                                        if(el.data("key") === "equipment_ordered_email_sent")
                                                        {
                                                            var dt = el.find(".customer_communication_date").first().text();
                                                            if(dt === "--/--/--")
                                                            {
                                                                el.find("button").first().trigger("click");
                                                            }
                                                        }                                                        
                                                    });
                                                    save();
                                                }
                                                else
                                                {
                                                    save();
                                                }
                                                return;
                                            }
                                            if(list_item.key === "permit_status")
                                            {
                                                if(checked)
                                                {
                                                    var permit_html = $("<div></div>");
                                                    $("<p></p>").text("Provide Permit Number:").appendTo(permit_html);
                                                    $("<input />").attr("type", "text").attr("id", "permit_number_pm").appendTo(permit_html);
                                                    $("<p></p>").text("Status:").appendTo(permit_html);

                                                    var status_sel = $("<select></select>").attr("id", "permit_status_pm");
                                                    $.each
                                                    (
                                                        [
                                                            "Choose One", "Approved", "Rejected", "Resubmitted"
                                                        ],
                                                        function(iiiii, eeeee)
                                                        {
                                                            $("<option></option>").attr("value", eeeee).text(eeeee).appendTo(status_sel);
                                                        }
                                                    );
                                                    status_sel.appendTo(permit_html);

                                                    $("<div></div>").attr("id", "pm_permit_status_date").addClass("input-append").addClass("date").attr("data-date", moment().format("MM/DD/YYYY")).attr("data-date-format", "mm/dd/yyyy")
                                                    .append
                                                    (
                                                        $("<input />").addClass("span2").addClass("eightpoint5").attr("size", "16").attr("type", "text").attr("value", moment().format("MM/DD/YYYY"))
                                                    )
                                                    .append
                                                    (
                                                        $("<span></span>").addClass("add-on")
                                                        .append
                                                        (
                                                            $("<i></i>").addClass("icon-th")
                                                        )
                                                    ).appendTo(permit_html);

                                                    BootstrapDialog.show
                                                    (
                                                        {
                                                            "title": "Permit Status Update",
                                                            "message": permit_html.html(),
                                                            "onshown": function(d)
                                                            {
                                                                if(typeof(kustomer.permit_number) + '' !== "undefined")
                                                                {
                                                                    if(kustomer.permit_number !== "" && kustomer.permit_number.toLowerCase() !== "n/a")
                                                                    {
                                                                        $("#permit_number_pm").val(kustomer.permit_number);
                                                                    }
                                                                }
                                                                $("#pm_permit_status_date").find("input").datepicker
                                                                (
                                                                    {
                                                                        format: "mm/dd/yyyy",
                                                                        autoClose: true
                                                                    }
                                                                );
                                                            },
                                                            "buttons":
                                                            [
                                                                {
                                                                    "label": "Cancel",
                                                                    "cssClass": "btn-danger",
                                                                    "action": function(d)
                                                                    {
                                                                        d.close();
                                                                    }
                                                                },
                                                                {
                                                                    "label": "Update",
                                                                    "cssClass": "btn-primary",
                                                                    "action": function(d)
                                                                    {
                                                                        if($.trim($("#permit_number_pm").val()).length === 0)
                                                                        {
                                                                            window.alert("The permit number is required");
                                                                            return;
                                                                        }
                                                                        if($("#permit_status_pm").val() === "Choose One")
                                                                        {
                                                                            window.alert("You must choose a permit status");
                                                                            return;
                                                                        }
                                                                        var jaysawn =
                                                                        {
                                                                            "permit_number": $.trim($("#permit_number_pm").val()),
                                                                            "permit_status": $("#permit_status_pm").val(),
                                                                            "permit_date": moment($("#pm_permit_status_date").find("input").val(), "MM/DD/YYYY").format("YYYY-MM-DD")
                                                                        };
                                                                        var j = JSON.stringify(jaysawn);


                                                                        $.post("./data", {"fn": "update_project_management_item", "identifier": kustomer.identifier, "key": "permitting", "value": j}).done(function(rer)
                                                                        {
                                                                            kustomer.permit_number = jaysawn["permit_number"];
                                                                            kustomer.permit_history.push
                                                                            (
                                                                                {"status": jaysawn["permit_status"], "date": jaysawn["permit_date"]}
                                                                            );
                                                                            $("#show_permit_status_pm").text("Permit Number: " + kustomer.permit_number);
                                                                            $("<div></div>").addClass("pm_permit_history_item").text(jaysawn["permit_status"] + " - " + moment(jaysawn["permit_date"], "YYYY-MM-DD").format("MM/DD/YYYY")).appendTo($("#pm_customer_details_info_" + kustomer.identifier).find(".pm_history_container"));
                                                                            if($("#pm_customer_details_info_" + kustomer.identifier).find(".update_permit_pm").size() === 0)
                                                                            {
                                                                                var btn = $("<button></button>").addClass("btn").addClass("btn-primary").addClass("update_permit_pm").text("Provide Permit Status Update")
                                                                                .click(function()
                                                                                {
                                                                                    provideAdditionalPermitStatusUpdate(customer);
                                                                                });
                                                                                btn.prependTo($("#pm_customer_details_info_" + kustomer.identifier).find(".permit_history"));
                                                                                $("<div></div>").insertAfter(btn)
                                                                            }
                                                                            d.close();
                                                                            save();
                                                                        });
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    );
                                                }
                                                else
                                                {
                                                    save();
                                                }
                                                return;
                                            }
                                            if(list_item.key === "received_pto")
                                            {
                                                if(checked)
                                                {
                                                    if(window.confirm("Are you sure you would like to mark this item as PTO received? It will remove the item from the project manager's list."))
                                                    {
                                                        
                                                        var completion = function()
                                                        {
                                                            var el_to_push = null;
                                                            $(".pm_v2_wrapper").find(".json").each(function(idx66, element66)
                                                            {
                                                                var json = $.parseJSON($(element66).val());
                                                                if(typeof(json.length) + '' !== "undefined")
                                                                {
                                                                    var new_json = [];
                                                                    $.each(json, function(idx666, element666)
                                                                    {
                                                                        if(element666.identifier !== customer.identifier)
                                                                        {
                                                                            new_json.push(element666);
                                                                        }
                                                                        else
                                                                        {
                                                                            if(el_to_push === null)
                                                                            {
                                                                                el_to_push = element666;
                                                                            }
                                                                        }
                                                                    });
                                                                    //$(element66).attr("value", JSON.stringify(new_json)).val(JSON.stringify(new_json));
                                                                }
                                                                else
                                                                {
                                                                    var new_json = {};
                                                                    $.each(Object.keys(json), function(idx666, keyyyyy)
                                                                    {
                                                                        var new_json2 = [];
                                                                        $.each(json[keyyyyy], function(idx6666, element6666)
                                                                        {
                                                                            if(element6666.identifier !== customer.identifier)
                                                                            {
                                                                                new_json2.push(element6666);
                                                                            }
                                                                            else
                                                                            {
                                                                                if(el_to_push === null)
                                                                                {
                                                                                    el_to_push = element6666;
                                                                                }
                                                                            }
                                                                        });
                                                                        new_json["stage_" + ((idx666 + 1) + '')] = new_json2;
                                                                    });
                                                                    //$(element66).attr("value", JSON.stringify(new_json)).val(JSON.stringify(new_json));
                                                                }
                                                            });
                                                            $(".pm_group_v2").each(function(idx66, element66)
                                                            {
                                                                if($(element66).data("identifier") === "pto_received")
                                                                {
                                                                    var existing_json = $.parseJSON($(element66).find("> .json").first().val());
                                                                    if(el_to_push !== null)
                                                                    {
                                                                        existing_json.push(el_to_push);
                                                                    }
                                                                    $(element66).find("> .json").first().attr("value", JSON.stringify(existing_json)).val(JSON.stringify(existing_json));
                                                                }
                                                            });
                                                            $(".pm_group_v2").each(function(idx66, element661)
                                                            {
                                                                if($(element661).data("identifier") === customer.pm.identifier)
                                                                {
                                                                    var new_json99 = {}
                                                                    var existing_json99 = $.parseJSON($(element661).find("> .json").first().val());
                                                                    $.each(Object.keys(existing_json99), function(idx666, key6)
                                                                    {
                                                                        var new_json999 = [];
                                                                        $.each(existing_json99[key6], function(idx6666, el6666)
                                                                        {
                                                                            if(el6666.identifier !== customer.identifier)
                                                                            {
                                                                                new_json999.push(el6666);
                                                                            }
                                                                        });
                                                                        existing_json99[key6] = new_json999;
                                                                        $(element661).find("> .json").first().val(JSON.stringify(existing_json99)).attr("value", JSON.stringify(existing_json99));
                                                                        $(element661).trigger("click");
                                                                        $(element661).trigger("click");
                                                                    });
                                                                }
                                                            });
                                                            updatePMV2Tallies();
                                                        };
                                                        var popup_html = $("<div></div>");
                                                        $("<p></p>").text("IMPORTANT: Did you confirm that system is turned on?").appendTo(popup_html);
                                                        $("<hr />").appendTo(popup_html);
                                                        $("<input />").attr("type", "checkbox").addClass("system_on_cb").appendTo(popup_html);
                                                        $("<span></span>").addClass("popup_response").text("Yes").appendTo(popup_html);
                                                        $("<hr />").appendTo(popup_html);
                                                        $("<p></p>").text("Did you mark this as PTO received in the LoanPal por>tal?").appendTo(popup_html);
                                                        $("<hr />").appendTo(popup_html);
                                                        $("<select></select>").addClass("loanpal_sel").css("background", "#000000")
                                                        .append
                                                        (
                                                            $("<option></option>").attr("value", "n/a").text("Choose One")
                                                        )
                                                        .append
                                                        (
                                                            $("<option></option>").attr("value", "1").text("Yes")
                                                        )
                                                        .append
                                                        (
                                                            $("<option></option>").attr("value", "0").text("N/A")
                                                        )
                                                        .appendTo(popup_html);
                                                        BootstrapDialog.show
                                                        (
                                                            {
                                                                "title": "One Last Question",
                                                                "message": popup_html.html(),
                                                                "buttons":
                                                                [
                                                                    {
                                                                        "label": "No/Cancel",
                                                                        "cssClass": "btn-danger",
                                                                        "action": function(dia)
                                                                        {
                                                                            window.clearInterval(window.PTO_POPUP_INTERVAL);
                                                                            dia.close();
                                                                        }
                                                                    },
                                                                    {
                                                                        "label": "Yes/Save",
                                                                        "cssClass": "btn-primary hidden_btn_pop_up",
                                                                        "action": function(dia)
                                                                        {
                                                                            window.clearInterval(window.PTO_POPUP_INTERVAL);

                                                                            dia.close();
                                                                            save(completion);
                                                                            var save2 = function()
                                                                            {
                                                                                div.remove();
                                                                                project_details_div.remove();
                                                                            };
                                                                            $("#pm_customer_details_info_" + customer.identifier).find(".pm_communication_buttons").find("li").each(function(index, element)
                                                                            {
                                                                                var el = $(element);
                                                                                if(el.data("key") === "pto_received_email_sent")
                                                                                {
                                                                                    var dt = el.find(".customer_communication_date").first().text();
                                                                                    if(dt === "--/--/--")
                                                                                    {
                                                                                        $.post("/data", {"fn": "send_pto_received_email", "identifier": customer.identifier}).done(function()
                                                                                        {
                                                                                            save2();
                                                                                        });
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        save2();
                                                                                    }
                                                                                }                                                        
                                                                            });
                                                                        }
                                                                    }
                                                                ],
                                                                "onshown": function(d)
                                                                {
                                                                    window.PTO_POPUP_INTERVAL = setInterval(function()
                                                                    {
                                                                        var dialog_body = d.$modalBody;
                                                                        var dialog_footer = d.$modalFooter;
                                                                        var good = false;
                                                                        if(dialog_body.find("input").first()[0].checked)
                                                                        {
                                                                            var sel_val = dialog_body.find("select").first().val();
                                                                            if(sel_val === "1" || sel_val === "0")
                                                                            {
                                                                                good = true;
                                                                            }
                                                                        }
                                                                        if(good)
                                                                        {
                                                                            if(dialog_footer.find(".btn-primary").first().hasClass("hidden_btn_pop_up"))
                                                                            {
                                                                                dialog_footer.find(".btn-primary").first().removeClass("hidden_btn_pop_up");
                                                                            }  
                                                                        }
                                                                        else
                                                                        {
                                                                            if(!dialog_footer.find(".btn-primary").first().hasClass("hidden_btn_pop_up"))
                                                                            {
                                                                                dialog_footer.find(".btn-primary").first().addClass("hidden_btn_pop_up");
                                                                            }
                                                                        }
                                                                        $(".dialog_footer").find(".btn-primary").css("display", "none");

                                                                    }, 500);
                                                                }
                                                            }
                                                        );
                                                    }
                                                }
                                                else
                                                {
                                                    save(function()
                                                    {
                                                        var el_to_push = null;
                                                        $(".pm_group_v2").each(function(idx66, element66)
                                                        {
                                                            if($(element66).data("identifier") === "pto_received")
                                                            {
                                                                var json = $.parseJSON($(element66).find("> .json").first().val());
                                                                var new_json = [];                                                                
                                                                $.each(json, function(idx666, element666)
                                                                {
                                                                    if(element666.identifier !== customer.identifier)
                                                                    {
                                                                        new_json.push(element666);
                                                                    }
                                                                    else
                                                                    {
                                                                        el_to_push = element666;
                                                                    }
                                                                });
                                                                $(element66).find("> .json").first().val(JSON.stringify(new_json)).attr("value", JSON.stringify(new_json));
                                                            }
                                                        });
                                                        if(el_to_push !== null)
                                                        {
                                                            $(".pm_group_v2").each(function(idx66, element66)
                                                            {
                                                                if($(element66).data("identifier") === customer.pm.identifier)
                                                                {
                                                                    var json = $.parseJSON($(element66).find("> .json").first().val());
                                                                    json["stage_6"].push(el_to_push);
                                                                    $(element66).find("> .json").first().val(JSON.stringify(json)).attr("value", JSON.stringify(json));
                                                                }
                                                            });
                                                        }
                                                        div.remove();
                                                        project_details_div.remove();
                                                        updatePMV2Tallies();
                                                    });
                                                }
                                                return;

                                            }
                                            if(list_item.key === "install")
                                            {
                                                if(checked)
                                                {
                                                    BootstrapDialog.show
                                                    (
                                                        {
                                                            "title": "Upload Photo",
                                                            "message": "<p>Please upload a nice photo of the installation (for social media)....</p><input type='file' accept='image/*' id='social_media_install_photo' />",
                                                            "buttons":
                                                            [
                                                                {
                                                                    "label": "Cancel",
                                                                    "cssClass": "btn-danger",
                                                                    "action": function(d)
                                                                    {
                                                                        d.close();
                                                                        cb.css("opacity", "1.0");
                                                                    },
                                                                },
                                                                {
                                                                    "label": "Upload It!",
                                                                    "cssClass": "btn-primary",
                                                                    "action": function(d)
                                                                    {
                                                                        if($("#social_media_install_photo")[0].files.length !== 1)
                                                                        {
                                                                            window.alert("A photo is required");
                                                                            return;
                                                                        }
                                                                        $(".bootstrap-dialog-footer").find(".btn-primary").text("Uploading Photo...")

                                                                        var formData = new FormData();

                                                                        formData.append("fn", "install_social_media_file");
                                                                        formData.append("media", $("#social_media_install_photo")[0].files[0]);
                                                                        formData.append("identifier", identifier);

                                                                        var xhr = new XMLHttpRequest();

                                                                        xhr.addEventListener("load", function(e)
                                                                        {                                                                        
                                                                            d.close();
                                                                            BootstrapDialog.show
                                                                            (
                                                                                {
                                                                                    "title": "Installation Notes",
                                                                                    "message": "<textarea class='install_notes_ta'></textarea>",
                                                                                    "buttons":
                                                                                    [
                                                                                        {
                                                                                            "label": "Done",
                                                                                            "cssClass": "btn-primary",
                                                                                            "action": function(d2)
                                                                                            {
                                                                                                if($.trim($(".install_notes_ta").first().val()).length > 0)
                                                                                                {
                                                                                                    $.post("/data", {"fn": "installation_notes_send", "notes": $.trim($(".install_notes_ta").first().val()), "identifier": identifier, "user_identifier": window.user_identifier}).done(function()
                                                                                                    {
                                                                                                        d2.close();
                                                                                                        save();
                                                                                                    });
                                                                                                }
                                                                                                else
                                                                                                {
                                                                                                    d2.close();
                                                                                                    save();
                                                                                                }                                                                                                
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            );                                                                           
                                                                        });
                                                                        xhr.open("POST", "/data");
                                                                        xhr.send(formData);
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    );
                                                }
                                                else
                                                {
                                                    save();
                                                }
                                                return;
                                            }
                                            if(list_item.key === "plan_set_ordered")
                                            {
                                                if(checked)
                                                {
                                                    $.post("/data", {"fn": "plan_set_exists", "identifier": identifier}).done(function(rrr)
                                                    {
                                                        if(rrr.result)
                                                        {
                                                            $.post("/data", {"fn": "activate_plan_set", "identifier": identifier}).done(function(rrrr)
                                                            {
                                                                save();
                                                            });                                                        
                                                            return;
                                                        }
                                                        else
                                                        {
                                                            $.post("/data", {"fn": "read_setting", "value": "utility_providers"}).done(function(providers)
                                                            {
                                                                var utility_providers = [];
                                                                var utility_provider_idx = -1
                                                                $.each(providers.data, function(i, provider)
                                                                {
                                                                    utility_providers.push(provider.value_friendly);
                                                                    if(provider.value === customer.utility_provider)
                                                                    {
                                                                        utility_provider_idx = i;
                                                                    }
                                                                });

                                                                cb.css("opacity", "1.0");
                                                                var questions = 
                                                                {
                                                                    "customer_name":
                                                                    {
                                                                        "type": "input_box",
                                                                        "value": customer.customer_first_name + " " + customer.customer_last_name
                                                                    },
                                                                    "utility_provider":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices": utility_providers
                                                                    },
                                                                    "project_category":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices": 
                                                                        [
                                                                            "Residential",
                                                                            "Commercial"
                                                                        ]
                                                                    },
                                                                    "project_type":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "Flush Mount/Tilt Up",
                                                                            "Railless/Spice/Integrated",
                                                                            "Ground Mount",
                                                                            "Solar Shingle",
                                                                            "Flat-Roof"
                                                                        ]
                                                                    },
                                                                    "pitched_roof_material":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "Asphalt Shingle",
                                                                            "Wood Shake",
                                                                            "Standing Seam Metal",
                                                                            "Corrugated Metal",
                                                                            "Clay Tile",
                                                                            "Wave Tile",
                                                                            "Flat Tile"
                                                                        ]
                                                                    },
                                                                    "roof_structures_quantity":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "1 Structure",
                                                                            "2 Structures"
                                                                        ]                                                        
                                                                    },
                                                                    "structure_type":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "Truss",
                                                                            "Single Span Rafter",
                                                                            "Collar Tie",
                                                                            "Interior Bearing Wall",
                                                                            "Knee Wall",
                                                                            "Knee Wall with Collar Tie",
                                                                            "Purlins",
                                                                            "Supported by Metal Beams",
                                                                            "Supported by Wood Beams",
                                                                            "Steel Frame"
                                                                        ]
                                                                    },
                                                                    "rafter_size":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "2x4",
                                                                            "2x6",
                                                                            "2x8",
                                                                            "2x10",
                                                                            "2x12",
                                                                            "3x6",
                                                                            "4x4",
                                                                            "4x6"
                                                                        ]
                                                                    },
                                                                    "rafter_spacing":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "12",
                                                                            "14",
                                                                            "16",
                                                                            "18",
                                                                            "20",
                                                                            "22",
                                                                            "24",
                                                                            "26",
                                                                            "28",
                                                                            "30",
                                                                            "32",
                                                                            "34",
                                                                            "36",
                                                                            "38",
                                                                            "40",
                                                                            "42",
                                                                            "44",
                                                                            "46",
                                                                            "48"
                                                                        ]
                                                                    },
                                                                    "rafter_span":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "5",
                                                                            "6",
                                                                            "7",
                                                                            "8",
                                                                            "9",
                                                                            "10",
                                                                            "11",
                                                                            "12",
                                                                            "13",
                                                                            "14",
                                                                            "15",
                                                                            "16",
                                                                            "17",
                                                                            "18",
                                                                            "19",
                                                                            "20",
                                                                            "21",
                                                                            "22",
                                                                            "23",
                                                                            "24",
                                                                            "25",
                                                                            "26",
                                                                            "27",
                                                                            "28",
                                                                            "29",
                                                                            "30"
                                                                        ]
                                                                    },
                                                                    "flush_mount_attachment_type":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "Unirac Flashed L Foot"
                                                                        ]
                                                                    },
                                                                    "flush_mount_racking_application":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "Unirac Lite"
                                                                        ]
                                                                    },
                                                                    "quantity_of_arrays":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "1",
                                                                            "2",
                                                                            "3",
                                                                            "4",
                                                                            "5",
                                                                            "6",
                                                                            "7",
                                                                            "8",
                                                                            "9",
                                                                            "10",
                                                                            "11",
                                                                            "12",
                                                                            "13",
                                                                            "14",
                                                                            "15",
                                                                            "16",
                                                                            "17",
                                                                            "18",
                                                                            "19",
                                                                            "20",
                                                                            "21",
                                                                            "22",
                                                                            "23",
                                                                            "24"
                                                                        ]
                                                                    },
                                                                    "system_type":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "String Inverter",
                                                                            "DC Optimizer Inverter",
                                                                            "Micro Inverter",
                                                                            "AC Module"
                                                                        ]
                                                                    },
                                                                    "module_manufacturer_and_model_number":
                                                                    {
                                                                        "type": "input_box"
                                                                    },
                                                                    "string_design":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "I want to enter stringing",
                                                                            "I want the designer to to string"
                                                                        ]
                                                                    },
                                                                    "quantity_of_micro_inverters":
                                                                    {
                                                                        "type": "input_box",
                                                                        "value": customer.proposal.panel_qty
                                                                    },
                                                                    "inverter_manufacturer_and_model_number":
                                                                    {
                                                                        "type": "input_box"
                                                                    },
                                                                    "pv_revenue_meter":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "Yes",
                                                                            "No"
                                                                        ]
                                                                    },
                                                                    "location_of_pv_meter":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "N/A",
                                                                            "Yes",
                                                                            "No"
                                                                        ]
                                                                    },
                                                                    "utility_disconnect":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "Yes",
                                                                            "No"
                                                                        ]
                                                                    },
                                                                    "utility_disconnect_type":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "N/A",
                                                                            "New Non-Fused Disconnect",
                                                                            "New Fused Disconnect",
                                                                            "New Breaker Box"
                                                                        ]
                                                                    },
                                                                    "utility_disconnect_location":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "N/A",
                                                                            "External Wall",
                                                                            "Internal Wall"
                                                                        ]
                                                                    },
                                                                    "external_utility_disconnect_location":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "N/A",
                                                                            "House",
                                                                            "Attached Garage",
                                                                            "Garage",
                                                                            "Barn",
                                                                            "Out Building",
                                                                            "Pole"
                                                                        ]
                                                                    },
                                                                    "external_utility_disconnect_orientation":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "N/A",
                                                                            "North",
                                                                            "East",
                                                                            "South",
                                                                            "West",
                                                                            "NE",
                                                                            "SE",
                                                                            "NW",
                                                                            "SW",
                                                                            "Other"
                                                                        ]
                                                                    },
                                                                    "utility_ac_service_disconnect":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "Yes",
                                                                            "No"
                                                                        ]
                                                                    },
                                                                    "interconnection_strategy":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "Backfeed Breaker",
                                                                            "Tap"
                                                                        ]
                                                                    },
                                                                    "backed_interconnection_location":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "Existing Main Electrical Panel",
                                                                            "New Main Electrical Panel Upgrade",
                                                                            "Existing Sub-Electrical Panel",
                                                                            "New Sub-Electrical Panel",
                                                                            "Line-Supply Breaker in Main Panel",
                                                                            "Meter-Main",
                                                                            "Line-Supply Side Breaker in New Solar Ready Panel"
                                                                        ]
                                                                    },
                                                                    "derate_the_main_breaker":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "Yes",
                                                                            "No"
                                                                        ]
                                                                    },
                                                                    "new_main_breaker_derating":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "Not Applicable",
                                                                            "75A",
                                                                            "100A",
                                                                            "125A",
                                                                            "150A",
                                                                            "175A",
                                                                            "200A",
                                                                            "225A",
                                                                            "250A",
                                                                            "400A"
                                                                        ]
                                                                    },
                                                                    "existing_electrical_grounding":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "Ground Rod",
                                                                            "Ufer",
                                                                            "Cold Water Pipe"
                                                                        ]
                                                                    },
                                                                    "main_electrical_panel_location":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "External Wall",
                                                                            "Internal Wall"
                                                                        ]
                                                                    },
                                                                    "external_main_panel_electrical_panel_orientation_choice_number_1":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "House",
                                                                            "Garage",
                                                                            "Barn",
                                                                            "Pole Mounted",
                                                                            "North",
                                                                            "East",
                                                                            "South",
                                                                            "West",
                                                                            "NE",
                                                                            "SE",
                                                                            "NW",
                                                                            "SW",
                                                                            "Other"
                                                                        ]
                                                                    },
                                                                    "external_main_panel_electrical_panel_orientation_choice_number_2":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "House",
                                                                            "Garage",
                                                                            "Barn",
                                                                            "Pole Mounted",
                                                                            "North",
                                                                            "East",
                                                                            "South",
                                                                            "West",
                                                                            "NE",
                                                                            "SE",
                                                                            "NW",
                                                                            "SW",
                                                                            "Other"
                                                                        ]
                                                                    },
                                                                    "main_electrical_panel_main_breaker_rating":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "60A",
                                                                            "70A",
                                                                            "90A",
                                                                            "100A",
                                                                            "125A",
                                                                            "150A",
                                                                            "175A",
                                                                            "200A",
                                                                            "225A",
                                                                            "400A"
                                                                        ]
                                                                    },
                                                                    "main_electrical_panel_rating_(_Main Bus Rating_)":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "100A",
                                                                            "125A",
                                                                            "150A",
                                                                            "175A",
                                                                            "200A",
                                                                            "225A",
                                                                            "250A",
                                                                            "400A"
                                                                        ]
                                                                    },
                                                                    "service_voltage_at_interconnection":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "1-Phase, 3-Wire 120/240 V",
                                                                            "1-Phase, 2-Wire 240V (No Neutral"
                                                                        ]
                                                                    },
                                                                    "existing_meter_location":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "North Internal",
                                                                            "South Internal",
                                                                            "East Internal",
                                                                            "West Internal",
                                                                            "North External",
                                                                            "South Exteral",
                                                                            "East External",
                                                                            "West External",
                                                                            "Pole Mounted",
                                                                            "Meter-Main",
                                                                            "Other"
                                                                        ]
                                                                    },
                                                                    "utility_entrance":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "Underground",
                                                                            "Overhead"
                                                                        ]
                                                                    },
                                                                    "project_notes_and_special_requirements":
                                                                    {
                                                                        "type": "textarea"
                                                                    },
                                                                    "image_of_layout":
                                                                    {
                                                                        "type": "file"
                                                                    },
                                                                    "image_of_roof_measurements":
                                                                    {
                                                                        "type": "file"
                                                                    },
                                                                    "image_of_roof":
                                                                    {
                                                                        "type": "file"
                                                                    },
                                                                    "image_of_area_around_meter":
                                                                    {
                                                                        "type": "file"
                                                                    },
                                                                    "recipient_email_address":
                                                                    {
                                                                        "type": "textarea"
                                                                    }                                                    
                                                                };
                                                                if(utility_provider_idx > -1)
                                                                {
                                                                    questions["utility_provider"]["value"] = utility_providers[utility_provider_idx];
                                                                }
                                                                /*if(customer.survey_details !== null)
                                                                {
                                                                    questions["pitched_roof_material"]["value"] = customer.survey_details.roofing_type_1;
                                                                    questions["external_utility_disconnect_orientation"]["value"] = customer.survey_details.exterior_main_panel_location;
                                                                    questions["existing_electrical_grounding"]["value"] = customer.survey_details.grounding_type;
                                                                    questions["main_electrical_panel_main_breaker_rating"]["value"] = customer.survey_details.main_breaker;
                                                                    questions["main_electrical_panel_rating_(_Main Bus Rating_)"]["value"] = customer.survey_details.main_buss_rating;
                                                                    questions["external_main_panel_electrical_panel_orientation_choice_number_2"]["value"] = customer.survey_details.exterior_main_panel_location;
                                                                }*/                                                                
                                                                var original_questions = $.parseJSON(JSON.stringify(questions));

                                                                $(".plan_set_order_details").remove();
                                                                var main_div = $("<div></div>").addClass("plan_set_order_details");

                                                                var render_questions = function(questions, id_to_focus)
                                                                {
                                                                    $(".plan_set_question").remove();
                                                                    $("#plan_set_details_save_btn").remove();
                                                                    $.each(questions, function(key, question)
                                                                    {
                                                                        var question_div = $("<div></div>").addClass("plan_set_question").attr("id", "question_" + key);
                                                                        var words = key.split("_");
                                                                        var new_words = [];
                                                                        $.each(words, function(ii, word)
                                                                        {
                                                                            var new_word = word[0].toUpperCase();
                                                                            if(word.length > 1)
                                                                            {
                                                                                new_word += word.substring(1);
                                                                            }
                                                                            new_words.push(new_word);
                                                                        });
                                                                        $("<p></p>").text(new_words.join(" ")).appendTo(question_div);
                                                                        if(question_div.find("> p").first().text() === "Recipient Email Address")
                                                                        {
                                                                            $("<div></div>").addClass("plan_set_order_info_highlight").text("(Enter one address per line)").appendTo(question_div);
                                                                        }


                                                                        switch(question.type)
                                                                        {
                                                                            case "dropdown":
                                                                                var sel = $("<select></select>");
                                                                                $("<option></option>").attr("value", "n/a").text("Choose One").appendTo(sel);
                                                                                $.each(question.choices, function(ii, choice)
                                                                                {
                                                                                    var opt = $("<option></option>").attr("value", choice).text(choice);
                                                                                    if(typeof(question["value"]) + '' !== "undefined")
                                                                                    {
                                                                                        if(question.value === choice)
                                                                                        {
                                                                                            opt.attr("selected", "selected");
                                                                                        }
                                                                                    }
                                                                                    opt.appendTo(sel);
                                                                                });
                                                                                sel.change(function()
                                                                                {
                                                                                    if($(this).val() !== "n/a")
                                                                                    {
                                                                                        question.value = $(this).val();
                                                                                        if(key === "quantity_of_arrays")
                                                                                        {
                                                                                            var count = parseInt($(this).val());
                                                                                            var new_questions = {};
                                                                                            $.each(questions, function(keyy, question2)
                                                                                            {
                                                                                                if(Object.keys(original_questions).indexOf(keyy) > -1)
                                                                                                {
                                                                                                    new_questions[keyy] = question2;
                                                                                                    if(keyy === "quantity_of_arrays")
                                                                                                    {
                                                                                                        for(var iii = 0; iii < count; iii++)
                                                                                                        {
                                                                                                            var num = iii + 1;
                                                                                                            var one_through_one_hundred = [];
                                                                                                            var one_through_sixty = [];
                                                                                                            for(var a = 1; a < 101; a++)
                                                                                                            {
                                                                                                                one_through_one_hundred.push(a + '');
                                                                                                            }
                                                                                                            for(var b = 1; b < 61; b++)
                                                                                                            {
                                                                                                                one_through_sixty.push(b + '');
                                                                                                            }
                                                                                                            new_questions["array_number_" + (num + '') + "_panel_quantity"] = 
                                                                                                            {
                                                                                                                "type": "dropdown",
                                                                                                                "choices": one_through_one_hundred
                                                                                                            };
                                                                                                            new_questions["array_number_" + (num + '') + "_roof_slope_degree_in_angles"] = 
                                                                                                            {
                                                                                                                "type": "dropdown",
                                                                                                                "choices": one_through_sixty
                                                                                                            };
                                                                                                            new_questions["array_number_" + (num + '') + "_azimuth"] = 
                                                                                                            {
                                                                                                                "type": "input_box",                                                                                                
                                                                                                            };
                                                                                                        }

                                                                                                    }
                                                                                                }                                                                                                                                                                
                                                                                            });
                                                                                            render_questions(new_questions, "question_array_#1_panel_quantity");
                                                                                        }
                                                                                    }                                                                    
                                                                                });
                                                                                sel.appendTo(question_div);
                                                                                break;

                                                                            case "textarea":
                                                                                var ta = $("<textarea></textarea>").attr("placeholder", "Type your notes here...");
                                                                                ta.change(function()
                                                                                {
                                                                                    question.value = $.trim($(this).val());
                                                                                });
                                                                                ta.appendTo(question_div);
                                                                                if(typeof(question["value"]) + '' !== "undefined")
                                                                                {
                                                                                    ta.val(question.value);
                                                                                }
                                                                                break;

                                                                            case "file":
                                                                                $("<input />").attr("type", "file").appendTo(question_div);
                                                                                break;
                                                                            case "input_box":
                                                                                var inp = $("<input />").attr("type", "text")
                                                                                .on("change", function()
                                                                                {
                                                                                    question.value = $.trim($(this).val());
                                                                                });
                                                                                if(typeof(question["value"]) + '' !== "undefined")
                                                                                {
                                                                                    inp.val(question.value);
                                                                                }
                                                                                inp.appendTo(question_div);
                                                                                break;
                                                                            default:
                                                                                break;
                                                                        }
                                                                        question_div.appendTo(main_div);
                                                                    });
                                                                    $("<button></button>").text("Save").attr("type", "button").addClass("btn").addClass("btn-primary").attr("id", "plan_set_details_save_btn")
                                                                    .on("click", function()
                                                                    {
                                                                        var that = $(this);
                                                                        $(".missing_value").removeClass("missing_value");
                                                                        var ret_early = false;
                                                                        $.each(questions, function(keyy, question2)
                                                                        {
                                                                            if(ret_early)
                                                                            {
                                                                                return;
                                                                            }
                                                                            if(question2.type === "dropdown")
                                                                            {
                                                                                if(typeof(question2["value"]) + '' === "undefined")
                                                                                {
                                                                                    $("#question_" + keyy).find("> p").addClass("missing_value");
                                                                                    $("#question_" + keyy)[0].scrollIntoView();
                                                                                    ret_early = true;
                                                                                }
                                                                            }                                                            
                                                                            else if(question2.type === "file")
                                                                            {
                                                                                var val = $("#question_" + keyy).find("input").first().val();
                                                                                if(val === "")
                                                                                {
                                                                                    window.alert("Please provide a valid image file (JPG or PNG) for " + $("#question_" + keyy).find("> p").first().text());
                                                                                    $("#question_" + keyy).find("> p").addClass("missing_value");
                                                                                    $("#question_" + keyy)[0].scrollIntoView();
                                                                                    ret_early = true;
                                                                                }
                                                                            
                                                                            }
                                                                            else if(question2.type === "input_box")
                                                                            {
                                                                                if(typeof(question2["value"]) + '' === "undefined" || $.trim(question2.value) === "")
                                                                                {
                                                                                    $("#question_" + keyy).find("> p").addClass("missing_value");
                                                                                    $("#question_" + keyy)[0].scrollIntoView();
                                                                                    ret_early = true;
                                                                                }                                                                
                                                                            }
                                                                        });
                                                                        if(ret_early)
                                                                        {
                                                                            return;
                                                                        }

                                                                        that.text("Saving...");

                                                                        var formData = new FormData();
                                                                        formData.append("fn", "create_plan_set_details");
                                                                        formData.append("identifier", identifier);
                                                                        var key_ordering = [];
                                                                        $.each(questions, function(keyy, question2)
                                                                        {
                                                                            key_ordering.push(keyy);                                                            
                                                                            if(question2.type === "file")
                                                                            {
                                                                                formData.append(keyy, $("#question_" + keyy).find("input").first()[0].files[0]);
                                                                            }
                                                                        });
                                                                        formData.append("key_ordering", JSON.stringify(key_ordering));
                                                                        formData.append("data", JSON.stringify(questions));

                                                                        var xhr = new XMLHttpRequest();
                                                                        (xhr.upload || xhr).addEventListener("progress", function(e)
                                                                        {
                                                                            var done = e.position || e.loaded
                                                                            var total = e.totalSize || e.total;
                                                                            var completion_percentage = (Math.round(done/total*100) + '') + "%";
                                                                            that.text("Uploading... (" + completion_percentage + ")");
                                                                            if(completion_percentage === "100%")
                                                                            {
                                                                                that.text("Finalizing, Please Wait...");
                                                                            }
                                                                        });
                                                                        xhr.addEventListener("load", function(e)
                                                                        {
                                                                            save(function()
                                                                            {
                                                                                $(".plan_set_order_details").remove();
                                                                                cb[0].scrollIntoView();
                                                                            });
                                                                        });

                                                                        xhr.open("POST", "/data");
                                                                        xhr.send(formData);
                                                                    })
                                                                    .appendTo(main_div);

                                                                    if(typeof(id_to_focus) + '' !== "undefined")
                                                                    {
                                                                        if($("#" + id_to_focus).size() > 0)
                                                                        {
                                                                            $("#" + id_to_focus)[0].scrollIntoView();
                                                                        }                                                        
                                                                    }
                                                                };                                                

                                                                render_questions(questions);
                                                                
                                                                main_div.appendTo(cb.parent().parent().parent());
                                                                main_div[0].scrollIntoView();

                                                                if(customer.survey_details !== null)
                                                                {
                                                                    var panel_qty = 1;
                                                                    var done = false;
                                                                    while(!done)
                                                                    {
                                                                        var obj_keys = Object.keys(customer.survey_details);
                                                                        var found = obj_keys.indexOf("inclinometer_reading_roof_plane_tilt_" + (panel_qty + '')) > -1;
                                                                        if(!found)
                                                                        {
                                                                            done = true;
                                                                        }
                                                                        else
                                                                        {
                                                                            panel_qty += 1;
                                                                        }                                                                        
                                                                    }
                                                                    panel_qty -= 1;
                                                                    if(panel_qty === 0)
                                                                    {
                                                                        panel_qty = 1;
                                                                    }

                                                                    $("#question_quantity_of_arrays").find("option").each(function(iiiii, eeeee)
                                                                    {
                                                                        if($(eeeee).attr("value") === (panel_qty + ''))
                                                                        {
                                                                            $("#question_quantity_of_arrays").find("select").first()[0].selectedIndex = iiiii;
                                                                            $("#question_quantity_of_arrays").find("select").first().trigger("change");
                                                                        }
                                                                    });

                                                                    setTimeout(function()
                                                                    {
                                                                        for(var iiiii = 1; iiiii <= panel_qty; iiiii++)
                                                                        {
                                                                            $("#question_array_number_" + (iiiii + '') + "_roof_slope_degree_in_angles").find("option").each(function(iiiiii, eeeeee)
                                                                            {
                                                                                if($(eeeeee).attr("value") === customer.survey_details["inclinometer_reading_roof_plane_tilt_" + (iiiii + '')])
                                                                                {
                                                                                    $(eeeeee).parent().selectedIndex = iiiiii;
                                                                                    $(eeeeee).attr("selected", "selected");
                                                                                }
                                                                            });
                                                                            $("#question_array_number_" + (iiiii + '') + "_azimuth").find("input").val(customer.survey_details["azimuth_of_mounting_plane_" + (iiiii + '')]);

                                                                        }
                                                                    }, 1000);
                                                                }
                                                            });                                                        
                                                        }
                                                    });                                                
                                                }
                                                else
                                                {
                                                    save(function()
                                                    {
                                                        $.post("/data", {"fn": "deactivate_plan_set", "identifier": identifier}).done(function(rr)
                                                        {
                                                            $.post("/data", {"fn": "remove_project_management_checkoff_date", "identifier": identifier, "key": "plan_set_ordered"}).done(function(rr)
                                                            {
                                                                cb.nextAll("span").last().text("Specify Date");
                                                                
                                                            });                                                    
                                                        });
                                                    });
                                                    return;
                                                }
                                                return;
                                            }
                                            save();
                                        });
                                        $.each([cb, name_span, date_span], function(iiiii, eeeee)
                                        {
                                            eeeee.appendTo(li);
                                        });
                                        if(n_a)
                                        {
                                            $("<hr />").addClass("not_applicable_hr").appendTo(li);
                                        }
                                    }
                                    li.appendTo(checkoff_ul);
                                });
                                checkoff_ul.appendTo(project_details_div);
                                setTimeout(function()
                                {
                                    PMV2StageUpdate(customer.identifier);
                                }, 5000);
                            });
                            
                            var modify_dom_fns = [];
                            project_details_div.find(".standard_checkoff_pm_li").each(function(iiiii, eeeee)
                            {
                                var el = $(eeeee);
                                if(typeof(el.data("appears_after")) + '' !== "undefined")
                                {
                                    if(el.data("appears_after") !== "n/a")
                                    {
                                        var appears_after = el.data("appears_after");
                                        modify_dom_fns.push
                                        (
                                            function()
                                            {
                                                project_details_div.find(".standard_checkoff_pm_li").each(function(iiiiii, eeeeee)
                                                {
                                                    if($(eeeeee).data("key") === appears_after)
                                                    {
                                                        el.insertAfter($(eeeeee));
                                                    }
                                                });
                                            }
                                        );
                                    }
                                }
                            });
                            $.each(modify_dom_fns, function(iiiii, fn)
                            {
                                fn();
                            });

                            
                            project_details_div.find(".standard_checkoff_pm_li").each(function(iiiii, eeeee)
                            {
                                if($(eeeee).data("key") === "welcome_email_sent")
                                {
                                    var welcome_email_cb = $("<input />").attr("type", "checkbox").attr("disabled", "disabled");
                                    var welcome_email_button = $("<button></button>").attr("type", "button").text("Welcome Email").addClass("btn").addClass("btn-primary");
                                    var welcome_email_span = $("<span></span>").addClass("customer_communication_date").text(moment(customer.welcome_email_sent_date, "YYYY-MM-DD").format("MM/DD/YYYY"));
                                    welcome_email_button.click(function()
                                    {
                                        var that2 = $(this);
                                        var dialog_html = $("<div></div>");
                                        $("<p></p>").text("Link to Installation Agreement:").appendTo(dialog_html);
                                        $("<input />").attr("type", "text").appendTo(dialog_html);
                                        $("<p></p>").text("Link to Solar Panel Warranty:").appendTo(dialog_html);
                                        $("<input />").attr("type", "text").appendTo(dialog_html);
                                        $("<p></p>").text("Link to Inverter Warranty:").appendTo(dialog_html);
                                        $("<input />").attr("type", "text").appendTo(dialog_html);
                                        $("<p></p>").text("PM Extension Number (Phone Extension):").appendTo(dialog_html);
                                        $("<input />").attr("type", "text").appendTo(dialog_html);

                                        BootstrapDialog.show
                                        (
                                            {
                                                "title": "Welcome Email Details",
                                                "message": dialog_html.html(),
                                                "buttons":
                                                [
                                                    {
                                                        "label": "Cancel",
                                                        "cssClass": "btn-danger",
                                                        "action": function(d)
                                                        {
                                                            d.close();
                                                        }
                                                    },
                                                    {
                                                        "label": "Send it!",
                                                        "cssClass": "btn-primary",
                                                        "action": function(d)
                                                        {
                                                            var installation_link = $.trim($(".bootstrap-dialog-body").find("input").first().val());
                                                            var solar_warranty_link = $.trim($(".bootstrap-dialog-body").find("input").eq(1).val());
                                                            var inverter_warranty_link = $.trim($(".bootstrap-dialog-body").find("input").eq(2).val());
                                                            var pm_extension = $.trim($(".bootstrap-dialog-body").find("input").eq(3).val());

                                                            if(installation_link.length === 0)
                                                            {
                                                                window.alert("Please provide a link to the installation agreement.");
                                                                return;
                                                            }
                                                            if(solar_warranty_link.length === 0)
                                                            {
                                                                window.alert("Please provide a link to the solar warranty.");
                                                                return;
                                                            }
                                                            if(inverter_warranty_link.length === 0)
                                                            {
                                                                window.alert("Please provide a link to the inverter warranty.");
                                                                return;
                                                            }
                                                            if(pm_extension.length === 0)
                                                            {
                                                                window.alert("Please provide the project manager's phone extension.");
                                                                return;
                                                            }

                                                            $(".bootstrap-dialog-footer").find(".btn-primary").first().text("Sending...");

                                                            var old_txt = that2.text();                                                            
                                                            that2.text("Sending Email...");
                                                            $.post("/data", {"fn": "send_welcome_email", "identifier": identifier, "installation_link": installation_link, "solar_warranty_link": solar_warranty_link, "inverter_warranty_link": inverter_warranty_link, "pm_extension": pm_extension}).done(function()
                                                            {
                                                                that2.text(old_txt).attr("disabled", "disabled");
                                                                that2.prev().prev()[0].checked = true;
                                                                that2.prev().text(moment().format("MM/DD/YYYY"));
                                                                d.close();

                                                                var waiting_html = $("<div></div>");
                                                                $("<p></p>").html("Please wait for <span id='wait_clock'>30</span> seconds").appendTo(waiting_html);

                                                                BootstrapDialog.show
                                                                (
                                                                    {
                                                                        "title": "Wait",
                                                                        "closable": false,
                                                                        "message": waiting_html.html(),
                                                                        "onshown": function(ddd)
                                                                        {
                                                                            var bod = $(".bootstrap-dialog-body");
                                                                            var temp_interval = setInterval(function()
                                                                            {
                                                                                var time = parseInt(bod.find("#wait_clock").text());
                                                                                time--;
                                                                                if(time === 0)
                                                                                {
                                                                                    clearInterval(temp_interval);
                                                                                    ddd.close();
                                                                                }
                                                                                else
                                                                                {
                                                                                    bod.find("#wait_clock").text(time + '');
                                                                                }
                                                                            }, 1000);
                                                                            window.temp_intervals.push(temp_interval);
                                                                        }
                                                                    }
                                                                )

                                                                $("#pm_customer_details_info_" + identifier).find(".standard_checkoff_pm_li").each(function(index, li)
                                                                {                                                                    
                                                                    if($(li).data("key") === "welcome_call_completed")
                                                                    {
                                                                        $(li).find("input").first()[0].checked = true;
                                                                        $(li).find("input").first().trigger("change");
                                                                    }
                                                                    if($(li).data("key") === "welcome_email_sent")
                                                                    {
                                                                        setTimeout(function()
                                                                        {
                                                                            $(li).find("input").first()[0].checked = true;
                                                                            $(li).find("input").first().trigger("change");
                                                                        }, 10000);                                                                        
                                                                    }
                                                                });
                                                            });
                                                        }
                                                    }
                                                ]
                                            }
                                        );
                                    });                        
                                    if(customer.welcome_email_sent)
                                    {
                                        welcome_email_cb.attr("checked", "checked");
                                        welcome_email_button.attr("disabled", "disabled");
                                    }
                                    $("<li></li>").attr("data-key", "welcome_email_sent")
                                    .append
                                    (
                                        welcome_email_cb
                                    )
                                    .append
                                    (
                                        welcome_email_span
                                    )
                                    .append
                                    (
                                        welcome_email_button
                                    )
                                    .prependTo(communications_ul);
                                }
                            });
                            communications_ul.find(".customer_communication_date").each(function(iiiii, eeeee)
                            {
                                if($(eeeee).text() === "01/01/1970")
                                {
                                    $(eeeee).text("--/--/--");
                                }
                                $(eeeee).on("dblclick", function()
                                {
                                    editCustomerCommunicationDate($(eeeee).parent(), customer.identifier);
                                });
                            });
                            $("<div></div>").css("clear", "both").css("min-height", "0.5em").appendTo(project_details_div);
                            $("<h3></h3>").text("To-Do Items:").appendTo(project_details_div);
                            var to_do_wrapper = $("<div></div>").attr("id", "to_do_pm_wrapper");
                            
                            to_do_wrapper.on("click", ".glyphicon-remove", function()
                            {
                                if(window.confirm("Are you sure you would like to drop this item?"))
                                {
                                    var that = $(this);
                                    var parent_div = that.closest(".pm_to_do");

                                    parent_div.css("opacity", "0.2");
                                    $.post("/data", {"fn": "drop_to_do", "identifier": parent_div.data("identifier")}).done(function()
                                    {
                                        if($("#to_do_item_" + parent_div.data("identifier")).length === 1)
                                        {
                                            $("#to_do_item_" + parent_div.data("identifier")).remove();
                                            parent_div.remove();
                                        }                                    
                                        
                                    });
                                }
                            });

                            to_do_wrapper.on("click", ".glyphicon-pencil", function()
                            {
                                var that = $(this);
                                var parent_div = that.closest(".pm_to_do");
                                var clones = [];
                                $.each(parent_div.children(), function(i, child)
                                {
                                    clones.push($(child).clone(true, true));
                                    $(child).remove();
                                });
                                parent_div.attr("contenteditable", "true");
                                parent_div.off("blur");
                                parent_div.on("blur", function()
                                {
                                    parent_div.css("opacity", "0.2");
                                    var txt = $.trim($(this).text());
                                    $.post("/data", {"fn": "rename_to_do_item", "identifier": parent_div.data("identifier"), "name": txt}).done(function(rrr)
                                    {
                                        parent_div.removeAttr("contenteditable");
                                        $.each(clones, function(i, child)
                                        {
                                            if(child.is("input"))
                                            {
                                                child.prependTo(parent_div);
                                            }
                                            else
                                            {
                                                child.appendTo(parent_div);
                                            }
                                        });
                                        parent_div.css("opacity", "1.0");
                                        if($("#to_do_item_" + parent_div.data("identifier")).length === 1)
                                        {
                                            $("#to_do_item_" + parent_div.data("identifier"))[0].childNodes[1].nodeValue = txt;
                                        }

                                    });
                                });
                                parent_div[0].focus();
                            });
                            
                            to_do_wrapper.on("click", ".glyphicon-info-sign", function()
                            {
                                var that = $(this);
                                var parent_div = that.closest(".pm_to_do");
                                var notes = parent_div.data("notes");

                                var html = $("<div></div>").text(notes);
                                var old_html = html;
                                var onshown = function(){};
                                var buttons = 
                                [
                                    {
                                        "label": "Done",
                                        "cssClass": "btn-danger",
                                        "action": function(d)
                                        {
                                            d.close();
                                        }
                                    }
                                ]
                                if(window.user_identifier === parent_div.data("owner"))
                                {                                    
                                    if(parent_div.data("collaborative") == "0")
                                    { 
                                        html = $("<div></div>").append($("<textarea></textarea>").addClass("pm_edit_to_do_notes_ta"));
                                        onshown = function()
                                        {
                                            $(".bootstrap-dialog-body").find("textarea").first().val(notes);
                                        };                                   
                                        buttons.push
                                        (
                                            {
                                                "label": "Save",
                                                "cssClass": "btn-primary",
                                                "action": function(d)
                                                {
                                                    $(".bootstrap-dialog-footer").find(".btn-primary").text("Saving...");
                                                    var notes2 = $.trim($(".bootstrap-dialog-body").find("textarea").first().val());
                                                    $.post("/data", {"fn": "set_notes_for_to_do", "identifier": parent_div.data("identifier"), "notes": notes2}).done(function(rrrrrrrr)
                                                    {
                                                        parent_div.attr("data-notes", notes2).data("notes", notes2);
                                                        d.close();
                                                        if($("#to_do_item_" + parent_div.data("identifier")).length === 1)
                                                        {
                                                                $("#to_do_item_" + parent_div.data("identifier")).attr("data-notes", notes2).data("notes", notes2);
                                                        }                                                    
                                                    });
                                                }
                                            }
                                        );
                                    }
                                    else
                                    {
                                        if(parent_div.data("assigner") === window.user_identifier)
                                        {
                                            html = $("<div></div>").append($("<textarea></textarea>").addClass("pm_edit_to_do_notes_ta"));
                                            onshown = function()
                                            {
                                                $(".bootstrap-dialog-body").find("textarea").first().val(notes);
                                            };                                   
                                            buttons.push
                                            (
                                                {
                                                    "label": "Save",
                                                    "cssClass": "btn-primary",
                                                    "action": function(d)
                                                    {
                                                        $(".bootstrap-dialog-footer").find(".btn-primary").text("Saving...");
                                                        var notes2 = $.trim($(".bootstrap-dialog-body").find("textarea").first().val());
                                                        $.post("/data", {"fn": "set_notes_for_to_do", "identifier": parent_div.data("identifier"), "notes": notes2}).done(function(rrrrrrrr)
                                                        {
                                                            parent_div.attr("data-notes", notes2).data("notes", notes2);
                                                            d.close();
                                                            if($("#to_do_item_" + parent_div.data("identifier")).length === 1)
                                                            {
                                                                    $("#to_do_item_" + parent_div.data("identifier")).attr("data-notes", notes2).data("notes", notes2);
                                                            }                                                    
                                                        });
                                                    }
                                                }
                                            );
                                        }
                                    }
                                }
                                BootstrapDialog.show
                                (
                                    {
                                        "title": "Notes",
                                        "message": html,
                                        "buttons": buttons,
                                        "onshown": function(d)
                                        {
                                            onshown();
                                        }
                                    }
                                )
                            });
                            $.each(customer.to_dos, function(i, to_do)
                            {
                                var to_do_div = $("<div></div>").addClass("pm_to_do").text(to_do.name).attr("id", "pm_to_do_" + to_do.identifier).attr("data-identifier", to_do.identifier).attr("data-notes", to_do.notes).data("notes", to_do.notes).attr("data-owner", to_do.owner).attr("data-assigner", to_do.assigner).attr("data-collaborative", to_do.collaborative);
                                var cb = $("<input />").attr("type", "checkbox");
                                if(to_do.owner !== window.user_identifier)
                                {
                                    cb.attr("disabled", "disabled");
                                }
                                cb.prependTo(to_do_div);
                                if(to_do.owner === window.user_identifier)
                                {
                                    if(to_do.collaborative == "0" || (to_do.collaborative == "1" && to_do.assigner === window.user_identifier))
                                    {
                                        $("<span></span>").addClass("glyphicon").addClass("glyphicon-pencil").addClass("to_do_pm_edit").appendTo(to_do_div);
                                        $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove").addClass("to_do_pm_drop").appendTo(to_do_div);
                                    }                                    
                                    if(to_do.due_dt.indexOf(".") > -1)
                                    {
                                        to_do.due_dt = to_do.due_dt.substring(0, to_do.due_dt.indexOf("."));
                                    }                                    
                                }
                                $("<span></span>").addClass("label").addClass("label-primary").text(moment(to_do.due_dt).format("YYYY-MM-DD hh:mm:ss a")).appendTo(to_do_div);                                
                                $("<span></span>").addClass("glyphicon").addClass("glyphicon-info-sign").appendTo(to_do_div);
                                to_do_div.appendTo(to_do_wrapper);
                            });
                            to_do_wrapper.appendTo(project_details_div);
                        });
                    }
                    project_details_div.find(".label-mod-closer").click(function()
                    {
                        modifyCloserInformation(customer.identifier, customer.customer_first_name + " " + customer.customer_last_name);
                    });
                    project_details_div.insertAfter(div);
                    div.html(old_div_html);
                    div.removeAttr("style");
                    var found_pm_num = false;
                    project_details_div.find("div").each(function(iiiii, eeeee)
                    {
                        if($(eeeee).attr("id") === "show_permit_status_pm")
                        {
                            if(!found_pm_num)
                            {
                                found_pm_num = true;
                            }
                            else
                            {
                                $(eeeee).remove();
                            }
                        }
                    });                  
                    if(typeof(selector) + '' !== "undefined")
                    {
                        project_details_div.find(selector).first()[0].scrollIntoView();
                    }
                });
            }
            function showProjectManagementDetails(identifier, div, selector)
            {
                var kustomer = {};
                var updateSystemInfo = function(id)
                {
                    $("#pm_customer_details_info_" + id).css("opacity", "0.2");
                    $.post("./data", {"fn": "get_updated_system_details_info", "identifier": id}).done(function(r)
                    {
                        $("#pm_customer_details_info_" + id).find("td").each(function(i, e)
                        {
                            if($(e).text() === "System Size")
                            {
                                $(e).next().text(r.system_size + '');
                            }
                            else if($(e).text() === "System Cost")
                            {
                                $(e).next().text(currencyFormat(parseFloat(r.total_system_cost)));
                            }
                            else if($(e).text() === "GS Incentive Check")
                            {
                                $(e).next().text(currencyFormat(parseFloat(r.gs_incentive)));
                            }
                        });
                        $("#pm_customer_details_info_" + id).css("opacity", "1.0");
                    });
                }
                if($("#pm_customer_details_info_" + identifier).size() > 0)
                {
                    $("#pm_customer_details_info_" + identifier).remove();
                }
                var project_details_div = $("<div></div>").addClass("pm_customer_details_info").attr("id", "pm_customer_details_info_" + identifier);

                var cust_nayme = "";
                $.post("./data", {"fn": "get_pm_details_for_customer", "identifier": identifier}).done(function(resp)
                {
                    var customer = resp;
                    kustomer = customer;
                    cust_nayme = customer.customer_first_name + " " + customer.customer_last_name;
                    $("<p></p>").addClass("pm_detail_cust_name").text(customer.customer_first_name + " " + customer.customer_last_name).appendTo(project_details_div);
                    var mgr = div.closest(".pm_customers_wrapper").prevAll(".pm_group").first().find(".pm_name_item").text();
                    $("<p></p>").addClass("pm_detail_pm_name").text("Project Assigned To: ")
                    .append
                    (
                        $("<span></span>").addClass("pm_actual_pm_name").text(mgr)
                    ).appendTo(project_details_div);
                    $("<span></span>").addClass("pm_save_me").append
                    (
                    	$("<i></i>").addClass("fa").addClass("fa-life-ring")
                    )
                    .click(function()
                    {
                    	var group_div = $(this).parent().parent().prev();
                    	var save_cb = function()
                    	{
                    		var cpy = [];
                    		var items = $.parseJSON(group_div.find(".pm_projs").first().val());
                    		for(var n = 0; n < items.length; n++)
                    		{
                    			if(items[n].identifier !== customer.identifier)
                    			{
                    				cpy.push(items[n]);
                    			}
                    		}
                    		group_div.find(".pm_projs").first().val(JSON.stringify(cpy));
                    		var tally = group_div.find(".pm_tally").text().replace(" Projects", "");
                    		tally = $.trim(tally);
                    		tally = parseInt(tally);
                    		tally -= 1;
                    		group_div.find(".pm_tally").text((tally + '') + " Projects");
                    	};
                    	saveCustomer(customer.identifier, [project_details_div, project_details_div.prev()], customer.customer_first_name + " " + customer.customer_last_name, save_cb);
                    }).appendTo(project_details_div);
                    $("<span></span>").addClass("pm_pencil").addClass("glyphicon").addClass("glyphicon-pencil").click(function()
                    {
                        editCustomerDetailsPMTab(customer);
                    }).appendTo(project_details_div);                  

                    if(div.parent().prev().find(".pm_name_item").text() !== "Unassigned")
                    {
                    	$("<span></span>").addClass("glyphicon").addClass("glyphicon-refresh")
						.click(function()
						{
							var reassignment_html = $("<div></div>");
							$("<p></p>").text("Choose a project manager").appendTo(reassignment_html);
							var reassignment_sel = $("<select></select>").attr("id", "pm_reassignment_sel");

							$.each({{ project_managers|safe }}, function(iii, eee)
							{
								$("<option></option>").text(eee.name).attr("value", eee.identifier).appendTo(reassignment_sel);
							});
							reassignment_sel.appendTo(reassignment_html);
							$("<p></p>").appendTo(reassignment_html);

							BootstrapDialog.show
							(
								{
									"title": "Reassign to a different project manager",
									"message": reassignment_html.html(),
									"buttons":
									[
										{
											"label": "Cancel",
											"cssClass": "btn-danger",
											"action": function(d)
											{
												d.close();
											}
										},
										{
											"label": "Reassign",
											"cssClass": "btn-primary",
											"action": function(d)
											{
												$(".bootstrap-dialog-footer").find(".btn-primary").css("opacity", "0.2").text("Reassigning...");
												$.post("./data", {"fn": "update_project_management_item", "key": "project_manager", "value": $(".bootstrap-dialog-body").find("select").first().val(), "identifier": div.data("identifier")}).done(function(r)
												{
													d.close();
													$("#project_management").trigger("click");
												});
											}
										}
									]
								}
							);
						}).appendTo(project_details_div);
                    }
                    $("<span></span>").addClass("pm_close_btn").text("X").click(function()
                    {
                        project_details_div.remove();
                    }).appendTo(project_details_div);

                    $("<hr />").css("clear", "both").appendTo(project_details_div);

                    /*var base_price = 0;
                    $.each(customer.rep.scale.scales, function(ii, ee)
                    {
                        if(ee.tier === "A")
                        {
                            base_price = parseFloat(ee.price);
                        }
                    });*/

					var fund_opts = [];
					fund_opts.push("Choose One");
					$.each(customer.funds, function(iii, eee)
					{
						fund_opts.push(eee["value_friendly"]);
					});

                    var display_items =
                    [
                        [
                            {
                                "name": "Customer Name",
                                "editable": false,
                                "type": "text",
                                "value": function(obj)
                                {
                                    return obj.customer_first_name + " " + obj.customer_last_name;
                                }

                            },
                            {
                                "name": "Customer Address",
                                "editable": true,
                                "type": "text",
                                "key": "customer_address",
                                "value": function(obj)
                                {
                                    return obj.customer_address;
                                },
                                "transform": function(txt)
                                {
                                    return $.trim(txt);
                                },
                                "validation": function(txt)
                                {
                                    return $.trim(txt).length > 0;
                                }
                            },
                            {
                                "name": "Customer City",
                                "editable": true,
                                "type": "text",
                                "key": "customer_city",
                                "value": function(obj)
                                {
                                    return obj.customer_city;
                                },
                                "transform": function(txt)
                                {
                                    return $.trim(txt);
                                },
                                "validation": function(txt)
                                {
                                    return $.trim(txt).length > 0;
                                }
                            },
                            {
                                "name": "Customer Postal",
                                "editable": true,
                                "type": "text",
                                "key": "customer_postal",
                                "value": function(obj)
                                {
                                    return obj.customer_postal;
                                },
                                "transform": function(txt)
                                {
                                    var digits = txt.digits();
                                    if(digits !== null)
                                    {
                                        return digits;
                                    }
                                    return "";
                                },
                                "validation": function(txt)
                                {
                                    return txt.digits() !== null && txt.digits().length === 5;
                                }
                            },
                            {
                                "name": "Customer State",
                                "editable": false,
                                "type": "text",
                                "value": function(obj)
                                {
                                    return obj.customer_state;
                                }
                            },
                            {
                                "name": "Customer Email",
                                "key": "customer_email",
                                "editable": true,
                                "type": "text",
                                "value": function(obj)
                                {
                                    return obj.customer_email;
                                },
                                "transform": function(txt)
                                {
                                    return $.trim(txt).toLowerCase();
                                },
                                "validation": function(txt)
                                {
                                    return $.trim(txt).length > 0;
                                }
                            },
                            {
                                "name": "Customer Phone",
                                "key": "customer_phone",
                                "editable": true,
                                "type": "text",
                                "value": function(obj)
                                {
                                    return obj.customer_phone
                                },
                                "transform": function(txt)
                                {
                                    var v = txt.digits();
                                    if(v === null)
                                    {
                                        return "";
                                    }
                                    return v;
                                },
                                "validation": function(txt)
                                {
                                    var v = txt.digits();
                                    return ((v !== null) && (v.length === 10));
                                },
                                "aftersave_value": function(txt)
                                {
                                    var chars = txt.digits().split('');
                                    return "(" + chars[0] + chars[1] + chars[2] + ") " + chars[3] + chars[4] + chars[5] + "-" + chars[6] + chars[7] + chars[8] + chars[9];
                                }
                            }
                        ],
                        [
                            {
                                "name": "Rep Name",
                                "editable": false,
                                "value": function(obj)
                                {
                                    return obj.rep.name
                                },
                                "type": "text"
                            },
                            {
                                "name": "Rep Phone",
                                "editable": false,
                                "value": function(obj)
                                {
                                    return obj.rep.phone
                                },
                                "type": "text"
                            },
                            {
                                "name": "Rep Email",
                                "editable": false,
                                "value": function(obj)
                                {
                                    return "<a href='mailto:" + obj.rep.email + "'>" + obj.rep.email + "</a>";
                                },
                                "type": "text"
                            },
                            {
                                "name": "Solar Pro",
                                "editable": false,
                                "value": function(obj)
                                {
                                    return "<p>" + obj.solar_pro + "</p>";
                                },
                                "type": "text"
                            },
                            {
                                "name": "Closer Name",
                                "editable": false,
                                "value": function(obj)
                                {
                                    var ret = "";
                                    if(Object.keys(obj).indexOf("closer") > -1)
                                    {
                                        ret += obj.closer.name;
                                    }
                                    else
                                    {
                                        ret += "N/A";
                                    }
                                    ret += " <span class='label label-primary label-mod-closer'>Update Closer</span>";
                                    return ret;
                                },
                                "type": "text"
                            },
                            {
                            	"name": "Closing Notes",
                            	"editable": false,
                            	"type": "text",
                            	"value": function(obj)
                            	{
                            		if(obj.closing_notes === null)
                            		{
                            			return "(None provided)";
                            		}
                            		return obj.closing_notes;
                            	}
                            },
                            {
                                "name": "Closer Email",
                                "editable": false,
                                "value": function(obj)
                                {
                                    if(Object.keys(obj).indexOf("closer") > -1)
                                    {
                                        return "<a href='mailto:" + obj.closer.email + "'>" + obj.closer.email + "</a>";
                                    }
                                    return "N/A";
                                },
                                "type": "text"
                            }
                        ],
                        [
                            {
                                "name": "Panel Count",
                                "editable": true,
                                "key": "panel_qty",
                                "type": "multiple_choice",
                                "choices":
                                [
                                    "01",
                                    "02",
                                    "03",
                                    "04",
                                    "05",
                                    "06",
                                    "07",
                                    "08",
                                    "09",
                                    "10",
                                    "11",
                                    "12",
                                    "13",
                                    "14",
                                    "15",
                                    "16",
                                    "17",
                                    "18",
                                    "19",
                                    "20",
                                    "21",
                                    "22",
                                    "23",
                                    "24",
                                    "25",
                                    "26",
                                    "27",
                                    "28",
                                    "29",
                                    "30",
                                    "31",
                                    "32",
                                    "33",
                                    "34",
                                    "35",
                                    "36",
                                    "37",
                                    "38",
                                    "39",
                                    "40",
                                    "41",
                                    "42",
                                    "43",
                                    "44",
                                    "45",
                                    "46",
                                    "47",
                                    "48",
                                    "49",
                                    "50",
                                    "51",
                                    "52",
                                    "53",
                                    "54",
                                    "55",
                                    "56",
                                    "57",
                                    "58",
                                    "59",
                                    "60",
                                    "61",
                                    "62",
                                    "63",
                                    "64",
                                    "65",
                                    "66",
                                    "67",
                                    "68",
                                    "69",
                                    "70",
                                    "71",
                                    "72",
                                    "73",
                                    "74",
                                    "75",
                                    "76",
                                    "77",
                                    "78",
                                    "79",
                                    "80",
                                    "81",
                                    "82",
                                    "83",
                                    "84",
                                    "85",
                                    "86",
                                    "87",
                                    "88",
                                    "89",
                                    "90",
                                    "91",
                                    "92",
                                    "93",
                                    "94",
                                    "95",
                                    "96",
                                    "97",
                                    "98",
                                    "99"
                                ],
                                "value": function(obj)
                                {
                                    return obj.proposal["panel_qty"] + '';
                                },
                                "transform": function(txt)
                                {
                                    return parseInt(txt) + '';
                                },
                                "blur": function()
                                {
                                    updateSystemInfo(identifier);
                                }
                            },
                            {
                                "name": "Panel Type",
                                "editable": false,
                                "type": "text",
                                "value": function(obj)
                                {
                                    return obj.proposal.panel_type.substring(0, obj.proposal.panel_type.indexOf("[[[")) + "<input type='hidden' value='" + obj.proposal.panel_type + "' />";
                                }
                            },
                            {
                                "name": "Estimated Annual Production",
                                "editable": false,
                                "type": "text",
                                "value": function(obj)
                                {
                                    var replaced = obj.proposal.year_one_production;
                                    while(replaced.indexOf(",") > -1)
                                    {
                                        replaced = replaced.replace(",", "");
                                    }
                                    return currencyFormat(parseFloat(replaced)).replace("$", "");
                                }
                            },
                            {
                                "name": "System Size",
                                "editable": false,
                                "type": "text",
                                "value": function(obj)
                                {
                                    return obj.proposal.system_size + '';
                                }
                            },
                            {
                                "name": "System Cost",
                                "editable": false,
                                "type": "text",
                                "value": function(obj)
                                {
                                    return currencyFormat(parseFloat(obj.total_system_cost));
                                }
                            }
                        ],
                        [
                            {
                                "name": "Signed Date",
                                "editable": true,
                                "key": "signed_date",
                                "type": "date",
                                "value": function(obj)
                                {

                                    var mom = moment(obj.signed_date, "YYYY-MM-DD");;
                                    if(mom.year() === 1970)
                                    {
                                        return "Specify Date";
                                    }
                                    return mom.format("MM/DD/YYYY");
                                }
                            },
                            {
                                "name": "Welcome Call Date",
                                "editable": true,
                                "type": "date",
                                "key": "welcome_call_date",
                                "value": function(obj)
                                {
                                    var date = "Specify in checklist below...";
                                    if(Object.keys(obj.project_management_checkoffs).indexOf("welcome_call_completed") > -1)
                                    {
                                        if(Object.keys(obj.project_management_checkoffs["welcome_call_completed"]).indexOf("date") > -1)
                                        {
                                            var date = moment(obj.project_management_checkoffs["welcome_call_completed"]["date"], "YYYY-MM-DD").format("MM/DD/YYYY");
                                        }
                                    }
                                    return $("<div></div>").append($("<span></span>").addClass("pm_upper_area_welcome_call_date").text(date)).html();
                                }
                            },
                            {
                                "name": "Roof Work Needed",
                                "editable": true,
                                "key": "roof_work_needed",
                                "type": "yes_no",
                                "value": function(obj)
                                {
                                    return {"0": "No", "1": "Yes"}[obj.roof_work_needed];
                                }
                            },
                            {
                                "name": "New Layout Needed",
                                "editable": true,
                                "type": "yes_no",
                                "key": "new_layout_needed",
                                "value": function(obj)
                                {
                                    return {"0": "No", "1": "Yes"}[obj.new_layout_needed];
                                }
                            }
                        ],
                        [
                            {
                                "name": "Fund",
                                "editable": true,
                                "key": "fund",
                                "type": "multiple_choice",
                                "choices": fund_opts,
                                "value": function(obj)
                                {
                                    var fnd = "N/A";
                                    $.each(obj.funds, function(i, fund)
                                    {
                                        if(fund["value"] === customer.fund)
                                        {
                                            fnd = fund["value_friendly"];
                                        }
                                    });
                                    return fnd;
                                },
                                "transform": function(txt)
                                {
                                	var ret = "n/a";
                                	$.each(customer.funds, function(iii, fund)
                                	{
                                		if(fund.value_friendly === txt)
                                		{
                                			ret = fund.value;
                                		}
                                	});
                                	return ret;
                                },
                                "blur": function(txt)
                                {
                                	showProjectManagementDetails(customer.identifier, div, selector);
                                }
                            },
                            {
                                "name": "Commission",
                                "editable": true,
                                "key": "tier_option",
                                "type": "multiple_choice",
                                "choices": ["A", "B", "C", "D", "E"].map(function(obj, arr_idx)
                                {
                                    if(arr_idx === 0)
                                    {
                                        return "Standard Commission"
                                    }
                                    var b_price = parseFloat(customer.commission_options["A"]);
                                    var this_price = parseFloat(customer.commission_options[obj]);
                                    return "-" + currencyFormat(Math.abs(this_price)) + "/KW";
                                }),
                                "value": function(obj)
                                {
                                    var b_price = parseFloat(customer.commission_options["A"]);
                                    var choices = ["A", "B", "C", "D", "E"].map(function(obj, arr_idx)
                                    {
                                        if(arr_idx === 0)
                                        {
                                            return "Standard Commission";
                                        }
                                        return "-" + currencyFormat(Math.abs(customer.commission_options[obj])) + "/KW";
                                    });
                                    var num = obj.commission_option;
                                    num = num.toUpperCase();
                                    num = num.replace("TIER_", "");
                                    num = num.charCodeAt(num) - 65;
                                    return choices[num];
                                },
                                "transform": function(txt)
                                {
                                    var ret_val = "";
                                    var b_price = parseFloat(customer.commission_options["A"]);
                                    $.each(["A", "B", "C", "D", "E"], function(iiiii, eeeee)
                                    {
                                        if(iiiii === 0)
                                        {
                                            text = "Standard Commission";
                                        }
                                        else
                                        {
                                            text = "-" + currencyFormat(Math.abs(customer.commission_options[eeeee])) + "/KW";
                                        }
                                        if(txt === text)
                                        {
                                            ret_val = String.fromCharCode(65 + iiiii);
                                        }
                                    });
                                    return ret_val;
                                },
                                "blur": function()
                                {
                                    updateSystemInfo(identifier);
                                }
                            },
                            {
                                "name": "Commission Reviewed",
                                "type": "yes_no",
                                "editable": true,
                                "key": "commission_reviewed",
                                "value": function(obj)
                                {
                                    return {"0": "No", "1": "Yes"}[obj.commission_reviewed];
                                }
                            },
                            {
                                "name": "Jurisdiction",
                                "type": "multiple_choice",
                                "editable": true,
                                "key": "jurisdiction",
                                "choices": customer.jurisdictions.filter(function(a)
                                {
                                    return a.active === true;
                                })
                                .map(function(a)
                                {
                                    return a.value_friendly;
                                }),
                                "value": function(obj)
                                {
                                    if(obj.jurisdiction === "")
                                    {
                                        return obj.jurisdiction;
                                    }
                                    var ret_val = "";
                                    $.each(obj.jurisdictions, function(iiiii, eeeee)
                                    {
                                        if(eeeee.value === obj.jurisdiction)
                                        {
                                            ret_val = eeeee.value_friendly;
                                        }
                                    });
                                    return ret_val;
                                },
                                "transform": function(txt)
                                {
                                    var text = "";
                                    $.each(customer.jurisdictions, function(iiiii, eeeee)
                                    {
                                        if(eeeee.value_friendly === txt)
                                        {
                                            text = eeeee.value;
                                        }
                                    });
                                    return text;
                                }
                            },
                            {
                                "name": "Verified By",
                                "key": "verified_by",
                                "type": "multiple_choice",
                                "editable": true,
                                "choices": ["Not Yet Verified", "Online Map", "Via Telephone"],
                                "value": function(obj)
                                {
                                    return obj.verified_by;
                                },
                                "transform": function(txt)
                                {
                                    return txt;
                                }
                            },
                            {
                                "name": "Utility Acct #",
                                "key": "utility_number",
                                "type": "text",
                                "editable": true,
                                "value": function(obj)
                                {
                                    return obj.customer_utility_account_number;
                                },
                                "transform": function(txt)
                                {
                                    return $.trim(txt);
                                },
                                "validation": function(txt)
                                {
                                    return $.trim(txt).length > 0;
                                }
                            },
                            {
                                "name": "Meter #",
                                "key": "meter_number",
                                "type": "text",
                                "editable": true,
                                "value": function(obj)
                                {
                                    return obj.meter_number;
                                },
                                "transform": function(txt)
                                {
                                    return $.trim(txt);
                                },
                                "validation": function(txt)
                                {
                                    return $.trim(txt).length > 0;
                                }
                            },
                            {
                                "name": "Offset",
                                "key": "offset",
                                "editable": false,
                                "type": "multiple_choice",
                                "choices": ["UT-70", "UT-90", "CA-TOU", "Partial", "0%", "1%", "2%", "3%", "4%", "5%", "6%", "7%", "8%", "9%", "10%", "11%", "12%", "13%", "14%", "15%", "16%", "17%", "18%", "19%", "20%", "21%", "22%", "23%", "24%", "25%", "26%", "27%", "28%", "29%", "30%", "31%", "32%", "33%", "34%", "35%", "36%", "37%", "38%", "39%", "40%", "41%", "42%", "43%", "44%", "45%", "46%", "47%", "48%", "49%", "50%", "51%", "52%", "53%", "54%", "55%", "56%", "57%", "58%", "59%", "60%", "61%", "62%", "63%", "64%", "65%", "66%", "67%", "68%", "69%", "70%", "71%", "72%", "73%", "74%", "75%", "76%", "77%", "78%", "79%", "80%", "81%", "82%", "83%", "84%", "85%", "86%", "87%", "88%", "89%", "90%", "91%", "92%", "93%", "94%", "95%", "96%", "97%", "98%", "99%", "100%"],
                                "value": function(obj)
                                {
                                    return obj.proposal.offset;
                                },
                                "transform": function(txt)
                                {
                                    return txt;
                                },
                                "validation": function(txt)
                                {
                                    return true;
                                }
                            }
                        ]
                    ];
                    if(customer.fund.toLowerCase().indexOf("greensky") > -1)
                    {
                        var outer_idx = display_items.length - 1;
                        display_items[outer_idx].push
                        (
                            {
                                "name": "Greensky Amount Correct",
                                "key": "greensky_amount_correct",
                                "editable": true,
                                "type": "yes_no",
                                "value": function(obj)
                                {
                                    return {"0": "No", "1": "Yes"}[obj.greensky_amount_correct];
                                }
                            }
                        );
                        display_items[outer_idx].push
                        (
                            {
                                "name": "GS Incentive Check",
                                "key": "gs_incentive_check",
                                "type": "text",
                                "editable": false,
                                "value": function(obj)
                                {
                                    return currencyFormat(parseFloat(obj.gs_incentive));
                                }
                            }
                        );
                    }

                    $.each(display_items, function(i, group)
                    {
                        var group_tbl = $("<table></table>").addClass("pm_detail_group");
                        $("<tbody></tbody>").appendTo(group_tbl);
                        var tbody = group_tbl.find("tbody");
                        $.each(group, function(ii, item)
                        {

                            var tr = $("<tr></tr>");
                            $("<td></td>").addClass("pm_lbl_td").text(item.name).appendTo(tr);
                            var value_td = $("<td></td>").addClass("pm_value_td");

                            var item_to_append = null;
                            switch(item.type)
                            {
                                case "text":
                                    var span = $("<span></span>").html(item.value(customer));
                                    if(item.editable)
                                    {
                                        span.css("cursor", "cell").on("dblclick", function(ev)
                                        {
                                            var old_value = span.text();
                                            span.off("blur");
                                            span.on("blur", function()
                                            {
                                                var new_value = $(this).text();
                                                var transformed = item.transform(new_value);
                                                if(item.validation(transformed))
                                                {
                                                    $.post("./data", {"fn": "update_project_management_item", "key": item.key, "value": transformed, "identifier": identifier}).done(function(resp2)
                                                    {
                                                        if(typeof(item["aftersave_value"]) + '' !== "undefined")
                                                        {
                                                            transformed = item.aftersave_value(transformed);
                                                        }
                                                        span.removeAttr("contenteditable");
                                                        span.text(transformed);
                                                    });
                                                }
                                                span.removeAttr("contenteditable");
                                            });
                                            span.attr("contenteditable", "true");
                                            span[0].focus();
                                        });
                                    }
                                    else
                                    {
                                        span.css("cursor", "no-drop");
                                    }
                                    item_to_append = span;
                                    break;

                                case "multiple_choice":
                                    var vall = item.value(customer);
                                    var sel = $("<select></select>").addClass("pm_multiple_choice_select");
                                    if(!item.editable)
                                    {
                                        sel.attr("disabled", "disabled");
                                    }
                                    $.each(item.choices, function(iiii, eeee)
                                    {
                                        var opt = $("<option></option>").attr("value", eeee).text(eeee).appendTo(sel);
                                        if(item.key === "panel_count" || item.key === "panel_qty")
                                        {
                                            if((parseInt(eeee) + '') === vall)
                                            {
                                                opt.attr("selected", "selected");
                                            }
                                        }
                                        else if(item.key === "tier_option")
                                        {
                                            var vvv = item.value(customer);
                                            if(vvv === opt.attr("value"))
                                            {
                                                opt.attr("selected", "selected");
                                            }
                                        }
                                        else if(item.key === "jurisdiction")
                                        {
                                            for(var n = 0; n < customer.jurisdictions.length; n++)
                                            {
                                                var value_friendly = customer.jurisdictions[n].value_friendly;
                                                var valll = customer.jurisdictions[n].value;
                                                var customer_juris = customer.jurisdiction;
                                                if(customer_juris === valll)
                                                {
                                                    if(opt.attr("value") === value_friendly)
                                                    {
                                                        opt.attr("selected", "selected");
                                                    }
                                                }
                                            }
                                        }
                                        else
                                        {
                                            if(item.value(customer) === opt.attr("value"))
                                            {
                                                opt.attr("selected", "selected");
                                            }
                                        }
                                        opt.appendTo(sel);
                                    });
                                    sel.on("change", function()
                                    {
                                        var transformed = item.transform(sel.val());
                                        sel.css("opacity", "0.3");
                                        $.post("./data", {"fn": "update_project_management_item", "key": item.key, "value": transformed, "identifier": identifier}).done(function(r2)
                                        {
                                            sel.removeAttr("style");
                                            if(typeof(item["blur"]) + '' !== "undefined")
                                            {
                                                item.blur();
                                            }
                                        });
                                    });
                                    item_to_append = sel;
                                    break;

                                case "yes_no":
                                    var sel = $("<select></select>").addClass("pm_multiple_choice_select");
                                    if(!item.editable)
                                    {
                                        sel.attr("disabled", "disabled");
                                    }
                                    $("<option value='0'>No</option>").appendTo(sel);
                                    $("<option value='1'>Yes</option>").appendTo(sel);
                                    var vall = item.value(customer);
                                    sel.find("option").each(function(iiiii, eeeee)
                                    {
                                        if($(eeeee).text() === vall)
                                        {
                                            $(eeeee).attr("selected", "selected");
                                        }
                                    });
                                    sel.on("change", function()
                                    {
                                        var transformed = sel.val();
                                        sel.css("opacity", "0.3");
                                        $.post("./data", {"fn": "update_project_management_item", "key": item.key, "value": transformed, "identifier": identifier}).done(function(r2)
                                        {
                                            sel.removeAttr("style");
                                            if(typeof(item["blur"]) + '' !== "undefined")
                                            {
                                                item.blur();
                                            }
                                        });
                                    });
                                    item_to_append = sel;
                                    break;

                                case "date":
                                    var span = $("<span></span>").html(item.value(customer));
                                    if(item.editable)
                                    {
                                        span.css("cursor", "cell").on("dblclick", function(ev)
                                        {
                                        	var datehtml = $("<div><p>Choose a date:</p><br /></div>");
											var date_div = $("<div></div>").attr("id", "pm_sel_date").addClass("input-append").addClass("date");
											var d_val = $(this).text();
											var d_val2 = moment().format("MM/DD/YYYY");
											if(d_val === "Please Specify" || d_val === "Specify Date")
											{
												date_div.attr("data-date", d_val2);
											}
											else
											{
												date_div.attr("data-date", d_val);
											}
											date_div.attr("data-date-format", "mm/dd/yyyy");


											date_div.append
											(
												$("<input />").addClass("span2").attr("size", "16").attr("type", "text").attr("value", date_div.attr("data-date"))
											)
											.append
											(
												$("<span></span>").addClass("add-on")
												.append
												(
													$("<i></i>").addClass("icon-th")
												)
											);
											date_div.appendTo(datehtml);

                                            BootstrapDialog.show
                                            (
                                                {
                                                    "title": "Updating Date - " + item.name,
                                                    "message": datehtml.html(),
                                                    "buttons":
                                                    [
                                                        {
                                                            "label": "Cancel",
                                                            "cssClass": "btn-danger",
                                                            "action": function(dialog)
                                                            {
                                                                dialog.close();
                                                            }
                                                        },
                                                        {
                                                            "label": "Update",
                                                            "cssClass": "btn-primary",
                                                            "action": function(dialog)
                                                            {
                                                                
                                                                $(".bootstrap-dialog-footer").find(".btn-primary").css("opacity", "0.3").text("Updating...");
                                                                var date_valu = $.trim($("#pm_sel_date").find("input").first().val());

                                                                if(date_valu.length === 10)
                                                                {
                                                                    if(item.name === "Welcome Call Date")
                                                                    {
                                                                        var d_format = "MM/DD/YYYY";
                                                                        var mom = moment(date_valu, d_format);
                                                                        $.post("./data", {"fn": "project_management_item_checkoff", "user": window.user_identifier, "key": "welcome_call_completed", "date": mom.format("YYYY-MM-DD"), "identifier": identifier, "checked": "0"}).done(function(r2)
                                                                        {
                                                                            if(typeof(item["blur"]) + '' !== "undefined")
                                                                            {
                                                                                item.blur();
                                                                            }
                                                                            span.text(mom.format("MM/DD/YYYY"));
                                                                            dialog.close();
                                                                            //PMV2StageUpdate(identifier);
                                                                        });
                                                                    }
                                                                    else
                                                                    {
                                                                        var d_format = "MM/DD/YYYY";
                                                                        var mom = moment(date_valu, d_format);
                                                                        $.post("./data", {"fn": "update_project_management_item", "key": item.key, "value": mom.format("YYYY-MM-DD"), "identifier": identifier}).done(function(r2)
                                                                        {
                                                                            if(typeof(item["blur"]) + '' !== "undefined")
                                                                            {
                                                                                item.blur();
                                                                            }
                                                                            span.text(mom.format("MM/DD/YYYY"));
                                                                            dialog.close();
                                                                            PMV2StageUpdate(identifier);
                                                                        });
                                                                    }                                                                    
                                                                }                                                                
                                                            }
                                                        }
                                                    ],
                                                    "onshown": function(d)
                                                    {
                                                        $("#pm_sel_date").find("input")
                                                        .datepicker
                                                        (
                                                            {
                                                                format: "mm/dd/yyyy",
                                                                autoClose: true
                                                            }
                                                        );
                                                    }
                                                }
                                            );
                                        });
                                    }
                                    else
                                    {
                                        span.css("cursor", "no-drop");
                                    }
                                    item_to_append = span;
                                    break;

                                default:
                                    break;
                            }
                            if(item_to_append !== null)
                            {
                                item_to_append.appendTo(value_td);
                            }
                            value_td.appendTo(tr);
                            tr.appendTo(tbody);
                        });
                        if(i > 0 && (i % 2 !== 0))
                        {
                            group_tbl.addClass("pm_detail_group_odd");
                        }
                        group_tbl.appendTo(project_details_div);
                        if(group_tbl.hasClass("pm_detail_group_odd"))
                        {
                            $("<hr />").addClass("pm_hr").appendTo(project_details_div);
                        }
                    });
                    $("<div></div>").css("clear", "both").css("width", "100%").css("min-height", "0.5em").text(" ").appendTo(project_details_div);
                    $("<hr />").appendTo(project_details_div);
                    $("<h4></h4>").text("Notes:").appendTo(project_details_div);
                    $("<h4></h4>").attr("id", "cust_comm_log_h4").text("Comm. Log").appendTo(project_details_div);
                    var notes_ul = $("<ul></ul>").addClass("pm_notes_ul");
                    $.each(customer.notes, function(iiiii, note)
                    {          
                        while(note.indexOf("\r") > -1)
                        {
                            note = note.replace("\r", "");
                        }
                        var li = $("<li></li>");
                        if(Object.keys(customer.notes_idx_identifier_map).indexOf(iiiii + '') > -1)
                        {
                            li.attr("data-identifier", customer.notes_idx_identifier_map[iiiii + '']);
                            li.text(note);
                            var html = li.html();
                            while(html.indexOf("\n") > -1)
                            {
                                html = html.replace("\n", "<br />");
                            }
                            li.html(html);
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-pencil")
                            .click(function()
                            {
                                editPMNote($(this).parent());
                            }).prependTo(li);
                        }
                        else
                        {
                            li.html(note);
                        }
                                                
                        li.appendTo(notes_ul);
                    });
                    var comm_tbl = $("<table></table>").addClass("pm_comm_tbl");
                    var comm_tbody = $("<tbody></tbody>");
                    $.each(customer.comm_items, function(iiiiii, comm)
                    {
                        var tr = $("<tr></tr>");
                        $("<td></td>").text(moment(comm.timestamp, "YYYY-MM-DD hh:mm:ss").format("MM/DD/YYYY hh:mm:ss a")).appendTo(tr);
                        $("<td></td>").text(comm.type).appendTo(tr);
                        $("<td></td>").text("Customer Responded: " + comm.response).appendTo(tr);
                        var content = comm.content;
                        while(content.indexOf("\r") > -1)
                        {
                            content = content.replace("\r", "");
                        }
                        var content_td = $("<td></td>").text(content);
                        var html = content_td.html();
                        while(html.indexOf("\n") > -1)
                        {
                            html = html.replace("\n", "<br />");
                        }
                        content_td.attr("data-identifier", comm.identifier);
                        content_td.html(html);
                        content_td.appendTo(tr);
                        $("<td></td>").append
                        (
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-pencil").addClass("comm-pencil")
                            .click(function()
                            {
                                editPMNote($(this).parent().prev());
                            })
                        )
                        .appendTo(tr);
                        tr.appendTo(comm_tbody);
                    });
                    notes_ul.appendTo(project_details_div);
                    comm_tbody.appendTo(comm_tbl);
                    comm_tbl.appendTo(project_details_div);

                    $("<button></button>").addClass("btn").addClass("btn-primary").text("Add Note").addClass("pm_add_note_btn")
                    .click(function()
                    {
                    	addNewFilteredNote(customer, function(content, note_identifier)
                    	{
                            var li = $("<li></li>");
                    		li.attr("data-identifier", note_identifier);
                            li.text(content);
                            var html = li.html();
                            while(html.indexOf("\n") > -1)
                            {
                                html = html.replace("\n", "<br />");
                            }
                            li.html(html);
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-pencil")
                            .click(function()
                            {
                                editPMNote($(this).parent());
                            }).prependTo(li);
                            li.appendTo(notes_ul);
                    	});

                    }).appendTo(project_details_div);
                    $("<button></button>").addClass("btn").addClass("btn-primary").text("Add Communication").addClass("pm_add_communication_btn")
                    .click(function()
                    {
                        var dia_html = $("<div></div>");
                        $("<select></select>").attr("id", "pm_sel_comm_type")
                        .append
                        (
                            $("<option></option>").attr("value", "Email").text("Email")
                        )
                        .append
                        (
                            $("<option></option>").attr("value", "Text Message").text("Text Message")
                        )
                        .append
                        (
                            $("<option></option>").attr("value", "Phone Call").text("Phone Call")
                        )
                        .append
                        (
                            $("<option></option>").attr("value", "n/a").text("Other")
                        )
                        .appendTo(dia_html);
                        $("<p></p>").appendTo(dia_html);
                        $("<p></p>").attr("id", "pm_other_hint").text("Specify Other Communication Type Below:").css("display", "none").appendTo(dia_html);
                        $("<input />").css("display", "none").attr("type", "text").attr("id", "pm_other_type_input").appendTo(dia_html);

                        BootstrapDialog.show
                        (
                            {
                                "title": "Specify Communication Type",
                                "message": dia_html.html(),
                                "buttons":
                                [
                                    {
                                        "label": "Cancel",
                                        "cssClass": "btn-danger",
                                        "action": function(dia)
                                        {
                                            dia.close();
                                        }
                                    },
                                    {
                                        "label": "Continue",
                                        "cssClass": "btn-primary",
                                        "action": function(dia)
                                        {
                                            var c_type = $("#pm_sel_comm_type").val();
                                            if($("#pm_sel_comm_type").val() === "n/a")
                                            {
                                                var typ = $.trim($("#pm_other_type_input").val());
                                                if(typ.length === 0)
                                                {
                                                    window.alert("Please specify the communication type");
                                                    return;
                                                }
                                                dia.close();
                                                
                                                if(c_type === "n/a")
                                                {
                                                    c_type = typ; 
                                                }
                                                addNewFilteredNote(customer, function()
                                                {
                                                    showProjectManagementDetails(identifier, div, "#cust_comm_log_h4")                     
                                                }, "cust_comm", c_type);
                                            }
                                            else
                                            {
                                                dia.close();
                                                addNewFilteredNote(customer, function()
                                                {
                                                    showProjectManagementDetails(identifier, div, "#cust_comm_log_h4")                     
                                                }, "cust_comm", c_type);
                                            }
                                        }
                                    }
                                ],
                                "onshown": function(dia)
                                {
                                    $("#pm_sel_comm_type").change(function()
                                    {
                                        if($(this).val() === "n/a")
                                        {
                                            $("#pm_other_hint").css("display", "block");
                                            $("#pm_other_type_input").css("display", "block");
                                        }
                                    });
                                }
                            }
                        )
                    }).appendTo(project_details_div);
                    $("<hr />").appendTo(project_details_div);

                    if(project_details_div.find(".pm_actual_pm_name").text() === "Unassigned")
                    {
                        $("<b></b>").text("Assign Project To:").appendTo(project_details_div);
                        var pm_change_sel = $("<select></select>").addClass("pm_multiple_choice_select").css("margin-left", "1em");
                        $("<option value='n/a'>Choose One</option>").appendTo(pm_change_sel);
                        $.each({{ project_managers|safe }}, function(iiiii, eeeee)
                        {
                            $("<option></option>").attr("value", eeeee.identifier).text(eeeee.name).appendTo(pm_change_sel);
                        });
                        /*$.each(customer.project_managers.map(function(pm) { return pm.name;}), function(iiiii, eeeee)
                        {
                            $("<option></option>").attr("value", eeeee).text(eeeee).appendTo(pm_change_sel);
                        });*/
                        pm_change_sel.change(function()
                        {
                            if(pm_change_sel.val() === "n/a")
                            {
                                return;
                            }
                            pm_change_sel.css("opacity", "0.3");
                            $.post("./data", {"fn": "update_project_management_item", "key": "project_manager", "value": pm_change_sel.val(), "identifier": div.data("identifier")}).done(function(rrr)
                            {
                                pm_change_sel.css("opacity", "1.0");
                            });
                            var pm_name = "";
                            $.each({{ project_managers|safe }}, function(iiiii, eeeee)
                            {
                                if(eeeee.identifier === pm_change_sel.val())
                                {
                                    pm_name = eeeee.name;
                                }
                            });


                            project_details_div.find(".pm_actual_pm_name").text(pm_name);
                            $(".pm_name_item").each(function(iiiii, eeeee)
                            {
                                if($(eeeee).text() === pm_name)
                                {
                                    var div_items = $(eeeee).nextAll("input").first().val();
                                    div_items = $.parseJSON(div_items);
                                    div_items.push
                                    (
                                        {"identifier": div.data("identifier"), "customer_name": cust_nayme}
                                    );
                                    $(eeeee).nextAll("input").first().val(JSON.stringify(div_items));
                                    div.remove();
                                    project_details_div.remove();

                                    var pm_tally = parseInt($(eeeee).nextAll(".pm_tally").text().replace(" Projects", ""));
                                    pm_tally += 1;
                                    $(eeeee).nextAll(".pm_tally").text((pm_tally + '') + " Projects");

                                    var unassigned_tally = parseInt($(".pm_tally").first().text().replace(" Projects", ""));
                                    unassigned_tally -= 1;
                                    $(".pm_tally").first().text((unassigned_tally + '') + " Projects");
                                }
                            });
                        });
                        pm_change_sel.appendTo(project_details_div);
                        $("<br />").appendTo(project_details_div);
                        $("<hr />").appendTo(project_details_div);
                        $("<h4></h4>").text("Panel Assessment Info:").appendTo(project_details_div);
                        if(customer.electrical === null)
                        {
                            $("<div></div>").addClass("electrical_specifics").text("Not yet provided").appendTo(project_details_div);
                            $("<button></button>").addClass("btn").addClass("btn-primary").addClass("unassigned_elec_set_btn").text("Provide Panel Assessment")
                            .click(function()
                            {
                                updatePanelAssessmentPM(customer);
                            }).appendTo(project_details_div);                            
                        }
                        else
                        {
                            $("<div></div>").addClass("electrical_specifics").appendTo(project_details_div);
                            refreshElectrical(customer, project_details_div);
                        }
                        var btn = $("<span></span>").addClass("label").addClass("label-primary").appendTo(project_details_div).addClass("tenative_install_btn");
                        if(Object.keys(kustomer.project_management_checkoffs).indexOf("install") > -1)
                        {
                            if(Object.keys(kustomer.project_management_checkoffs.install).indexOf("date") > -1)
                            {
                                btn.text("Tentative Installation Date: " + moment(kustomer.project_management_checkoffs.install.date, "YYYY-MM-DD").format("MM/DD/YYYY"));
                            }                                
                        }
                        else
                        {
                            btn.text("Provide Tentative Install Date");
                        }
                        btn.click(function()
                        {
                            var date_to_show = moment();
                            if(Object.keys(kustomer.project_management_checkoffs).indexOf("install") > -1)
                            {
                                if(Object.keys(kustomer.project_management_checkoffs.install).indexOf("date") > -1)
                                {
                                    date_to_show = moment(kustomer.project_management_checkoffs.install.date, "YYYY-MM-DD");
                                }
                            }
                            var date_html = $("<div></div>");
                            $("<p></p>").text("Provide the tentative date for installation:").appendTo(date_html);
                            $("<div></div>").addClass("input-append").addClass("date").attr("data-date", date_to_show.format("MM-DD-YYYY")).attr("data-date-format", "mm-dd-yyyy")
                            .append
                            (
                                $("<input />").attr("size", "16").attr("type", "text").attr("value", date_to_show.format("MM-DD-YYYY"))
                            )
                            .append
                            (
                                $("<span></span>").addClass("add-on")
                                .append
                                (
                                    $("<i></i>").addClass("icon-th")
                                )
                            )
                            .appendTo(date_html);

                            BootstrapDialog.show
                            (
                                {
                                    "title": "Provide the update",
                                    "message": date_html.html(),
                                    "buttons":
                                    [
                                        {
                                            "label": "Cancel",
                                            "cssClass": "btn-danger",
                                            "action": function(d)
                                            {
                                                d.close();
                                            }
                                        },
                                        {
                                            "label": "Save",
                                            "cssClass": "btn-primary",
                                            "action": function(d)
                                            {
                                                $(".bootstrap-dialog-footer").find(".btn-primary").text("Saving...");
                                                var input = $(".bootstrap-dialog-body").find(".date").find("input").first();
                                                var vals = input.val().split("-");
                                                var new_dt = vals[2] + "-" + vals[0] + "-" + vals[1];
                                                var identifier = kustomer.identifier;

                                                $.post("./data", {"identifier": identifier, "fn": "project_management_item_checkoff", "user": window.user_identifier, "key": "install", "checked": "0", "date": new_dt}).done(function(rrrrrrrr)
                                                {
                                                    d.close();
                                                    $("#pm_customer_details_info_" + identifier).prevAll("p").first().trigger("click");
                                                });
                                            }
                                        }
                                    ],
                                    "onshown": function(d)
                                    {
                                        $(".bootstrap-dialog-body").find(".date").datepicker
                                        (
                                            {
                                                "autoClose": true,
                                                "format": "mm-dd-yyyy"
                                            }
                                        );
                                        var input = $(".bootstrap-dialog-body").find(".date").find("input").first();
                                        $.each(["keyup", "keydown", "keypress"], function(iiiii, evv)
                                        {
                                            input.on(evv, function(evv2)
                                            {
                                                evv2.preventDefault();
                                            });
                                        });
                                    }
                                }
                            );
                        });
                        btn.appendTo(project_details_div);
                        $("<div></div>").css("clear", "both").appendTo(project_details_div);
                        $("<hr />").appendTo(project_details_div);
                        $("<h2></h2>").text("Plan Set").appendTo(project_details_div);
                        var btn_text1 = "Plan Set in Progress";
                        if(Object.keys(kustomer.project_management_checkoffs).indexOf("plan_set_in_progress") > -1)
                        {
                            if(Object.keys(kustomer.project_management_checkoffs.plan_set_in_progress).indexOf("date") > -1)
                            {
                                btn_text1 += (" " + moment(kustomer.project_management_checkoffs.plan_set_in_progress.date, "YYYY-MM-DD").format("MM/DD/YYYY"));
                            }
                        }                        
                        $("<button></button>").addClass("btn").addClass("btn-primary").addClass("unassigned_plan_set_in_progress_btn").text(btn_text1)
                        .click(function()
                        {
                            var new_html = $("<div></div>");
                            $("<p></p>").text("Provide the date:").appendTo(new_html);
                            $("<br />").appendTo(new_html);
                            $("<br />").appendTo(new_html);
                            $("<br />").appendTo(new_html);
                            $("<br />").appendTo(new_html);
                            $("<br />").appendTo(new_html);
                            $("<br />").appendTo(new_html);
                            $("<br />").appendTo(new_html);
                            $("<br />").appendTo(new_html);
                            var date_value = moment().format("MM/DD/YYYY");
                            if(Object.keys(kustomer.project_management_checkoffs).indexOf("plan_set_in_progress") > -1)
                            {
                                if(Object.keys(kustomer.project_management_checkoffs.plan_set_in_progress).indexOf("date") > -1)
                                {
                                    date_value = moment(kustomer.project_management_checkoffs.plan_set_in_progress.date, "YYYY-MM-DD").format("MM/DD/YYYY");
                                }
                            }
                            $("<div></div>").addClass("input-append").addClass("date").attr("data-date", date_value).attr("data-date-format", "mm/dd/yyyy")
                            .append
                            (
                                $("<input />").addClass("span2").attr("size", "16").attr("type", "text").attr("value", date_value)
                            )
                            .append
                            (
                                $("<span></span>").addClass("add-on")
                                .append
                                (
                                    $("<i></i>").addClass("icon-th")
                                )
                            )
                            .appendTo(new_html);

                            BootstrapDialog.show
                            (
                                {
                                    "title": "Plan Set in Progress Date",
                                    "message": new_html.html(),
                                    "buttons":
                                    [
                                        {
                                            "label": "Cancel",
                                            "cssClass": "btn-danger",
                                            "action": function(d)
                                            {
                                                d.close();
                                            }
                                        },
                                        {
                                            "label": "Update",
                                            "cssClass": "btn-primary",
                                            "action": function(d)
                                            {
                                                $(".bootstrap-dialog-footer").find(".btn-primary").text("Updating...");
                                                var dt = moment($(".bootstrap-dialog-body").find("input").first().val(), "MM/DD/YYYY");
                                                var checked = "0";
                                                var now = moment(moment().format("YYYY-MM-DD"), "YYYY-MM-DD");
                                                if(dt.isAfter(now))
                                                {
                                                    //checked = "0";
                                                }
                                                var new_dt = dt.format("YYYY-MM-DD");
                                                $.post("./data", {"identifier": kustomer.identifier, "fn": "project_management_item_checkoff", "user": window.user_identifier, "key": "plan_set_in_progress", "checked": checked, "date": new_dt}).done(function(rrrrrrrr)
                                                {
                                                    d.close();
                                                    $("#pm_customer_details_info_" + kustomer.identifier).prev().trigger("click");
                                                });
                                            }
                                        }
                                    ],
                                    "onshown": function(d)
                                    {
                                        $(".bootstrap-dialog-body").find(".date").datepicker
                                        (
                                            {
                                                "autoClose": true,
                                                "format": "mm/dd/yyyy"
                                            }
                                        );
                                        $.each(["keyup", "keydown", "keypress"], function(iiiiiii, evvvvv)
                                        {
                                            $(".bootstrap-dialog-body").find("input").on(evvvvv, function(evvvvv2)
                                            {
                                                evvvvv2.preventDefault();
                                            });
                                        });
                                    }
                                }                                
                            );

                        }).appendTo(project_details_div);

                        var btn_text2 = "Plan Set Completed";
                        if(Object.keys(kustomer.project_management_checkoffs).indexOf("plan_set_completed") > -1)
                        {
                            if(Object.keys(kustomer.project_management_checkoffs.plan_set_completed).indexOf("date") > -1)
                            {
                                btn_text2 += (" " + moment(kustomer.project_management_checkoffs.plan_set_completed.date, "YYYY-MM-DD").format("MM/DD/YYYY"));
                            }
                        }
                        $("<button></button>").addClass("btn").addClass("btn-primary").addClass("unassigned_plan_set_completed").text(btn_text2)
                        .click(function()
                        {
                            var new_html = $("<div></div>");
                            $("<p></p>").text("Provide the date:").appendTo(new_html);
                            $("<br />").appendTo(new_html);
                            $("<br />").appendTo(new_html);
                            $("<br />").appendTo(new_html);
                            $("<br />").appendTo(new_html);
                            $("<br />").appendTo(new_html);
                            $("<br />").appendTo(new_html);
                            $("<br />").appendTo(new_html);
                            $("<br />").appendTo(new_html);
                            var date_value = moment().format("MM/DD/YYYY");
                            if(Object.keys(kustomer.project_management_checkoffs).indexOf("plan_set_completed") > -1)
                            {
                                if(Object.keys(kustomer.project_management_checkoffs.plan_set_completed).indexOf("date") > -1)
                                {
                                    date_value = moment(kustomer.project_management_checkoffs.plan_set_completed, "YYYY-MM-DD").format("MM/DD/YYYY");
                                }
                            }
                            $("<div></div>").addClass("input-append").addClass("date").attr("data-date", date_value).attr("data-date-format", "mm/dd/yyyy")
                            .append
                            (
                                $("<input />").addClass("span2").attr("size", "16").attr("type", "text").attr("value", date_value)
                            )
                            .append
                            (
                                $("<span></span>").addClass("add-on")
                                .append
                                (
                                    $("<i></i>").addClass("icon-th")
                                )
                            )
                            .appendTo(new_html);

                            BootstrapDialog.show
                            (
                                {
                                    "title": "Plan Set Completed Date",
                                    "message": new_html.html(),
                                    "buttons":
                                    [
                                        {
                                            "label": "Cancel",
                                            "cssClass": "btn-danger",
                                            "action": function(d)
                                            {
                                                d.close();
                                            }
                                        },
                                        {
                                            "label": "Update",
                                            "cssClass": "btn-primary",
                                            "action": function(d)
                                            {
                                                $(".bootstrap-dialog-footer").find(".btn-primary").text("Updating...");
                                                var dt = moment($(".bootstrap-dialog-body").find("input").first().val(), "MM/DD/YYYY");
                                                var checked = "1";
                                                var now = moment(moment().format("YYYY-MM-DD"), "YYYY-MM-DD");
                                                if(dt.isAfter(now))
                                                {
                                                    //checked = "0";
                                                }
                                                var new_dt = dt.format("YYYY-MM-DD");
                                                $.post("./data", {"identifier": kustomer.identifier, "fn": "project_management_item_checkoff", "user": window.user_identifier, "key": "plan_set_completed", "checked": checked, "date": new_dt}).done(function(rrrrrrrr)
                                                {
                                                    d.close();
                                                    $("#pm_customer_details_info_" + kustomer.identifier).prev().trigger("click");
                                                });
                                            }
                                        }
                                    ],
                                    "onshown": function(d)
                                    {
                                        $(".bootstrap-dialog-body").find(".date").datepicker
                                        (
                                            {
                                                "autoClose": true,
                                                "format": "mm/dd/yyyy"
                                            }
                                        );
                                        $.each(["keyup", "keydown", "keypress"], function(iiiiiii, evvvvv)
                                        {
                                            $(".bootstrap-dialog-body").find("input").on(evvvvv, function(evvvvv2)
                                            {
                                                evvvvv2.preventDefault();
                                            });
                                        });
                                    }
                                }                                
                            );
                        }).appendTo(project_details_div);
                        $("<br />").appendTo(project_details_div);
                        $("<br />").appendTo(project_details_div);
                        $("<h2></h2>").text("Welcome Call:").appendTo(project_details_div);

                        var existing_mom = moment();
                        if(Object.keys(kustomer.project_management_checkoffs).indexOf("welcome_call_completed") > -1)
                        {
                            if(Object.keys(kustomer.project_management_checkoffs.welcome_call_completed).indexOf("date") > -1)
                            {
                                existing_mom = moment(kustomer.project_management_checkoffs.welcome_call_completed.date, "YYYY-MM-DD");
                            }
                        }

                        var btn_text2 = "Mark as Welcome Call Complete";
                        if(Object.keys(kustomer.project_management_checkoffs).indexOf("welcome_call_completed") > -1)
                        {
                            if(Object.keys(kustomer.project_management_checkoffs.welcome_call_completed).indexOf("date") > -1)
                            {
                                btn_text2 = "Update Welcome Call Date (" + existing_mom.format("MM/DD/YYYY") + ")";
                            }
                        }
                    


                        $("<button></button>").addClass("btn").addClass("btn-primary").text(btn_text2).attr("id", "unassigned_wc_complete_btn")
                        .click(function()
                        {
                            var existing_mom2 = moment();
                            if(Object.keys(kustomer.project_management_checkoffs).indexOf("welcome_call_completed") > -1)
                            {
                                if(Object.keys(kustomer.project_management_checkoffs.welcome_call_completed).indexOf("date") > -1)
                                {
                                    existing_mom2 = moment(kustomer.project_management_checkoffs.welcome_call_completed.date, "YYYY-MM-DD");
                                }
                            }
                            var html = $("<div></div>");
                            $("<p></p>").text("Specify the Welcome Call Date:").appendTo(html);
                            for(var cnt = 0; cnt < 10; cnt++)
                            {
                                $("<br />").appendTo(html);
                            }
                            
                            
                            

                            $("<div></div>").addClass("input-append").addClass("date").attr("data-date", existing_mom2.format("MM-DD-YYYY")).attr("data-date-format", "mm-dd-yyyy")
                            .append
                            (
                                $("<input />").attr("size", "16").attr("type", "text").attr("value", existing_mom2.format("MM-DD-YYYY"))
                            )
                            .append
                            (
                                $("<span></span>").addClass("add-on")
                                .append
                                (
                                    $("<i></i>").addClass("icon-th")
                                )
                            )
                            .appendTo(html);

                            BootstrapDialog.show
                            (
                                {
                                    "title": "Welcome Call Complete - Please Specify a Date",
                                    "message": html.html(),
                                    "buttons":
                                    [
                                        {
                                            "label": "Cancel",
                                            "cssClass": "btn-danger",
                                            "action": function(d)
                                            {
                                                d.close();
                                            }
                                        },
                                        {
                                            "label": "Update",
                                            "cssClass": "btn-primary",
                                            "action": function(d)
                                            {
                                                var mom = moment($(".bootstrap-dialog-body").find("input").first().val(), "MM/DD/YYYY");
                                                $.post("./data", {"fn": "project_management_item_checkoff", "user": window.user_identifier, "key": "welcome_call_completed", "date": mom.format("YYYY-MM-DD"), "identifier": kustomer.identifier, "checked": "0"}).done(function(r2)
                                                {
                                                    d.close();
                                                    $("#unassigned_wc_complete_btn").text("Update Welcome Call Date (" + mom.format("MM/DD/YYYY") + ")");
                                                    kustomer.project_management_checkoffs["welcome_call_completed"] = {"checked": true, "date": mom.format("YYYY-MM-DD")};
                                                });  
                                            }
                                        }
                                    ],
                                    "onshown": function(d)
                                    {
                                        $(".bootstrap-dialog-body").find(".date").datepicker
                                        (
                                            {
                                                "autoClose": true,
                                                "format": "mm/dd/yyyy"
                                            }
                                        );
                                        $.each(["keyup", "keydown", "keypress"], function(iiiiiii, evvvvv)
                                        {
                                            $(".bootstrap-dialog-body").find("input").on(evvvvv, function(evvvvv2)
                                            {
                                                evvvvv2.preventDefault();
                                            });
                                        });
                                    }
                                }
                            )


                        }).appendTo(project_details_div);
                    }
                    else
                    {
                    	$("<h4></h4>").text("Panel Assessment Info:").appendTo(project_details_div);
						if(customer.electrical === null)
						{
							$("<div></div>").addClass("electrical_specifics").text("Not yet provided").appendTo(project_details_div);
						}
						else
						{
							$("<div></div>").addClass("electrical_specifics").appendTo(project_details_div);
							refreshElectrical(customer, project_details_div);
						}
						$("<hr />").appendTo(project_details_div);
                        $("<h4></h4>").text("Permit Details:").appendTo(project_details_div);
                        project_details_div.append
                        (
                        	$("<p></p>").attr("id", "show_permit_status_pm").text("Permit Number: " + customer.permit_number)
                        );

                        if(project_details_div.find("#show_permit_status_pm").size() === 0)
                        {
							//$("<p><p>").attr("id", "show_permit_status_pm").text("Permit Number: " + customer.permit_number).appendTo(project_details_div);
                        }
                        var perm_history_div = $("<div></div>").addClass("permit_history");
                        if(customer.permit_history.length > 0)
                        {
                        	$("<button></button>").addClass("btn").addClass("btn-primary").addClass("update_permit_pm").text("Provide Permit Status Update")
                        	.click(function()
                        	{
                        		provideAdditionalPermitStatusUpdate(customer);
                        	}).appendTo(perm_history_div);
                        	$("<div></div>").appendTo(perm_history_div);
                        }
                        $("<div></div>").addClass("pm_history_container").text("Permit History:").appendTo(perm_history_div);
                        $.each(customer.permit_history, function(iiiii, eeeee)
                        {
                        	$("<div></div>").addClass("pm_permit_history_item").text(eeeee.status + " - " + moment(eeeee.date, "YYYY-MM-DD").format("MM/DD/YYYY"))
                        	.append
                        	(
                        		$("<span></span>").addClass("glyphicon").addClass("glyphicon-remove")
                        		.click(function()
                        		{
                        			if(window.confirm("Are you sure you would like to remove this item?"))
                        			{
                        				removePermitHistoryItem(customer, $(this).prevAll(".pm_permit_history_item").size());
	                        			$(this).parent().remove();
                        			}

                        		})
                        	)
                        	.appendTo(perm_history_div.find(".pm_history_container"));
                        });
                        perm_history_div.appendTo(project_details_div);
                        $("<hr />").appendTo(project_details_div);

                        $("<h4></h4>").text("Communications:").appendTo(project_details_div);
                        var communications_ul = $("<ul></ul>").addClass("pm_communication_buttons");

                        var equipment_ordered_cb = $("<input />").attr("type", "checkbox").attr("disabled", "disabled");
                        var equipment_ordered_button = $("<button></button>").attr("type", "button").text("Equipment Ordered").addClass("btn").addClass("btn-primary");
                        var equipment_ordered_span = $("<span></span>").addClass("customer_communication_date").text(moment(customer.equipment_ordered_email_sent_date, "YYYY-MM-DD").format("MM/DD/YYYY"));
                        equipment_ordered_button.click(function()
                        {
                            var old_txt = $(this).text();
                            var that = $(this);
                            that.text("Sending Email...");
                            $.post("/data", {"fn": "send_equipment_ordered_email", "identifier": identifier}).done(function()
                            {
                                that.text(old_txt).attr("disabled", "disabled");
                                that.prev().prev()[0].checked = true;
                                that.prev().text(moment().format("MM/DD/YYYY"));

                                $("#pm_customer_details_info_" + identifier).find(".standard_checkoff_pm_li").each(function(index, li)
                                {
                                    if($(li).data("key") === "equipment_ordered")
                                    {
                                        $(li).find("input").first()[0].checked = true;
                                        $(li).find("input").first().trigger("change");
                                    }
                                });
                            });
                        });                        
                        if(customer.equipment_ordered_email_sent)
                        {
                            equipment_ordered_cb.attr("checked", "checked");
                            equipment_ordered_button.attr("disabled", "disabled");
                        }

                        $("<li></li>").attr("data-key", "equipment_ordered_email_sent")
                        .append
                        (
                            equipment_ordered_cb
                        )
                        .append
                        (
                            equipment_ordered_span
                        )
                        .append
                        (
                            equipment_ordered_button
                        )
                        .appendTo(communications_ul);

                        var install_cb = $("<input />").attr("type", "checkbox").attr("disabled", "disabled");
                        var install_button = $("<button></button>").attr("type", "button").text("Install").addClass("btn").addClass("btn-primary");
                        var install_span = $("<span></span>").addClass("customer_communication_date").text(moment(customer.install_email_sent_date, "YYYY-MM-DD").format("MM/DD/YYYY"));
                        install_button.click(function()
                        {
                            var old_txt = $(this).text();
                            var that = $(this);
                            that.text("Sending Email...");
                            $.post("/data", {"fn": "send_install_email", "identifier": identifier}).done(function()
                            {
                                that.text(old_txt);//.attr("disabled", "disabled");
                                that.prev().prev()[0].checked = true;
                                that.prev().text(moment().format("MM/DD/YYYY"));
                            });
                        });                        
                        if(customer.install_email_sent)
                        {
                            install_cb.attr("checked", "checked");
                            //install_button.attr("disabled", "disabled");
                        }
                        $("<li></li>").attr("data-key", "install_email_sent")
                        .append
                        (
                            install_cb
                        )
                        .append
                        (
                            install_span
                        )
                        .append
                        (
                            install_button
                        )
                        .appendTo(communications_ul);

                        var inspection_passed_cb = $("<input />").attr("type", "checkbox").attr("disabled", "disabled");
                        var inspection_passed_button = $("<button></button>").attr("type", "button").text("City Building Inspection Passed").addClass("btn").addClass("btn-primary");
                        var inspection_passed_span = $("<span></span>").addClass("customer_communication_date").text(moment(customer.inspection_passed_email_sent_date, "YYYY-MM-DD").format("MM/DD/YYYY"));
                        inspection_passed_button.click(function()
                        {
                            var old_txt = $(this).text();
                            var that = $(this);
                            that.text("Sending Email...");
                            $.post("/data", {"fn": "send_inspection_passed_email", "identifier": identifier}).done(function()
                            {
                                that.text(old_txt).attr("disabled", "disabled");
                                that.prev().prev()[0].checked = true;
                                that.prev().text(moment().format("MM/DD/YYYY"));

                                $("#pm_customer_details_info_" + identifier).find(".standard_checkoff_pm_li").each(function(index, li)
                                {
                                    if($(li).data("key") === "final_inspection")
                                    {
                                        $(li).find("input").first()[0].checked = true;
                                        $(li).find("input").first().trigger("change");
                                    }
                                });
                            });
                        });                        
                        if(customer.inspection_passed_email_sent)
                        {
                            inspection_passed_cb.attr("checked", "checked");
                            inspection_passed_button.attr("disabled", "disabled");
                        }
                        $("<li></li>").attr("data-key", "inspection_passed_email_sent")
                        .append
                        (
                            inspection_passed_cb
                        )
                        .append
                        (
                            inspection_passed_span
                        )
                        .append
                        (
                            inspection_passed_button
                        )
                        .appendTo(communications_ul);

                        if(["southern_california_edison", "san_diego_gas_&_electric"].indexOf(customer.utility_provider) > -1)
                        {
                            var pto_received_cb = $("<input />").attr("type", "checkbox").attr("disabled", "disabled");
                            var pto_received_button = $("<button></button>").attr("type", "button").text("PTO Received").addClass("btn").addClass("btn-primary");
                            var pto_received_span = $("<span></span>").addClass("customer_communication_date").text(moment(customer.pto_received_email_sent_date, "YYYY-MM-DD").format("MM/DD/YYYY"));
                            pto_received_button.click(function()
                            {
                                var old_txt = $(this).text();
                                var that = $(this);
                                that.text("Sending Email...");
                                $.post("/data", {"fn": "send_pto_received_email", "identifier": identifier}).done(function()
                                {
                                    that.text(old_txt).attr("disabled", "disabled");
                                    that.prev().prev()[0].checked = true;
                                    that.prev().text(moment().format("MM/DD/YYYY"));

                                    $("#pm_customer_details_info_" + identifier).find(".standard_checkoff_pm_li").each(function(index, li)
                                    {
                                        if($(li).data("key") === "received_pto")
                                        {
                                            $(li).find("input").first()[0].checked = true;
                                            $(li).find("input").first().trigger("change");
                                        }
                                    });
                                });
                            });                        
                            if(customer.pto_received_email_sent)
                            {
                                pto_received_cb.attr("checked", "checked");
                                pto_received_button.attr("disabled", "disabled");
                            }
                            $("<li></li>").attr("data-key", "pto_received_email_sent")
                            .append
                            (
                                pto_received_cb
                            )
                            .append
                            (
                                pto_received_span
                            )
                            .append
                            (
                                pto_received_button
                            )
                            .appendTo(communications_ul);
                        }


                        communications_ul.appendTo(project_details_div);                        

                        $("<hr />").appendTo(project_details_div);
                        $("<h4></h4>").text("Checklist:").appendTo(project_details_div);
                        $("<button></button>").addClass("btn").addClass("btn-primary").addClass("pm_extra_todo").text("Add additional checkoff item")
                        .click(function()
                        {
                        	addAdditionalTodoItem(customer);
                        }).appendTo(project_details_div);
                        $("<button></button>").addClass("btn").addClass("btn-primary").addClass("signing_link_gen").text("Generate Signing Link")
                        .click(function()
                        {
                            $.post("./data", {"fn": "shorten_url", "url": "https://" + document.domain + "/sign/" + customer.identifier}).done(function(r5)
                            {
                                BootstrapDialog.show
                                (
                                    {
                                        "title": "Signing Link",
                                        "message": r5.url,
                                        "buttons":
                                        [
                                            {
                                                "label": "OK",
                                                "cssClass": "btn-primary",
                                                "action": function(ddd)
                                                {
                                                    ddd.close();
                                                }
                                            }
                                        ]
                                    }
                                );
                            });
                        }).appendTo(project_details_div);
                        $("<button></button>").addClass("btn").addClass("btn-primary").addClass("pm_modify_svcs").text("Modify Additional Services")
                        .click(function()
                        {
                            $(this).remove();
                            modifyAdditionalServices(customer, updateSystemInfo);
                        }).appendTo(project_details_div);
                        $("<p></p>").css("clear", "both").appendTo(project_details_div);
                        $.post("/data", {"fn": "read_setting", "value": "project_management_checkoffs"}).done(function(p_m_c_data)
                        {
                            var checklist_1 = p_m_c_data.data.checklist_1;
                            var checklist_2 = p_m_c_data.data.checklist_2;
                            
                            $.each(checklist_1, function(iiiii, item)
                            {
                                item["appears_after"] = null;
                            });$.each(checklist_2, function(iiiii, item)
                            {
                                item["appears_after"] = null;
                            });

                            $.each(kustomer.qualified_checkoffs, function(iii, eee)
                            {
                                checklist_2.push({"name": eee.value_friendly, "type": "checkbox", "key": eee.value, "appears_after": eee.appears_after});
                            }); 
                            $.each(kustomer.extra_project_specifics, function(iii, eee)
                            {
                                checklist_2.push(eee);
                            });
                            

                            $.each([checklist_1, checklist_2], function(ii, list)
                            {
                                var checkoff_ul = $("<ul></ul>").addClass("pm_checkoff_ul");
                                $.each(list, function(iii, list_item)
                                {
                                    var li = $("<li></li>").addClass("standard_checkoff_pm_li").attr("data-key", list_item.key);
                                    if(list_item.appears_after !== null)
                                    {
                                        li.attr("data-appears_after", list_item.appears_after);
                                    }
                                    var name_span = $("<span></span>").addClass("pm_checkoff_item_name").text(list_item.name);
                                    if(list_item.type === "checkbox")
                                    {
                                        var n_a = false;
                                        var cb = $("<input />").attr("type", "checkbox");
                                        var date_span = $("<span></span>").addClass("pm_checkoff_datespan").text("Specify Date");
                                        if(typeof(kustomer.project_management_checkoffs[list_item.key]) + '' !== "undefined")
                                        {
                                            if(typeof(kustomer.project_management_checkoffs[list_item.key]["checked"]) + '' !== "undefined")
                                            {
                                                if(kustomer.project_management_checkoffs[list_item.key]["checked"] === true)
                                                {
                                                    cb.attr("checked", "checked");
                                                }
                                            }
                                            if(typeof(kustomer.project_management_checkoffs[list_item.key]["date"]) + '' !== "undefined")
                                            {
                                                if(kustomer.project_management_checkoffs[list_item.key]["date"].indexOf("1800") === -1)
                                                {
                                                    date_span.text(moment(kustomer.project_management_checkoffs[list_item.key]["date"], "YYYY-MM-DD").format("MM/DD/YYYY"));
                                                } 
                                                else
                                                {
                                                    date_span.text("N/A");
                                                    n_a = true;
                                                }
                                            }
                                        }
                                        if(n_a)
                                        {
                                            date_span.addClass("pm_not_applicable");
                                        }
                                        date_span.on("dblclick", function(ev)
                                        {
                                            if($(this).hasClass("pm_not_applicable"))
                                            {
                                                return;
                                            }
                                            var datehtml = $("<div><p>Choose a date:</p><br /></div>");
                                            $("<div></div>").css("min-height", "150px").appendTo(datehtml);
                                            var date_div = $("<div></div>").attr("id", "pm_sel_date").addClass("input-append").addClass("date");
                                            var mom;
                                            if(date_span.text() !== "Specify Date")
                                            {
                                                mom = moment(date_span.text(), "MM/DD/YYYY");
                                            }
                                            else
                                            {
                                                mom = moment();
                                            }

                                            date_div.attr("data-date", mom.format("MM/DD/YYYY"));
                                            date_div.attr("data-date-format", "mm/dd/yyyy");

                                            date_div.append
                                            (
                                                $("<input />").addClass("span2").attr("size", "16").attr("type", "text").attr("value", mom.format("MM/DD/YYYY"))
                                            )
                                            .append
                                            (
                                                $("<span></span>").addClass("add-on")
                                                .append
                                                (
                                                    $("<i></i>").addClass("icon-th")
                                                )
                                            );
                                            date_div.appendTo(datehtml);
                                            
                                            var extra_onshown_fn = function(){};
                                            
                                            if(["permit_to_city", "install", "final_inspection"].indexOf(list_item.key) > -1)
                                            {
                                                $("<p></p>").text("Assigned To:").appendTo(datehtml);
                                                var sel = $("<select></select>").addClass("event_owner_sel").attr("multiple", "multiple");
                                                var admins = {{admins|safe}};
                                                admins.unshift({"name": "Nobody", "identifier": "-1"});
                                                $.each(admins, function(iiiii, admin)
                                                {
                                                    var opt = $("<option></option>").attr("value", admin.identifier).text(admin.name);
                                                    var owners = $.parseJSON(kustomer[list_item.key + "_event_owners"]);
                                                    if(owners.indexOf(admin.identifier) > -1)
                                                    {
                                                        opt.attr("selected", "selected");
                                                    }
                                                    opt.appendTo(sel);
                                                });
                                                sel.appendTo(datehtml);
                                                sel.attr("size", sel.find("option").size());
                                                $("<p></p>").text("Details:").appendTo(datehtml);
                                                $("<textarea></textarea>").addClass("pm_event_details_ta").appendTo(datehtml);
                                                extra_onshown_fn = function()
                                                {
                                                    $(".pm_event_details_ta").first().val(kustomer[list_item.key + "_details"]);
                                                };
                                            }
                                            BootstrapDialog.show
                                            (
                                                {
                                                    "title": "Updating Date - " + list_item.name,
                                                    "message": datehtml.html(),
                                                    "buttons":
                                                    [
                                                        {
                                                            "label": "Cancel",
                                                            "cssClass": "btn-danger",
                                                            "action": function(dialog)
                                                            {
                                                                dialog.close();
                                                            }
                                                        },
                                                        {
                                                            "label": "Remove the Existing Date",
                                                            "cssClass": "btn-danger",
                                                            "action": function(dialog)
                                                            {
                                                                if(cb[0].checked)
                                                                {
                                                                    window.alert("You must first remove the checkoff for this item.");
                                                                    dialog.close();
                                                                    return;
                                                                }
                                                                //delete kustomer.project_management_checkoffs[list_item.key]["date"];
                                                                date_span.text("Specify Date");
                                                                $.post("/data", {"fn": "remove_project_management_checkoff_date", "key": list_item.key, "identifier": kustomer.identifier}).done(function(rrrrr)
                                                                {
                                                                    dialog.close();
                                                                });                                                            
                                                            }
                                                        },
                                                        {
                                                            "label": "Mark as Non-Applicable",
                                                            "cssClass": "btn-warning",
                                                            "action": function(dialog)
                                                            {
                                                                $.post("/data", {"fn": "mark_project_management_item_as_non_applicable", "key": list_item.key, "identifier": kustomer.identifier}).done(function(rrrrr)
                                                                {
                                                                    $(".bootstrap-dialog-footer").find(".btn-warning").text("Applying...");
                                                                    $("#pm_customer_details_info_" + kustomer.identifier).prev().trigger("click");
                                                                    dialog.close();
                                                                });
                                                            }
                                                        },
                                                        {
                                                            "label": "Update",
                                                            "cssClass": "btn-primary",
                                                            "action": function(dialog)
                                                            {
                                                                $(".bootstrap-dialog-footer").find(".btn-primary").css("opacity", "0.3").text("Updating...");
                                                                var date_valu = $.trim($(".bootstrap-dialog-body").find("input").last().val());

                                                                var d_format = "MM/DD/YYYY";
                                                                if(date_valu.indexOf("-") > -1)
                                                                {
                                                                    d_format = "MM-DD-YYYY";
                                                                }
                                                                var mom2 = moment(date_valu, d_format);
                                                                var cb_checked = (date_span.prevAll("input").first()[0].checked * 1) + '';
                                                                var owners = ["-1"];
                                                                if($(".bootstrap-dialog-body").find(".event_owner_sel").length === 1)
                                                                {
                                                                    owners = $(".bootstrap-dialog-body").find(".event_owner_sel").val();
                                                                }
                                                                
                                                                $.post("./data", {"fn": "project_management_item_checkoff", "user": window.user_identifier, "key": list_item.key, "date": mom2.format("YYYY-MM-DD"), "identifier": identifier, "checked": cb_checked, "owners": JSON.stringify(owners), "details": $.trim($(".pm_event_details_ta").val())}).done(function(r2)
                                                                {
                                                                    kustomer[list_item.key + "_event_owners"] = JSON.stringify(owners);
                                                                    kustomer[list_item.key + "_details"] = $.trim($(".pm_event_details_ta").val());
                                                                    date_span.css("display", "inline-block").text(mom2.format("MM/DD/YYYY"));
                                                                    dialog.close();
                                                                });
                                                            }
                                                        }
                                                    ],
                                                    "onshown": function(d)
                                                    {
                                                        $(".bootstrap-dialog-body").last().find("input")
                                                        .datepicker
                                                        (
                                                            {
                                                                format: "mm/dd/yyyy",
                                                                autoClose: true
                                                            }
                                                        );
                                                        extra_onshown_fn();
                                                    }
                                                }
                                            );
                                        });
                                        cb.on("change", function()
                                        {
                                            if(["panel_assessment", "electrical", "plan_set_ordered", "permit_status", "install"].indexOf(list_item.key) === -1)
                                            {
                                                cb.closest(".pm_customer_details_info").css("opacity", "0.1");
                                            }                                            
                                            cb.css("opacity", "0.1");
                                            var checked = $(this)[0].checked;
                                            if(checked === true)
                                            {
                                                cb[0].checked = false;
                                            }
                                            else
                                            {
                                                cb[0].checked = true;
                                            }

                                            var d_txt = cb.nextAll(".pm_checkoff_datespan").first().text();
                                            var dayte_valuu = moment().format("YYYY-MM-DD");
                                            if(d_txt !== "Specify Date")
                                            {
                                                dayte_valuu = moment(d_txt, "MM/DD/YYYY").format("YYYY-MM-DD");
                                            }
                                            var save = function(completion_fn)
                                            {
                                                if(typeof(completion_fn) + '' === "undefined")
                                                {
                                                    completion_fn = function(){};
                                                }
                                                $.post("./data", {"identifier": identifier,"fn": "project_management_item_checkoff", "user": window.user_identifier, "key": list_item.key, "checked": (checked * 1) + '', "date": dayte_valuu}).done(function(rrr)
                                                {
                                                    cb.css("opacity", "1.0");
                                                    cb[0].checked = checked;
                                                    var mom3 = moment(rrr.date, "YYYY-MM-DD");
                                                    date_span.text(mom3.format("MM/DD/YYYY")).css("display", "inline-block");
                                                    completion_fn();
                                                    setTimeout(function()
                                                    {
                                                        cb.closest(".pm_customer_details_info").css("opacity", "1.0");
                                                    }, 2500);
                                                });
                                            };
                                            if(list_item.key === "panel_assessment")
                                            {
                                                if(checked)
                                                {
                                                    updatePanelAssessmentPM(customer, function()
                                                    {
                                                        save();
                                                    });
                                                }
                                                else
                                                {
                                                    save();
                                                }
                                                return;
                                            }
                                            if(list_item.key === "welcome_email_sent")
                                            {
                                                if(checked)
                                                {
                                                    $("#pm_customer_details_info_" + identifier).find(".pm_communication_buttons").find("li").each(function(index, element)
                                                    {
                                                        var el = $(element);
                                                        if(el.data("key") === "welcome_email_sent")
                                                        {
                                                            var dt = el.find(".customer_communication_date").first().text();
                                                            if(dt === "--/--/--")
                                                            {
                                                                el.find("button").first().trigger("click");
                                                            }
                                                        }                                                        
                                                    });
                                                }
                                                save();
                                                return;
                                            }
                                            if(list_item.key === "received_pto")
                                            {
                                                if(checked)
                                                {
                                                    $("#pm_customer_details_info_" + identifier).find(".pm_communication_buttons").find("li").each(function(index, element)
                                                    {
                                                        var el = $(element);
                                                        if(el.data("key") === "pto_received_email_sent")
                                                        {
                                                            var dt = el.find(".customer_communication_date").first().text();
                                                            if(dt === "--/--/--")
                                                            {
                                                                el.find("button").first().trigger("click");
                                                            }
                                                        }                                                        
                                                    });
                                                }
                                                save();
                                                return;
                                            }
                                            if(list_item.key === "final_inspection")
                                            {
                                                if(checked)
                                                {
                                                    $("#pm_customer_details_info_" + identifier).find(".pm_communication_buttons").find("li").each(function(index, element)
                                                    {
                                                        var el = $(element);
                                                        if(el.data("key") === "inspection_passed_email_sent")
                                                        {
                                                            var dt = el.find(".customer_communication_date").first().text();
                                                            if(dt === "--/--/--")
                                                            {
                                                                el.find("button").first().trigger("click");
                                                            }
                                                        }                                                        
                                                    });
                                                }
                                                save();
                                                return;
                                            }
                                            if(list_item.key === "equipment_ordered")
                                            {
                                                if(checked)
                                                {
                                                    $("#pm_customer_details_info_" + identifier).find(".pm_communication_buttons").find("li").each(function(index, element)
                                                    {
                                                        var el = $(element);
                                                        if(el.data("key") === "equipment_ordered_email_sent")
                                                        {
                                                            var dt = el.find(".customer_communication_date").first().text();
                                                            if(dt === "--/--/--")
                                                            {
                                                                el.find("button").first().trigger("click");
                                                            }
                                                        }                                                        
                                                    });
                                                    save();
                                                }
                                                else
                                                {
                                                    save();
                                                }
                                                return;
                                            }
                                            if(list_item.key === "permit_status")
                                            {
                                                if(checked)
                                                {
                                                    var permit_html = $("<div></div>");
                                                    $("<p></p>").text("Provide Permit Number:").appendTo(permit_html);
                                                    $("<input />").attr("type", "text").attr("id", "permit_number_pm").appendTo(permit_html);
                                                    $("<p></p>").text("Status:").appendTo(permit_html);

                                                    var status_sel = $("<select></select>").attr("id", "permit_status_pm");
                                                    $.each
                                                    (
                                                        [
                                                            "Choose One", "Approved", "Rejected", "Resubmitted"
                                                        ],
                                                        function(iiiii, eeeee)
                                                        {
                                                            $("<option></option>").attr("value", eeeee).text(eeeee).appendTo(status_sel);
                                                        }
                                                    );
                                                    status_sel.appendTo(permit_html);

                                                    $("<div></div>").attr("id", "pm_permit_status_date").addClass("input-append").addClass("date").attr("data-date", moment().format("MM/DD/YYYY")).attr("data-date-format", "mm/dd/yyyy")
                                                    .append
                                                    (
                                                        $("<input />").addClass("span2").addClass("eightpoint5").attr("size", "16").attr("type", "text").attr("value", moment().format("MM/DD/YYYY"))
                                                    )
                                                    .append
                                                    (
                                                        $("<span></span>").addClass("add-on")
                                                        .append
                                                        (
                                                            $("<i></i>").addClass("icon-th")
                                                        )
                                                    ).appendTo(permit_html);

                                                    BootstrapDialog.show
                                                    (
                                                        {
                                                            "title": "Permit Status Update",
                                                            "message": permit_html.html(),
                                                            "onshown": function(d)
                                                            {
                                                                if(typeof(kustomer.permit_number) + '' !== "undefined")
                                                                {
                                                                    if(kustomer.permit_number !== "" && kustomer.permit_number.toLowerCase() !== "n/a")
                                                                    {
                                                                        $("#permit_number_pm").val(kustomer.permit_number);
                                                                    }
                                                                }
                                                                $("#pm_permit_status_date").find("input").datepicker
                                                                (
                                                                    {
                                                                        format: "mm/dd/yyyy",
                                                                        autoClose: true
                                                                    }
                                                                );
                                                            },
                                                            "buttons":
                                                            [
                                                                {
                                                                    "label": "Cancel",
                                                                    "cssClass": "btn-danger",
                                                                    "action": function(d)
                                                                    {
                                                                        d.close();
                                                                    }
                                                                },
                                                                {
                                                                    "label": "Update",
                                                                    "cssClass": "btn-primary",
                                                                    "action": function(d)
                                                                    {
                                                                        if($.trim($("#permit_number_pm").val()).length === 0)
                                                                        {
                                                                            window.alert("The permit number is required");
                                                                            return;
                                                                        }
                                                                        if($("#permit_status_pm").val() === "Choose One")
                                                                        {
                                                                            window.alert("You must choose a permit status");
                                                                            return;
                                                                        }
                                                                        var jaysawn =
                                                                        {
                                                                            "permit_number": $.trim($("#permit_number_pm").val()),
                                                                            "permit_status": $("#permit_status_pm").val(),
                                                                            "permit_date": moment($("#pm_permit_status_date").find("input").val(), "MM/DD/YYYY").format("YYYY-MM-DD")
                                                                        };
                                                                        var j = JSON.stringify(jaysawn);


                                                                        $.post("./data", {"fn": "update_project_management_item", "identifier": kustomer.identifier, "key": "permitting", "value": j}).done(function(rer)
                                                                        {
                                                                            kustomer.permit_number = jaysawn["permit_number"];
                                                                            kustomer.permit_history.push
                                                                            (
                                                                                {"status": jaysawn["permit_status"], "date": jaysawn["permit_date"]}
                                                                            );
                                                                            $("#show_permit_status_pm").text("Permit Number: " + kustomer.permit_number);
                                                                            $("<div></div>").addClass("pm_permit_history_item").text(jaysawn["permit_status"] + " - " + moment(jaysawn["permit_date"], "YYYY-MM-DD").format("MM/DD/YYYY")).appendTo($("#pm_customer_details_info_" + kustomer.identifier).find(".pm_history_container"));
                                                                            if($("#pm_customer_details_info_" + kustomer.identifier).find(".update_permit_pm").size() === 0)
                                                                            {
                                                                                var btn = $("<button></button>").addClass("btn").addClass("btn-primary").addClass("update_permit_pm").text("Provide Permit Status Update")
                                                                                .click(function()
                                                                                {
                                                                                    provideAdditionalPermitStatusUpdate(customer);
                                                                                });
                                                                                btn.prependTo($("#pm_customer_details_info_" + kustomer.identifier).find(".permit_history"));
                                                                                $("<div></div>").insertAfter(btn)
                                                                            }
                                                                            d.close();
                                                                            save();
                                                                        });
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    );
                                                }
                                                else
                                                {
                                                    save();
                                                }
                                                return;
                                            }
                                            if(list_item.key === "received_pto")
                                            {
                                                if(checked)
                                                {
                                                    if(window.confirm("Are you sure you would like to mark this item as PTO received? It will remove the item from the project manager's list."))
                                                    {
                                                        var completion = function()
                                                        {
                                                            var customer_identifier = customer.identifier;
                                                            var eyetems = $.parseJSON($("#pm_customer_details_info_" + customer.identifier).parent().prev().find(".pm_projs").val());
                                                            var cop = [];
                                                            for(var n = 0; n < eyetems.length; n++)
                                                            {
                                                                if(eyetems[n].identifier !== customer_identifier)
                                                                {
                                                                    cop.push(eyetems[n]);
                                                                }
                                                            }

                                                            var group_div = $("#pm_customer_details_info_" + customer.identifier).parent().prev();
                                                            group_div.find(".pm_projs").val(JSON.stringify(cop));
                                                            var tally1 = group_div.find(".pm_tally").text().replace(" Projects", "");
                                                            tally1 = parseInt($.trim(tally1));
                                                            tally1 -= 1;
                                                            tally1 += '';

                                                            group_div.find(".pm_tally").text(tally1 + " Projects");

                                                            var group_div2 = $(".pm_group").last();
                                                            var items2 = $.parseJSON(group_div2.find(".pm_projs").val());
                                                            items2.push({"identifier": customer_identifier, "customer_name": customer.customer_first_name + " " + customer.customer_last_name});
                                                            group_div2.find(".pm_projs").val(JSON.stringify(items2));

                                                            var tally2 = group_div2.find(".pm_tally").text().replace(" Projects", "");
                                                            tally2 = parseInt($.trim(tally2));
                                                            tally2 += 1;
                                                            tally2 += '';
                                                            group_div2.find(".pm_tally").text(tally2 + " Projects");

                                                            $("#pm_customer_details_info_" + customer.identifier).prev().remove();
                                                            $("#pm_customer_details_info_" + customer.identifier).remove();
                                                        };
                                                        save(completion);
                                                        $("#pm_customer_details_info_" + customer.identifier).find(".pm_communication_buttons").find("li").each(function(index, element)
                                                        {
                                                            var el = $(element);
                                                            if(el.data("key") === "pto_received_email_sent")
                                                            {
                                                                var dt = el.find(".customer_communication_date").first().text();
                                                                if(dt === "--/--/--")
                                                                {
                                                                    $.post("/data", {"fn": "send_pto_received_email", "identifier": customer.identifier}).done(function()
                                                                    {

                                                                    });
                                                                }
                                                            }                                                        
                                                        });
                                                    }
                                                }
                                                else
                                                {
                                                    save();
                                                }
                                                return;

                                            }
                                            if(list_item.key === "install")
                                            {
                                                if(checked)
                                                {
                                                    BootstrapDialog.show
                                                    (
                                                        {
                                                            "title": "Upload Photo",
                                                            "message": "<p>Please upload a nice photo of the installation (for social media)....</p><input type='file' accept='image/*' id='social_media_install_photo' />",
                                                            "buttons":
                                                            [
                                                                {
                                                                    "label": "Cancel",
                                                                    "cssClass": "btn-danger",
                                                                    "action": function(d)
                                                                    {
                                                                        d.close();
                                                                        cb.css("opacity", "1.0");
                                                                    },
                                                                },
                                                                {
                                                                    "label": "Upload It!",
                                                                    "cssClass": "btn-primary",
                                                                    "action": function(d)
                                                                    {
                                                                        if($("#social_media_install_photo")[0].files.length !== 1)
                                                                        {
                                                                            window.alert("A photo is required");
                                                                            return;
                                                                        }
                                                                        $(".bootstrap-dialog-footer").find(".btn-primary").text("Uploading Photo...")

                                                                        var formData = new FormData();

                                                                        formData.append("fn", "install_social_media_file");
                                                                        formData.append("media", $("#social_media_install_photo")[0].files[0]);
                                                                        formData.append("identifier", identifier);

                                                                        var xhr = new XMLHttpRequest();

                                                                        xhr.addEventListener("load", function(e)
                                                                        {                                                                        
                                                                            d.close();
                                                                            BootstrapDialog.show
                                                                            (
                                                                                {
                                                                                    "title": "Installation Notes",
                                                                                    "message": "<textarea class='install_notes_ta'></textarea>",
                                                                                    "buttons":
                                                                                    [
                                                                                        {
                                                                                            "label": "Done",
                                                                                            "cssClass": "btn-primary",
                                                                                            "action": function(d2)
                                                                                            {
                                                                                                if($.trim($(".install_notes_ta").first().val()).length > 0)
                                                                                                {
                                                                                                    $.post("/data", {"fn": "installation_notes_send", "notes": $.trim($(".install_notes_ta").first().val()), "identifier": identifier}).done(function()
                                                                                                    {
                                                                                                        d2.close();
                                                                                                        save();
                                                                                                    });
                                                                                                }
                                                                                                else
                                                                                                {
                                                                                                    d2.close();
                                                                                                    save();
                                                                                                }                                                                                                
                                                                                            }
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            );                                                                           
                                                                        });
                                                                        xhr.open("POST", "/data");
                                                                        xhr.send(formData);
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    );
                                                }
                                                else
                                                {
                                                    save();
                                                }
                                                return;
                                            }
                                            if(list_item.key === "plan_set_ordered")
                                            {
                                                if(checked)
                                                {
                                                    $.post("/data", {"fn": "plan_set_exists", "identifier": identifier}).done(function(rrr)
                                                    {
                                                        if(rrr.result)
                                                        {
                                                            $.post("/data", {"fn": "activate_plan_set", "identifier": identifier}).done(function(rrrr)
                                                            {
                                                                save();
                                                            });                                                        
                                                            return;
                                                        }
                                                        else
                                                        {
                                                            $.post("/data", {"fn": "read_setting", "value": "utility_providers"}).done(function(providers)
                                                            {
                                                                var utility_providers = [];
                                                                var utility_provider_idx = -1
                                                                $.each(providers.data, function(i, provider)
                                                                {
                                                                    utility_providers.push(provider.value_friendly);
                                                                    if(provider.value === customer.utility_provider)
                                                                    {
                                                                        utility_provider_idx = i;
                                                                    }
                                                                });

                                                                cb.css("opacity", "1.0");
                                                                var questions = 
                                                                {
                                                                    "customer_name":
                                                                    {
                                                                        "type": "input_box",
                                                                        "value": customer.customer_first_name + " " + customer.customer_last_name
                                                                    },
                                                                    "utility_provider":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices": utility_providers
                                                                    },
                                                                    "project_category":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices": 
                                                                        [
                                                                            "Residential",
                                                                            "Commercial"
                                                                        ]
                                                                    },
                                                                    "project_type":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "Flush Mount/Tilt Up",
                                                                            "Railless/Spice/Integrated",
                                                                            "Ground Mount",
                                                                            "Solar Shingle",
                                                                            "Flat-Roof"
                                                                        ]
                                                                    },
                                                                    "pitched_roof_material":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "Asphalt Shingle",
                                                                            "Wood Shake",
                                                                            "Standing Seam Metal",
                                                                            "Corrugated Metal",
                                                                            "Clay Tile",
                                                                            "Wave Tile",
                                                                            "Flat Tile"
                                                                        ]
                                                                    },
                                                                    "roof_structures_quantity":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "1 Structure",
                                                                            "2 Structures"
                                                                        ]                                                        
                                                                    },
                                                                    "structure_type":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "Truss",
                                                                            "Single Span Rafter",
                                                                            "Collar Tie",
                                                                            "Interior Bearing Wall",
                                                                            "Knee Wall",
                                                                            "Knee Wall with Collar Tie",
                                                                            "Purlins",
                                                                            "Supported by Metal Beams",
                                                                            "Supported by Wood Beams",
                                                                            "Steel Frame"
                                                                        ]
                                                                    },
                                                                    "rafter_size":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "2x4",
                                                                            "2x6",
                                                                            "2x8",
                                                                            "2x10",
                                                                            "2x12",
                                                                            "3x6",
                                                                            "4x4",
                                                                            "4x6"
                                                                        ]
                                                                    },
                                                                    "rafter_spacing":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "12",
                                                                            "14",
                                                                            "16",
                                                                            "18",
                                                                            "20",
                                                                            "22",
                                                                            "24",
                                                                            "26",
                                                                            "28",
                                                                            "30",
                                                                            "32",
                                                                            "34",
                                                                            "36",
                                                                            "38",
                                                                            "40",
                                                                            "42",
                                                                            "44",
                                                                            "46",
                                                                            "48"
                                                                        ]
                                                                    },
                                                                    "rafter_span":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "5",
                                                                            "6",
                                                                            "7",
                                                                            "8",
                                                                            "9",
                                                                            "10",
                                                                            "11",
                                                                            "12",
                                                                            "13",
                                                                            "14",
                                                                            "15",
                                                                            "16",
                                                                            "17",
                                                                            "18",
                                                                            "19",
                                                                            "20",
                                                                            "21",
                                                                            "22",
                                                                            "23",
                                                                            "24",
                                                                            "25",
                                                                            "26",
                                                                            "27",
                                                                            "28",
                                                                            "29",
                                                                            "30"
                                                                        ]
                                                                    },
                                                                    "flush_mount_attachment_type":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "Unirac Flashed L Foot"
                                                                        ]
                                                                    },
                                                                    "flush_mount_racking_application":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "Unirac Lite"
                                                                        ]
                                                                    },
                                                                    "quantity_of_arrays":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "1",
                                                                            "2",
                                                                            "3",
                                                                            "4",
                                                                            "5",
                                                                            "6",
                                                                            "7",
                                                                            "8",
                                                                            "9",
                                                                            "10",
                                                                            "11",
                                                                            "12",
                                                                            "13",
                                                                            "14",
                                                                            "15",
                                                                            "16",
                                                                            "17",
                                                                            "18",
                                                                            "19",
                                                                            "20",
                                                                            "21",
                                                                            "22",
                                                                            "23",
                                                                            "24"
                                                                        ]
                                                                    },
                                                                    "system_type":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "String Inverter",
                                                                            "DC Optimizer Inverter",
                                                                            "Micro Inverter",
                                                                            "AC Module"
                                                                        ]
                                                                    },
                                                                    "module_manufacturer_and_model_number":
                                                                    {
                                                                        "type": "input_box"
                                                                    },
                                                                    "string_design":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "I want to enter stringing",
                                                                            "I want the designer to to string"
                                                                        ]
                                                                    },
                                                                    "quantity_of_micro_inverters":
                                                                    {
                                                                        "type": "input_box",
                                                                        "value": customer.proposal.panel_qty
                                                                    },
                                                                    "inverter_manufacturer_and_model_number":
                                                                    {
                                                                        "type": "input_box"
                                                                    },
                                                                    "pv_revenue_meter":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "Yes",
                                                                            "No"
                                                                        ]
                                                                    },
                                                                    "location_of_pv_meter":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "N/A",
                                                                            "Yes",
                                                                            "No"
                                                                        ]
                                                                    },
                                                                    "utility_disconnect":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "Yes",
                                                                            "No"
                                                                        ]
                                                                    },
                                                                    "utility_disconnect_type":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "N/A",
                                                                            "New Non-Fused Disconnect",
                                                                            "New Fused Disconnect",
                                                                            "New Breaker Box"
                                                                        ]
                                                                    },
                                                                    "utility_disconnect_location":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "N/A",
                                                                            "External Wall",
                                                                            "Internal Wall"
                                                                        ]
                                                                    },
                                                                    "external_utility_disconnect_location":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "N/A",
                                                                            "House",
                                                                            "Attached Garage",
                                                                            "Garage",
                                                                            "Barn",
                                                                            "Out Building",
                                                                            "Pole"
                                                                        ]
                                                                    },
                                                                    "external_utility_disconnect_orientation":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "N/A",
                                                                            "North",
                                                                            "East",
                                                                            "South",
                                                                            "West",
                                                                            "NE",
                                                                            "SE",
                                                                            "NW",
                                                                            "SW",
                                                                            "Other"
                                                                        ]
                                                                    },
                                                                    "utility_ac_service_disconnect":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "Yes",
                                                                            "No"
                                                                        ]
                                                                    },
                                                                    "interconnection_strategy":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "Backfeed Breaker",
                                                                            "Tap"
                                                                        ]
                                                                    },
                                                                    "backed_interconnection_location":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "Existing Main Electrical Panel",
                                                                            "New Main Electrical Panel Upgrade",
                                                                            "Existing Sub-Electrical Panel",
                                                                            "New Sub-Electrical Panel",
                                                                            "Line-Supply Breaker in Main Panel",
                                                                            "Meter-Main",
                                                                            "Line-Supply Side Breaker in New Solar Ready Panel"
                                                                        ]
                                                                    },
                                                                    "derate_the_main_breaker":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "Yes",
                                                                            "No"
                                                                        ]
                                                                    },
                                                                    "new_main_breaker_derating":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "Not Applicable",
                                                                            "75A",
                                                                            "100A",
                                                                            "125A",
                                                                            "150A",
                                                                            "175A",
                                                                            "200A",
                                                                            "225A",
                                                                            "250A",
                                                                            "400A"
                                                                        ]
                                                                    },
                                                                    "existing_electrical_grounding":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "Ground Rod",
                                                                            "Ufer",
                                                                            "Cold Water Pipe"
                                                                        ]
                                                                    },
                                                                    "main_electrical_panel_location":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "External Wall",
                                                                            "Internal Wall"
                                                                        ]
                                                                    },
                                                                    "external_main_panel_electrical_panel_orientation_choice_number_1":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "House",
                                                                            "Garage",
                                                                            "Barn",
                                                                            "Pole Mounted",
                                                                            "North",
                                                                            "East",
                                                                            "South",
                                                                            "West",
                                                                            "NE",
                                                                            "SE",
                                                                            "NW",
                                                                            "SW",
                                                                            "Other"
                                                                        ]
                                                                    },
                                                                    "external_main_panel_electrical_panel_orientation_choice_number_2":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "House",
                                                                            "Garage",
                                                                            "Barn",
                                                                            "Pole Mounted",
                                                                            "North",
                                                                            "East",
                                                                            "South",
                                                                            "West",
                                                                            "NE",
                                                                            "SE",
                                                                            "NW",
                                                                            "SW",
                                                                            "Other"
                                                                        ]
                                                                    },
                                                                    "main_electrical_panel_main_breaker_rating":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "60A",
                                                                            "70A",
                                                                            "90A",
                                                                            "100A",
                                                                            "125A",
                                                                            "150A",
                                                                            "175A",
                                                                            "200A",
                                                                            "225A",
                                                                            "400A"
                                                                        ]
                                                                    },
                                                                    "main_electrical_panel_rating_(_Main Bus Rating_)":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "100A",
                                                                            "125A",
                                                                            "150A",
                                                                            "175A",
                                                                            "200A",
                                                                            "225A",
                                                                            "250A",
                                                                            "400A"
                                                                        ]
                                                                    },
                                                                    "service_voltage_at_interconnection":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "1-Phase, 3-Wire 120/240 V",
                                                                            "1-Phase, 2-Wire 240V (No Neutral"
                                                                        ]
                                                                    },
                                                                    "existing_meter_location":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "North Internal",
                                                                            "South Internal",
                                                                            "East Internal",
                                                                            "West Internal",
                                                                            "North External",
                                                                            "South Exteral",
                                                                            "East External",
                                                                            "West External",
                                                                            "Pole Mounted",
                                                                            "Meter-Main",
                                                                            "Other"
                                                                        ]
                                                                    },
                                                                    "utility_entrance":
                                                                    {
                                                                        "type": "dropdown",
                                                                        "choices":
                                                                        [
                                                                            "Underground",
                                                                            "Overhead"
                                                                        ]
                                                                    },
                                                                    "project_notes_and_special_requirements":
                                                                    {
                                                                        "type": "textarea"
                                                                    },
                                                                    "image_of_layout":
                                                                    {
                                                                        "type": "file"
                                                                    },
                                                                    "image_of_roof_measurements":
                                                                    {
                                                                        "type": "file"
                                                                    },
                                                                    "image_of_roof":
                                                                    {
                                                                        "type": "file"
                                                                    },
                                                                    "image_of_area_around_meter":
                                                                    {
                                                                        "type": "file"
                                                                    },
                                                                    "recipient_email_address":
                                                                    {
                                                                        "type": "textarea"
                                                                    }                                                    
                                                                };
                                                                if(utility_provider_idx > -1)
                                                                {
                                                                    questions["utility_provider"]["value"] = utility_providers[utility_provider_idx];
                                                                }
                                                                /*if(customer.survey_details !== null)
                                                                {
                                                                    questions["pitched_roof_material"]["value"] = customer.survey_details.roofing_type_1;
                                                                    questions["external_utility_disconnect_orientation"]["value"] = customer.survey_details.exterior_main_panel_location;
                                                                    questions["existing_electrical_grounding"]["value"] = customer.survey_details.grounding_type;
                                                                    questions["main_electrical_panel_main_breaker_rating"]["value"] = customer.survey_details.main_breaker;
                                                                    questions["main_electrical_panel_rating_(_Main Bus Rating_)"]["value"] = customer.survey_details.main_buss_rating;
                                                                    questions["external_main_panel_electrical_panel_orientation_choice_number_2"]["value"] = customer.survey_details.exterior_main_panel_location;
                                                                }*/                                                              
                                                                var original_questions = $.parseJSON(JSON.stringify(questions));

                                                                $(".plan_set_order_details").remove();
                                                                var main_div = $("<div></div>").addClass("plan_set_order_details");

                                                                var render_questions = function(questions, id_to_focus)
                                                                {
                                                                    $(".plan_set_question").remove();
                                                                    $("#plan_set_details_save_btn").remove();
                                                                    $.each(questions, function(key, question)
                                                                    {
                                                                        var question_div = $("<div></div>").addClass("plan_set_question").attr("id", "question_" + key);
                                                                        var words = key.split("_");
                                                                        var new_words = [];
                                                                        $.each(words, function(ii, word)
                                                                        {
                                                                            var new_word = word[0].toUpperCase();
                                                                            if(word.length > 1)
                                                                            {
                                                                                new_word += word.substring(1);
                                                                            }
                                                                            new_words.push(new_word);
                                                                        });
                                                                        $("<p></p>").text(new_words.join(" ")).appendTo(question_div);
                                                                        if(question_div.find("> p").first().text() === "Recipient Email Address")
                                                                        {
                                                                            $("<div></div>").addClass("plan_set_order_info_highlight").text("(Enter one address per line)").appendTo(question_div);
                                                                        }


                                                                        switch(question.type)
                                                                        {
                                                                            case "dropdown":
                                                                                var sel = $("<select></select>");
                                                                                $("<option></option>").attr("value", "n/a").text("Choose One").appendTo(sel);
                                                                                $.each(question.choices, function(ii, choice)
                                                                                {
                                                                                    var opt = $("<option></option>").attr("value", choice).text(choice);
                                                                                    if(typeof(question["value"]) + '' !== "undefined")
                                                                                    {
                                                                                        if(question.value === choice)
                                                                                        {
                                                                                            opt.attr("selected", "selected");
                                                                                        }
                                                                                    }
                                                                                    opt.appendTo(sel);
                                                                                });
                                                                                sel.change(function()
                                                                                {
                                                                                    if($(this).val() !== "n/a")
                                                                                    {
                                                                                        question.value = $(this).val();
                                                                                        if(key === "quantity_of_arrays")
                                                                                        {
                                                                                            var count = parseInt($(this).val());
                                                                                            var new_questions = {};
                                                                                            $.each(questions, function(keyy, question2)
                                                                                            {
                                                                                                if(Object.keys(original_questions).indexOf(keyy) > -1)
                                                                                                {
                                                                                                    new_questions[keyy] = question2;
                                                                                                    if(keyy === "quantity_of_arrays")
                                                                                                    {
                                                                                                        for(var iii = 0; iii < count; iii++)
                                                                                                        {
                                                                                                            var num = iii + 1;
                                                                                                            var one_through_one_hundred = [];
                                                                                                            var one_through_sixty = [];
                                                                                                            for(var a = 1; a < 101; a++)
                                                                                                            {
                                                                                                                one_through_one_hundred.push(a + '');
                                                                                                            }
                                                                                                            for(var b = 1; b < 61; b++)
                                                                                                            {
                                                                                                                one_through_sixty.push(b + '');
                                                                                                            }
                                                                                                            new_questions["array_number_" + (num + '') + "_panel_quantity"] = 
                                                                                                            {
                                                                                                                "type": "dropdown",
                                                                                                                "choices": one_through_one_hundred
                                                                                                            };
                                                                                                            new_questions["array_number_" + (num + '') + "_roof_slope_degree_in_angles"] = 
                                                                                                            {
                                                                                                                "type": "dropdown",
                                                                                                                "choices": one_through_sixty
                                                                                                            };
                                                                                                            new_questions["array_number_" + (num + '') + "_azimuth"] = 
                                                                                                            {
                                                                                                                "type": "input_box",                                                                                                
                                                                                                            };
                                                                                                        }

                                                                                                    }
                                                                                                }                                                                                                                                                                
                                                                                            });
                                                                                            render_questions(new_questions, "question_array_#1_panel_quantity");
                                                                                        }
                                                                                    }                                                                    
                                                                                });
                                                                                sel.appendTo(question_div);
                                                                                break;

                                                                            case "textarea":
                                                                                var ta = $("<textarea></textarea>").attr("placeholder", "Type your notes here...");
                                                                                ta.change(function()
                                                                                {
                                                                                    question.value = $.trim($(this).val());
                                                                                });
                                                                                ta.appendTo(question_div);
                                                                                if(typeof(question["value"]) + '' !== "undefined")
                                                                                {
                                                                                    ta.val(question.value);
                                                                                }
                                                                                break;

                                                                            case "file":
                                                                                $("<input />").attr("type", "file").appendTo(question_div);
                                                                                break;
                                                                            case "input_box":
                                                                                var inp = $("<input />").attr("type", "text")
                                                                                .on("change", function()
                                                                                {
                                                                                    question.value = $.trim($(this).val());
                                                                                });
                                                                                if(typeof(question["value"]) + '' !== "undefined")
                                                                                {
                                                                                    inp.val(question.value);
                                                                                }
                                                                                inp.appendTo(question_div);
                                                                                break;
                                                                            default:
                                                                                break;
                                                                        }
                                                                        question_div.appendTo(main_div);
                                                                    });
                                                                    $("<button></button>").text("Save").attr("type", "button").addClass("btn").addClass("btn-primary").attr("id", "plan_set_details_save_btn")
                                                                    .on("click", function()
                                                                    {
                                                                        var that = $(this);
                                                                        $(".missing_value").removeClass("missing_value");
                                                                        var ret_early = false;
                                                                        $.each(questions, function(keyy, question2)
                                                                        {
                                                                            if(ret_early)
                                                                            {
                                                                                return;
                                                                            }
                                                                            if(question2.type === "dropdown")
                                                                            {
                                                                                if(typeof(question2["value"]) + '' === "undefined")
                                                                                {
                                                                                    $("#question_" + keyy).find("> p").addClass("missing_value");
                                                                                    $("#question_" + keyy)[0].scrollIntoView();
                                                                                    ret_early = true;
                                                                                }
                                                                            }                                                            
                                                                            else if(question2.type === "file")
                                                                            {
                                                                                var val = $("#question_" + keyy).find("input").first().val();
                                                                                if(val === "")
                                                                                {
                                                                                    window.alert("Please provide a valid image file (JPG or PNG) for " + $("#question_" + keyy).find("> p").first().text());
                                                                                    $("#question_" + keyy).find("> p").addClass("missing_value");
                                                                                    $("#question_" + keyy)[0].scrollIntoView();
                                                                                    ret_early = true;
                                                                                }
                                                                            
                                                                            }
                                                                            else if(question2.type === "input_box")
                                                                            {
                                                                                if(typeof(question2["value"]) + '' === "undefined" || $.trim(question2.value) === "")
                                                                                {
                                                                                    $("#question_" + keyy).find("> p").addClass("missing_value");
                                                                                    $("#question_" + keyy)[0].scrollIntoView();
                                                                                    ret_early = true;
                                                                                }                                                                
                                                                            }
                                                                        });
                                                                        if(ret_early)
                                                                        {
                                                                            return;
                                                                        }

                                                                        that.text("Saving...");

                                                                        var formData = new FormData();
                                                                        formData.append("fn", "create_plan_set_details");
                                                                        formData.append("identifier", identifier);
                                                                        var key_ordering = [];
                                                                        $.each(questions, function(keyy, question2)
                                                                        {
                                                                            key_ordering.push(keyy);                                                            
                                                                            if(question2.type === "file")
                                                                            {
                                                                                formData.append(keyy, $("#question_" + keyy).find("input").first()[0].files[0]);
                                                                            }
                                                                        });
                                                                        formData.append("key_ordering", JSON.stringify(key_ordering));
                                                                        formData.append("data", JSON.stringify(questions));

                                                                        var xhr = new XMLHttpRequest();
                                                                        (xhr.upload || xhr).addEventListener("progress", function(e)
                                                                        {
                                                                            var done = e.position || e.loaded
                                                                            var total = e.totalSize || e.total;
                                                                            var completion_percentage = (Math.round(done/total*100) + '') + "%";
                                                                            that.text("Uploading... (" + completion_percentage + ")");
                                                                            if(completion_percentage === "100%")
                                                                            {
                                                                                that.text("Finalizing, Please Wait...");
                                                                            }
                                                                        });
                                                                        xhr.addEventListener("load", function(e)
                                                                        {
                                                                            save(function()
                                                                            {
                                                                                $(".plan_set_order_details").remove();
                                                                                cb[0].scrollIntoView();
                                                                            });
                                                                        });

                                                                        xhr.open("POST", "/data");
                                                                        xhr.send(formData);
                                                                    })
                                                                    .appendTo(main_div);

                                                                    if(typeof(id_to_focus) + '' !== "undefined")
                                                                    {
                                                                        if($("#" + id_to_focus).size() > 0)
                                                                        {
                                                                            $("#" + id_to_focus)[0].scrollIntoView();
                                                                        }                                                        
                                                                    }
                                                                };                                                

                                                                render_questions(questions);
                                                                
                                                                main_div.appendTo(cb.parent().parent().parent());
                                                                main_div[0].scrollIntoView();

                                                                if(customer.survey_details !== null)
                                                                {
                                                                    var panel_qty = 1;
                                                                    var done = false;
                                                                    while(!done)
                                                                    {
                                                                        var obj_keys = Object.keys(customer.survey_details);
                                                                        var found = obj_keys.indexOf("inclinometer_reading_roof_plane_tilt_" + (panel_qty + '')) > -1;
                                                                        if(!found)
                                                                        {
                                                                            done = true;
                                                                        }
                                                                        else
                                                                        {
                                                                            panel_qty += 1;
                                                                        }                                                                        
                                                                    }
                                                                    panel_qty -= 1;
                                                                    if(panel_qty === 0)
                                                                    {
                                                                        panel_qty = 1;
                                                                    }

                                                                    $("#question_quantity_of_arrays").find("option").each(function(iiiii, eeeee)
                                                                    {
                                                                        if($(eeeee).attr("value") === (panel_qty + ''))
                                                                        {
                                                                            $("#question_quantity_of_arrays").find("select").first()[0].selectedIndex = iiiii;
                                                                            $("#question_quantity_of_arrays").find("select").first().trigger("change");
                                                                        }
                                                                    });

                                                                    setTimeout(function()
                                                                    {
                                                                        for(var iiiii = 1; iiiii <= panel_qty; iiiii++)
                                                                        {
                                                                            $("#question_array_number_" + (iiiii + '') + "_roof_slope_degree_in_angles").find("option").each(function(iiiiii, eeeeee)
                                                                            {
                                                                                if($(eeeeee).attr("value") === customer.survey_details["inclinometer_reading_roof_plane_tilt_" + (iiiii + '')])
                                                                                {
                                                                                    $(eeeeee).parent().selectedIndex = iiiiii;
                                                                                    $(eeeeee).attr("selected", "selected");
                                                                                }
                                                                            });
                                                                            $("#question_array_number_" + (iiiii + '') + "_azimuth").find("input").val(customer.survey_details["azimuth_of_mounting_plane_" + (iiiii + '')]);

                                                                        }
                                                                    }, 1000);
                                                                }
                                                            });                                                        
                                                        }
                                                    });                                                
                                                }
                                                else
                                                {
                                                    save(function()
                                                    {
                                                        $.post("/data", {"fn": "deactivate_plan_set", "identifier": identifier}).done(function(rr)
                                                        {
                                                            $.post("/data", {"fn": "remove_project_management_checkoff_date", "identifier": identifier, "key": "plan_set_ordered"}).done(function(rr)
                                                            {
                                                                cb.nextAll("span").last().text("Specify Date");
                                                                
                                                            });                                                    
                                                        });
                                                    });
                                                    return;
                                                }
                                                return;
                                            }
                                            save();
                                        });
                                        $.each([cb, name_span, date_span], function(iiiii, eeeee)
                                        {
                                            eeeee.appendTo(li);
                                        });
                                        if(n_a)
                                        {
                                            $("<hr />").addClass("not_applicable_hr").appendTo(li);
                                        }
                                    }
                                    li.appendTo(checkoff_ul);
                                });
                                checkoff_ul.appendTo(project_details_div);
                            });
                            
                            var modify_dom_fns = [];
                            project_details_div.find(".standard_checkoff_pm_li").each(function(iiiii, eeeee)
                            {
                                var el = $(eeeee);
                                if(typeof(el.data("appears_after")) + '' !== "undefined")
                                {
                                    if(el.data("appears_after") !== "n/a")
                                    {
                                        var appears_after = el.data("appears_after");
                                        modify_dom_fns.push
                                        (
                                            function()
                                            {
                                                project_details_div.find(".standard_checkoff_pm_li").each(function(iiiiii, eeeeee)
                                                {
                                                    if($(eeeeee).data("key") === appears_after)
                                                    {
                                                        el.insertAfter($(eeeeee));
                                                    }
                                                });
                                            }
                                        );
                                    }
                                }
                            });
                            $.each(modify_dom_fns, function(iiiii, fn)
                            {
                                fn();
                            });

                            
                            project_details_div.find(".standard_checkoff_pm_li").each(function(iiiii, eeeee)
                            {
                                if($(eeeee).data("key") === "welcome_email_sent")
                                {
                                    var welcome_email_cb = $("<input />").attr("type", "checkbox").attr("disabled", "disabled");
                                    var welcome_email_button = $("<button></button>").attr("type", "button").text("Welcome Email").addClass("btn").addClass("btn-primary");
                                    var welcome_email_span = $("<span></span>").addClass("customer_communication_date").text(moment(customer.welcome_email_sent_date, "YYYY-MM-DD").format("MM/DD/YYYY"));
                                    welcome_email_button.click(function()
                                    {
                                        var that2 = $(this);
                                        var dialog_html = $("<div></div>");
                                        $("<p></p>").text("Link to Installation Agreement:").appendTo(dialog_html);
                                        $("<input />").attr("type", "text").appendTo(dialog_html);
                                        $("<p></p>").text("Link to Solar Panel Warranty:").appendTo(dialog_html);
                                        $("<input />").attr("type", "text").appendTo(dialog_html);
                                        $("<p></p>").text("Link to Inverter Warranty:").appendTo(dialog_html);
                                        $("<input />").attr("type", "text").appendTo(dialog_html);
                                        $("<p></p>").text("PM Extension Number (Phone Extension):").appendTo(dialog_html);
                                        $("<input />").attr("type", "text").appendTo(dialog_html);

                                        BootstrapDialog.show
                                        (
                                            {
                                                "title": "Welcome Email Details",
                                                "message": dialog_html.html(),
                                                "buttons":
                                                [
                                                    {
                                                        "label": "Cancel",
                                                        "cssClass": "btn-danger",
                                                        "action": function(d)
                                                        {
                                                            d.close();
                                                        }
                                                    },
                                                    {
                                                        "label": "Send it!",
                                                        "cssClass": "btn-primary",
                                                        "action": function(d)
                                                        {
                                                            var installation_link = $.trim($(".bootstrap-dialog-body").find("input").first().val());
                                                            var solar_warranty_link = $.trim($(".bootstrap-dialog-body").find("input").eq(1).val());
                                                            var inverter_warranty_link = $.trim($(".bootstrap-dialog-body").find("input").eq(2).val());
                                                            var pm_extension = $.trim($(".bootstrap-dialog-body").find("input").eq(3).val());

                                                            if(installation_link.length === 0)
                                                            {
                                                                window.alert("Please provide a link to the installation agreement.");
                                                                return;
                                                            }
                                                            if(solar_warranty_link.length === 0)
                                                            {
                                                                window.alert("Please provide a link to the solar warranty.");
                                                                return;
                                                            }
                                                            if(inverter_warranty_link.length === 0)
                                                            {
                                                                window.alert("Please provide a link to the inverter warranty.");
                                                                return;
                                                            }
                                                            if(pm_extension.length === 0)
                                                            {
                                                                window.alert("Please provide the project manager's phone extension.");
                                                                return;
                                                            }

                                                            $(".bootstrap-dialog-footer").find(".btn-primary").first().text("Sending...");

                                                            var old_txt = that2.text();                                                            
                                                            that2.text("Sending Email...");
                                                            $.post("/data", {"fn": "send_welcome_email", "identifier": identifier, "installation_link": installation_link, "solar_warranty_link": solar_warranty_link, "inverter_warranty_link": inverter_warranty_link, "pm_extension": pm_extension}).done(function()
                                                            {
                                                                that2.text(old_txt).attr("disabled", "disabled");
                                                                that2.prev().prev()[0].checked = true;
                                                                that2.prev().text(moment().format("MM/DD/YYYY"));
                                                                d.close();

                                                                $("#pm_customer_details_info_" + identifier).find(".standard_checkoff_pm_li").each(function(index, li)
                                                                {
                                                                    if($(li).data("key") === "welcome_call_completed")
                                                                    {
                                                                        $(li).find("input").first()[0].checked = true;
                                                                        $(li).find("input").first().trigger("change");
                                                                    }
                                                                    if($(li).data("key") === "welcome_email_sent")
                                                                    {
                                                                        $(li).find("input").first()[0].checked = true;
                                                                        $(li).find("input").first().trigger("change");
                                                                    }
                                                                });
                                                            });
                                                        }
                                                    }
                                                ]
                                            }
                                        );
                                    });                        
                                    if(customer.welcome_email_sent)
                                    {
                                        welcome_email_cb.attr("checked", "checked");
                                        welcome_email_button.attr("disabled", "disabled");
                                    }
                                    $("<li></li>").attr("data-key", "welcome_email_sent")
                                    .append
                                    (
                                        welcome_email_cb
                                    )
                                    .append
                                    (
                                        welcome_email_span
                                    )
                                    .append
                                    (
                                        welcome_email_button
                                    )
                                    .prependTo(communications_ul);
                                }
                            });
                            communications_ul.find(".customer_communication_date").each(function(iiiii, eeeee)
                            {
                                if($(eeeee).text() === "01/01/1970")
                                {
                                    $(eeeee).text("--/--/--");
                                }
                                $(eeeee).on("dblclick", function()
                                {
                                    editCustomerCommunicationDate($(eeeee).parent(), customer.identifier);
                                });
                            });
                            $("<div></div>").css("clear", "both").css("min-height", "0.5em").appendTo(project_details_div);
                            $("<h3></h3>").text("To-Do Items:").appendTo(project_details_div);
                            var to_do_wrapper = $("<div></div>").attr("id", "to_do_pm_wrapper");
                            
                            to_do_wrapper.on("click", ".glyphicon-remove", function()
                            {
                                if(window.confirm("Are you sure you would like to drop this item?"))
                                {
                                    var that = $(this);
                                    var parent_div = that.closest(".pm_to_do");

                                    parent_div.css("opacity", "0.2");
                                    $.post("/data", {"fn": "drop_to_do", "identifier": parent_div.data("identifier")}).done(function()
                                    {
                                        if($("#to_do_item_" + parent_div.data("identifier")).length === 1)
                                        {
                                            $("#to_do_item_" + parent_div.data("identifier")).remove();
                                            parent_div.remove();
                                        }                                    
                                        
                                    });
                                }
                            });

                            to_do_wrapper.on("click", ".glyphicon-pencil", function()
                            {
                                var that = $(this);
                                var parent_div = that.closest(".pm_to_do");
                                var clones = [];
                                $.each(parent_div.children(), function(i, child)
                                {
                                    clones.push($(child).clone(true, true));
                                    $(child).remove();
                                });
                                parent_div.attr("contenteditable", "true");
                                parent_div.off("blur");
                                parent_div.on("blur", function()
                                {
                                    parent_div.css("opacity", "0.2");
                                    var txt = $.trim($(this).text());
                                    $.post("/data", {"fn": "rename_to_do_item", "identifier": parent_div.data("identifier"), "name": txt}).done(function(rrr)
                                    {
                                        parent_div.removeAttr("contenteditable");
                                        $.each(clones, function(i, child)
                                        {
                                            if(child.is("input"))
                                            {
                                                child.prependTo(parent_div);
                                            }
                                            else
                                            {
                                                child.appendTo(parent_div);
                                            }
                                        });
                                        parent_div.css("opacity", "1.0");
                                        if($("#to_do_item_" + parent_div.data("identifier")).length === 1)
                                        {
                                            $("#to_do_item_" + parent_div.data("identifier"))[0].childNodes[1].nodeValue = txt;
                                        }

                                    });
                                });
                                parent_div[0].focus();
                            });
                            
                            to_do_wrapper.on("click", ".glyphicon-info-sign", function()
                            {
                                var that = $(this);
                                var parent_div = that.closest(".pm_to_do");
                                var notes = parent_div.data("notes");

                                var html = $("<div></div>").text(notes);
                                var old_html = html;
                                var onshown = function(){};
                                var buttons = 
                                [
                                    {
                                        "label": "Done",
                                        "cssClass": "btn-danger",
                                        "action": function(d)
                                        {
                                            d.close();
                                        }
                                    }
                                ]
                                if(window.user_identifier === parent_div.data("owner"))
                                {                                    
                                    if(parent_div.data("collaborative") == "0")
                                    { 
                                        html = $("<div></div>").append($("<textarea></textarea>").addClass("pm_edit_to_do_notes_ta"));
                                        onshown = function()
                                        {
                                            $(".bootstrap-dialog-body").find("textarea").first().val(notes);
                                        };                                   
                                        buttons.push
                                        (
                                            {
                                                "label": "Save",
                                                "cssClass": "btn-primary",
                                                "action": function(d)
                                                {
                                                    $(".bootstrap-dialog-footer").find(".btn-primary").text("Saving...");
                                                    var notes2 = $.trim($(".bootstrap-dialog-body").find("textarea").first().val());
                                                    $.post("/data", {"fn": "set_notes_for_to_do", "identifier": parent_div.data("identifier"), "notes": notes2}).done(function(rrrrrrrr)
                                                    {
                                                        parent_div.attr("data-notes", notes2).data("notes", notes2);
                                                        d.close();
                                                        if($("#to_do_item_" + parent_div.data("identifier")).length === 1)
                                                        {
                                                                $("#to_do_item_" + parent_div.data("identifier")).attr("data-notes", notes2).data("notes", notes2);
                                                        }                                                    
                                                    });
                                                }
                                            }
                                        );
                                    }
                                    else
                                    {
                                        if(parent_div.data("assigner") === window.user_identifier)
                                        {
                                            html = $("<div></div>").append($("<textarea></textarea>").addClass("pm_edit_to_do_notes_ta"));
                                            onshown = function()
                                            {
                                                $(".bootstrap-dialog-body").find("textarea").first().val(notes);
                                            };                                   
                                            buttons.push
                                            (
                                                {
                                                    "label": "Save",
                                                    "cssClass": "btn-primary",
                                                    "action": function(d)
                                                    {
                                                        $(".bootstrap-dialog-footer").find(".btn-primary").text("Saving...");
                                                        var notes2 = $.trim($(".bootstrap-dialog-body").find("textarea").first().val());
                                                        $.post("/data", {"fn": "set_notes_for_to_do", "identifier": parent_div.data("identifier"), "notes": notes2}).done(function(rrrrrrrr)
                                                        {
                                                            parent_div.attr("data-notes", notes2).data("notes", notes2);
                                                            d.close();
                                                            if($("#to_do_item_" + parent_div.data("identifier")).length === 1)
                                                            {
                                                                    $("#to_do_item_" + parent_div.data("identifier")).attr("data-notes", notes2).data("notes", notes2);
                                                            }                                                    
                                                        });
                                                    }
                                                }
                                            );
                                        }
                                    }
                                }
                                BootstrapDialog.show
                                (
                                    {
                                        "title": "Notes",
                                        "message": html,
                                        "buttons": buttons,
                                        "onshown": function(d)
                                        {
                                            onshown();
                                        }
                                    }
                                )
                            });
                            $.each(customer.to_dos, function(i, to_do)
                            {
                                var to_do_div = $("<div></div>").addClass("pm_to_do").text(to_do.name).attr("id", "pm_to_do_" + to_do.identifier).attr("data-identifier", to_do.identifier).attr("data-notes", to_do.notes).data("notes", to_do.notes).attr("data-owner", to_do.owner).attr("data-assigner", to_do.assigner).attr("data-collaborative", to_do.collaborative);
                                var cb = $("<input />").attr("type", "checkbox");
                                if(to_do.owner !== window.user_identifier)
                                {
                                    cb.attr("disabled", "disabled");
                                }
                                cb.prependTo(to_do_div);
                                if(to_do.owner === window.user_identifier)
                                {
                                    if(to_do.collaborative == "0" || (to_do.collaborative == "1" && to_do.assigner === window.user_identifier))
                                    {
                                        $("<span></span>").addClass("glyphicon").addClass("glyphicon-pencil").addClass("to_do_pm_edit").appendTo(to_do_div);
                                        $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove").addClass("to_do_pm_drop").appendTo(to_do_div);
                                    }                                    
                                    if(to_do.due_dt.indexOf(".") > -1)
                                    {
                                        to_do.due_dt = to_do.due_dt.substring(0, to_do.due_dt.indexOf("."));
                                    }                                    
                                }
                                $("<span></span>").addClass("label").addClass("label-primary").text(moment(to_do.due_dt).format("YYYY-MM-DD hh:mm:ss a")).appendTo(to_do_div);                                
                                $("<span></span>").addClass("glyphicon").addClass("glyphicon-info-sign").appendTo(to_do_div);
                                to_do_div.appendTo(to_do_wrapper);
                            });
                            to_do_wrapper.appendTo(project_details_div);
                        });
                    }
                    project_details_div.find(".label-mod-closer").click(function()
                    {
                        modifyCloserInformation(customer.identifier, customer.customer_first_name + " " + customer.customer_last_name);
                    });
                    project_details_div.insertAfter(div);
                    div.text(customer.customer_first_name + " " + customer.customer_last_name);
                    div.removeAttr("style");
                    var found_pm_num = false;
					project_details_div.find("div").each(function(iiiii, eeeee)
					{
						if($(eeeee).attr("id") === "show_permit_status_pm")
						{
							if(!found_pm_num)
							{
								found_pm_num = true;
							}
							else
							{
								$(eeeee).remove();
							}
						}
					});                  
					if(typeof(selector) + '' !== "undefined")
					{
						project_details_div.find(selector).first()[0].scrollIntoView();
					}
                });
            }
            function editCustomerCommunicationDate(jqLi, identifier)
            {
                var html = $("<div></div>");
                $("<div></div>").attr("id", "pm_communication_sel_date").addClass("input-append").addClass("date").attr("data-date", moment().format("MM/DD/YYYY")).attr("data-date-format", "mm/dd/yyyy")
                .append
                (
                    $("<input />").addClass("span2").attr("size", "16").attr("type", "text").attr("value", moment().format("MM/DD/YYYY"))
                    
                )
                .append
                (
                    $("<span></span>").addClass("add-on")
                    .append
                    (
                        $("<i></i>").addClass("icon-th")
                    )
                ).appendTo(html);

                BootstrapDialog.show
                (
                    {
                        "title": "Update the Date (" + jqLi.find("button").first().text() + ")",
                        "message": html.html(),
                        "buttons":
                        [
                            {
                                "label": "Cancel",
                                "cssClass": "btn-danger",
                                "action": function(d)
                                {
                                    d.close();
                                }
                            },
                            {
                                "label": "Update it!",
                                "cssClass": "btn-primary",
                                "action": function(d)
                                {
                                    var inp_box = $(".bootstrap-dialog-body").find("input").first();
                                    var split_valz = inp_box.val().split("/");
                                    var dt = split_valz[2] + "-" + split_valz[0] + "-" + split_valz[1];
                                    $(".bootstrap-dialog-footer").find(".btn-primary").text("Updating...");
                                    $.post("/kv/" + encodeURIComponent(jqLi.data("key") + "_" + identifier), {"value": dt}).done(function(r)
                                    {
                                        jqLi.find("span").text(inp_box.val());
                                        d.close();
                                    });
                                }
                            }
                        ],
                        "onshown": function(d)
                        {
                            $(".bootstrap-dialog-body").find(".date").first().datepicker
                            (
                                {
                                    "format": "mm/dd/yyyy",
                                    "autoClose": true,
                                }
                            );
                            var inp_box = $(".bootstrap-dialog-body").find("input").first();
                            $.each(["keyup", "keydown", "keypress"], function(ii, ev)
                            {
                                inp_box.on(ev, function(ev2)
                                {
                                    ev2.preventDefault();
                                });
                            });
                        }
                    }
                );
            }
            function editCustomerDetailsPMTab(customer, div)
            {
                var html = $("<div></div>");
                $("<p></p>").text("Customer First Name:").appendTo(html);
                $("<input />").attr("type", "text").attr("value", customer.customer_first_name).appendTo(html);
                $("<p></p>").text("Customer Last Name:").appendTo(html);
                $("<input />").attr("type", "text").attr("value", customer.customer_last_name).appendTo(html);
                $("<p></p>").text("Customer Email:").appendTo(html);
                $("<input />").attr("type", "text").attr("value", customer.customer_email).appendTo(html);
                $("<p></p>").text("Customer Phone:").appendTo(html);
                $("<input />").attr("type", "text").attr("value", customer.customer_phone).appendTo(html);

                BootstrapDialog.show
                (
                    {
                        "title": "Editing Details for " + customer.customer_first_name + " " + customer.customer_last_name,
                        "message": html.html(),
                        "buttons":
                        [
                            {
                                "label": "Cancel",
                                "cssClass": "btn-danger",
                                "action": function(d)
                                {
                                    d.close();
                                }
                            },
                            {
                                "label": "Update",
                                "cssClass": "btn-primary",
                                "action": function(d)
                                {
                                    var f = $.trim($(".bootstrap-dialog-body").find("input").first().val());
                                    var l = $.trim($(".bootstrap-dialog-body").find("input").eq(1).val());
                                    var e = $.trim($(".bootstrap-dialog-body").find("input").eq(2).val());
                                    var p = $.trim($(".bootstrap-dialog-body").find("input").eq(3).val());

                                    if(f.length === 0)
                                    {
                                        window.alert("The first name is required.");
                                        return;
                                    }
                                    if(l.length === 0)
                                    {
                                        window.alert("The last name is required.");
                                        return;
                                    }
                                    if(e.length === 0)
                                    {
                                        window.alert("The email address is required.");
                                        return;
                                    }
                                    if(p.length === 0)
                                    {
                                        window.alert("The phone number is required.");
                                        return;
                                    }
                                    var digits = p.digits();
                                    if(digits === null || digits.length !== 10)
                                    {
                                        window.alert("The phone number must be 10 digits.");
                                        return;
                                    }
                                    else
                                    {
                                        p = digits;
                                    }

                                    var a = customer.customer_address;

                                    var payload = {"fn": "update_customer_details", "a": a, "f": f, "l": l, "e": e, "p": p, "identifier": customer.identifier};
                                    $.post("/data", payload).done(function(r)
                                    {
                                        customer.customer_first_name = f;
                                        customer.customer_last_name = l;
                                        customer.customer_email = e;
                                        customer.customer_phone = "(" + p[0] + p[1] + p[2] + ") " + p[3] + p[4] + p[5] + " - " + p[6] + p[7] + p[8] + p[9];

                                        if(typeof(div) + '' !== "undefined")
                                        {
                                            if(div.closest(".pm_sub_group").size() === 1)
                                            {
                                                var json = $.parseJSON(div.closest(".pm_sub_group").find("> .json").first().val());
                                                $.each(json, function(iiiiiiiiii, eeeeeeeeee)
                                                {
                                                    if(eeeeeeeeee.identifier === customer.identifier)
                                                    {
                                                        eeeeeeeeee.name = f + " " + l;
                                                    }
                                                });
                                                div.closest(".pm_sub_group").find("> .json").first().attr("value", JSON.stringify(json)).val(JSON.stringify(json));
                                            }

                                            var json = $.parseJSON(div.closest(".pm_group_v2").find("> .json").first().val());
                                            if(typeof(json["length"]) + '' === "number")
                                            {
                                                $.each(json, function(iiiiiiiiii, eeeeeeeeee)
                                                {
                                                    if(eeeeeeeeee.identifier === customer.identifier)
                                                    {
                                                        eeeeeeeeee.name = f + " " + l;
                                                    }
                                                });
                                            }
                                            else
                                            {
                                                $.each(Object.keys(json), function(iiiiiiiiii, keyyyyy)
                                                {
                                                    $.each(json[keyyyyy], function(iiiiiiiiiii, eeeeeeeeeee)
                                                    {
                                                        if(eeeeeeeeeee.identifier === customer.identifier)
                                                        {
                                                            eeeeeeeeeee.name = f + " " + l;
                                                        }
                                                    });
                                                });
                                            }
                                            div.closest(".pm_group_v2").find("> .json").first().attr("value", JSON.stringify(json)).val(JSON.stringify(json));
                                        }

                                        $(".pm_v2_customer").each(function(i, e)
                                        {
                                            if($(e).data("identifier") === customer.identifier)
                                            {
                                                var days_ago_span = $(e).find("> .signed_days_ago_pm_tab").first().clone();
                                                $(e).text(f + " " + l);
                                                days_ago_span.appendTo($(e));
                                                $(e).trigger("click");
                                            }
                                        });
                                        d.close();
                                    });
                                }
                            }
                        ]
                    }
                );
            }
            function modifyAdditionalServices2(identifier, update_fn)
            {
                $.post("/data", {"fn": "proposal_details_for_customer", "identifier": identifier}).done(function(resp)
                {
                    $.post("./data", {"fn": "read_setting", "value": "services_schedule"}).done(function(r)
                    {                        
                        var services = r.data;
                        var services_price_map = {};
                        var services_name_map = {};
                        $.each(services, function(iii, eee)
                        {
                            services_price_map[eee.value] = eee.price;
                            services_name_map[eee.value] = eee.value_friendly;
                        });
                        var inpho3 = resp.proposal;
                        var html = $("<div></div>");
                        var table = $("<table></table>").addClass("rep_fee_schedule");
                        var tbody = $("<tbody></tbody>");
                        $("<tr></tr>")
                        .append
                        (
                            $("<td></td>")
                            .append
                            (
                                $("<b></b>").text("Item")
                            )
                        )
                        .append
                        (
                            $("<td></td>")
                            .append
                            (
                                $("<b></b>").text("Enabled")
                            )
                        )
                        .append
                        (
                            $("<td></td>")
                            .append
                            (
                                $("<b></b>").text("Price")
                            )
                        )
                        .appendTo(tbody);

                        $.each(services, function(iii, eee)
                        {
                            if(!eee.active)
                            {
                                return;
                            }
                            var pryce = parseFloat(eee.price);
                            var qty = 0;
                            var value = eee.value;
                            var value_friendly = eee.value_friendly;

                            if(typeof(inpho3["additional_svcs"]) + '' !== "undefined")
                            {
                                $.each(inpho3["additional_svcs"], function(iiii, eeee)
                                {
                                    if(eeee.value === eee.value)
                                    {
                                        qty = 1
                                    }
                                });
                            }

                            var cb = $("<input />").attr("type", "checkbox");
                            if(qty > 0)
                            {
                                cb.attr("checked", "checked");
                            }
                            $("<tr></tr>")
                            .append
                            (
                                $("<td></td>").addClass("fee_item").attr("data-name", eee.value).attr("data-price", services_price_map[eee.value]).text(services_name_map[eee.value])
                            )
                            .append
                            (
                                $("<td></td>").addClass("item_enabled").append(cb)
                            )
                            .append
                            (
                                $("<td></td>").addClass("pryce").text(parseFloat(pryce).toFixed(2))
                            )
                            .appendTo(tbody);
                        });
                        $("<tr></tr>")
                        .append
                        (
                            $("<td></td>").html("&nbsp;")
                        )
                        .append
                        (
                            $("<td></td>").html("&nbsp;")
                        )
                        .append
                        (
                            $("<td></td>").addClass("subtotal").text("$")
                        ).appendTo(tbody);

                        tbody.appendTo(table);
                        table.appendTo(html);

                        table.appendTo(html);
                        $("<br />").appendTo(html);
                        $("<center></center>")
                        .append
                        (
                            $("<button></button>").addClass("btn").addClass("btn-primary").text("Custom Options").addClass("custom_opts_btn")
                        )
                        .appendTo(html);

                        BootstrapDialog.show
                        (
                            {
                                "title": resp.name + "'s system options",
                                "message": html.html(),
                                "buttons":
                                [
                                    {
                                        "label": "Done",
                                        "cssClass": "btn-primary",
                                        "action": function(d)
                                        {
                                            d.close();
                                        }
                                    }
                                ],
                                "onshown": function(d)
                                {
                                    $(".bootstrap-dialog-body").find(".custom_opts_btn").click(function(ev3)
                                    {
                                        d.close();
                                        ev3.stopPropagation();

                                        var html2 = $("<div></div>");
                                        var items_div = $("<div></div>").addClass("proposal_custom_options");
                                        var new_item_tbl = $("<table></table>").addClass("custom_options_tbl").append($("<tbody></tbody>"));
                                        $("<tr></tr>")
                                        .append
                                        (
                                            $("<th></th>").text("Name")
                                        )
                                        .append
                                        (
                                            $("<th></th>").text("Cost")
                                        )
                                        .append
                                        (
                                            $("<th></th>").text("")
                                        )
                                        .appendTo(new_item_tbl.find("tbody").first());

                                        $("<tr></tr>")
                                        .append
                                        (
                                            $("<td></td>")
                                            .append
                                            (
                                                $("<input />").attr("type", "text")
                                            )                                                        
                                        )
                                        .append
                                        (
                                            $("<td></td>")
                                            .append
                                            (
                                                $("<span></span>").addClass("custom_option_dollar").text("$")
                                            )
                                            .append
                                            (
                                                $("<input />").attr("type", "text")
                                            )                                                        
                                        )
                                        .append
                                        (
                                            $("<td></td>")
                                            .append
                                            (
                                                $("<button></button>").addClass("btn").addClass("btn-primary").text("Add it!")
                                            )
                                        )
                                        .appendTo(new_item_tbl.find("tbody").first());
                                        
                                        var pinfo = $.parseJSON(JSON.stringify(resp.proposal));
                                        
                                        custom_services = []
                                        if(Object.keys(pinfo).indexOf("custom_svcs") > -1)
                                        {
                                            custom_services = pinfo["custom_svcs"];
                                        }

                                        $.each(custom_services, function(iiiiii, custom_svc)
                                        {
                                            $("<tr></tr>")
                                            .append
                                            (
                                                $("<td></td>")
                                                .text(custom_svc.name)
                                            )
                                            .append
                                            (
                                                $("<td></td>")
                                                .text(custom_svc.price)
                                            )
                                            .append
                                            (
                                                $("<td></td>")
                                                .append
                                                (
                                                    $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove")
                                                )
                                            )
                                            .appendTo(new_item_tbl.find("tbody").first());
                                        });

                                        new_item_tbl.appendTo(html2);

                                        BootstrapDialog.show
                                        (
                                            {
                                                "title": "Custom Options",
                                                "message": html2.html(),
                                                "buttons":
                                                [
                                                    {
                                                        "label": "Cancel",
                                                        "cssClass": "btn-danger",
                                                        "action": function(dddd)
                                                        {
                                                            dddd.close();
                                                            modifyAdditionalServices2(identifier, function(){});
                                                        }
                                                    },
                                                    {
                                                        "label": "Save",
                                                        "cssClass": "btn-primary",
                                                        "action": function(dddd)
                                                        {
                                                            $(".bootstrap-dialog-footer").find(".btn-primary").text("Saving...").css("opacity", "0.5");
                                                            var opts = [];
                                                            $(".custom_options_tbl").find("tr").each(function(index, element)
                                                            {
                                                                var el = $(element);
                                                                if(index > 1)
                                                                {
                                                                    opts.push({"price": el.find("td").eq(1).text(), "name": el.find("td").first().text()});
                                                                }
                                                            });
                                                            $.post("/data", {"fn": "save_custom_options", "identifier": identifier, "options": JSON.stringify(opts)}).done(function(responssss)
                                                            {
                                                                pinfo["custom_svcs"] = opts
                                                                resp.proposal = pinfo;
                                                                dddd.close();
                                                                update_fn(identifier);
                                                                modifyAdditionalServices2(identifier, function(){});
                                                            });                                                                        
                                                        }
                                                    }
                                                ],
                                                "onshown": function(dddd)
                                                {
                                                    
                                                    var add_btn = $(".bootstrap-dialog-body").find("td > .btn-primary").first();
                                                    add_btn.click(function()
                                                    {
                                                        var that = $(this);
                                                        var name = $.trim(that.closest("tr").find("input").first().val());
                                                        var amt = parseFloat("0");
                                                        var amt_txt = $.trim(that.closest("tr").find("input").eq(1).val());
                                                        var allowed_chars2 = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", ".", "-"];
                                                        var amt_txt2 = "";
                                                        $.each(amt_txt.split(""), function(iiiiiiiiiii, dig)
                                                        {
                                                            if(allowed_chars2.indexOf(dig) > -1)
                                                            {
                                                                amt_txt2 += dig;
                                                            }
                                                        });
                                                        var amt_parsed = parseFloat(amt_txt2);
                                                        if(!Number.isNaN(amt_parsed))
                                                        {
                                                            amt = amt_parsed;
                                                        }

                                                        var cb = function()
                                                        {
                                                            var new_tr = $("<tr></tr>");
                                                            new_tr.append
                                                            (
                                                                $("<td></td>")
                                                                .text(name)
                                                            );
                                                            new_tr.append
                                                            (
                                                                $("<td></td>")
                                                                .text(amt.toFixed(2))
                                                            );
                                                            new_tr.append
                                                            (
                                                                $("<td></td>")
                                                                .append
                                                                (
                                                                    $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove")
                                                                )
                                                            )
                                                            new_tr.appendTo(that.closest("tbody"));

                                                            that.closest("tr").find("input").first().val("");
                                                            that.closest("tr").find("input").eq(1).val("");
                                                        };

                                                        if(amt < parseFloat(0))
                                                        {
                                                            var passcode = window.prompt("Please enter the passcode:");
                                                            $.post("/data", {"fn": "password_check", "name": "Negative Custom Option", "password": passcode + ''}).done(function(rrrrrrrr)
                                                            {
                                                                if(rrrrrrrr.success)
                                                                {
                                                                    cb();
                                                                }
                                                            });
                                                        }
                                                        else
                                                        {
                                                            cb();
                                                        }

                                                    });

                                                    $(".custom_options_tbl").on("click", ".glyphicon-remove", function()
                                                    {
                                                        var that = $(this);
                                                        that.closest("tr").remove();
                                                    });
                                                }
                                            }
                                        );                                                                   

                                        var html2 = $("<div></div>");
                                        var items_div = $("<div></div>").addClass("proposal_custom_options");
                                        var new_item_tbl = $("<table></table>").addClass("custom_options_tbl").append($("<tbody></tbody>"));
                                        $("<tr></tr>")
                                        .append
                                        (
                                            $("<th></th>").text("Name")
                                        )
                                        .append
                                        (
                                            $("<th></th>").text("Cost")
                                        )
                                        .append
                                        (
                                            $("<th></th>").text("")
                                        )
                                        .appendTo(new_item_tbl.find("tbody").first());

                                        $("<tr></tr>")
                                        .append
                                        (
                                            $("<td></td>")
                                            .append
                                            (
                                                $("<input />").attr("type", "text")
                                            )                                                        
                                        )
                                        .append
                                        (
                                            $("<td></td>")
                                            .append
                                            (
                                                $("<span></span>").addClass("custom_option_dollar").text("$")
                                            )
                                            .append
                                            (
                                                $("<input />").attr("type", "text")
                                            )                                                        
                                        )
                                        .append
                                        (
                                            $("<td></td>")
                                            .append
                                            (
                                                $("<button></button>").addClass("btn").addClass("btn-primary").text("Add it!")
                                            )
                                        )
                                        .appendTo(new_item_tbl.find("tbody").first());
                                        
                                        var pinfo = $.parseJSON(JSON.stringify(resp.proposal));
                                        
                                        custom_services = []
                                        if(Object.keys(pinfo).indexOf("custom_svcs") > -1)
                                        {
                                            custom_services = pinfo["custom_svcs"];
                                        }

                                        $.each(custom_services, function(iiiiii, custom_svc)
                                        {
                                            $("<tr></tr>")
                                            .append
                                            (
                                                $("<td></td>")
                                                .text(custom_svc.name)
                                            )
                                            .append
                                            (
                                                $("<td></td>")
                                                .text(custom_svc.price)
                                            )
                                            .append
                                            (
                                                $("<td></td>")
                                                .append
                                                (
                                                    $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove")
                                                )
                                            )
                                            .appendTo(new_item_tbl.find("tbody").first());
                                        });

                                        new_item_tbl.appendTo(html2);

                                        /*BootstrapDialog.show
                                        (
                                            {
                                                "title": "Custom Options",
                                                "message": html2.html(),
                                                "buttons":
                                                [
                                                    {
                                                        "label": "Cancel",
                                                        "cssClass": "btn-danger",
                                                        "action": function(dddd)
                                                        {
                                                            dddd.close();
                                                        }
                                                    },
                                                    {
                                                        "label": "Save",
                                                        "cssClass": "btn-primary",
                                                        "action": function(dddd)
                                                        {
                                                            $(".bootstrap-dialog-footer").find(".btn-primary").text("Saving...").css("opacity", "0.5");
                                                            var opts = [];
                                                            $(".custom_options_tbl").find("tr").each(function(index, element)
                                                            {
                                                                var el = $(element);
                                                                if(index > 1)
                                                                {
                                                                    opts.push({"price": el.find("td").eq(1).text(), "name": el.find("td").first().text()});
                                                                }
                                                            });
                                                            $.post("/data", {"fn": "save_custom_options", "identifier": identifier, "options": JSON.stringify(opts)}).done(function(responssss)
                                                            {
                                                                pinfo["custom_svcs"] = opts
                                                                resp.proposal = pinfo;
                                                                dddd.close();
                                                                update_fn(identifier);
                                                            });                                                                        
                                                        }
                                                    }
                                                ],
                                                "onshown": function(dddd)
                                                {
                                                    
                                                    var add_btn = $(".bootstrap-dialog-body").find("td > .btn-primary").first();
                                                    add_btn.click(function()
                                                    {
                                                        var that = $(this);
                                                        var name = $.trim(that.closest("tr").find("input").first().val());
                                                        var amt = parseFloat("0");
                                                        var amt_txt = $.trim(that.closest("tr").find("input").eq(1).val());
                                                        var allowed_chars2 = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "."];
                                                        var amt_txt2 = "";
                                                        $.each(amt_txt.split(""), function(iiiiiiiiiii, dig)
                                                        {
                                                            if(allowed_chars2.indexOf(dig) > -1)
                                                            {
                                                                amt_txt2 += dig;
                                                            }
                                                        });
                                                        var amt_parsed = parseFloat(amt_txt2);
                                                        if(!Number.isNaN(amt_parsed))
                                                        {
                                                            amt = amt_parsed;
                                                        }

                                                        var new_tr = $("<tr></tr>");
                                                        new_tr.append
                                                        (
                                                            $("<td></td>")
                                                            .text(name)
                                                        );
                                                        new_tr.append
                                                        (
                                                            $("<td></td>")
                                                            .text(amt.toFixed(2))
                                                        );
                                                        new_tr.append
                                                        (
                                                            $("<td></td>")
                                                            .append
                                                            (
                                                                $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove")
                                                            )
                                                        )
                                                        new_tr.appendTo(that.closest("tbody"));

                                                        that.closest("tr").find("input").first().val("");
                                                        that.closest("tr").find("input").eq(1).val("");
                                                    });

                                                    $(".custom_options_tbl").on("click", ".glyphicon-remove", function()
                                                    {
                                                        var that = $(this);
                                                        that.closest("tr").remove();
                                                    });                                                                
                                                }
                                            }
                                        );*/
                                    });

                                    var tbl = $(".bootstrap-dialog-body").find("table").first();
                                    tbl.delegate("input", "change", function()
                                    {
                                        $(".rep_fee_schedule").trigger("subtotalupdate");
                                    });

                                    tbl.on("subtotalupdate", function()
                                    {
                                        var st = 0;
                                        $(this).find(".item_enabled").each(function(i, e)
                                        {
                                            st += $(e).find("input")[0].checked * parseFloat($(e).prev().data("price"));
                                        });
                                        $(".subtotal").text("$" + parseFloat(st).toFixed(2));

                                        svc_data = [];
                                        $(".fee_item").each(function(iiiii, eeeee)
                                        {
                                            svc_data.push({"value": $(eeeee).data("name"), "qty": $(eeeee).next().find("input")[0].checked * 1});
                                        });
                                        svc_data_cpy = [];
                                        $.each(svc_data, function(iiiii, eeeee)
                                        {
                                            if(parseFloat(eeeee.qty) >= 1.0)
                                            {
                                                svc_data_cpy.push(eeeee);
                                            }
                                        });
                                        svc_data = svc_data_cpy;
                                        var new_info = $.parseJSON(JSON.stringify(resp.proposal));
                                        new_info["additional_svcs"] = svc_data;
                                        resp.proposal = $.parseJSON(JSON.stringify(new_info));

                                        $.post("./data", {"fn": "update_additional_services", "identifier": identifier, "services": JSON.stringify(svc_data)}).done(function(resp3)
                                        {
                                            setTimeout(function()
                                            {
                                                update_fn(identifier);
                                            }, 1500);
                                        });
                                    });
                                    tbl.trigger("subtotalupdate");
                                }
                            }
                        );                        
                    });
                });
                
            }
            function modifyAdditionalServices(customer, update_fn)
            {
                $("#pm_customer_details_info_" + customer.identifier).css("opacity", "0.1");
                $.post("./data", {"fn": "read_setting", "value": "services_schedule"}).done(function(r)
                {
                    $("#pm_customer_details_info_" + customer.identifier).css("opacity", "1.0");
                    var services = r.data;
                    var services_price_map = {};
                    var services_name_map = {};
                    $.each(services, function(iii, eee)
                    {
                        services_price_map[eee.value] = eee.price;
                        services_name_map[eee.value] = eee.value_friendly;
                    });
                    var inpho3 = customer.proposal;
                    var html = $("<div></div>");
                    var table = $("<table></table>").addClass("rep_fee_schedule");
                    var tbody = $("<tbody></tbody>");
                    $("<tr></tr>")
                    .append
                    (
                        $("<td></td>")
                        .append
                        (
                            $("<b></b>").text("Item")
                        )
                    )
                    .append
                    (
                        $("<td></td>")
                        .append
                        (
                            $("<b></b>").text("Enabled")
                        )
                    )
                    .append
                    (
                        $("<td></td>")
                        .append
                        (
                            $("<b></b>").text("Price")
                        )
                    )
                    .appendTo(tbody);

                    $.each(services, function(iii, eee)
                    {
                        if(!eee.active)
                        {
                            return;
                        }
                        var pryce = parseFloat(eee.price);
                        var qty = 0;
                        var value = eee.value;
                        var value_friendly = eee.value_friendly;

                        if(typeof(inpho3["additional_svcs"]) + '' !== "undefined")
                        {
                            $.each(inpho3["additional_svcs"], function(iiii, eeee)
                            {
                                if(eeee.value === eee.value)
                                {
                                    qty = 1
                                }
                            });
                        }

                        var cb = $("<input />").attr("type", "checkbox");
                        if(qty > 0)
                        {
                            cb.attr("checked", "checked");
                        }
                        $("<tr></tr>")
                        .append
                        (
                            $("<td></td>").addClass("fee_item").attr("data-name", eee.value).attr("data-price", services_price_map[eee.value]).text(services_name_map[eee.value])
                        )
                        .append
                        (
                            $("<td></td>").addClass("item_enabled").append(cb)
                        )
                        .append
                        (
                            $("<td></td>").addClass("pryce").text(parseFloat(pryce).toFixed(2))
                        )
                        .appendTo(tbody);
                    });
                    $("<tr></tr>")
                    .append
                    (
                        $("<td></td>").html("&nbsp;")
                    )
                    .append
                    (
                        $("<td></td>").html("&nbsp;")
                    )
                    .append
                    (
                        $("<td></td>").addClass("subtotal").text("$")
                    ).appendTo(tbody);

                    tbody.appendTo(table);
                    table.appendTo(html);

                    table.delegate("input", "change", function()
                    {
                        $(".rep_fee_schedule").trigger("subtotalupdate");
                    });

                    table.on("subtotalupdate", function()
                    {
                        var st = 0;
                        $(this).find(".item_enabled").each(function(i, e)
                        {
                            st += $(e).find("input")[0].checked * parseFloat($(e).prev().data("price"));
                        });
                        $(".subtotal").text("$" + parseFloat(st).toFixed(2));

                        svc_data = [];
                        $(".fee_item").each(function(iiiii, eeeee)
                        {
                            svc_data.push({"value": $(eeeee).data("name"), "qty": $(eeeee).next().find("input")[0].checked * 1});
                        });
                        svc_data_cpy = [];
                        $.each(svc_data, function(iiiii, eeeee)
                        {
                            if(parseFloat(eeeee.qty) >= 1.0)
                            {
                                svc_data_cpy.push(eeeee);
                            }
                        });
                        svc_data = svc_data_cpy;
                        var new_info = $.parseJSON(JSON.stringify(customer.proposal));
                        new_info["additional_svcs"] = svc_data;
                        customer.proposal = $.parseJSON(JSON.stringify(new_info));

                        $.post("./data", {"fn": "update_additional_services", "identifier": customer.identifier, "services": JSON.stringify(svc_data)}).done(function(resp3)
                        {
                            setTimeout(function()
                            {
                                update_fn(customer.identifier);
                            }, 1500);
                        });
                    });

                    table.appendTo(html);
                    $("<br />").appendTo(html);
                    $("<center></center>")
                    .append
                    (
                        $("<button></button>").addClass("btn").addClass("btn-primary").text("Custom Options")
                        .click(function(ev3)
                        {
                            ev3.stopPropagation();

                            var html2 = $("<div></div>");
                            var items_div = $("<div></div>").addClass("proposal_custom_options");
                            var new_item_tbl = $("<table></table>").addClass("custom_options_tbl").append($("<tbody></tbody>"));
                            $("<tr></tr>")
                            .append
                            (
                                $("<th></th>").text("Name")
                            )
                            .append
                            (
                                $("<th></th>").text("Cost")
                            )
                            .append
                            (
                                $("<th></th>").text("")
                            )
                            .appendTo(new_item_tbl.find("tbody").first());

                            $("<tr></tr>")
                            .append
                            (
                                $("<td></td>")
                                .append
                                (
                                    $("<input />").attr("type", "text")
                                )                                                        
                            )
                            .append
                            (
                                $("<td></td>")
                                .append
                                (
                                    $("<span></span>").addClass("custom_option_dollar").text("$")
                                )
                                .append
                                (
                                    $("<input />").attr("type", "text")
                                )                                                        
                            )
                            .append
                            (
                                $("<td></td>")
                                .append
                                (
                                    $("<button></button>").addClass("btn").addClass("btn-primary").text("Add it!")
                                )
                            )
                            .appendTo(new_item_tbl.find("tbody").first());
                            
                            var pinfo = $.parseJSON(JSON.stringify(customer.proposal));
                            
                            custom_services = []
                            if(Object.keys(pinfo).indexOf("custom_svcs") > -1)
                            {
                                custom_services = pinfo["custom_svcs"];
                            }

                            $.each(custom_services, function(iiiiii, custom_svc)
                            {
                                $("<tr></tr>")
                                .append
                                (
                                    $("<td></td>")
                                    .text(custom_svc.name)
                                )
                                .append
                                (
                                    $("<td></td>")
                                    .text(custom_svc.price)
                                )
                                .append
                                (
                                    $("<td></td>")
                                    .append
                                    (
                                        $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove")
                                    )
                                )
                                .appendTo(new_item_tbl.find("tbody").first());
                            });

                            new_item_tbl.appendTo(html2);

                            BootstrapDialog.show
                            (
                                {
                                    "title": "Custom Options",
                                    "message": html2.html(),
                                    "buttons":
                                    [
                                        {
                                            "label": "Cancel",
                                            "cssClass": "btn-danger",
                                            "action": function(dddd)
                                            {
                                                dddd.close();
                                            }
                                        },
                                        {
                                            "label": "Save",
                                            "cssClass": "btn-primary",
                                            "action": function(dddd)
                                            {
                                                $(".bootstrap-dialog-footer").find(".btn-primary").text("Saving...").css("opacity", "0.5");
                                                var opts = [];
                                                $(".custom_options_tbl").find("tr").each(function(index, element)
                                                {
                                                    var el = $(element);
                                                    if(index > 1)
                                                    {
                                                        opts.push({"price": el.find("td").eq(1).text(), "name": el.find("td").first().text()});
                                                    }
                                                });
                                                $.post("/data", {"fn": "save_custom_options", "identifier": customer.identifier, "options": JSON.stringify(opts)}).done(function(responssss)
                                                {
                                                    pinfo["custom_svcs"] = opts
                                                    customer.proposal = pinfo;
                                                    dddd.close();
                                                    update_fn(customer.identifier);
                                                });                                                                        
                                            }
                                        }
                                    ],
                                    "onshown": function(dddd)
                                    {
                                        
                                        var add_btn = $(".bootstrap-dialog-body").find("td > .btn-primary").first();
                                        add_btn.click(function()
                                        {
                                            var that = $(this);
                                            var name = $.trim(that.closest("tr").find("input").first().val());
                                            var amt = parseFloat("0");
                                            var amt_txt = $.trim(that.closest("tr").find("input").eq(1).val());
                                            var allowed_chars2 = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", ".", "-"];
                                            var amt_txt2 = "";
                                            $.each(amt_txt.split(""), function(iiiiiiiiiii, dig)
                                            {
                                                if(allowed_chars2.indexOf(dig) > -1)
                                                {
                                                    amt_txt2 += dig;
                                                }
                                            });
                                            var amt_parsed = parseFloat(amt_txt2);
                                            if(!Number.isNaN(amt_parsed))
                                            {
                                                amt = amt_parsed;
                                            }

                                            var cb = function()
                                            {
                                                var new_tr = $("<tr></tr>");
                                                new_tr.append
                                                (
                                                    $("<td></td>")
                                                    .text(name)
                                                );
                                                new_tr.append
                                                (
                                                    $("<td></td>")
                                                    .text(amt.toFixed(2))
                                                );
                                                new_tr.append
                                                (
                                                    $("<td></td>")
                                                    .append
                                                    (
                                                        $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove")
                                                    )
                                                )
                                                new_tr.appendTo(that.closest("tbody"));

                                                that.closest("tr").find("input").first().val("");
                                                that.closest("tr").find("input").eq(1).val("");
                                            };

                                            if(amt < parseFloat(0))
                                            {
                                                var passcode = window.prompt("Please enter the passcode:");
                                                $.post("/data", {"fn": "password_check", "name": "Negative Custom Option", "password": passcode + ''}).done(function(rrrrrrrr)
                                                {
                                                    if(rrrrrrrr.success)
                                                    {
                                                        cb();
                                                    }
                                                });
                                            }
                                            else
                                            {
                                                cb();
                                            }
                                        });

                                        $(".custom_options_tbl").on("click", ".glyphicon-remove", function()
                                        {
                                            var that = $(this);
                                            that.closest("tr").remove();
                                        });                                                                
                                    }
                                }
                            );
                        })
                    )
                    .appendTo(html);

                    html.insertAfter($("#pm_customer_details_info_" + customer.identifier).find(".pm_checkoff_ul").last());
                    table.trigger("subtotalupdate");
                    $("#pm_customer_details_info_" + customer.identifier).find(".rep_fee_schedule")[0].scrollIntoView();
                });                
            }
            function updatePanelAssessmentPM(customer)
            {
            	if(typeof(cb) + '' === "undefined")
                {
                    cb = function(){};
                }
            	var panel_html = $("<div></div>");
                $("<p></p>").text("Panel Assessment").appendTo(panel_html);
                $("<hr />").appendTo(panel_html);                
				$("<p></p>").text("Is panel work required?").appendTo(panel_html);
				$("<select></select>").attr("id", "pm_panel_work_reqd")
				.append
				(
					$("<option value='n/a'>Choose One</option>")
				)
				.append
				(
					$("<option value='1'>Yes</option>")
				)
				.append
				(
					$("<option value='0'>No</option>")
				)
				.appendTo(panel_html);

                if(customer.electrical !== null && customer.electrical.panel_work_required)
				{
					panel_html.find("#pm_panel_work_reqd").find("option").eq(1).attr("selected", "selected");
				}
				else if(customer.electrical !== null && !customer.electrical_panel_work_required)
				{
					panel_html.find("#pm_panel_work_reqd").find("option").last().attr("selected", "selected");
				}

                $("<br />").appendTo(panel_html);
                $("<select></select>").attr("id", "pm_panel_work_reqd_extra").css("display", "none")
                .append
                (
                    $("<option></option>").attr("value", "n/a").text("Choose One")
                )
                .append
                (
                    $("<option></option>").attr("value", "MPU").text("MPU")
                )
                .append
                (
                    $("<option></option>").attr("value", "RMA/GMA").text("RMA/GMA")
                )
                .append
                (
                    $("<option></option>").attr("value", "Derate").text("Derate")
                )
                .append
                (
                    $("<option></option>").attr("value", "Bus Certification").text("Bus Certification")
                )
                .append
                (
                    $("<option></option>").attr("value", "Other").text("Other")
                )
                .appendTo(panel_html);

                if(customer.electrical !== null && customer.electrical.panel_work_required)
                {
                    panel_html.find("#pm_panel_work_reqd_extra").css("display", "inline-block");
                    if(customer.electrical.pm_panel_work_reqd_extra)
                    {
                        panel_html.find("#pm_panel_work_reqd_extra").find("option").each(function(i, e)
                        {
                            if($(e).attr("value") === customer.electrical.pm_panel_work_reqd_extra)
                            {
                                $(e).attr("selected", "selected");
                            }
                        });
                    }
                }

				$("<p></p>").text("Choose an electrician").appendTo(panel_html);

				var electrician_sel = $("<select></select>").attr("id", "pm_assign_electrician");
				electrician_sel.append
				(
					$("<option value='n/a'>Nobody (Only choose if no panel work req'd)</option>")
				);
				electrician_sel.appendTo(panel_html);

				$("<br />").appendTo(panel_html);

				$.each(customer.electricians, function(iiiii, eeeee)
				{
					$("<option></option>").text(eeeee.name).attr("value", eeeee.name).appendTo(electrician_sel);
				});

                if(customer.electrical !== null)
                {
                    var elec = customer.electrical.electrician;
                    if((typeof(elec) + '').toLowerCase() === "object")
                    {
                        elec = customer.electrical.electrician.name;
                    }
                    panel_html.find("#pm_assign_electrician").find("option").each(function(i, e)
                    {
                        if($(e).attr("value") === elec)
                        {
                            $(e).attr("selected", "selected");
                        }
                    });
                }				
				$("<textarea></textarea>").attr("id", "pm_panel_notes").attr("placeholder", "Please specify in full details whether an MPU/intercept is required, any other useful information, etc...").appendTo(panel_html);
				$("<div></div>")
				.append
				(
					$("<span></span>").text("BUSS Ratings: ")
				)
				.append
				(
					$("<input />").attr("type", "text").attr("id", "bbb").attr("value", customer.electrical !== null ? customer.electrical.buss_ratings : '')
				)
				.appendTo(panel_html);

				$("<div></div>")
				.append
				(
					$("<span></span>").text("Main Breaker Rating: ")
				)
				.append
				(
					$("<input />").attr("type", "text").attr("id", "mmm").attr("value", customer.electrical !== null ? customer.electrical.main_breaker : '')
				)
				.appendTo(panel_html);

				$("<div></div>")
				.append
				(
					$("<span></span>").text("Solar Breaker: ")
				)
				.append
				(
					$("<input />").attr("type", "text").attr("id", "sss").attr("value", customer.electrical !== null ? customer.electrical.solar_breaker : '')
				)
				.appendTo(panel_html);
                $("<hr />").appendTo(panel_html);
                $("<p></p>").text("Roof Assessment").appendTo(panel_html);
                $("<hr />").appendTo(panel_html);
                $("<p></p>").text("Roof Condition:").appendTo(panel_html);
                $("<select></select>").attr("id", "roof_condition")
                .append
                (
                    $("<option></option>").attr("value", "OK to proceed").text("OK to proceed")
                )
                .append
                (
                    $("<option></option>").attr("value", "Needs Attention").text("Needs attention")
                )
                .appendTo(panel_html);

                if(customer.electrical !== null && customer.electrical_roof_condition)
                {
                    panel_html.find("#roof_condition").find("option").each(function(i, e)
                    {
                        if($(e).attr("value") === customer.electrical.roof_condition)
                        {
                            $(e).attr("selected", "selected");
                        }
                    });
                }                

                $("<p></p>").text("Attachment Type:").appendTo(panel_html);
				$("<select></select>").attr("id", "attachment_type")
				.append
				(
				    $("<option></option>").attr("value", "n/a").text("Choose One")
				)
				.append
				(
				    $("<option></option>").attr("value", "Flat Flashing").text("Flat Flashing")
				)
				.append
				(
				    $("<option></option>").attr("value", "Tile Hook").text("Tile Hook")
				)
				.append
				(
				    $("<option></option>").attr("value", "Other").text("Other")
				)
				.appendTo(panel_html);

				panel_html.find("#attachment_type").find("option").each(function(iii, eee)
				{
                    if(customer.electrical !== null && customer.electrical.attachment_type !== undefined)
                    {
                        if($(eee).attr("value") === customer.electrical.attachment_type)
                        {
                            $(eee).attr("selected", "selected");

                        }
                    }				    
				});

                $("<p></p>").text("Shading Issues:").appendTo(panel_html);
                $("<select></select>").attr("id", "shading_issues")
                .append
                (
                    $("<option></option>").attr("value", "n/a").text("Choose One")
                )
                .append
                (
                    $("<option></option>").attr("value", "Yes").text("Yes")
                )
                .append
                (
                    $("<option></option>").attr("value", "No").text("No")
                )
                .appendTo(panel_html);

                if(customer.electrical !== null && customer.electrical.shading_issues !== undefined)
                {
                    panel_html.find("#shading_issues").find("option").each(function(i, e)
                    {
                        if($(e).attr("value") === customer.electrical.shading_issues)
                        {
                            $(e).attr("selected", "selected");
                        }
                    });
                }

                $("<p></p>").text("Notes").appendTo(panel_html);

                $("<textarea></textarea>").addClass("roofing_notes").attr("placeholder", "Please describe any roof or shading issues...").appendTo(panel_html);

				BootstrapDialog.show
				(
					{
						"title": "Panel / Roof Assessment",
						"message": panel_html.html(),
						"onshown": function(d)
						{
							$("#pm_panel_notes").val(customer.electrical !== null ? customer.electrical.electrical_note : '');
                            $("#pm_panel_work_reqd").change(function()
                            {
                                if($(this).val() === "1")
                                {
                                    $("#pm_panel_work_reqd_extra").css("display", "inline-block");
                                }
                                else
                                {
                                    $("#pm_panel_work_reqd_extra").css("display", "none");
                                    $("#pm_panel_work_reqd_extra")[0].selectedIndex = 0;
                                }
                            });
                            if(customer.electrical !== null)
                            {
                                if(customer.electrical.roofing_notes)
                                {
                                    $(".roofing_notes").val(customer.electrical.roofing_notes);
                                }
                            }
						},
						"buttons":
						[
							{
								"label": "Cancel",
								"cssClass": "btn-danger",
								"action": function(d)
								{
									d.close();
								}
							},
							{
								"label": "Save",
								"cssClass": "btn-primary",
								"action": function(d)
								{
									if($("#pm_panel_work_reqd").val().toLowerCase() === "n/a")
									{
										window.alert("You must specify whether panel work is required.");
										return;
									}
									var ret_early = false;
									$.each(["bbb", "mmm", "sss"], function(iiiii, idd)
									{
										if(ret_early)
										{
											return;
										}
										if($.trim($("#" + idd).val()) === "")
										{
											ret_early = true;
											window.alert("You must specify the " + $("#" + idd).prevAll("span").first().text().replace(": ", ""));
										}
									});
									if(ret_early)
									{
										return;
									}
									if($("#pm_panel_work_reqd").val() === "1")
									{
										if($.trim($("#pm_panel_notes").val()).length === 0)
										{
											window.alert("If panel work is needed, a note with instructions must be specified.");
											return;
										}
										if($("#pm_assign_electrician").val() === "n/a")
										{
											window.alert("If panel work is needed, you must specify the electrician");
											return;
										}
                                        if($("#pm_panel_work_reqd_extra").val() === "n/a")
                                        {
                                            window.alert("You must choose which type of panel work is needed.");
                                            return;
                                        }
									}

									if($("#attachment_type").val() === "n/a")
									{
									    window.alert("You must specify the attachment type");
									    return;
									}


									var jaysawn =
									{
										"panel_work_required": $("#pm_panel_work_reqd").val() === "1",
										"buss_ratings": $("#bbb").val(),
										"main_breaker": $("#mmm").val(),
										"solar_breaker": $("#sss").val(),
										"electrical_note": $("#pm_panel_notes").val(),
                                        "attachment_type": $("#attachment_type").val(),
                                        "pm_panel_work_reqd_extra": $("#pm_panel_work_reqd_extra").val(),
                                        "roof_condition": $("#roof_condition").val(),
                                        "shading_issues": $("#shading_issues").val(),
                                        "roofing_notes": $(".roofing_notes").val()

									};
									if(jaysawn["panel_work_required"])
									{
										jaysawn["electrician"] = $("#pm_assign_electrician").val();
									}
									var j = JSON.stringify(jaysawn);
									customer.electrical = jaysawn;
									$.post("./data", {"fn": "update_project_management_item", "identifier": customer.identifier, "key": "electrical", "value": j}).done(function(rer)
									{
                                        var dt = moment().format("YYYY-MM-DD");
                                        $("#pm_customer_details_info_" + customer.identifier).find(".standard_checkoff_pm_li").each(function(i, e)
                                        {
                                            if($(e).data("key") === "panel_assessment")
                                            {
                                                $(e)[0].checked = true;
                                                var date_span = $(e).find(".pm_checkoff_datespan").first();
                                                if(date_span.text() !== "Specify Date")
                                                {
                                                    dt = moment(date_span.text(), "MM/DD/YYYY").format("YYYY-MM-DD");
                                                }
                                                $.post("./data", {"fn": "project_management_item_checkoff", "user": window.user_identifier, "key": "panel_assessment", "date": dt, "identifier": customer.identifier, "checked": "1"}).done(function(r3)
                                                {
                                                    $.post("/data", {"fn": "project_management_item_checkoff", "identifier": customer.identifier})
                                                    d.close();
                                                    refreshElectrical(customer, undefined, true);
                                                    cb();
                                                    setTimeout(function()
                                                    {
                                                        PMV2StageUpdate(customer.identifier);
                                                    }, 10000);
                                                });
                                            }
                                        });                                        
									});
								}
							}
						]
					}
				);
            }
            function refreshElectrical(customer, div, refresh)
            {
                if($("#pm_customer_details_info_" + customer.identifier).parent().prev().find(".pm_name_item").text() === "Unassigned")
                {
                    $("#pm_customer_details_info_" + customer.identifier).prev().addClass("pwork_completed_highlight");
                }
                if(typeof(div) + '' === "undefined")
                {
                    div = $("#pm_customer_details_info_" + customer.identifier).find(".electrical_specifics").first();
                }
                else
                {
                    div = div.find(".electrical_specifics").first();
                }
                div.find("*").remove();
                div.text("");
                $("<button></button>").addClass("btn").addClass("btn-primary").addClass("pm_update_assessment").text("Update Panel Assessment").click(function()
                {
                    updatePanelAssessmentPM(customer);
                }).appendTo(div);
                var txt = "";
				txt += "BUSS Rating - " + customer.electrical.buss_ratings;
				txt += ", Main Breaker - " + customer.electrical.main_breaker;
				txt += ", Solar Breaker - " + customer.electrical.solar_breaker + ".";
				if(customer.electrical.panel_work_required)
				{
					if((typeof(customer.electrical.electrician) + '').toLowerCase() === "string")
					{
						txt += " Electrician " + customer.electrical.electrician + ".";
					}
					else
					{
						txt += " Electrician " + customer.electrical.electrician.name + ".";
						try
						{
							txt += customer.electrician.email;
							txt += ". ";
							txt += customer.electrical.electrician.phone;
							txt += ".";
						}
						catch(psp)
						{

						}
					}
				}
				$("<p></p>").text(txt).appendTo(div);
				$("<p></p>").text("Additional Details:").appendTo(div);
				$("<p></p>").addClass("pm_elec_details_descrip").text(customer.electrical.electrical_note).appendTo(div);
                if(refresh)
                {
                    $("#pm_customer_details_info_" + customer.identifier).prevAll(".pm_v2_customer").first().trigger("click");
                }
            }
            function removePermitHistoryItem(customer, idx)
            {
            	$.post("./data", {"fn": "remove_permit_history_item_pm", "identifier": customer.identifier, "idx": (idx + '')}).done(function(r)
            	{
            		var cpy = [];
            		for(var i = 0; i < customer.permit_history.length; i++)
            		{
            			if(i !== idx)
            			{
            				cpy.push(customer.permit_history[i]);
            			}
            		}
            		customer.permit_history = cpy;
            	});
            }
            function provideAdditionalPermitStatusUpdate(kustomer)
            {
            	var permit_html = $("<div></div>");
				$("<p></p>").text("Provide Permit Number:").appendTo(permit_html);
				$("<input />").attr("type", "text").attr("id", "permit_number_pm").appendTo(permit_html);
				$("<p></p>").text("Status:").appendTo(permit_html);

				var status_sel = $("<select></select>").attr("id", "permit_status_pm");
				$.each
				(
					[
						"Choose One", "Approved", "Rejected", "Resubmitted"
					],
					function(iiiii, eeeee)
					{
						$("<option></option>").attr("value", eeeee).text(eeeee).appendTo(status_sel);
					}
				);
				status_sel.appendTo(permit_html);

				$("<div></div>").attr("id", "pm_permit_status_date").addClass("input-append").addClass("date").attr("data-date", moment().format("MM/DD/YYYY")).attr("data-date-format", "mm/dd/yyyy")
				.append
				(
					$("<input />").addClass("span2").addClass("eightpoint5").attr("size", "16").attr("type", "text").attr("value", moment().format("MM/DD/YYYY"))
				)
				.append
				(
					$("<span></span>").addClass("add-on")
					.append
					(
						$("<i></i>").addClass("icon-th")
					)
				).appendTo(permit_html);

				BootstrapDialog.show
				(
					{
						"title": "Permit Status Update",
						"message": permit_html.html(),
						"onshown": function(d)
						{
							if(typeof(kustomer.permit_number) + '' !== "undefined")
							{
								if(kustomer.permit_number !== "" && kustomer.permit_number.toLowerCase() !== "n/a")
								{
									$("#permit_number_pm").val(kustomer.permit_number);
								}
							}
							$("#pm_permit_status_date").find("input").datepicker
							(
								{
									format: "mm/dd/yyyy",
									autoClose: true
								}
							);
						},
						"buttons":
						[
							{
								"label": "Cancel",
								"cssClass": "btn-danger",
								"action": function(d)
								{
									d.close();
								}
							},
							{
								"label": "Update",
								"cssClass": "btn-primary",
								"action": function(d)
								{
									if($.trim($("#permit_number_pm").val()).length === 0)
									{
										window.alert("The permit number is required");
										return;
									}
									if($("#permit_status_pm").val() === "Choose One")
									{
										window.alert("You must choose a permit status");
										return;
									}
									var jaysawn =
									{
										"permit_number": $.trim($("#permit_number_pm").val()),
										"permit_status": $("#permit_status_pm").val(),
										"permit_date": moment($("#pm_permit_status_date").find("input").val(), "MM/DD/YYYY").format("YYYY-MM-DD")
									};
									var j = JSON.stringify(jaysawn);

									$.post("./data", {"fn": "update_project_management_item", "identifier": kustomer.identifier, "key": "permitting", "value": j}).done(function(rer)
									{
										kustomer.permit_number = jaysawn["permit_number"];
										kustomer.permit_history.push
										(
											{"status": jaysawn["permit_status"], "date": jaysawn["permit_date"]}
										);
										$("#show_permit_status_pm").text("Permit Number: " + kustomer.permit_number);
										$("<div></div>").addClass("pm_permit_history_item").text(jaysawn["permit_status"] + " - " + moment(jaysawn["permit_date"], "YYYY-MM-DD").format("MM/DD/YYYY"))
										.append
										(
											$("<span></span>").addClass("glyphicon").addClass("glyphicon-remove").click(function()
											{
												if(window.confirm("Are you sure you would like to remove this item?"))
												{
													$(this).parent().remove();
													removePermitHistoryItem(kustomer, kustomer.permit_history.length - 1);
												}
											})
										)
										.appendTo($("#pm_customer_details_info_" + kustomer.identifier).find(".pm_history_container"));
										d.close();
									});
								}
							}
						]
					}
				);
            }
            function addAdditionalTodoItem(customer, include_in_calendar, admins)
            {
                if(typeof(include_in_calendar) + '' === "undefined")
                {
                    BootstrapDialog.show
                    (
                        {
                            "title": "Include in Calendar?",
                            "message": "Should this item be included in calendar view?",
                            "buttons":
                            [
                                {
                                    "label": "No",
                                    "cssClass": "btn-danger",
                                    "action": function(d)
                                    {
                                        d.close();
                                        addAdditionalTodoItem(customer, false);
                                    }
                                },
                                {
                                    "label": "Yes",
                                    "cssClass": "btn-primary",
                                    "action": function(d)
                                    {
                                        d.close();
                                        $.post("/data", {"fn": "list_admins"}).done(function(r)
                                        {
                                            addAdditionalTodoItem(customer, true, r.admins);
                                        });
                                    }
                                }
                            ]
                        }
                    )
                    return;
                }
                var final_html = $("<div></div>");
                $("<p></p>").text("Provide a name").appendTo(final_html);
                $("<input />").attr("type", "text").attr("id", "new_todo_name_pm").appendTo(final_html);
                if(include_in_calendar)
                {
                    $("<p></p>").text("Provide details:").appendTo(final_html);
                    $("<textarea></textarea>").attr("id", "cal_details").css("width", "100%").css("background", "#575757").appendTo(final_html);
                    $("<p></p>").text("Assign this Event").appendTo(final_html);                   
                    admins.unshift({"name": "Nobody", "identifier": "-1"});

                    var sel = $("<select></select>").addClass("event_owner_sel").attr("multiple", "multiple");
                    $.each(admins, function(iiiii, admin)
                    {
                        
                        var opt = $("<option></option>").attr("value", admin.identifier).text(admin.name);                        
                        opt.appendTo(sel);
                    });
                    sel.appendTo(final_html);
                    sel.attr("size", sel.find("option").size());

                    sel.appendTo(final_html);
                    $("<br />").appendTo(final_html);
                    $("<p></p>").text("Event Color:").appendTo(final_html);
                    $("<select></select>").attr("id", "ev_clr").css("background", "#000000")
                    .append
                    (
                        $("<option></option>").attr("value", "black").text("Black (Meetings)")
                    )
                    .append
                    (
                        $("<option></option>").attr("value", "red").text("Red (Inspection")
                    )
                    .append
                    (
                        $("<option></option>").attr("value", "orange").text("Orange (Install)")
                    )
                    .append
                    (
                        $("<option></option>").attr("value", "yellow").text("Yellow (Other)").attr("selected", "selected")
                    )
                    .append
                    (
                        $("<option></option>").attr("value", "green").text("Green (Service Call)")
                    )
                    .append
                    (
                        $("<option></option>").attr("value", "blue").text("Blue (Run)")
                    )
                    .append
                    (
                        $("<option></option>").attr("value", "purple").text("Purple (MPU)")
                    )
                    .append
                    (
                        $("<option></option>").attr("value", "pink").text("Pink (Time Off)")
                    )
                    .append
                    (
                        $("<option></option>").attr("value", "grey").text("Grey (Roofing)")
                    )
                    .appendTo(final_html);

                    $("<p></p>").text("Date:").appendTo(final_html);

                    $("<div></div>").attr("id", "datepicker_ev").addClass("input-append").addClass("date").attr("data-date", moment().format("MM/DD/YYYY")).attr("data-date-format", "mm/dd/yyyy")
                    .append
                    (
                        $("<input  />").addClass("span2").addClass("eightpoint5").attr("size", "16").attr("type", "text").attr("value", moment().format("MM/DD/YYYY"))
                    )
                    .append
                    (
                        $("<span></span>").addClass("add-on")
                        .append
                        (
                            $("<i></i>").addClass("icon-th")
                        )
                    )
                    .appendTo(final_html);

                }

            	BootstrapDialog.show
            	(
            		{
            			"title": "Adding a new TODO item",
            			"message": final_html.html(),
            			"buttons":
            			[
            				{
            					"label": "Cancel",
            					"cssClass": "btn-danger",
            					"action": function(d)
            					{
            						d.close();
            					}
            				},
            				{
            					"label": "Add it!",
            					"cssClass": "btn-primary",
            					"action": function(d)
            					{
            						var n = $.trim($("#new_todo_name_pm").val());
            						if(n.length === 0)
                                    {
                                        window.alert("You must provide a name");
                                        return;
                                    }
                                    var payload = {"name": n};
                                    payload["fn"] = "add_additional_pm_todo_item";
                                    payload["identifier"] = customer.identifier;
                                    payload["create_event"] = ((include_in_calendar * 1) + '');
                                    if(include_in_calendar)
                                    {
                                        payload["details"] = $.trim($("#cal_details").val());
                                        var owners = $(".event_owner_sel").val();
                                        if(owners === null)
                                        {
                                            owners = ["-1"];
                                        }
                                        payload["owners"] = JSON.stringify(owners);
                                        payload["color"] = $("#ev_clr").val();
                                        var input_value = $(".date").find("input").first().val();
                                        payload["new_dt"] = moment(input_value, "MM/DD/YYYY").format("YYYY-MM-DD");
                                    }
                                    $.post("/data", payload).done(function(r)
            						{
            							var target_div = $("#pm_customer_details_info_" + customer.identifier).prev()
            							$(".pm_customers_wrapper").find("> div").each(function(ii, ee)
            							{
            								if($(ee).data("identifier") === customer.identifier)
            								{
            									target_div = $(ee);
            								}
            							});
            							d.close();
            							showProjectManagementDetails(customer.identifier, target_div, ".pm_checkoff_ul");
            						});
            					}
            				}
            			],
                        "onshown": function(d2)
                        {
                            $(".date")
                            .datepicker
                            (
                                {
                                    "autoClose": true,
                                    "format": "mm/dd/yyyy"
                                }
                            );
                            $(".date").find("input").each(function(i, e)
                            {
                                $.each(["keypress", "keydown", "keyup"], function(ii, ev9)
                                {
                                    $(e).on(ev9, function(ev10)
                                    {
                                        ev10.preventDefault();
                                    });
                                });
                            });
                        }
            		}
            	);
            }
            function currencyFormat(n)
            {
                return "$" + n.toFixed(2).replace(/./g, function(c, i, a)
                {
                    return i && c !== "." && ((a.length - i) % 3 === 0) ? ',' + c : c;
                });

            }
            function showPayrollTabV3()
            {
                // the tally watchers....
                window.temp_intervals.push
                (
                    setInterval(function()
                    {
                        if($(".tallied_payouts").size() > 0)
                        {
                            // sum up the payouts
                            var hidden_input = $(".tallied_payouts").prevAll("input[type='hidden']").first();
                            var data = $.parseJSON(hidden_input.val());
                            var tally = parseFloat(0);
                            $.each(data, function(i, e)
                            {
                                tally += parseFloat(e.total);
                            });
                            var formatted = currencyFormat(tally);
                            if($(".tallied_payouts").find("span").text() !== formatted)
                            {
                                $(".tallied_payouts").find("span").text(formatted);
                            }
                        }
                    }, 1000)
                );
                window.temp_intervals.push
                (
                    setInterval(function()
                    {
                        if($(".tallied_reimbursements").size() > 0)
                        {
                            // sum up the payouts
                            var hidden_input = $(".tallied_reimbursements").prevAll("input[type='hidden']").first();
                            var data = $.parseJSON(hidden_input.val());
                            var tally = parseFloat(0);
                            $.each(data, function(i, e)
                            {
                                tally += parseFloat(e.reimbursements);
                            });
                            var formatted = currencyFormat(tally);
                            if($(".tallied_reimbursements").find("span").text() !== formatted)
                            {
                                $(".tallied_reimbursements").find("span").text(formatted);
                            }
                        }
                    }, 1000)
                );                

                var app_area = $("#app_area");
                $("<h2></h2>").text("Loading...").appendTo(app_area);
                var spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");
                var main_div = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10");
                main_div.append
                (
                    $("<h3></h3>").css("color", "#00FF00").text("This tool is now fully operational.")
                );
                var spacer_clone = spacer.clone();


                $.post("./data", {"fn": "list_all_users", "kicks": "1"}).done(function(responsee)
                {
                    var contacts = responsee.contacts;
                    // build the contacts dictionary and the identifier => name map
                    var hint_dictionary = {};
                    var ident_name_map = {};

                    // do the first name hints
                    $.each(contacts, function(i, contact)
                    {
                        ident_name_map[contact.identifier] = contact.name;

                        var fname = contact.first_name.toLowerCase();
                        for(var k = 0; k < fname.length; k++)
                        {
                            var hint = fname.substring(0, k + 1);
                            if(typeof(hint_dictionary[hint]) + '' === "undefined")
                            {
                                hint_dictionary[hint] = [];
                            }
                            hint_dictionary[hint].push
                            (
                                {
                                    "name": contact.name,
                                    "identifier": contact.identifier
                                }
                            );
                        }

                        var lname = contact.last_name.toLowerCase();
                        for(var k = 0; k < lname.length; k++)
                        {
                            var hint = lname.substring(0, k + 1);
                            if(typeof(hint_dictionary[hint]) + '' === "undefined")
                            {
                                hint_dictionary[hint] = [];
                            }
                            hint_dictionary[hint].push
                            (
                                {
                                    "name": contact.name,
                                    "identifier": contact.identifier
                                }
                            );
                        }

                        var name = contact.name.toLowerCase();
                        for(var k = 0; k < name.length; k++)
                        {
                            var hint = name.substring(0, k + 1);
                            if(typeof(hint_dictionary[hint]) + '' === "undefined")
                            {
                                hint_dictionary[hint] = [];
                            }
                            hint_dictionary[hint].push
                            (
                                {
                                    "name": contact.name,
                                    "identifier": contact.identifier
                                }
                            );
                        }
                    }); 
                    var contacts = hint_dictionary;

                    $.post("./data", {"fn": "get_payroll_tab_details_v3"}).done(function(resp)
                    {
                        var data = {};
                        $.each(["Reimbursements", "Payouts", "Construction Complete"], function(i, e)
                        {
                            data[e] = resp[e];
                        });
                        app_area.find("h2").remove();                        
                        var tally_lbls =
                        {
                            "Reimbursements": "Pending",
                            "Payouts": "Reps",
                            "Construction Complete": "Projects"
                        };
                        var date_data =
                        {
                            "Reimbursements": function(obj)
                            {
                                return "";
                            },
                            "Payouts": function(obj)
                            {
                                return "";
                            },
                            "Construction Complete": function(obj)
                            {
                                return "Resolving...";
                            }
                        };
                        $.each(["Reimbursements", "Construction Complete", "Payouts"], function(i, key)
                        {
                            var group_div = $("<div></div>").addClass("payroll_group_item")
                            .append
                            (
                                $("<span></span>").addClass("payroll_group_item_lbl").text(key)
                            )
                            .append
                            (
                                $("<span></span>").addClass("payroll_group_item_hyphen").text("-")
                            )
                            .append
                            (
                                $("<span></span>").addClass("payroll_group_item_tally").text(data[key].length + '')
                            )
                            .append
                            (
                                $("<span></span>").addClass("payroll_group_item_tally_lbl").text(tally_lbls[key])
                            )
                            .append
                            (
                                $("<input />").attr("type", "hidden").attr("value", JSON.stringify(data[key]))
                            )
                            .click(function()
                            {
                                expandPayrollTabV3(key, $(this), contacts);
                            }).appendTo(main_div);

                            if(i === Object.keys(data).length - 1)
                            {
                                $("<hr />").appendTo(main_div);
                                $("<button></button>").attr("type", "button").addClass("btn").addClass("btn-primary").text("Complete and Notify all Reps")
                                .click(function()
                                {
                                    
                                    var that = $(this);
                                    var old_txt = that.text();
                                    that.css("opacity", "0.1");
                                    that.text("Sending Notifications...");
                                    $.post("/data", {"fn": "rep_payroll_notify"}).done(function(r)
                                    {
                                        that.css("opacity", "1.0");
                                        that.text("All Done!")
                                        setTimeout(function()
                                        {
                                            that.text(old_txt);
                                        }, 3000);                                        
                                    });
                                })
                                .appendTo(main_div);

                                $("<br />").appendTo(main_div);
                                $("<br />").appendTo(main_div);

                                $("<button></button>").attr("type", "button").addClass("btn").addClass("btn-primary").text("View Outstanding Balances")
                                .click(function()
                                {
                                    clearApp(function()
                                    {
                                        viewOutstandingBalances(contacts);
                                    });
                                })
                                .appendTo(main_div);

                                $("<br />").appendTo(main_div);
                                $("<br />").appendTo(main_div);
                                $("<button></button>").addClass("btn").addClass("btn-primary").text("AK Lookup")
                                .click(function()
                                {
                                    var that = $(this);
                                    that.text("Searching");
                                    var prompt = window.prompt("Search for AK timestamp by customer name, please type the customer's name:");
                                    $.post("/data", {"fn": "ak_lookup", "query": $.trim(prompt)}).done(function(r10)
                                    {
                                        if(r10.results.length === 0)
                                        {
                                            window.alert("No customers matched the name provided.");
                                            return;
                                        }
                                        var html = $("<div></div>");
                                        $.each(r10.results, function(i, result)
                                        {
                                            var mom = moment(result.sp2_time, "YYYY-MM-DD HH:mm:ss");
                                            $("<b></b>").text(result.name + " @ " + result.address).appendTo(html);
                                            $("<hr />").appendTo(html);                                            
                                            $("<p></p>").text("Solar Pro: " + result.solar_pro).appendTo(html);
                                            $("<p></p>").text("Closer: " + result.closer).appendTo(html);
                                            $("<p></p>").text("Usage Data Type: " + result.usage_type).appendTo(html);
                                            $("<p></p>").text("AK? : " + result.ak).appendTo(html);
                                            $("<p></p>").text("AK Date: " + result.ak_date).appendTo(html);
                                            $("<p></p>").text("CARE? :  " + result.care).appendTo(html);
                                            $("<p></p>").text("CD? :  " + result.cd).appendTo(html);
                                            $("<p></p>").text("CD Date: " + result.cd_date).appendTo(html);
                                            $("<p></p>").text("Care override code provided? : " + result.care_override_code_provided).appendTo(html);
                                            $("<p></p>").text("Current SP2 Time: " + mom.format("MM/DD/YYYY hh:mm a")).appendTo(html);
                                            $("<p></p>").text("Last Known Status: " + result.status).appendTo(html);
                                            $("<p></p>").text("All Decision Makers Present: " + result.all_decision_makers_present).appendTo(html);
                                            $("<br />").appendTo(html);
                                            $("<br />").appendTo(html);
                                            $("<hr />").appendTo(html);
                                            $("<br />").appendTo(html);
                                            $("<br />").appendTo(html);
                                        });

                                        BootstrapDialog.show
                                        (
                                            {
                                                "title": "Results",
                                                "message": html.html(),
                                                "buttons":
                                                [
                                                    {
                                                        "cssClass": "btn-primary",
                                                        "label": "OK",
                                                        "action": function(d)
                                                        {
                                                            d.close();
                                                        }
                                                    }
                                                ]
                                            }
                                        );
                                        that.text("AK Lookup");
                                    });
                                }).appendTo(main_div);
                            }

                        });

                        $("<input />").addClass("payroll_search").attr("type", "text").attr("placeholder", "Search for transactions").appendTo(app_area);
                        var choice_div = $("<div></div>").addClass("dropdown").addClass("payroll_search_dd")
                        .append
                        (
                            $("<button></button>").addClass("btn").addClass("btn-primary").addClass("dropdown-toggle").attr("type", "button").attr("data-toggle", "dropdown")
                            .text("Choose a query type")
                            .append
                            (
                                $("<span></span>").addClass("caret")
                            )
                        )
                        .append
                        (
                            $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu")
                            .append
                            (
                                $("<li></li>").attr("role", "presentation").attr("id", "search_value_of_customer")
                                .append
                                (
                                    $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text("Search by Customer Name")
                                )
                            )
                            .append
                            (
                                $("<li></li>").attr("role", "presentation").attr("id", "search_value_of_rep")
                                .append
                                (
                                    $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text("Search by Rep Name")
                                )
                            )
                            .append
                            (
                                $("<li></li>").attr("role", "presentation").attr("id", "search_value_of_description")
                                .append
                                (
                                    $("<a></a>").attr("role", "menuitem").attr('tabindex', '-1').attr("href", "javascript:void(0);").text("Search by Description")
                                )
                            )
                        )
                        .append
                        (
                            $("<input />").attr("type", "hidden").attr("id", "payroll_search_type").attr("value", "n/a").val("n/a")
                        );
                        choice_div.find("li").each(function(i, e)
                        {
                            $(e).click(function()
                            {
                                var txt = $(e).text();
                                var value = $(e).attr("id").replace("search_value_of_", "");
                                //$(this).parent().prev().text(txt);
                                //$("<span></span>").addClass("caret").appendTo($(this).parent().prev());
                                $("#payroll_search_type").val(value).attr("value", value);
                                performPayrollSearch();
                            });
                        });
                        choice_div.appendTo(app_area);

                        $("<button></button>").addClass("btn").addClass("btn-primary").addClass("rep_future_projections_btn").text("Rep Future Projections")
                        .click(function()
                        {
                            promptForRepFutureProjections(contacts);
                        }).appendTo(app_area);
                        $("<button></button>").addClass("btn").addClass("btn-primary").text("Manage Recurring Transactions").attr("id", "manage_recurring_transactions_btn")
                        .click(function()
                        {
                            clearApp(function()
                            {
                                manageRecurringTransactions(contacts);
                            });                            
                        }).appendTo(app_area);                       
                        
                        $.each([spacer, main_div, spacer_clone], function(i, e)
                        {
                            spacer.css("clear", "both");
                            e.appendTo(app_area);
                        });
                        $.post("/data", {"fn": "get_last_month_and_year"}).done(function(result5)
                        {
                            $("<button></button>").addClass("btn").addClass("btn-primary").addClass("load_ccs_btn").text("Load " + result5.result + " CCs")
                            .click(function()
                            {
                                var that = $(this);
                                var pass = window.prompt("Please provide the password:");
                                pass += '';

                                $.post("/data", {"fn": "password_check", "password": pass, "name": "Load CC Jobs"}).done(function(res)
                                {
                                    if(res.success)
                                    {
                                        var old_txt = that.text();
                                        that.text("Loading...");
                                        $.post("/data", {"fn": "load_construction_complete_tab"}).done(function(result6)
                                        {
                                            if(result6.success)
                                            {
                                                setTimeout(function()
                                                {
                                                    $("#payroll_v3").trigger("click");
                                                }, 5000);                                        
                                            }
                                            else
                                            {
                                                window.alert("Jobs from " + result5.result + " have already been loaded.");
                                                that.text(old_txt);
                                            }

                                        });
                                    }
                                    else
                                    {
                                        window.alert("The password supplied was incorrect.");   
                                    }
                                });
                            }).insertAfter("#manage_recurring_transactions_btn");
                        });

                    });

                });
            }
            function showPayrollTab()
            {
                // the tally watchers....
                window.temp_intervals.push
                (
                    setInterval(function()
                    {
                        if($(".tallied_payouts").size() > 0)
                        {
                            // sum up the payouts
                            var hidden_input = $(".tallied_payouts").prevAll("input[type='hidden']").first();
                            var data = $.parseJSON(hidden_input.val());
                            var tally = parseFloat(0);
                            $.each(data, function(i, e)
                            {
                                tally += parseFloat(e.total);
                            });
                            var formatted = currencyFormat(tally);
                            if($(".tallied_payouts").find("span").text() !== formatted)
                            {
                                $(".tallied_payouts").find("span").text(formatted);
                            }
                        }
                    }, 1000)
                );
                window.temp_intervals.push
                (
                    setInterval(function()
                    {
                        if($(".tallied_reimbursements").size() > 0)
                        {
                            // sum up the payouts
                            var hidden_input = $(".tallied_reimbursements").prevAll("input[type='hidden']").first();
                            var data = $.parseJSON(hidden_input.val());
                            var tally = parseFloat(0);
                            $.each(data, function(i, e)
                            {
                                tally += parseFloat(e.reimbursements);
                            });
                            var formatted = currencyFormat(tally);
                            if($(".tallied_reimbursements").find("span").text() !== formatted)
                            {
                                $(".tallied_reimbursements").find("span").text(formatted);
                            }
                        }
                    }, 1000)
                );                

                var app_area = $("#app_area");
                $("<h2></h2>").text("Loading...").appendTo(app_area);
                var spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");
                var main_div = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10");
                var spacer_clone = spacer.clone();


                $.post("./data", {"fn": "list_all_users", "kicks": "1"}).done(function(responsee)
                {
                    var contacts = responsee.contacts;
                    // build the contacts dictionary and the identifier => name map
                    var hint_dictionary = {};
                    var ident_name_map = {};

                    // do the first name hints
                    $.each(contacts, function(i, contact)
                    {
                        ident_name_map[contact.identifier] = contact.name;

                        var fname = contact.first_name.toLowerCase();
                        for(var k = 0; k < fname.length; k++)
                        {
                            var hint = fname.substring(0, k + 1);
                            if(typeof(hint_dictionary[hint]) + '' === "undefined")
                            {
                                hint_dictionary[hint] = [];
                            }
                            hint_dictionary[hint].push
                            (
                                {
                                    "name": contact.name,
                                    "identifier": contact.identifier
                                }
                            );
                        }

                        var lname = contact.last_name.toLowerCase();
                        for(var k = 0; k < lname.length; k++)
                        {
                            var hint = lname.substring(0, k + 1);
                            if(typeof(hint_dictionary[hint]) + '' === "undefined")
                            {
                                hint_dictionary[hint] = [];
                            }
                            hint_dictionary[hint].push
                            (
                                {
                                    "name": contact.name,
                                    "identifier": contact.identifier
                                }
                            );
                        }

                        var name = contact.name.toLowerCase();
                        for(var k = 0; k < name.length; k++)
                        {
                            var hint = name.substring(0, k + 1);
                            if(typeof(hint_dictionary[hint]) + '' === "undefined")
                            {
                                hint_dictionary[hint] = [];
                            }
                            hint_dictionary[hint].push
                            (
                                {
                                    "name": contact.name,
                                    "identifier": contact.identifier
                                }
                            );
                        }
                    }); 
                    var contacts = hint_dictionary;

                    $.post("./data", {"fn": "get_payroll_tab_details"}).done(function(resp)
                    {
                        var data = {};
                        $.each(["WC Complete", "Construction Complete", "Reimbursements", "Projects Pending Payout", "Payouts"], function(i, e)
                        {
                            data[e] = resp[e];
                        });
                        app_area.find("h2").remove();                        
                        $.each(["WC Complete"], function(i, key)
                        {
                            $.each(data[key], function(ii, obj)
                            {
                                data[key][ii]["date"] = moment(data[key][ii]["date"], "YYYY-MM-DD");
                            });
                            data[key] = data[key].sort(function(a, b)
                            {
                                return a.date.isBefore(b.date);
                            });
                        });
                        var tally_lbls =
                        {
                            "WC Complete": "Projects",
                            "Construction Complete": "Projects",
                            "Reimbursements": "Pending",
                            "Projects Pending Payout": "Projects",
                            "Payouts": "Reps"
                        };
                        var date_data =
                        {
                            "WC Complete": function(obj)
                            {
                                return "WC " + obj.date.format("MM/DD/YY");
                            },
                            "Construction Complete": function(ob)
                            {
                                return "CC " + obj.date.format("MM/DD/YYYY");
                            },
                            "Reimbursements": function(obj)
                            {
                                return "";
                            },
                            "Projects Pending Payout": function(obj)
                            {
                                return "";
                            },
                            "Payouts": function(obj)
                            {
                                return "";
                            }
                        };
                        $.each(Object.keys(data), function(i, key)
                        {
                            var group_div = $("<div></div>").addClass("payroll_group_item")
                            .append
                            (
                                $("<span></span>").addClass("payroll_group_item_lbl").text(key)
                            )
                            .append
                            (
                                $("<span></span>").addClass("payroll_group_item_hyphen").text("-")
                            )
                            .append
                            (
                                $("<span></span>").addClass("payroll_group_item_tally").text(data[key].length + '')
                            )
                            .append
                            (
                                $("<span></span>").addClass("payroll_group_item_tally_lbl").text(tally_lbls[key])
                            )
                            .append
                            (
                                $("<input />").attr("type", "hidden").attr("value", JSON.stringify(data[key]))
                            )
                            .click(function()
                            {
                                expandPayrollTab(key, $(this), contacts);
                            }).appendTo(main_div);

                            if(i === Object.keys(data).length - 1)
                            {
                                $("<hr />").appendTo(main_div);
                                $("<button></button>").attr("type", "button").addClass("btn").addClass("btn-primary").text("Complete and Notify all Reps")
                                .click(function()
                                {
                                    
                                    var that = $(this);
                                    var old_txt = that.text();
                                    that.css("opacity", "0.1");
                                    that.text("Sending Notifications...");
                                    $.post("/data", {"fn": "rep_payroll_notify"}).done(function(r)
                                    {
                                        that.css("opacity", "1.0");
                                        that.text("All Done!")
                                        setTimeout(function()
                                        {
                                            that.text(old_txt);
                                        }, 3000);                                        
                                    });
                                })
                                .appendTo(main_div);

                                $("<br />").appendTo(main_div);
                                $("<br />").appendTo(main_div);

                                $("<button></button>").attr("type", "button").addClass("btn").addClass("btn-primary").text("View Outstanding Balances")
                                .click(function()
                                {
                                    clearApp(function()
                                    {
                                        viewOutstandingBalances(contacts);
                                    });
                                })
                                .appendTo(main_div);
                            }

                        });

                        $("<input />").addClass("payroll_search").attr("type", "text").attr("placeholder", "Search for transactions").appendTo(app_area);
                        var choice_div = $("<div></div>").addClass("dropdown").addClass("payroll_search_dd")
                        .append
                        (
                            $("<button></button>").addClass("btn").addClass("btn-primary").addClass("dropdown-toggle").attr("type", "button").attr("data-toggle", "dropdown")
                            .text("Choose a query type")
                            .append
                            (
                                $("<span></span>").addClass("caret")
                            )
                        )
                        .append
                        (
                            $("<ul></ul>").addClass("dropdown-menu").attr("role", "menu")
                            .append
                            (
                                $("<li></li>").attr("role", "presentation").attr("id", "search_value_of_customer")
                                .append
                                (
                                    $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text("Search by Customer Name")
                                )
                            )
                            .append
                            (
                                $("<li></li>").attr("role", "presentation").attr("id", "search_value_of_rep")
                                .append
                                (
                                    $("<a></a>").attr("role", "menuitem").attr("tabindex", "-1").attr("href", "javascript:void(0);").text("Search by Rep Name")
                                )
                            )
                            .append
                            (
                                $("<li></li>").attr("role", "presentation").attr("id", "search_value_of_description")
                                .append
                                (
                                    $("<a></a>").attr("role", "menuitem").attr('tabindex', '-1').attr("href", "javascript:void(0);").text("Search by Description")
                                )
                            )
                        )
                        .append
                        (
                            $("<input />").attr("type", "hidden").attr("id", "payroll_search_type").attr("value", "n/a").val("n/a")
                        );
                        choice_div.find("li").each(function(i, e)
                        {
                            $(e).click(function()
                            {
                                var txt = $(e).text();
                                var value = $(e).attr("id").replace("search_value_of_", "");
                                //$(this).parent().prev().text(txt);
                                //$("<span></span>").addClass("caret").appendTo($(this).parent().prev());
                                $("#payroll_search_type").val(value).attr("value", value);
                                performPayrollSearch();
                            });
                        });
                        choice_div.appendTo(app_area);

                        $("<button></button>").addClass("btn").addClass("btn-primary").addClass("rep_future_projections_btn").text("Rep Future Projections")
                        .click(function()
                        {
                            promptForRepFutureProjections(contacts);
                        }).appendTo(app_area);
                        $("<button></button>").addClass("btn").addClass("btn-primary").text("Manage Recurring Transactions").attr("id", "manage_recurring_transactions_btn")
                        .click(function()
                        {
                            clearApp(function()
                            {
                                manageRecurringTransactions(contacts);
                            });                            
                        }).appendTo(app_area);                       
                        
                        $.each([spacer, main_div, spacer_clone], function(i, e)
                        {
                            spacer.css("clear", "both");
                            e.appendTo(app_area);
                        });
                    });

                });
            }
            function manageRecurringTransactions(contacts)
            {
                var app_area = $("#app_area");
                var spacer = $("<div></div>").addClass("col-xs-1").addClass("col-sm-1").addClass("col-md-1").addClass("col-lg-1");
                var main_div = $("<div></div>").addClass("col-xs-10").addClass("col-sm-10").addClass("col-md-10").addClass("col-lg-10");
                var spacer_clone = spacer.clone();

                $("<h2></h2>").text("Loading...").appendTo(app_area);
                $.post("/data2", {"fn": "recurring_transactions_manager", "type": "get"}).done(function(r)
                {
                    app_area.find("h2").remove();
                    $("<button></button>").addClass("btn").addClass("btn-primary").attr("id", "add_recurring_transactions_btn").text("Add New Transaction")
                    .click(function()
                    {
                        var html = $("<div></div>");
                        $("<div></div>").addClass("rad_group")
                        .append
                        (
                            $("<input />").attr("type", "radio")
                        )
                        .append
                        (
                            $("<span></span>").text("Payout")
                        )
                        .append
                        (
                            $("<input />").attr("type", "radio")
                        )
                        .append
                        (
                            $("<span></span>").text("Deduction")
                        )
                        .append
                        (
                            $("<input />").attr("type", "radio")
                        )
                        .append
                        (
                            $("<span></span>").text("Advance")
                        )
                        .append
                        (
                            $("<input />").attr("type", "radio")
                        )
                        .append
                        (
                            $("<span></span>").text("Reimbursement")
                        )
                        .appendTo(html);
                        html.find("input").each(function(i, e)
                        {
                            $(e).addClass($(e).next().text().toLowerCase());
                        });
                        $("<hr />").appendTo(html);

                        $("<p></p>").text("Amount:").appendTo(html);
                        $("<input />").addClass("wc_transaction_amount_input_box").attr("type", "text").attr("placeholder", "42.00").appendTo(html);
                        $("<p></p>").text("Time Pattern:").appendTo(html);
                        $("<select></select>").attr("id", "recurring_transaction_type_sel")
                        .append
                        (
                            $("<option></option>").attr("value", "weekly").text("Weekly")
                        )
                        .append
                        (
                            $("<option></option>").attr("value", "monthly").text("Monthly")
                        )
                        .appendTo(html);
                        $("<p></p>").text("Description:").appendTo(html);

                        $("<textarea></textarea>").addClass("wc_transaction_add_description").attr("placeholder", "Please provide a meaningful description...").appendTo(html);
                        $("<p></p>").addClass("skip_generating_payout").text("Do not Generate Payout").css("display", "none").appendTo(html);
                        $("<input />").addClass("skip_generating_payout_cb").attr("type", "checkbox").css("display", "none").appendTo(html);

                        BootstrapDialog.show
                        (
                            {
                                "title": "Creating a recurring transaction",
                                "message": html.html(),
                                "onshown": function(d)
                                {
                                    $.each(["change", "click"], function(i, e)
                                    {
                                        $(".rad_group input").each(function(ii, ee)
                                        {
                                            $(ee).on(e, function(evvv)
                                            {
                                                $(".admin_reimbursement_sel").remove();
                                                $(".reimbursement_cat_hint").remove();
                                                $(".skip_generating_payout, .skip_generating_payout_cb").css("display", "none");
                                                var this_classname = $(ee).attr("class");
                                                $(ee).parent().find("input").each(function(iii, eee)
                                                {
                                                    if($(eee).attr("class") !== this_classname)
                                                    {
                                                        $(eee)[0].checked = false;
                                                    }
                                                    else
                                                    {
                                                        if(this_classname === "reimbursement")
                                                        {
                                                            $("<p></p>").text("Reimbursement Category:").addClass("reimbursement_cat_hint").appendTo($(".bootstrap-dialog-body"));
                                                            $("<select></select>").addClass("admin_reimbursement_sel")
                                                            .append
                                                            (
                                                                $("<option></option>").attr("value", "n/a").text("Choose One")
                                                            )
                                                            .append
                                                            (
                                                                $("<option></option>").attr("value", "reimbursement_customer").text("Customer Expense")
                                                            )
                                                            .append
                                                            (
                                                                $("<option></option>").attr("value", "reimbursement_recruiting").text("Recruiting Expense")
                                                            )
                                                            .append
                                                            (
                                                                $("<option></option>").attr("value", "reimbursement_incentive").text("Incentive Expense")
                                                            )
                                                            .append
                                                            (
                                                                $("<option></option>").attr("value", "reimbursement_office").text("Office Materials Expense")
                                                            )
                                                            .append
                                                            (
                                                                $("<option></option>").attr("value", "reimbursement_other").text("Other Expense")
                                                            )
                                                            .appendTo($(".bootstrap-dialog-body"));
                                                        }
                                                        if(this_classname === "advance")
                                                        {
                                                            $(".skip_generating_payout, .skip_generating_payout_cb").removeAttr("style");
                                                        }
                                                    }
                                                });
                                            });
                                        });
                                    });
                                },
                                "buttons":
                                [
                                    {
                                        "label": "Cancel",
                                        "cssClass": "btn-danger",
                                        "action": function(d)
                                        {
                                            d.close();
                                        }
                                    },
                                    {
                                        "label": "Create it!",
                                        "cssClass": "btn-primary",
                                        "action": function(d)
                                        {
                                            var checked_count = 0;
                                            $(".rad_group input").each(function(i, e)
                                            {
                                                checked_count += ($(e)[0].checked * 1);
                                            });
                                            if(checked_count !== 1)
                                            {
                                                window.alert("You must specify whether this will be a payout or advance");
                                                return;
                                            }
                                            var total = $.trim($(".wc_transaction_amount_input_box").val()).replace("$", "").replace(",", "");
                                            if(total === null)
                                            {
                                                window.alert("The amount could not be parsed as a decimal-based or integer-based value");
                                                return;
                                            }
                                            total = parseFloat(total);
                                            if(Number.isNaN(total))
                                            {
                                                window.alert("The amount could not be parsed as a decimal-based or integer-based value");
                                                return;
                                            }
                                            if($.trim($(".wc_transaction_add_description").val()).length === 0)
                                            {
                                                window.alert("A meaningful description was not provided");
                                                return;
                                            }

                                            var reimbursement_type = ""
                                            if($(".admin_reimbursement_sel").length > 0)
                                            {
                                                if($(".admin_reimbursement_sel").val() === "n/a")
                                                {
                                                    window.alert("You must specify the reimbursement category");
                                                    return;
                                                }
                                                reimbursement_type = $(".admin_reimbursement_sel").val();
                                            }

                                            $(".bootstrap-dialog-footer").find(".btn-primary").text("Creating...").css("opacity", "0.2");                                            
                                            $(".rad_group input").each(function(aaa, bbb)
                                            {
                                                if($(bbb)[0].checked)
                                                {
                                                    transaction_type = $(bbb).attr("class");
                                                }
                                            });
                                            if(total < 0)
                                            {
                                                total *= -1;
                                            }
                                            if(transaction_type === "deduction")
                                            {
                                                transaction_type = "payout";
                                                total *= -1;
                                            }                                    
                                            $.post("/data2",
                                            {
                                                "fn": "recurring_transactions_manager",
                                                "type": "create_transaction",
                                                "frequency": $("#recurring_transaction_type_sel").val(),
                                                "do_not_generate_payout": ($(".skip_generating_payout_cb")[0].checked * 1) + '',
                                                "payload": JSON.stringify
                                                (
                                                    {
                                                        "fn": "create_v2_transaction",
                                                        "amount": total.toFixed(2),
                                                        "trans_type": transaction_type,
                                                        "description": $.trim($(".wc_transaction_add_description").first().val()),
                                                        "reimbursement_type": reimbursement_type
                                                    }
                                                )
                                            })
                                            .done(function(respons)
                                            {
                                                d.close();
                                                clearApp(function()
                                                {
                                                    manageRecurringTransactions(contacts);
                                                });
                                            });
                                        }
                                    }
                                ]
                            }
                        );
                    })
                    .appendTo(main_div);
                    $("<hr />").appendTo(main_div);
                    $("<h2></h2>").text("Transactions:").appendTo(main_div);
                    var tbl = $("<table></table>").addClass("recurring_transactions_tbl");
                    var tbody = $("<tbody></tbody>")
                    .append
                    (
                        $("<th></th>").text("Type")
                    )
                    .append
                    (
                        $("<th></th>").text("Frequency")
                    )
                    .append
                    (
                        $("<th></th>").text("Description")
                    )
                    .append
                    (
                        $("<th></th>").text("Amount")
                    )
                    .append
                    (
                        $("<th></th>").text("People")
                    )
                    .append
                    (
                        $("<th></th>").text("Active")
                    )
                    .append
                    (
                        $("<th></th>").text("Remove")
                    );
                    tbody.appendTo(tbl);

                    $.each(r.transactions, function(i, transaction)
                    {
                        var tr = $("<tr></tr>");
                        tr.attr("data-identifier", transaction.identifier)
                        tr.data("data-amount", transaction.payload.amount + '');
                        $("<td></td>").text
                        (
                            transaction.payload.trans_type[0].toUpperCase() + transaction.payload.trans_type.substring(1)
                        )
                        .appendTo(tr);
                        $("<td></td>").text
                        (
                            transaction.frequency[0].toUpperCase() + transaction.frequency.substring(1)
                        )
                        .appendTo(tr);
                        
                        $("<td></td>")
                        .text(transaction.payload.description)
                        .append
                        (
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-pencil").addClass("transaction_recurring_description_edit_pencil")
                        )
                        .appendTo(tr);
                        
                        $("<td></td>").text(currencyFormat(Math.abs(transaction.payload.amount)))
                        .appendTo(tr);

                        var recipients_td = $("<td></td>");
                        $("<button></button>").addClass("btn").addClass("btn-success").text("Add Person").addClass("recurring_trans_add_person").appendTo(recipients_td);
                        $("<br />").appendTo(recipients_td);  
                        $.each(transaction.recipients, function(ii, recipient)
                        {                                                    
                            var inner_tbl = $("<table></table>");
                            var inner_tbody = $("<tbody></tbody>");
                            inner_tbody.appendTo(inner_tbl);                            
                            var inner_tr = $("<tr></tr>");
                            
                            $("<td></td>")
                            .append
                            (
                                $("<img />").addClass("img").addClass("img-responsive").addClass("recurring_transaction_user_img").attr("src", "//storage.googleapis.com/" + window.app_bucket + "/Images/ProfilePictures/Thumb/" + recipient + ".jpg")
                            )
                            .appendTo(inner_tr);
                            $("<td></td>").text(r.reps[recipient]).appendTo(inner_tr);
                            $("<td></td>")
                            .append
                            (
                                $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove")
                            )
                            .appendTo(inner_tr);

                            inner_tr.appendTo(inner_tbody);
                            inner_tbody.appendTo(inner_tbl);
                            inner_tbl.appendTo(recipients_td);                            
                        });
                        recipients_td.appendTo(tr);
                        
                        var cb = $("<input />").attr("type", "checkbox")
                                .change(function()
                                {
                                    var that = $(this);
                                    that.css("opacity", "0.1");
                                    $.post("/data2", {"fn": "recurring_transactions_manager", "type": "activate_deactivate", "status": (that[0].checked * 1) + '', "identifier": that.closest("tr").data("identifier")}).done(function(rrr)
                                    {
                                        that.css("opacity", "1.0");
                                    });
                                });
                        if(transaction.active)
                        {
                            cb.attr("checked", "checked");
                        }
                        $("<td></td>")
                        .append
                        (
                            cb
                        )
                        .appendTo(tr);

                        $("<td></td>")
                        .append
                        (
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove").addClass("drop_recurring_trans")
                        )
                        .appendTo(tr);

                        tr.appendTo(tbody);
                    });
                    tbody.appendTo(tbl);
                    tbl.appendTo(main_div);

                    tbl.on("click", "> tbody > tr > td > table > tbody > tr > td > .glyphicon-remove", function(ev)
                    {
                        var that = $(this);
                        var img = that.closest("td").closest("tr").find("img");
                        var src = img.attr("src");
                        var rep_identifier = src.split("/")[7].replace(".jpg", "");

                        var transaction_identifier = that.closest("table").parent().parent().data("identifier")

                        that.closest("tr").css("opacity", "0.1");
                        $.post("/data2", {"fn": "recurring_transactions_manager", "type": "drop_user", "identifier": transaction_identifier, "person": rep_identifier}).done(function(rrr)
                        {
                            that.closest("table").remove();
                        });
                    });

                    tbl.on("click", ".drop_recurring_trans", function(ev)
                    {
                        if(window.confirm("Are you sure you would like to drop this transaction?"))
                        {
                            var that = $(this);
                            that.closest("tr").css("opacity", "0.1");
                            $.post("/data2", {"fn": "recurring_transactions_manager", "type": "drop_transaction", "identifier": that.closest("tr").data("identifier")})
                            .done(function(rrr)
                            {
                                that.closest("tr").remove();
                            });
                        }                        
                    });

                    tbl.on("click", ".glyphicon-pencil", function(ev)
                    {
                        var that = $(this);
                        var td = that.closest("td");
                        var txt = td.text();
                        that.remove();
                        td.attr("contenteditable", "true");
                        td.off("blur");
                        td.on("blur", function(ev2)
                        {
                            var that2 = $(this);
                            that2.css("opacity", "0.1");
                            var new_description = $.trim(td.text());
                            while(new_description.indexOf("\r") > -1)
                            {
                                new_description = new_description.replace("\r", "");
                            }
                            while(new_description.indexOf("\n") > -1)
                            {
                                new_description = new_description.replace("\n", "");
                            }
                            $.post("/data2", {"fn": "recurring_transactions_manager", "type": "rename_description", "identifier": td.closest("tr").data("identifier"), "description": new_description}).done(function(rrr)
                            {                                
                                td.removeAttr("contenteditable");
                                $("<span></span>").addClass("glyphicon").addClass("glyphicon-pencil").appendTo(td);
                                td.css("opacity", "1.0");
                            });
                        });
                        td[0].focus();
                        
                    });

                    tbl.on("click", ".btn-success", function(ev)
                    {
                        var that = $(this);
                        var html = $("<div></div>");

						$("<p></p>").text("Type the rep's name:").appendTo(html);
						$("<input />").attr("type", "text").addClass("wc_recipient_transaction_input_box").attr("placeholder", "Rep's name...").appendTo(html);
						var hinted_users_div = $("<div></div>").addClass("hinted_users");
						$("<span></span>").addClass("glyphicon").addClass("glyphicon-remove").appendTo(hinted_users_div);

                        hinted_users_div.appendTo(html);
						
						BootstrapDialog.show
						(
							{
								"title": "Adding a new recipient to this transaction",
								"message": html.html(),
								"buttons":
								[
									{
										"label": "Cancel",
										"cssClass": "btn-danger",
										"action": function(d)
										{
											d.close();
										}
									},
                                    {
                                        "label": "Add",
                                        "cssClass": "btn-primary",
                                        "action": function(d)
                                        {
                                            if($(".hidden_identifier_for_transaction_match").size() === 0)
                                            {
                                                window.alert("You must first choose a recipient");
                                                return;
                                            }
                                            $(".bootstrap-dialog-footer").find(".btn-primary").text("Adding...");
                                            
                                            $.post("/data2", {"fn": "recurring_transactions_manager", "type": "add_user", "identifier": that.closest("tr").data("identifier"), "recipient": $(".hidden_identifier_for_transaction_match").first().data("identifier")}).done(function(rrr)
                                            {
                                                
                                                if(rrr.success)
                                                {
                                                    var new_tbl = $("<table></table>");
                                                    var new_tbody = $("<tbody></tbody>");
                                                    new_tbody.appendTo(new_tbl);                            
                                                    var new_tr = $("<tr></tr>");
                                                    
                                                    $("<td></td>")
                                                    .append
                                                    (
                                                        $("<img />").addClass("img").addClass("img-responsive").addClass("recurring_transaction_user_img").attr("src", "//storage.googleapis.com/" + window.app_bucket + "/Images/ProfilePictures/Thumb/" + $(".hidden_identifier_for_transaction_match").first().data("identifier") + ".jpg")
                                                    )
                                                    .appendTo(new_tr);
                                                    $("<td></td>").text(rrr.name).appendTo(new_tr);
                                                    $("<td></td>")
                                                    .append
                                                    (
                                                        $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove")
                                                    )
                                                    .appendTo(new_tr);

                                                    new_tr.appendTo(new_tbody);
                                                    new_tbody.appendTo(new_tbl);
                                                    new_tbl.appendTo(that.closest("td"));

                                                    d.close();

                                                }
                                                else
                                                {
                                                    window.alert("This person already belongs to the transaction, or this transaction has been deleted by another payroll admin.");
                                                    $(".bootstrap-dialog-footer").find(".btn-primary").text("Try again");
                                                }
                                            });
                                        }
                                    }
								],
								"onshown": function(d)
								{
									$(".hinted_users").find("span").first().click(function()
									{
										$(".hinted_users").css("display", "none");
										$(".hinted_user").remove();
									});

									var to_box = $(".bootstrap-dialog-body").find("input").eq(0);
									to_box
									.focus(function()
									{
										if(to_box.val() === "Enter someone's name...")
										{
											to_box.val("");
										}
									})
									.blur(function()
									{
										if($.trim(to_box.val()) === "")
										{
											to_box.val("Enter someone's name...");
										}
									})
									.on("keyup", function()
									{
										if($.trim(to_box.val()).length > 0)
										{
											hint_at_users3(to_box, contacts, function(data)
											{
												console.log(data);
											});
										}
									});
								}
							}
						);
                    });

                    $.each([spacer, main_div, spacer_clone], function(i, e)
                    {
                        e.appendTo(app_area);
                    });
                });
            }
            function pullFutureProjectionsForRep(identifier)
            {
                $(".projected_transactions_table").remove();
                $(".projected_transactions_header").remove();
                $(".bootstrap-dialog-body").find("h2").css("visibility", "visible");
                $.post("/data", {"fn": "pull_future_transactions_for_rep", "identifier": identifier, "type": "1A"}).done(function(r1)
                {
                    var first_step_transactions = r1.transactions;
                    
                    $.post("/data", {"fn": "pull_future_transactions_for_rep", "identifier": identifier, "type": "1B"}).done(function(r2)
                    {
                        var second_step_transactions = r2.transactions;

                        var identifiers = [];
                        $.each(r1.app_identifiers_with_closers, function(i, transaction)
                        {
                            if(identifiers.indexOf(transaction.identifier) === -1)
                            {
                                identifiers.push(transaction.identifier);
                            }
                        });
                        $.each(r2.app_identifiers_with_closers, function(i, transaction)
                        {
                            if(identifiers.indexOf(transaction.identifier) === -1)
                            {
                                identifiers.push(transaction.identifier)
                            }
                        });

                        $.post("/data", {"fn": "pull_future_transactions_for_rep", "identifier": identifier, "type": "closing_bonuses", "identifiers": JSON.stringify(identifiers)}).done(function(r3)
                        {
                            $.post("/data", {"fn": "pull_future_transactions_for_rep", "identifier": identifier, "type": "overrides"}).done(function(r4)
                            {
                                $.post("/data", {"fn": "pull_future_transactions_for_rep", "identifier": identifier, "type": "futures"}).done(function(r5)
                                {
                                    var div = $("<div></div>")

                                    $("<p></p>").addClass("projected_transactions_header").text("First Step Commissions:").appendTo(div);
                                    var table1 = $("<table></table>").addClass("projected_transactions_table");
                                    var tbod1 = $("<tbody></tbody>");
                                    
                                    $("<tr></tr>")
                                    .append
                                    (
                                        $("<th></th>").text("Amount")
                                    )
                                    .append
                                    (
                                        $("<th></th>").text("Customer")
                                    )
                                    .appendTo(tbod1);

                                    $.each(first_step_transactions, function(i, transaction)
                                    {
                                        var tr = $("<tr></tr>");
                                        $("<td></td>").text(currencyFormat(parseFloat(transaction.amount))).appendTo(tr);
                                        $("<td></td>").text(transaction.name).appendTo(tr);
                                        tr.appendTo(tbod1);
                                    });
                                    tbod1.appendTo(table1);
                                    table1.appendTo(div);

                                    $("<p></p>").addClass("projected_transactions_header").text("Second Step Commissions:").appendTo(div);
                                    var table2 = $("<table></table>").addClass("projected_transactions_table");
                                    var tbod2 = $("<tbody></tbody>");

                                    $("<tr></tr>")
                                    .append
                                    (
                                        $("<th></th>").text("Amount")
                                    )
                                    .append
                                    (
                                        $("<th></th>").text("Customer")
                                    )
                                    .appendTo(tbod2);

                                    $.each(second_step_transactions, function(i, transaction)
                                    {
                                        var tr = $("<tr></tr>");
                                        $("<td></td>").text(currencyFormat(parseFloat(transaction.amount))).appendTo(tr);
                                        $("<td></td>").text(transaction.name).appendTo(tr);
                                        tr.appendTo(tbod2);
                                    });                        
                                    tbod2.appendTo(table2);
                                    table2.appendTo(div);
                                    
                                    var closing_dom_data =
                                    {
                                        "A":
                                        {
                                            "p": $("<p></p>").text("First Step Closing Bonuses").addClass("projected_transactions_header"),
                                            "table": $("<table></table>").addClass("projected_transactions_table"),
                                            "tbody": $("<tbody></tbody>")
                                            .append
                                            (
                                                $("<tr></tr>")
                                                .append
                                                (
                                                    $("<th></th>").text("Amount")
                                                )
                                                .append
                                                (
                                                    $("<th></th>").text("Customer")
                                                )
                                            )
                                        },
                                        "B":
                                        {
                                            "p": $("<p></p>").text("Second Step Closing Bonuses").addClass("projected_transactions_header"),
                                            "table": $("<table></table>").addClass("projected_transactions_table"),                                            
                                            "tbody": $("<tbody></tbody>")
                                            .append
                                            (
                                                $("<tr></tr>")
                                                .append
                                                (
                                                    $("<th></th>").text("Amount")
                                                )
                                                .append
                                                (
                                                    $("<th></th>").text("Customer")
                                                )
                                            )
                                        }
                                    };

                                    $.each(r3.transactions, function(i, transaction)
                                    {
                                        var tr = $("<tr></tr>");
                                        tr.append($("<td></td>").text(currencyFormat(parseFloat(transaction.amount))));
                                        tr.append($("<td></td>").text(transaction.name));
                                        tr.appendTo(closing_dom_data[transaction.step]["tbody"]);
                                    });

                                    $.each(Object.keys(closing_dom_data), function(i, key)
                                    {
                                        closing_dom_data[key].p.appendTo(div);
                                        closing_dom_data[key].tbody.appendTo(closing_dom_data[key].table);
                                        closing_dom_data[key].table.appendTo(div);
                                    });

                                    $("<p></p>").addClass("projected_transactions_header").text("Construction Complete Overrides:").appendTo(div);
                                    var table4 = $("<table></table>").addClass("projected_transactions_table");
                                    var tbody4 = $("<tbody></tbody>");
                                    $("<tr></tr>")
                                    .append
                                    (
                                        $("<th></th>").text("Amount")
                                    )
                                    .append
                                    (
                                        $("<th></th>").text("Customer")
                                    )
                                    .appendTo(tbody4);

                                    $.each(r4.transactions, function(i, transaction)
                                    {
                                        $("<tr></tr>")
                                        .append
                                        (
                                            $("<td></td>").text(currencyFormat(parseFloat(transaction.amount)))
                                        )
                                        .append
                                        (
                                            $("<td></td>").text(transaction.name)
                                        )
                                        .appendTo(tbody4);
                                    });

                                    tbody4.appendTo(table4);
                                    table4.appendTo(div);

                                    $("<p></p>").addClass("projected_transactions_header").text("Future Scheduled Transactions:").appendTo(div);

                                    var table5 = $("<table></table>").addClass("projected_transactions_table");
                                    var tbody5 = $("<tbody></tbody>");
                                    $("<tr></tr>")
                                    .append
                                    (
                                        $("<th></th>").text("Amount")
                                    )
                                    .append
                                    (
                                        $("<th></th>").text("Date")
                                    )
                                    .append
                                    (
                                        $("<th></th>").text("Description")
                                    )
                                    .appendTo(tbody5);

                                    $.each(r5.transactions, function(i, transaction)
                                    {
                                        var split = transaction.date.split("-");
                                        $("<tr></tr>")
                                        .append
                                        (
                                            $("<td></td>").text(currencyFormat(parseFloat(transaction.amount)))
                                        )
                                        .append
                                        (
                                            $("<td></td>").text(split[1] + "/" + split[2] + "/" + split[0])
                                        )
                                        .append
                                        (
                                            $("<td></td>").text(transaction.description)
                                        )
                                        .appendTo(tbody5);
                                    });

                                    tbody5.appendTo(table5);
                                    table5.appendTo(div);


                                    div.insertAfter($(".bootstrap-dialog-body").find("h2"));
                                    $(".bootstrap-dialog-body").find("h2").css("visibility", "hidden");
                                });
                                
                            });                                                        
                        });

                        


                    });
                });
            }
            function promptForRepFutureProjections(contacts)
            {
                var html = $("<div></div>");

                $("<p></p>").text("Type the rep's name:").appendTo(html);
                $("<input />").attr("type", "text").addClass("wc_recipient_transaction_input_box").attr("placeholder", "Rep's name...").appendTo(html);
                var hinted_users_div = $("<div></div>").addClass("hinted_users");
                $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove").appendTo(hinted_users_div);
                $("<h2></h2>").css("visibility", "hidden").text("Loading Data...").appendTo(html);

                hinted_users_div.appendTo(html);

                var hint_dictionary = contacts;

                BootstrapDialog.show
                (
                    {
                        "title": "Advance Amount Editor",
                        "message": html.html(),
                        "buttons":
                        [
                            {
                                "label": "Done",
                                "cssClass": "btn-primary",
                                "action": function(d)
                                {                                    
                                    d.close();
                                }
                            }
                        ],
                        "onshown": function(d)
                        {
                            $(".hinted_users").find("span").first().click(function()
                            {
                                $(".hinted_users").css("display", "none");
                                $(".hinted_user").remove();
                                //$(".bootstrap-dialog-footer").find("input").first().trigger("keyup");
                            });

                            var to_box = $(".bootstrap-dialog-body").find("input").eq(0);
                            to_box
                            .focus(function()
                            {
                                if(to_box.val() === "Enter someone's name...")
                                {
                                    to_box.val("");
                                }
                            })
                            .blur(function()
                            {
                                if($.trim(to_box.val()) === "")
                                {
                                    to_box.val("Enter someone's name...");
                                }
                            })
                            .on("keyup", function()
                            {
                                if($.trim(to_box.val()).length > 0)
                                {
                                    hint_at_users3(to_box, contacts, function(data)
                                    {
                                        pullFutureProjectionsForRep(data);
                                    });
                                }
                            });
                        },
                        "onhidden": function(d)
                        {
                            $(".payroll_time_machine").trigger("change");
                        }
                    }
                );   
            }
            function performPayrollSearch()
            {
                if($.trim($(".payroll_search").val()).length > 0)
                {                    
                    $("body").css("opacity", "0.2");
                    $.post("./data", {"fn": "payroll_search", "search_type": $("#payroll_search_type").val(), "query": $.trim($(".payroll_search").first().val())}).done(function(r)
                    {
                        $(".payroll_search_result, .payroll_search_result_back").remove();                        
                        $("body").css("opacity", "1.0");
                        if(r.results.length === 0)
                        {
                            $(".payroll_search").first().val("No results...");
                            $(".payroll_search")[0].focus();
                            return;
                        }
                        $("#app_area").find(".payroll_group_item, .payroll_item_details").css("display", "none");
                        var tbl = $("<table></table>").addClass("payroll_search_result");
                        var tbody = $("<tbody></tbody>");
                        tbody.append
                        (
                            $("<tr></tr>")
                            .append
                            (
                                $("<th></th>").text("Rep")
                            )
                            .append
                            (
                                $("<th></th>").text("Customer")
                            )
                            .append
                            (
                                $("<th></th>").text("Payout Date")
                            )
                            .append
                            (
                                $("<th></th>").text("Amount")
                            )
                            .append
                            (
                                $("<th></th>").text("Description")
                            )
                        );
                        r.results.reverse();
                        $.each(r.results, function(i, e)
                        {
                            var tr = $("<tr></tr>")
                            $("<td></td>").text(e.recipient).appendTo(tr);
                            $("<td></td>").text(e.customer).appendTo(tr);
                            $("<td></td>").text(moment(e.payout_date, "YYYY-MM-DD").format("MM/DD/YYYY")).appendTo(tr);
                            $("<td></td>").text(e.amount).appendTo(tr);
                            $("<td></td>").text(e.description).appendTo(tr);
                            tr.appendTo(tbody);
                        });
                        tbody.appendTo(tbl);
                        $("<button></button>").addClass("btn").addClass("btn-danger").addClass("payroll_search_result_back").html("&larr; Back")
                        .click(function()
                        {
                            $(".payroll_search_result").remove();
                            $(this).remove();
                            $("#app_area").find(".payroll_group_item, .payroll_item_details").css("display", "block");
                        })
                        .appendTo($("#app_area"));
                        tbl.css("opacity", "0.1");
                        tbl.appendTo($("#app_area"));
                        
                        var app_area = $("#app_area");

                        var out_of_order = true;
                        var len = app_area.find(".payroll_search_result").find("tr").length;

                        while(out_of_order)
                        {
                            var changed = false;
                            app_area.find(".payroll_search_result").find("tr").each(function(iii, eee)
                            {
                                if(iii === 0 || changed)
                                {
                                    return;
                                }
                                var this_tr = $(eee);
                                var next_tr = null;
                                if(iii !== len - 1)
                                {
                                    next_tr = $(eee).next();
                                }
                                if(next_tr !== null)
                                {
                                    var this_dt = moment(this_tr.find("td").eq(2).text(), "MM/DD/YYYY");
                                    var next_dt = moment(next_tr.find("td").eq(2).text(), "MM/DD/YYYY");

                                    if(this_dt.isAfter(next_dt))
                                    {
                                        changed = true;
                                        this_tr.insertAfter(next_tr);
                                    }
                                }
                            });
                            if(!changed)
                            {
                                out_of_order = false;
                            }
                        }
                        tbl.css("opacity", "1.0");
                    });
                }
                else
                {
                    $(".payroll_search").first()[0].focus();
                }
            }
            function clearPayrollState(option, identifier, div)
            {
                if(window.confirm("Are you sure you would like to remove " + div.find("> .wc_complete_name").text() + " from the " + option + " tab?"))
                {
                    $.post("./data", {"fn": "drop_payroll_state_for_customer", "identifier": identifier, "option": option, "user": window.user_identifier}).done(function(r)
                    {
                        var data = $.parseJSON(div.prevAll(".payroll_group_item").first().find("> input").last().val());
                        var cpy = [];
                        $.each(data, function(i, obj)
                        {
                            if(obj.identifier !== identifier)
                            {
                                cpy.push(obj);
                            }
                        });
                        div.prevAll(".payroll_group_item").first().find("> input").last().val(JSON.stringify(cpy));
                        var cnt = div.prevAll(".payroll_group_item").first().find("> .payroll_group_item_tally").text();
                        cnt--;
                        div.prevAll(".payroll_group_item").first().find("> .payroll_group_item_tally").text(cnt + '');
                        div.remove();
                    });
                }
            }
            function expandPayrollTabV3(keyy, div, contacts)
            {
                $(".payroll_item_details").remove();
                $(".wc_complete_details_div").remove();
                var old_lbl = div.find("payroll_group_item_tally_lbl").text();
                div.find("payroll_group_item_tally_lbl").text("Loading...");
                div.css("opacity", "0.2");
                var data = $.parseJSON(div.find("> input").first().val());

                switch(keyy)
                {
                    case "Construction Complete":
                        var identifiers_to_resolve = [];
                        var field_app_identifier_div_map = {}
                        $.each(data, function(i, obj)
                        {
                            identifiers_to_resolve.push(obj.field_app_identifier)
                            var target_el = div;
                            if(i > 0)
                            {
                                target_el = $(".payroll_item_details").last();
                            }
                            var new_divv = $("<div></div>").addClass("payroll_item_details")
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_name").text(obj.name)
                            )
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_hyphen").text("-")
                            )
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_date_display").text("CC Resolving...")
                            )
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_remove_state_x").text("X")
                                .click(function(evvvvvv)
                                {
                                    evvvvvv.stopPropagation();
                                    clearPayrollState("V3", obj.field_app_identifier, $(this).parent());
                                })
                            )
                            .click(function()
                            {
                                welcomeCallCompleteDetailsV3($(this), obj.field_app_identifier, contacts, false, true);
                            });
                            field_app_identifier_div_map[obj.field_app_identifier] = new_divv;
                            new_divv.insertAfter(target_el);
                        });
                        if(identifiers_to_resolve.length > 0)
                        {
                            $.post("/data", {"fn": "get_construction_complete_dates", "identifiers": JSON.stringify(identifiers_to_resolve)}).done(function(data3)
                            {
                                $.each(data3, function(i, item)
                                {
                                    var div_to_change = field_app_identifier_div_map[item.identifier];
                                    div_to_change.find(".wc_complete_date_display").text("CC " + moment(item.date, "YYYY-MM-DD").format("MM/DD/YYYY"));
                                });
                            });
                        }
                        break;

                    case "Projects Pending Payout":
                        $.each(data, function(i, obj)
                        {
                            var date_display_txt = "WC ";
                            if(obj.step === "B")
                            {
                                date_display_txt = "CC ";
                            }
                            var target_el = div;
                            if(i > 0)
                            {
                                target_el = $(".payroll_item_details").last();
                            }
                            $("<div></div>").addClass("payroll_item_details")
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_name").text(obj.name)
                            )
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_hyphen").text("-")
                            )
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_date_display").text(date_display_txt + moment(obj.date.split("T")[0], "YYYY-MM-DD").format("MM/DD/YY"))
                            )
                            .click(function()
                            {
                                welcomeCallCompleteDetails($(this), obj.identifier, contacts, false, false);
                            }).insertAfter(target_el);
                        });
                        break;

                    case "Reimbursements":
                        $.each(data, function(i, obj)
                        {
                            var target_el = div;
                            if(i > 0)
                            {
                                target_el = $(".payroll_item_details").last();
                            }
                            $("<div></div>").addClass("payroll_item_details")
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_name").text(obj.rep)
                            )
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_hyphen").text("-")
                            )
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_date_display").text(currencyFormat(parseFloat(obj.amount)))
                            )
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_date_display3").text(moment(obj.created, "YYYY-MM-DD").format("MM/DD/YYYY"))
                            )
                            .click(function()
                            {
                                approveOrDenyReimbursement($(this), obj);
                            }).insertAfter(target_el);
                        });
                        break;

                    case "Payouts":
                        $.each(data, function(i, obj)
                        {
                            var target_el = div;
                            if(i > 0)
                            {
                                target_el = $(".payroll_item_details").last();
                            }
                            var appending_div = $("<div></div>").addClass("payroll_item_details")
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_name").text(obj.name)
                            )
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_hyphen2").text("-")
                            )
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_advancement").text("ADVANCE " + currencyFormat(obj.total_debt))
                            )
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_hyphen").text("- Payout")
                            )
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_date_display").text(currencyFormat(parseFloat(obj.total)))
                            )
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_hyphen3").text("- Reimbursement")
                            )
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_reimbursements").text(currencyFormat(parseFloat(obj.reimbursements)))
                            )
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_paid_status").text("PAID")
                            )
                            .click(function()
                            {
                                showPayoutDetailsV3($(this), obj);
                            });
                            if(obj.paid === true)
                            {
                                appending_div.find(".wc_complete_paid_status").css("display", "inline");
                            }
                            appending_div.insertAfter(target_el);
                        });
                        if($(".tallied_payouts").size() === 0)
                        {
                            $(".tallied_payouts").remove();
                            $("<div></div>").addClass("tallied_payouts")
                            .text("Total Payouts: ")
                            .append
                            (
                                $("<span></span>")
                            )
                            .appendTo(div);
                        }
                        if($(".tallied_reimbursements").size() === 0)
                        {
                            $(".tallied_reimbursements").remove();
                            $("<div></div>").addClass("tallied_reimbursements")
                            .text("Total Reimbursements: ")
                            .append
                            (
                                $("<span></span>")
                            )
                            .appendTo(div);
                        }
                        if($(".payroll_time_machine").size() > 0)
                        {
                            $(".payroll_time_machine").parent().remove();
                        }
                        var mom = null;
                        try
                        {
                            mom = moment(data[0].date, "YYYY-MM-DD");
                        }
                        catch(em)
                        {
                            mom = moment();
                            while(mom.isoWeekday() !== 5)
                            {
                                mom = mom.add(1, "days");
                            }
                        }
                        
                        $("<div></div>").addClass("input-append").addClass("date").addClass("time_machine_parent").attr("data-date", mom.format("MM/DD/YYYY")).attr("data-date-format", "mm/dd/yyyy")
                        .append
                        (
                            $("<input />").attr("type", "text").addClass("span2").attr("size", "16").attr("type", "text").attr("value", mom.format("MM/DD/YYYY")).addClass("payroll_time_machine")
                        )
                        .append
                        (
                            $("<span></span>").addClass("add-on")
                            .append
                            (
                                $("<i></i>").addClass("icon-th")
                            )
                        ).appendTo(div);                        
                        $(".payroll_time_machine").datepicker
                        (
                            {
                                "format": "mm/dd/yyyy",
                                "autoClose": true,
                                "daysOfWeekDisabled": [0, 1, 2, 3, 4, 6]
                            }
                        );
                        $.each(["keyup", "keypress", "keydown"], function(i, e)
                        {
                            $(".payroll_time_machine").on(e, function(ev)
                            {
                                ev.preventDefault();
                            });
                        });
                        $(".payroll_time_machine").on("change.dp", function(ev)
                        {
                            var time_jump = moment($(this).val(), "MM/DD/YYYY");
                            $(".payroll_group_item").last().attr("data-timejump", time_jump.format("YYYY_MM_DD"));
                            $(".payroll_group_item").last().css("opacity", "0.2");
                            $(".payroll_group_item").last().find(".payroll_group_item_lbl").text("Jumping to... " + time_jump.fromNow());
                            $.post("./data", {"fn": "payouts_tab_update_v3", "date": time_jump.format("YYYY-MM-DD")}).done(function(rr)
                            {
                                $(".payroll_group_item").last().nextAll(".payroll_item_details").each(function(i, e)
                                {
                                    $(e).remove();
                                });
                                $(".payroll_details_div").remove();
                                $(".payroll_group_item").last().css("opacity", "1.0");
                                $(".payroll_group_item").last().find(".payroll_group_item_lbl").text("Payouts");
                                $(".payroll_group_item").last().find(".payroll_group_item_tally").text(rr.length + '');
                                $(".payroll_group_item").last().find("> input").val(JSON.stringify(rr));

                                var data2 = rr;
                                $.each(data2, function(i, obj)
                                {
                                    var target_el = div;
                                    if(i > 0)
                                    {
                                        target_el = $(".payroll_item_details").last();
                                    }
                                    $("<div></div>").addClass("payroll_item_details")
                                    .append
                                    (
                                        $("<span></span>").addClass("wc_complete_name").text(obj.name)
                                    )
                                    .append
                                    (
                                        $("<span></span>").addClass("wc_complete_hyphen2").text("-")
                                    )
                                    .append
                                    (
                                        $("<span></span>").addClass("wc_complete_advancement").text("ADVANCE " + currencyFormat(obj.total_debt))
                                    )
                                    .append
                                    (
                                        $("<span></span>").addClass("wc_complete_hyphen").text("- Payout")
                                    )
                                    .append
                                    (
                                        $("<span></span>").addClass("wc_complete_date_display").text(currencyFormat(parseFloat(obj.total)))
                                    )
                                    .append
                                    (
                                        $("<span></span>").addClass("wc_complete_hyphen3").text("- Reimbursement")
                                    )
                                    .append
                                    (
                                        $("<span></span>").addClass("wc_complete_reimbursements").text(currencyFormat(parseFloat(obj.reimbursements)))
                                    )
                                    .click(function()
                                    {
                                        showPayoutDetailsV3($(this), obj);
                                    }).insertAfter(target_el);
                                });
                            });
                        });
                        $(".payroll_time_machine").click(function(ev)
                        {
                            ev.stopPropagation();
                        });
                        $(".payroll_main_btn").remove();
                        $("<button></button>").addClass("btn").addClass("payroll_main_btn").text("Add Transaction").css("top", "-6em")
                        .click(function(ev, optional_name)
                        {
                            ev.stopPropagation();
                            provideGenericTransaction(contacts, optional_name);
                        }).appendTo(div);
                        $("<button></button>").addClass("btn").addClass("payroll_main_btn").text("Edit Advance Amount").css("clear", "both").css("top", "-5.25em")
                        .click(function(ev, optional_name)
                        {
                            ev.stopPropagation();
                            editAdvanceAmount(contacts, optional_name);
                        }).appendTo(div);
                        $("<button></button>").addClass("btn").addClass("payroll_main_btn").addClass("expand_payroll_btn").text("Expand All")
                        .click(function(ev9)
                        {
                            ev9.stopPropagation();
                            $(".payroll_item_details").each(function(i, element)
                            {
                                $(element).trigger("click");
                            });
                        })
                        .appendTo(div);
                        break;
                    default:
                        break;
                }
                div.find("payroll_group_item_tally_lbl").text(old_lbl);
                div.css("opacity", "1.0");
            }
            function expandPayrollTab(keyy, div, contacts)
            {
                $(".payroll_item_details").remove();
                $(".wc_complete_details_div").remove();
                var old_lbl = div.find("payroll_group_item_tally_lbl").text();
                div.find("payroll_group_item_tally_lbl").text("Loading...");
                div.css("opacity", "0.2");
                var data = $.parseJSON(div.find("> input").first().val());

                switch(keyy)
                {
                    case "WC Complete":
                        $.each(data, function(i, obj)
                        {
                            var target_el = div;
                            if(i > 0)
                            {
                                target_el = $(".payroll_item_details").last();
                            }
                            $("<div></div>").addClass("payroll_item_details")
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_name").text(obj.name)
                            )
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_hyphen").text("-")
                            )
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_date_display").text("WC " + moment(obj.date.split("T")[0], "YYYY-MM-DD").format("MM/DD/YY"))
                            )
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_remove_state_x").text("X")
                                .click(function(evvvvvv)
                                {
                                    evvvvvv.stopPropagation();
                                    clearPayrollState("WC Complete", obj.identifier, $(this).parent());
                                })
                            )
                            .click(function()
                            {
                                welcomeCallCompleteDetails($(this), obj.identifier, contacts, true, false);
                            }).insertAfter(target_el);
                        });
                        break;

                    case "Construction Complete":
                        $.each(data, function(i, obj)
                        {
                            var target_el = div;
                            if(i > 0)
                            {
                                target_el = $(".payroll_item_details").last();
                            }
                            $("<div></div>").addClass("payroll_item_details")
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_name").text(obj.name)
                            )
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_hyphen").text("-")
                            )
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_date_display").text("PR " + moment(obj.date.split("T")[0], "YYYY-MM-DD").format("MM/DD/YY"))
                            )
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_remove_state_x").text("X")
                                .click(function(evvvvvv)
                                {
                                    evvvvvv.stopPropagation();
                                    clearPayrollState("Construction Complete", obj.identifier, $(this).parent());
                                })
                            )
                            .click(function()
                            {
                                welcomeCallCompleteDetails($(this), obj.identifier, contacts, false, true);
                            }).insertAfter(target_el);
                        });
                        break;

                    case "Projects Pending Payout":
                        $.each(data, function(i, obj)
                        {
                            var date_display_txt = "WC ";
                            if(obj.step === "B")
                            {
                                date_display_txt = "CC ";
                            }
                            var target_el = div;
                            if(i > 0)
                            {
                                target_el = $(".payroll_item_details").last();
                            }
                            $("<div></div>").addClass("payroll_item_details")
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_name").text(obj.name)
                            )
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_hyphen").text("-")
                            )
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_date_display").text(date_display_txt + moment(obj.date.split("T")[0], "YYYY-MM-DD").format("MM/DD/YY"))
                            )
                            .click(function()
                            {
                                welcomeCallCompleteDetails($(this), obj.identifier, contacts, false, false);
                            }).insertAfter(target_el);
                        });
                        break;

                    case "Reimbursements":
                        $.each(data, function(i, obj)
                        {
                            var target_el = div;
                            if(i > 0)
                            {
                                target_el = $(".payroll_item_details").last();
                            }
                            $("<div></div>").addClass("payroll_item_details")
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_name").text(obj.rep)
                            )
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_hyphen").text("-")
                            )
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_date_display").text(currencyFormat(parseFloat(obj.amount)))
                            )
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_date_display3").text(moment(obj.created, "YYYY-MM-DD").format("MM/DD/YYYY"))
                            )
                            .click(function()
                            {
                                approveOrDenyReimbursement($(this), obj);
                            }).insertAfter(target_el);
                        });
                        break;

                    case "Payouts":
                        $.each(data, function(i, obj)
                        {
                            var target_el = div;
                            if(i > 0)
                            {
                                target_el = $(".payroll_item_details").last();
                            }
                            var appending_div = $("<div></div>").addClass("payroll_item_details")
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_name").text(obj.name)
                            )
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_hyphen2").text("-")
                            )
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_advancement").text("ADVANCE " + currencyFormat(obj.total_debt))
                            )
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_hyphen").text("- Payout")
                            )
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_date_display").text(currencyFormat(parseFloat(obj.total)))
                            )
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_hyphen3").text("- Reimbursement")
                            )
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_reimbursements").text(currencyFormat(parseFloat(obj.reimbursements)))
                            )
                            .append
                            (
                                $("<span></span>").addClass("wc_complete_paid_status").text("PAID")
                            )
                            .click(function()
                            {
                                showPayoutDetails($(this), obj);
                            });
                            if(obj.paid === true)
                            {
                                appending_div.find(".wc_complete_paid_status").css("display", "inline");
                            }
                            appending_div.insertAfter(target_el);
                        });
                        if($(".tallied_payouts").size() === 0)
                        {
                            $(".tallied_payouts").remove();
                            $("<div></div>").addClass("tallied_payouts")
                            .text("Total Payouts: ")
                            .append
                            (
                                $("<span></span>")
                            )
                            .appendTo(div);
                        }
                        if($(".tallied_reimbursements").size() === 0)
                        {
                            $(".tallied_reimbursements").remove();
                            $("<div></div>").addClass("tallied_reimbursements")
                            .text("Total Reimbursements: ")
                            .append
                            (
                                $("<span></span>")
                            )
                            .appendTo(div);
                        }
                        if($(".payroll_time_machine").size() > 0)
                        {
                            $(".payroll_time_machine").parent().remove();
                        }
                        var mom = null;
                        try
                        {
                            mom = moment(data[0].date, "YYYY-MM-DD");
                        }
                        catch(em)
                        {
                            mom = moment();
                            while(mom.isoWeekday() !== 5)
                            {
                                mom = mom.add(1, "days");
                            }
                        }
                        
                        $("<div></div>").addClass("input-append").addClass("date").addClass("time_machine_parent").attr("data-date", mom.format("MM/DD/YYYY")).attr("data-date-format", "mm/dd/yyyy")
                        .append
                        (
                            $("<input />").attr("type", "text").addClass("span2").attr("size", "16").attr("type", "text").attr("value", mom.format("MM/DD/YYYY")).addClass("payroll_time_machine")
                        )
                        .append
                        (
                            $("<span></span>").addClass("add-on")
                            .append
                            (
                                $("<i></i>").addClass("icon-th")
                            )
                        ).appendTo(div);                        
                        $(".payroll_time_machine").datepicker
                        (
                            {
                                "format": "mm/dd/yyyy",
                                "autoClose": true,
                                "daysOfWeekDisabled": [0, 1, 2, 3, 4, 6]
                            }
                        );
                        $.each(["keyup", "keypress", "keydown"], function(i, e)
                        {
                            $(".payroll_time_machine").on(e, function(ev)
                            {
                                ev.preventDefault();
                            });
                        });
                        $(".payroll_time_machine").on("change.dp", function(ev)
                        {
                            var time_jump = moment($(this).val(), "MM/DD/YYYY");
                            $(".payroll_group_item").last().attr("data-timejump", time_jump.format("YYYY_MM_DD"));
                            $(".payroll_group_item").last().css("opacity", "0.2");
                            $(".payroll_group_item").last().find(".payroll_group_item_lbl").text("Jumping to... " + time_jump.fromNow());
                            $.post("./data", {"fn": "payouts_tab_update", "date": time_jump.format("YYYY-MM-DD")}).done(function(rr)
                            {
                                $(".payroll_group_item").last().nextAll(".payroll_item_details").each(function(i, e)
                                {
                                    $(e).remove();
                                });
                                $(".payroll_details_div").remove();
                                $(".payroll_group_item").last().css("opacity", "1.0");
                                $(".payroll_group_item").last().find(".payroll_group_item_lbl").text("Payouts");
                                $(".payroll_group_item").last().find(".payroll_group_item_tally").text(rr.length + '');                                
                                $(".payroll_group_item").last().find("> input").val(JSON.stringify(rr));

                                var data2 = rr;
                                $.each(data2, function(i, obj)
                                {
                                    var target_el = div;
                                    if(i > 0)
                                    {
                                        target_el = $(".payroll_item_details").last();
                                    }
                                    $("<div></div>").addClass("payroll_item_details")
                                    .append
                                    (
                                        $("<span></span>").addClass("wc_complete_name").text(obj.name)
                                    )
                                    .append
                                    (
                                        $("<span></span>").addClass("wc_complete_hyphen2").text("-")
                                    )
                                    .append
                                    (
                                        $("<span></span>").addClass("wc_complete_advancement").text("ADVANCE " + currencyFormat(obj.total_debt))
                                    )
                                    .append
                                    (
                                        $("<span></span>").addClass("wc_complete_hyphen").text("- Payout")
                                    )
                                    .append
                                    (
                                        $("<span></span>").addClass("wc_complete_date_display").text(currencyFormat(parseFloat(obj.total)))
                                    )
                                    .append
                                    (
                                        $("<span></span>").addClass("wc_complete_hyphen3").text("- Reimbursement")
                                    )
                                    .append
                                    (
                                        $("<span></span>").addClass("wc_complete_reimbursements").text(currencyFormat(parseFloat(obj.reimbursements)))
                                    )
                                    .click(function()
                                    {
                                        showPayoutDetails($(this), obj);
                                    }).insertAfter(target_el);
                                });
                            });
                        });
                        $(".payroll_time_machine").click(function(ev)
                        {
                            ev.stopPropagation();
                        });
                        $(".payroll_main_btn").remove();
                        $("<button></button>").addClass("btn").addClass("payroll_main_btn").text("Add Transaction").css("top", "-6em")
                        .click(function(ev, optional_name)
                        {
                            ev.stopPropagation();
                            provideGenericTransaction(contacts, optional_name);
                        }).appendTo(div);
                        $("<button></button>").addClass("btn").addClass("payroll_main_btn").text("Edit Advance Amount").css("clear", "both").css("top", "-5.25em")
                        .click(function(ev, optional_name)
                        {
                            ev.stopPropagation();
                            editAdvanceAmount(contacts, optional_name);
                        }).appendTo(div);
                        $("<button></button>").addClass("btn").addClass("payroll_main_btn").addClass("expand_payroll_btn").text("Expand All")
                        .click(function(ev9)
                        {
                            ev9.stopPropagation();
                            $(".payroll_item_details").each(function(i, element)
                            {
                                $(element).trigger("click");
                            });                               
                        })
                        .appendTo(div);
                        break;
                    default:
                        break;
                }
                div.find("payroll_group_item_tally_lbl").text(old_lbl);
                div.css("opacity", "1.0");
            }
            function editAdvanceAmount(contacts, optional_name)
            {
                var html = $("<div></div>");

                $("<p></p>").text("Type the rep's name:").appendTo(html);
                $("<input />").attr("type", "text").addClass("wc_recipient_transaction_input_box").attr("placeholder", "Rep's name...").appendTo(html);
                var hinted_users_div = $("<div></div>").addClass("hinted_users");
                $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove").appendTo(hinted_users_div);
                $("<h2></h2>").css("visibility", "hidden").text("Loading Data...").appendTo(html);

                hinted_users_div.appendTo(html);

                var hint_dictionary = contacts;

                BootstrapDialog.show
                (
                    {
                        "title": "Advance Amount Editor",
                        "message": html.html(),
                        "buttons":
                        [
                            {
                                "label": "Done",
                                "cssClass": "btn-primary",
                                "action": function(d)
                                {
                                    $(".payroll_time_machine").trigger("change");
                                    d.close();
                                }
                            }
                        ],
                        "onshown": function(d)
                        {
                            $(".hinted_users").find("span").first().click(function()
                            {
                                $(".hinted_users").css("display", "none");
                                $(".hinted_user").remove();
                                $(".bootstrap-dialog-footer").find("input").first().trigger("keyup");
                            });

                            var to_box = $(".bootstrap-dialog-body").find("input").eq(0);
                            to_box
                            .focus(function()
                            {
                                if(to_box.val() === "Enter someone's name...")
                                {
                                    to_box.val("");
                                }
                            })
                            .blur(function()
                            {
                                if($.trim(to_box.val()) === "")
                                {
                                    to_box.val("Enter someone's name...");
                                }
                            })
                            .on("keyup", function()
                            {
                                if($.trim(to_box.val()).length > 0)
                                {
                                    hint_at_users3(to_box, hint_dictionary, function(data)
                                    {
                                        pullAdvanceDataForRep(data);
                                    });
                                }
                            });

                            if(typeof(optional_name) + '' !== "undefined")
                            {
                                to_box.val(optional_name);
                                setTimeout(function()
                                {
                                    to_box.trigger("keyup");
                                    setTimeout(function()
                                    {
                                        if($(".hinted_user").size() === 1)
                                        {
                                            $(".hinted_user").first().trigger("click");
                                        }
                                    }, 750);
                                }, 250);
                            }
                        },
                        "onhidden": function(d)
                        {
                            $(".payroll_time_machine").trigger("change");
                        }
                    }
                );

            }
            function pullAdvanceDataForRep(identifier)
            {
                var dialog_body = $(".bootstrap-dialog-body");
                dialog_body.find("table, .editor_outstanding_total").remove();
                dialog_body.find("h2").css("visibility", "visible");
                $.post("./data", {"fn": "pull_debt_for_rep", "identifier": identifier}).done(function(resp)
                {
                    $("<p></p>").addClass("editor_outstanding_total").text("Outstanding Total: " + currencyFormat(resp.total)).appendTo(dialog_body);
                    var tbl = $("<table></table>").addClass("advancement_editor_tbl");
                    var tbody = $("<tbody></tbody>");
                    $("<tr></tr>")
                    .append
                    (
                        $("<th></th>").text("Amount")
                    )
                    .append
                    (
                        $("<th></th>").text("Date")
                    )
                    .append
                    (
                        $("<th></th>").text("Description")
                    )
                    .appendTo(tbody);

                    resp.items.reverse();
                    var cls_map = {"0": "positive_advance", "1": "negative_advance"}
                    $.each(resp.items, function(i, item)
                    {
                        var cls_map_key = item.amount <= parseFloat("0");
                        cls_map_key *= 1;
                        cls_map_key += '';
                        var trr = $("<tr></tr>")
                        .append
                        (
                            $("<td></td>").text(currencyFormat(Math.abs(item.amount)))
                        )
                        .append
                        (
                            $("<td></td>").text(moment(item.date, "YYYY-MM-DD").format("MM/DD/YYYY"))
                        )
                        .append
                        (
                            $("<td></td>").text(item.description)
                        );
                        trr.find("td").first().addClass(cls_map[cls_map_key])
                        trr.appendTo(tbody);
                    });
                    $("<tr></tr>").append
                    (
                        $("<td></td>").attr("colspan", "3")
                        .append
                        (
                            $("<button></button>").addClass("btn").addClass("add_to_advance_editor_btn")
                            .text("Add Item")
                            .click(function()
                            {
                                var par = $(this).parent().parent();

                               if($(this).text() === "Add Item")
                               {
                                   $("<tr></tr>").addClass("advance_additional_item")
                                   .append
                                   (
                                       $("<td></td>")
                                       .append
                                       (
                                           $("<input />").attr("type", "text").attr("size", "7").attr("placeholder", "42.00")
                                       )
                                   )
                                   .append
                                   (
                                       $("<td></td>")
                                       .append
                                       (
                                           $("<select></select>")
                                           .append
                                           (
                                               $("<option value='increase'>Increase</option>")
                                           )
                                           .append
                                           (
                                               $("<option value='decrease'>Decrease</option>")
                                           )
                                           .append
                                           (
                                               $("<option value='help'>WHICH SHOULD I CHOOSE?</option>")
                                           )
                                       )
                                   )
                                   .append
                                   (
                                       $("<td></td>")
                                       .append
                                       (
                                           $("<textarea></textarea>").attr("placeholder", "Provide a description...")
                                       )
                                   )
                                   .insertBefore(par);
                                   $(this).text("Save");
                                   return;
                               }
                               if($(this).text() === "Save")
                               {
                                   var parsed2 = parseFloat($.trim($(".advance_additional_item").find("input").first().val()).replace("$", "").replace(",", ""));
                                   if(Number.isNaN(parsed2))
                                   {
                                       window.alert("The amount was not understood.");
                                       return;
                                   }
                                   var sel_val = $(".advance_additional_item").find("select").val();
                                   if(sel_val === "increase" || sel_val === "decrease")
                                   {
                                       var dd = $.trim($(".advance_additional_item").find("textarea").val());
                                       if(dd.length === 0)
                                       {
                                           window.alert("You must provide a description");
                                           return;
                                       }

                                        var collection = (sel_val === "decrease");
                                        $.post("./data", {"fn": "add_item_to_rep_debt", "amt": parsed2.toFixed(2), "description": dd, "identifier": identifier, "is_collection": ((collection * 1) + '')}).done(function(respiration)
                                        {
                                            $(".add_to_advance_editor_btn").text("Adding...");
                                            var new_tr = $("<tr></tr>")
                                            .append
                                            (
                                                $("<td></td>").text(currencyFormat(Math.abs(parsed2)))
                                            )
                                            .append
                                            (
                                                $("<td></td>").text(moment().format("MM/DD/YYYY"))
                                            )
                                            .append
                                            (
                                                $("<td></td>").text(dd)
                                            );
                                            var cls_map_key2 = collection;
                                            cls_map_key2 *= 1;
                                            cls_map_key2 += '';
                                            new_tr.find("td").first().addClass(cls_map[cls_map_key2]);
                                            new_tr.insertAfter(tbl.find("tr").first());
                                            $(".editor_outstanding_total").text("Outstanding Total: " + currencyFormat(respiration.total));
                                            $(".advance_additional_item").remove();
                                            $(".add_to_advance_editor_btn").text("Add Item");

                                        });
                                   }

                               }
                            })
                        )
                    ).appendTo(tbody);
                    tbody.appendTo(tbl);
                    tbl.appendTo(dialog_body);
                    dialog_body.find("h2").css("visibility", "hidden");
                });
            }
            function provideGenericTransaction(contacts, recipient)
            {
                var curr_mom = moment();
                while(curr_mom.weekday() !== 5)
                {
                    curr_mom = curr_mom.add(1, "days");
                }
                if(typeof($(".payroll_group_item").last().data("timejump")) + '' !== "undefined")
                {
                    var d_vals = $(".payroll_group_item").last().data("timejump").split("_");
                    curr_mom = moment(d_vals[0] + "-" + d_vals[1] + "-" + d_vals[2], "YYYY-MM-DD");
                }
                var hint_dictionary = contacts;

                var html = $("<div></div>");
                $("<div></div>").addClass("rad_group")
                .append
                (
                    $("<input />").attr("type", "radio")
                )
                .append
                (
                    $("<span></span>").text("Payout")
                )
                .append
                (
                    $("<input />").attr("type", "radio")
                )
                .append
                (
                    $("<span></span>").text("Deduction")
                )
                .append
                (
                    $("<input />").attr("type", "radio")
                )
                .append
                (
                    $("<span></span>").text("Advance")
                )
                .append
                (
                    $("<input />").attr("type", "radio")
                )
                .append
                (
                    $("<span></span>").text("Collection")
                )
                .append
                (
                    $("<input />").attr("type", "radio")
                )
                .append
                (
                    $("<span></span>").text("Reimbursement")
                )                
                .appendTo(html);
                html.find("input").each(function(i, e)
                {
                    $(e).addClass($(e).next().text().toLowerCase());
                });
                $("<hr />").appendTo(html);
                $("<p></p>").text("Payout Date:").appendTo(html);
                $("<div></div>").addClass("input-append").addClass("date").attr("data-date", curr_mom.format("MM/DD/YYYY")).attr("data-date-format", "mm/dd/yyyy")
                .append
                (
                    $("<input />").attr("type", "text").addClass("span2").attr("size", "16").attr("type", "text").attr("value", curr_mom.format("MM/DD/YYYY"))
                )
                .append
                (
                    $("<span></span>").addClass("add-on")
                    .append
                    (
                        $("<i></i>").addClass("icon-th")
                    )
                ).appendTo(html);
                $("<p></p>").text("Recipient:").appendTo(html);
                $("<input />").attr("type", "text").addClass("wc_recipient_transaction_input_box").attr("placeholder", "Rep's name...").appendTo(html);
                var hinted_users_div = $("<div></div>").addClass("hinted_users");
                $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove").appendTo(hinted_users_div);

                hinted_users_div.appendTo(html);
                $("<p></p>").text("Amount:").appendTo(html);
                $("<input />").addClass("wc_transaction_amount_input_box").attr("type", "text").attr("placeholder", "42.00").appendTo(html);
                $("<p></p>").text("Description:").appendTo(html);

                $("<textarea></textarea>").addClass("wc_transaction_add_description").attr("placeholder", "Please provide a meaningful description...").appendTo(html);

                BootstrapDialog.show
                (
                    {
                        "title": "Creating a Misc. Payout/Advance",
                        "message": html.html(),
                        "buttons":
                        [
                            {
                                "label": "Cancel",
                                "cssClass": "btn-danger",
                                "action": function(d)
                                {
                                    d.close();
                                }
                            },
                            {
                                "label": "Add it!",
                                "cssClass": "btn-primary",
                                "action": function(d)
                                {
                                    var checked_count = 0;
                                    $(".rad_group input").each(function(i, e)
                                    {
                                        checked_count += ($(e)[0].checked * 1);
                                    });
                                    if(checked_count !== 1)
                                    {
                                        window.alert("You must specify whether this will be a payout or advance");
                                        return;
                                    }
                                    if($(".hidden_identifier_for_transaction_match").size() === 0)
                                    {
                                        window.alert("You must specify a recipient");
                                        return;
                                    }
                                    var total = $.trim($(".wc_transaction_amount_input_box").val()).replace("$", "").replace(",", "");
                                    if(total === null)
                                    {
                                        window.alert("The amount could not be parsed as a decimal-based or integer-based value");
                                        return;
                                    }
                                    total = parseFloat(total);
                                    if(Number.isNaN(total))
                                    {
                                        window.alert("The amount could not be parsed as a decimal-based or integer-based value");
                                        return;
                                    }
                                    if($.trim($(".wc_transaction_add_description").val()).length === 0)
                                    {
                                        window.alert("A meaningful description was not provided");
                                        return;
                                    }

                                    $(".bootstrap-dialog-footer").find(".btn-primary").text("Adding...").css("opacity", "0.2");
                                    var transaction_type = ""
                                    $(".rad_group input").each(function(aaa, bbb)
                                    {
                                        if($(bbb)[0].checked)
                                        {
                                            transaction_type = $(bbb).attr("class");
                                        }
                                    });
                                    if(total < 0)
                                    {
                                        total *= -1;
                                    }
                                    if(transaction_type === "deduction")
                                    {
                                        transaction_type = "payout";
                                        total *= -1;
                                    }                                    
                                    $.post("./data",
                                        {
                                            "recipient": $(".hidden_identifier_for_transaction_match").first().data("identifier"),
                                            "fn": "create_v2_transaction",
                                            "amount": total.toFixed(2),
                                            "trans_type": transaction_type,
                                            "description": $.trim($(".wc_transaction_add_description").first().val()),
                                            "date": moment($(".bootstrap-dialog-body").find("input").eq(5).val(), "MM/DD/YYYY").format("YYYY-MM-DD")
                                        }
                                    ).done(function(rrrrr)
                                    {
                                        if(!rrrrr.success)
                                        {
                                            $(".bootstrap-dialog-footer").find(".btn-primary").text("Try again");
                                            window.alert("The transaction could not be created. This is because the recipient has already received a check for the payout date provided");
                                            return;
                                        }
                                        d.close();
                                        $(".payroll_time_machine").trigger("change");
                                    });
                                }
                            }
                        ],
                        "closable": false,
                        "onshown": function(d)
                        {
                            $.each(["change", "click"], function(i, e)
                            {
                                $(".rad_group input").each(function(ii, ee)
                                {
                                    $(ee).on(e, function(evvv)
                                    {
                                        if(ii === 4 && e === "change")
                                        {
                                            evvv.stopPropagation();
                                            d.close();
                                            adminReimbursementForRep(hint_dictionary, recipient);
                                        }
                                        else
                                        {
                                            var this_classname = $(ee).attr("class");
                                            $(ee).parent().find("input").each(function(iii, eee)
                                            {
                                                if($(eee).attr("class") !== this_classname)
                                                {
                                                    $(eee)[0].checked = false;
                                                }
                                            });
                                        }                                        
                                    });
                                });
                            });

                            $(".hinted_users").find("span").first().click(function()
                            {
                                $(".hinted_users").css("display", "none");
                                $(".hinted_user").remove();
                                $(".bootstrap-dialog-footer").find("input").first().trigger("keyup");
                            });





                            datesDisabled = [];
                            var mom2 = moment().subtract(1, "days");
                            var cnt2 = 0;
                            while(cnt2 < 365)
                            {
                                datesDisabled.push(mom2.format("MM/DD/YYYY"));
                                mom2 = mom2.subtract(1, "days");
                                cnt2++;
                            }
                            var box = $(".bootstrap-dialog-body").find("input").eq(5);
                            box.datepicker
                            (
                                {
                                    "format": "mm/dd/yyyy",
                                    "autoClose": true,
                                    daysOfWeekDisabled: [0, 1, 2, 3, 4, 6],
                                    datesDisabled: datesDisabled
                                }
                            );
                            $.each(["keyup", "keydown", "keypress"], function(ii, ee)
                            {
                                box.on(ee, function(evvv)
                                {
                                    evvv.preventDefault();
                                });
                            });





                            var to_box = $(".bootstrap-dialog-body").find("input").eq(6);
                            to_box
                            .focus(function()
                            {
                                if(to_box.val() === "Enter someone's name...")
                                {
                                    to_box.val("");
                                }
                            })
                            .blur(function()
                            {
                                if($.trim(to_box.val()) === "")
                                {
                                    to_box.val("Enter someone's name...");
                                }
                            })
                            .on("keyup", function()
                            {
                                if($.trim(to_box.val()).length > 0)
                                {
                                    hint_at_users3(to_box, hint_dictionary);
                                }
                            });

                            if(typeof(recipient) + '' !== "undefined")
                            {
                                to_box.val(recipient);
                                setTimeout(function()
                                {
                                    to_box.trigger("keyup");
                                    setTimeout(function()
                                    {
                                        if($(".hinted_user").size() === 1)
                                        {
                                            $(".hinted_user").first().trigger("click");
                                        }
                                    }, 750);
                                }, 250);
                            }
                        }
                    }                    
                );
            }
            function adminReimbursementForRep(hint_dictionary, recipient)
            {
                var curr_mom = moment();
                while(curr_mom.isoWeekday() !== 5)
                {
                    curr_mom = curr_mom.add(1, "days");
                }
                var html = $("<div></div>");
                $("<p></p>").text("Recipient:").appendTo(html);
                $("<input />").attr("type", "text").addClass("wc_recipient_transaction_input_box").attr("placeholder", "Rep's name...").appendTo(html);
                var hinted_users_div = $("<div></div>").addClass("hinted_users");
                $("<span></span>").addClass("glyphicon").addClass("glyphicon-remove").appendTo(hinted_users_div);

                hinted_users_div.appendTo(html);
                $("<p></p>").text("Amount:").appendTo(html);
                $("<input />").addClass("wc_transaction_amount_input_box").attr("type", "text").attr("placeholder", "42.00").appendTo(html);
                $("<p></p>").text("Description:").appendTo(html);

                $("<textarea></textarea>").addClass("wc_transaction_add_description").attr("placeholder", "Please provide a meaningful description...").appendTo(html);
                $("<p></p>").text("Reimbursement Type:").appendTo(html);
                $("<select></select>").addClass("admin_reimbursement_sel")
                .append
                (
                    $("<option></option>").attr("value", "n/a").text("Choose One")
                )
                .append
                (
                    $("<option></option>").attr("value", "reimbursement_customer").text("Customer Expense")
                )
                .append
                (
                    $("<option></option>").attr("value", "reimbursement_recruiting").text("Recruiting Expense")
                )
                .append
                (
                    $("<option></option>").attr("value", "reimbursement_incentive").text("Incentive Expense")
                )
                .append
                (
                    $("<option></option>").attr("value", "reimbursement_office").text("Office Materials Expense")
                )
                .append
                (
                    $("<option></option>").attr("value", "reimbursement_other").text("Other Expense")
                )
                .appendTo(html);

                $("<p></p>").text("Payout Date:").appendTo(html);
                $("<div></div>").addClass("input-append").addClass("date").attr("data-date", curr_mom.format("MM/DD/YYYY")).attr("data-date-format", "mm/dd/yyyy")
                .append
                (
                    $("<input />").attr("type", "text").addClass("span2").addClass("payout_date").attr("size", "16").attr("type", "text").attr("value", curr_mom.format("MM/DD/YYYY"))
                )
                .append
                (
                    $("<span></span>").addClass("add-on")
                    .append
                    (
                        $("<i></i>").addClass("icon-th")
                    )
                ).appendTo(html);
                $("<p></p>").text("Receipt Image:").appendTo(html);
                $("<input />").attr("type", "file").attr("accept", "image/*").addClass("admin_reimbursement_image").appendTo(html);

                BootstrapDialog.show
                (
                    {
                        "title": "Reimbursement Details",
                        "message": html.html(),
                        "buttons":
                        [
                            {
                                "label": "Cancel",
                                "cssClass": "btn-danger",
                                "action": function(d)
                                {
                                    d.close();
                                }
                            },
                            {
                                "label": "Add and Approve",
                                "cssClass": "btn-primary",
                                "action": function(d)
                                {
                                    if($(".hidden_identifier_for_transaction_match").size() === 0)
                                    {
                                        window.alert("You must specify a recipient");
                                        return;
                                    }                                
                                    var amt = parseFloat($(".wc_transaction_amount_input_box").val());
                                    if(Number.isNaN(amt) || (typeof(amt) + '').toLowerCase() !== "number")
                                    {
                                        window.alert("The amount was invalid.");
                                        return;
                                    }
                                    var description = $.trim($(".wc_transaction_add_description").val());
                                    if(description.length === 0)
                                    {
                                        window.alert("A description is required.");
                                        return;
                                    }
                                    var cat = $(".admin_reimbursement_sel").val();
                                    if(cat === "n/a")
                                    {
                                        window.alert("You must choose the category");
                                        return;
                                    }

                                    var files = $(".admin_reimbursement_image").first()[0].files;

                                    var up = function(has_file)
                                    {
                                        var formData = new FormData();
                                        formData.append("admin_qualifier", "1");
                                        formData.append("cat_sel", cat);
                                        formData.append("amnt_in_val", amt.toFixed(2));
                                        formData.append("reimbursement_desc_val", $(".admin_reimbursement_sel").find("option").eq($(".admin_reimbursement_sel")[0].selectedIndex).text());
                                        formData.append("reimbursement_desc", description);
                                        formData.append("recipient", $(".hidden_identifier_for_transaction_match").first().data("identifier"));
                                        formData.append("payout_date", moment($(".payout_date").val(), "MM/DD/YYYY").format("YYYY-MM-DD"));
                                        if(has_file)
                                        {
                                            formData.append("has_file", "1");
                                            formData.append("pic", files[0]);
                                        }

                                        var xhr = new XMLHttpRequest();
                                        (xhr.upload || xhr).addEventListener("progress", function(e)
                                        {
                                            var done = e.position || e.loaded
                                            var total = e.totalSize || e.total;
                                            var completion_percentage = (Math.round(done/total*100) + '') + "%";
                                            $(".bootstrap-dialog-footer").find(".btn-primary").text(completion_percentage);


                                        });
                                        xhr.addEventListener("load", function(e)
                                        {
                                            d.close();
                                            $(".payroll_time_machine").trigger("change");
                                        });
                                        xhr.open("POST", "/rep");
                                        xhr.send(formData);

                                    };
                                    
                                    if(files.length === 0)
                                    {
                                        if(window.confirm("Are you sure you would like to upload without a receipt"))
                                        {
                                            up(false);
                                        }
                                    }
                                    else
                                    {
                                        up(true);
                                    }                                    
                                }
                            }
                        ],
                        "onshown": function(d)
                        {

                            $.each(["keyup", "keypress", "keydown", "blur"], function(i, ev)
                            {
                                $(".wc_transaction_amount_input_box").on(ev, function(ev2)
                                {
                                    var v = $(this).val();
                                    v = $.trim(v);
                                    while(v.indexOf("$") > -1)
                                    {
                                        v = v.replace("$", "");
                                    }   
                                    while(v.indexOf(",") > -1)
                                    {
                                        v = v.replace(",", "");
                                    }
                                    var total = parseFloat(v);
                                    if(Number.isNaN(total))
                                    {
                                        $(this).val("");
                                    }                             
                                });
                            });                            

                            $(".hinted_users").find("span").first().click(function()
                            {
                                $(".hinted_users").css("display", "none");
                                $(".hinted_user").remove();
                                $(".bootstrap-dialog-footer").find("input").first().trigger("keyup");
                            });
                            datesDisabled = [];
                            var mom2 = moment().subtract(1, "days");
                            var cnt2 = 0;
                            while(cnt2 < 365)
                            {
                                datesDisabled.push(mom2.format("MM/DD/YYYY"));
                                mom2 = mom2.subtract(1, "days");
                                cnt2++;
                            }

                            var box = $(".bootstrap-dialog-body").find("input").eq(2);
                            box.datepicker
                            (
                                {
                                    "format": "mm/dd/yyyy",
                                    "autoClose": true,
                                    daysOfWeekDisabled: [0, 1, 2, 3, 4, 6],
                                    datesDisabled: datesDisabled
                                }
                            );
                            $.each(["keyup", "keydown", "keypress"], function(ii, ee)
                            {
                                box.on(ee, function(evvv)
                                {
                                    evvv.preventDefault();
                                });
                            });





                            var to_box = $(".bootstrap-dialog-body").find("input").first();
                            to_box
                            .focus(function()
                            {
                                if(to_box.val() === "Enter someone's name...")
                                {
                                    to_box.val("");
                                }
                            })
                            .blur(function()
                            {
                                if($.trim(to_box.val()) === "")
                                {
                                    to_box.val("Enter someone's name...");
                                }
                            })
                            .on("keyup", function()
                            {
                                if($.trim(to_box.val()).length > 0)
                                {
                                    hint_at_users3(to_box, hint_dictionary);
                                }
                            });

                            if(typeof(recipient) + '' !== "undefined")
                            {
                                to_box.val(recipient);
                                setTimeout(function()
                                {
                                    to_box.trigger("keyup");
                                    setTimeout(function()
                                    {
                                        if($(".hinted_user").size() === 1)
                                        {
                                            $(".hinted_user").first().trigger("click");
                                        }
                                    }, 750);
                                }, 250);
                            }
                        }
                    }
                )
            }
            function showPayoutDetailsV3(div, obj, date)
            {
                $("#wc_complete_details_div_" + identifier).remove();
                if(typeof(date) + '' === "undefined")
                {
                    date = obj.date;
                }
                var identifier = obj.identifier;
                var old_txt = div.find("> span").first().text();
                div.find("> span").first().text("Loading...");
                div.css("opacity", "0.2");
                $.post("./data", {"fn": "payout_details_for_rep_v3", "identifier": identifier, "date": date}).done(function(resp)
                {
                    div.css("opacity", "1.0");
                    div.find("> span").first().text(old_txt);

                    var details_div = $("<div></div>").addClass("wc_complete_details_div").attr("id", "wc_complete_details_div_" + identifier).addClass("payroll_details_div");
                    $("<span></span>").addClass("wc_complete_close").text("X").click(function()
                    {
                        $(this).parent().remove();
                    }).appendTo(details_div);
                    $("<p></p>").html("<a href='tel:" + resp.phone.digits() + "'>" + resp.phone + "</a><br /><a href='mailto:" + resp.email + "'>" + resp.email + "</a><div class='rep_address_payout_details'>" + resp.address.split("\n").join("<br />") + "</div>").appendTo(details_div);
                    var adv_total = $("<p></p>").addClass("advance_total").text("Outstanding Advances: ");
                    $("<span></span>").addClass("actual_advance_total").text(currencyFormat(resp.debt)).appendTo(adv_total);
                    adv_total.appendTo(details_div);
                    var payout_total = $("<p></p>").addClass("payout_total");
                    payout_total.text("Payout Total: ");
                    var reimbursement_total = $("<p></p>").addClass("reimbursement_total_payout_details_for_rep");
                    reimbursement_total.text("Reimbursement Total: ");
                    $("<span></span>").addClass("actual_payout_total").text(currencyFormat(resp.payout_total)).appendTo(payout_total);
                    $("<span></span>").addClass("actual_reimbursement_total").text(currencyFormat(resp.reimbursement_total)).appendTo(reimbursement_total);
                    payout_total.appendTo(details_div);
                    reimbursement_total.appendTo(details_div)
                    $("<hr />").css("clear", "both").appendTo(details_div);
                    var status_p = $("<p></p>");
                    if(resp.paid)
                    {
                        $("#wc_complete_details_div_" + identifier).prev().find(".wc_complete_paid_status").css("display", "inline");
                        status_p.text("Payment Status: Complete")
                    }
                    else
                    {
                        status_p.text("Payment Status: Incomplete")
                        /*.append
                        (
                            $("<button></button>").attr("type", "button").addClass("btn").addClass("btn-primay").addClass("finalize_pment_btn").text("Finalize Transactions")
                            .click(function()
                            {
                                issuePaymentForRep(identifier, resp.payout_total);
                            })
                        );*/
                    }
                    status_p.appendTo(details_div);
                    if(resp.can_issue_payment === false)
                    {
                        if(details_div.find(".finalize_pment_btn").size() > 0)
                        {
                            details_div.find(".finalize_pment_btn").remove();
                        }
                    }


                    $("<p></p>").text("Payment Breakdown:").appendTo(details_div);
                    var table = $("<table></table>");
                    var tbody = $("<tbody></tbody>");
                    $("<tr></tr>")
                    .append
                    (
                        $("<th></th>").text("Amount")
                    )
                    .append
                    (
                        $("<th></th>").text("Edit Amount")
                    )
                    .append
                    (
                        $("<th></th>").text("Type")
                    )
                    .append
                    (
                        $("<th></th>").text("Description")
                    )
                    .append
                    (
                        $("<th></th>").text("Reschedule")
                    )
                    .append
                    (
                        $("<th></th>").text("Delete")
                    )
                    .appendTo(tbody);

                    $.each(resp.transactions, function(i, transaction)
                    {
                        var tr = $("<tr></tr>");
                        $("<td></td>").text(currencyFormat(transaction.total).replace("$", ""))
                        .appendTo(tr);
                        if(transaction.total < 0.00)
                        {
                            tr.find("td").first().text("-" + tr.find("td").first().text());
                        }
                        $("<td></td>")
                        .append
                        (
                            $("<span></span>").addClass("glyphicon").addClass("glyphicon-pencil").addClass("payouts_edit_amount_pencil")
                            .click(function()
                            {
                                var that = $(this);
                                var this_tr = that.closest("tr").first();

              